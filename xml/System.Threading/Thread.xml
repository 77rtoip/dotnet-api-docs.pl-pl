<Type Name="Thread" FullName="System.Threading.Thread">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c33ebbf7fda315ea7cdcd851f00c29b10d280bd" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48741633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Thread : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, System.Runtime.InteropServices._Thread" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Thread extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.Runtime.InteropServices._Thread" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Thread" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Thread&#xA;Inherits CriticalFinalizerObject&#xA;Implements _Thread" />
  <TypeSignature Language="C++ CLI" Value="public ref class Thread sealed : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, System::Runtime::InteropServices::_Thread" />
  <TypeSignature Language="F#" Value="type Thread = class&#xA;    inherit CriticalFinalizerObject&#xA;    interface _Thread" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Thread</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Thread))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cc4f0-101">Tworzy i kontroluje wątku, ustawia jego priorytet i pobiera jego stan.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc4f0-101">Creates and controls a thread, sets its priority, and gets its status.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-102">Po uruchomieniu procesu środowiska uruchomieniowego języka wspólnego automatycznie tworzy wątku na pierwszym planie jednego, aby wykonać kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-102">When a process starts, the common language runtime automatically creates a single foreground thread to execute application code.</span></span> <span data-ttu-id="cc4f0-103">Wraz z tego wątku na pierwszym planie głównym proces, można utworzyć jeden lub więcej wątków do wykonania fragmentu kodu programu skojarzonego z procesem.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-103">Along with this main foreground thread, a process can create one or more threads to execute a portion of the program code associated with the process.</span></span> <span data-ttu-id="cc4f0-104">Te wątki, można wykonać na pierwszym planie lub w tle.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-104">These threads can execute either in the foreground or in the background.</span></span> <span data-ttu-id="cc4f0-105">Ponadto można użyć <xref:System.Threading.ThreadPool> klasy do wykonywania kodu na wątków roboczych, które są zarządzane przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-105">In addition, you can use the <xref:System.Threading.ThreadPool> class to execute code on worker threads that are managed by the common language runtime.</span></span>  
  
 <span data-ttu-id="cc4f0-106">W tej sekcji</span><span class="sxs-lookup"><span data-stu-id="cc4f0-106">In this section</span></span>  
  
 <span data-ttu-id="cc4f0-107">[Uruchamianie wątku](#Starting) </span><span class="sxs-lookup"><span data-stu-id="cc4f0-107">[Starting a thread](#Starting) </span></span>  
 <span data-ttu-id="cc4f0-108">[Pobieranie obiektów wątku](#Retrieving) </span><span class="sxs-lookup"><span data-stu-id="cc4f0-108">[Retrieving Thread objects](#Retrieving) </span></span>  
 <span data-ttu-id="cc4f0-109">[Wątki pierwszego planu i tła](#Foreground) </span><span class="sxs-lookup"><span data-stu-id="cc4f0-109">[Foreground and background threads](#Foreground) </span></span>  
 <span data-ttu-id="cc4f0-110">[Kultura i wątki](#Culture) </span><span class="sxs-lookup"><span data-stu-id="cc4f0-110">[Culture and threads](#Culture) </span></span>  
 [<span data-ttu-id="cc4f0-111">Pobieranie informacji o i sterowanie wątkami</span><span class="sxs-lookup"><span data-stu-id="cc4f0-111">Getting information about and controlling threads</span></span>](#Properties)   
   
<a name="Starting"></a>   
## <a name="starting-a-thread"></a><span data-ttu-id="cc4f0-112">Uruchamianie wątku</span><span class="sxs-lookup"><span data-stu-id="cc4f0-112">Starting a thread</span></span>  
 <span data-ttu-id="cc4f0-113">Można uruchomić wątku poprzez dostarczenie delegata, który reprezentuje metodę, którą wątek znajduje się w jej konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-113">You start a thread by supplying a delegate that represents the method the thread is to execute in its class constructor.</span></span> <span data-ttu-id="cc4f0-114">Następnie wywołaj <xref:System.Threading.Thread.Start%2A> metodę, aby rozpocząć wykonywanie ciągu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-114">You then call the <xref:System.Threading.Thread.Start%2A> method to begin execution.</span></span>  
  
 <span data-ttu-id="cc4f0-115"><xref:System.Threading.Thread> Konstruktory można wykonać jedną z typami delegatów dwóch, w zależności od tego, czy można przekazać argument do metody w celu wykonania:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-115">The <xref:System.Threading.Thread> constructors can take either of two delegate types, depending on whether you can pass an argument to the method to be executed:</span></span>  
  
-   <span data-ttu-id="cc4f0-116">Jeśli metoda nie ma argumentów, przekazać <xref:System.Threading.ThreadStart> delegować do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-116">If the method has no arguments, you pass a <xref:System.Threading.ThreadStart> delegate to  the constructor.</span></span> <span data-ttu-id="cc4f0-117">Ma podpis:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-117">It has the signature:</span></span>  
  
    ```csharp  
    public delegate void ThreadStart()  
    ```  
  
    ```vb  
    Public Delegate Sub ThreadStart()  
    ```  
  
     <span data-ttu-id="cc4f0-118">Poniższy przykład tworzy i rozpoczyna się wątek, który jest wykonywany `ExecuteInForeground` metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-118">The following example creates and starts a thread that executes the `ExecuteInForeground` method.</span></span> <span data-ttu-id="cc4f0-119">Metoda Wyświetla informacje o niektórych właściwości wątku, a następnie wykonuje pętlę, w którym zatrzymuje się na pół sekundy i wyświetla liczbę sekund, który upłynął.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-119">The method displays  information about some thread properties, then executes a loop in which it pauses for half a second and displays the elapsed number of seconds.</span></span> <span data-ttu-id="cc4f0-120">Jeśli wątek zostało wykonane przez co najmniej pięć sekund, zakończenia pętli i Wątek kończy wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-120">When the thread has executed for at least five seconds, the loop ends and the thread terminates execution.</span></span>  
  
     [!code-csharp[System.Threading.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/ThreadStart1.cs#1)]
     [!code-vb[System.Threading.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/ThreadStart1.vb#1)]  
  
-   <span data-ttu-id="cc4f0-121">Jeśli metoda wymaga argumentu, Przekaż <xref:System.Threading.ParameterizedThreadStart> delegować do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-121">If the method has an argument, you pass a <xref:System.Threading.ParameterizedThreadStart> delegate to the constructor.</span></span> <span data-ttu-id="cc4f0-122">Ma podpis:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-122">It has the signature:</span></span>  
  
    ```csharp  
    public delegate void ParameterizedThreadStart(object obj)  
    ```  
  
    ```vb  
    Public Delegate Sub ParameterizedThreadStart(obj As Object)  
    ```  
  
     <span data-ttu-id="cc4f0-123">Metoda wykonywane przez delegata można rzutować (w języku C#) lub przekonwertować (w języku Visual Basic) parametr odpowiedniego typu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-123">The method executed by the delegate can then cast (in C#) or convert (in Visual Basic) the parameter to the appropriate type.</span></span>  
  
     <span data-ttu-id="cc4f0-124">Poniższy przykład jest taka sama jak poprzedni, z tą różnicą, że wywoływanych przez nią <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-124">The following example is identical to the previous one, except that it calls the <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor.</span></span> <span data-ttu-id="cc4f0-125">Ta wersja `ExecuteInForeground` metoda ma jeden parametr reprezentujący przybliżoną liczbę milisekund pętli ma wykonać.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-125">This version of the `ExecuteInForeground` method has a single parameter that represents the approximate number of milliseconds the loop is to execute.</span></span>  
  
     [!code-csharp[System.Threading.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/ThreadStart2.cs#2)]
     [!code-vb[System.Threading.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/ThreadStart2.vb#2)]  
  
 <span data-ttu-id="cc4f0-126">Nie jest konieczne zachować odwołanie do <xref:System.Threading.Thread> obiektu po rozpoczęciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-126">It is not necessary to retain a reference to a <xref:System.Threading.Thread> object once you have started the thread.</span></span> <span data-ttu-id="cc4f0-127">Wątek kontynuuje wykonywanie aż do zakończenia procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-127">The thread continues to execute until the thread procedure is complete.</span></span>  
  
<a name="Retrieving"></a>   
## <a name="retrieving-thread-objects"></a><span data-ttu-id="cc4f0-128">Pobieranie obiektów wątku</span><span class="sxs-lookup"><span data-stu-id="cc4f0-128">Retrieving Thread objects</span></span>  
 <span data-ttu-id="cc4f0-129">Można użyć statycznej (`Shared` w języku Visual Basic) <xref:System.Threading.Thread.CurrentThread%2A> właściwość, aby pobrać odwołanie do aktualnie wykonywany wątek z kodu, który jest wykonywany wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-129">You can use the static (`Shared` in Visual Basic)  <xref:System.Threading.Thread.CurrentThread%2A> property to retrieve a reference to the currently executing thread from the code that the thread is executing.</span></span> <span data-ttu-id="cc4f0-130">W poniższym przykładzie użyto <xref:System.Threading.Thread.CurrentThread%2A> właściwości, aby wyświetlić informacje o wątku głównego aplikacji, innego wątku na pierwszym planie, wątku w tle i wątku z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-130">The following example uses the <xref:System.Threading.Thread.CurrentThread%2A> property to display information about the main application thread, another foreground thread, a background thread, and a thread pool thread.</span></span>  
  
 [!code-csharp[System.Threading.Thread#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/Instance1.cs#4)]
 [!code-vb[System.Threading.Thread#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/Instance1.vb#4)]  
  
<a name="Foreground"></a>   
## <a name="foreground-and-background-threads"></a><span data-ttu-id="cc4f0-131">Wątki pierwszego planu i tła</span><span class="sxs-lookup"><span data-stu-id="cc4f0-131">Foreground and background threads</span></span>  
 <span data-ttu-id="cc4f0-132">Wystąpienia elementu <xref:System.Threading.Thread> klasy reprezentują wątki pierwszego planu lub wątków w tle.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-132">Instances of the <xref:System.Threading.Thread> class represent either foreground threads or background threads.</span></span> <span data-ttu-id="cc4f0-133">Wątków w tle są takie same, wątki pierwszoplanowe z jednym wyjątkiem: wątku w tle nie przechowuje proces uruchomiony, jeśli wszystkie wątki pierwszoplanowe zostać zakończony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-133">Background threads are identical to foreground threads with one exception: a background thread does not keep a process running if all foreground threads have terminated.</span></span> <span data-ttu-id="cc4f0-134">Po zatrzymaniu wszystkie wątki pierwszoplanowe środowiska uruchomieniowego zatrzymuje wszystkich wątków w tle i zamyka.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-134">Once all foreground threads have been stopped, the runtime stops all background threads and shuts down.</span></span>  
  
 <span data-ttu-id="cc4f0-135">Domyślnie następujące wątki są wykonywane na pierwszym planie:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-135">By default, the following threads execute in the foreground:</span></span>  
  
-   <span data-ttu-id="cc4f0-136">Wątku głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-136">The main application thread.</span></span>  
  
-   <span data-ttu-id="cc4f0-137">Wszystkie wątki, utworzonych przez wywoływanie <xref:System.Threading.Thread> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-137">All threads created by calling a <xref:System.Threading.Thread> class constructor.</span></span>  
  
 <span data-ttu-id="cc4f0-138">Następujące wątków wykonania w tle domyślnie:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-138">The following threads execute in the background by default:</span></span>  
  
-   <span data-ttu-id="cc4f0-139">Wątek puli wątków, które puli wątków roboczych utrzymywane przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-139">Thread pool threads, which are a pool of worker threads maintained by the runtime.</span></span>  <span data-ttu-id="cc4f0-140">Wątek puli i harmonogram pracy można skonfigurować na wątków z puli wątków, przy użyciu <xref:System.Threading.ThreadPool> klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-140">You can configure the thread pool and schedule work on thread pool threads by using the <xref:System.Threading.ThreadPool> class.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="cc4f0-141">Oparta na zadaniach asynchronicznej operacji automatycznie wykonać na wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-141">Task-based asynchronous operations automatically execute on thread pool threads.</span></span> <span data-ttu-id="cc4f0-142">Użyj opartego na zadaniach asynchronicznej operacji <xref:System.Threading.Tasks.Task> i <xref:System.Threading.Tasks.Task%601> klasy do zaimplementowania [wzorca asynchronicznego opartego na zadaniach](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-142">Task-based asynchronous operations use the <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> classes to implement the [task-based asynchronous pattern](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md).</span></span>  
  
-   <span data-ttu-id="cc4f0-143">Wszystkie wątki, które wprowadzać środowiska wykonawczego zarządzanych z niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-143">All threads that enter the managed execution environment from unmanaged code.</span></span>  
  
 <span data-ttu-id="cc4f0-144">Możesz zmienić wątków do wykonania w tle, ustawiając <xref:System.Threading.Thread.IsBackground%2A> właściwość w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-144">You can change a thread to execute in the background by setting the <xref:System.Threading.Thread.IsBackground%2A> property at any time.</span></span>  <span data-ttu-id="cc4f0-145">Wątków w tle są przydatne w przypadku każdej operacji, która powinno być kontynuowane, dopóki aplikacja jest uruchomiona, ale nie powinny uniemożliwiają aplikacji przerywa, takich jak monitorowanie zmian systemu plików lub przychodzące połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-145">Background threads are useful for any operation that should continue as long as an application is running but should not prevent the application from terminating, such as monitoring file system changes or incoming socket connections.</span></span>  
  
 <span data-ttu-id="cc4f0-146">Poniższy przykład ilustruje różnicę między wątki pierwszego planu i tła.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-146">The following example illustrates the difference between foreground and background threads.</span></span> <span data-ttu-id="cc4f0-147">Jest on podobny do pierwszego przykładu w [uruchamianie wątku](#Starting) sekcji, z tą różnicą, że ustawia wątków do wykonania w tle przed jego rozpoczęciem.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-147">It is like the first example in the [Starting a thread](#Starting) section, except that it sets the thread to execute in the background before starting it.</span></span> <span data-ttu-id="cc4f0-148">Dane wyjściowe pokazują, pętla zostanie przerwana, przed rozpoczęciem wykonywania przez pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-148">As the output shows, the loop is interrupted before it executes for five seconds.</span></span>  
  
 [!code-csharp[System.Threading.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/BackgroundEx1.cs#3)]
 [!code-vb[System.Threading.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/BackgroundEx1.vb#3)]  
  
<a name="Culture"></a>   
## <a name="culture-and-threads"></a><span data-ttu-id="cc4f0-149">Kultura i wątki</span><span class="sxs-lookup"><span data-stu-id="cc4f0-149">Culture and threads</span></span>  
 <span data-ttu-id="cc4f0-150">Każdy wątek ma kultury, reprezentowane przez <xref:System.Threading.Thread.CurrentCulture%2A> właściwości i kultury UI, reprezentowane przez <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-150">Each thread has a culture, represented by the <xref:System.Threading.Thread.CurrentCulture%2A> property, and a UI culture, represented by the <xref:System.Threading.Thread.CurrentUICulture%2A> property.</span></span>  <span data-ttu-id="cc4f0-151">Bieżącej kultury obsługuje takie operacje zależne od kultury jako analizowania i formatowania, porównywania ciągów i sortowania, a także kontroluje, system pisma i kalendarz używany przez wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-151">The current culture supports such culture-sensitive  operations as parsing and formatting, string comparison and sorting, and also controls the writing system and calendar used by a thread.</span></span> <span data-ttu-id="cc4f0-152">Bieżąca kultura interfejsu użytkownika umożliwia pobranie wrażliwość na ustawienia kulturowe zasoby w plikach zasobów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-152">The current UI culture provides for culture-sensitive retrieval of resources in resource files.</span></span>  
  
 <span data-ttu-id="cc4f0-153">Podczas tworzenia wystąpienia nowego wątku jego kultury i kultury UI zdefiniowano Bieżąca kultura systemu i kultura interfejsu użytkownika, a nie przez kultury i kultury UI, wątku, z którego jest tworzony nowy wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-153">When a new thread is instantiated, its culture and UI culture are defined by the current system culture and UI culture, and not by the culture and UI culture of the thread from which the new thread is created.</span></span> <span data-ttu-id="cc4f0-154">Oznacza to, na przykład, że bieżąca kultura systemu jest angielski (Stany Zjednoczone) i bieżącej kultury wątku aplikacji głównej jest francuski (Francja), kultura nowy wątek, utworzonych przez wywoływanie <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> konstruktora z wątku głównego jest angielski (Stany Zjednoczone), francuski (Francja).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-154">This means, for example, that if the current system culture is English (United States) and the current culture of the primary application thread is French (France), the culture of a new thread created by calling the   <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor from the primary thread is English (United States), and not French (France).</span></span> <span data-ttu-id="cc4f0-155">Aby uzyskać więcej informacji, zobacz sekcję "Kultura i wątki" <xref:System.Globalization.CultureInfo> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-155">For more information, see the "Culture and threads" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-156">Nie jest to prawdą wątków, które są wykonywane asynchroniczne operacje dla aplikacji, których platformą docelową [!INCLUDE[net_v46](~/includes/net-v46-md.md)] i nowsze wersje, w tym przypadku, kultury i kultury UI jest częścią asynchronicznego kontekst operacji; wątku, na którym operacji asynchronicznej wykonuje przez domyślne dziedziczy kultury i kultury UI, wątku, z którego uruchomiono operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-156">This is not true of threads that execute asynchronous operations for apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and later versions, In this case, the culture and UI culture is part of an asynchronous operations' context; the thread on which an asynchronous operation executes by default inherits the culture and UI culture of the thread from which the asynchronous operation was launched.</span></span> <span data-ttu-id="cc4f0-157">Aby uzyskać więcej informacji, zobacz sekcję "Kultury i opartego na zadaniach asynchronicznej operacji" <xref:System.Globalization.CultureInfo> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-157">For more information, see the "Culture and task-based asynchronous operations" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>  
  
 <span data-ttu-id="cc4f0-158">Można wykonać jedną z następujących czynności, aby upewnić się, że wszystkie wątki wykonywane w aplikacji współużytkują tę samą kulturę i kultura interfejsu użytkownika:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-158">You can do either of the following to ensure that all of the threads executing in an application share the same culture and UI culture:</span></span>  
  
-   <span data-ttu-id="cc4f0-159">Możesz przekazać <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje tę kulturę do <xref:System.Threading.ParameterizedThreadStart> delegować lub <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-159">You can pass a <xref:System.Globalization.CultureInfo> object that represents that culture to the <xref:System.Threading.ParameterizedThreadStart> delegate or the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="cc4f0-160">Dla aplikacji działających w [!INCLUDE[net_v45](~/includes/net-v45-md.md)] i nowsze wersje, można zdefiniować kultury i kultury UI, który ma być przypisana do wszystkich wątków, utworzone w domenie aplikacji, ustawiając wartość <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A?displayProperty=nameWithType> i <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-160">For apps running on the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later versions, you can define the culture and UI culture that is to be assigned to all threads created in an application domain by setting the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A?displayProperty=nameWithType> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="cc4f0-161">Należy pamiętać, że to ustawienie domeny na aplikację.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-161">Note that this is a per-application domain setting.</span></span>  
  
 <span data-ttu-id="cc4f0-162">Aby uzyskać więcej informacji i przykładów, zobacz sekcję "Kultura i wątki" <xref:System.Globalization.CultureInfo> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-162">For more information and examples, see the "Culture and threads" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>  
  
<a name="Properties"></a>   
## <a name="getting-information-about-and-controlling-threads"></a><span data-ttu-id="cc4f0-163">Pobieranie informacji o i sterowanie wątkami</span><span class="sxs-lookup"><span data-stu-id="cc4f0-163">Getting information about and controlling threads</span></span>  
 <span data-ttu-id="cc4f0-164">Możesz pobrać wiele wartości właściwości, które zawierają informacje o wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-164">You can retrieve a number of property values that provide information about a thread.</span></span> <span data-ttu-id="cc4f0-165">W niektórych przypadkach można również ustawić te wartości właściwości do sterowania działaniem wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-165">In some cases, you can also set these property values to control the operation of the thread.</span></span> <span data-ttu-id="cc4f0-166">Te właściwości wątku zawierać:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-166">These thread properties include:</span></span>  
  
-   <span data-ttu-id="cc4f0-167">Nazwa.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-167">A name.</span></span> <span data-ttu-id="cc4f0-168"><xref:System.Threading.Thread.Name%2A> jest zapis — raz te właściwości, która służy do identyfikowania wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-168"><xref:System.Threading.Thread.Name%2A> is a write-once property that you can use to identify a thread.</span></span>  <span data-ttu-id="cc4f0-169">Jego wartość domyślna to `null`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-169">Its default value is `null`.</span></span>  
  
-   <span data-ttu-id="cc4f0-170">Wartość skrótu, który można pobrać przez wywołanie metody <xref:System.Threading.Thread.GetHashCode%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-170">A hash code, which you can retrieve by calling the <xref:System.Threading.Thread.GetHashCode%2A> method.</span></span> <span data-ttu-id="cc4f0-171">Kod skrótu może być używany do jednoznacznego identyfikowania wątek okres istnienia wątek jego kod skrótu nie będą kolidować z wartości z innego wątku, niezależnie od tego, w domenie aplikacji, z którego można uzyskać wartość.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-171">The hash code can be used to uniquely identify a thread; for the lifetime of your thread, its hash code will not collide with the value from any other thread, regardless of the application domain from which you obtain the value.</span></span>  
  
-   <span data-ttu-id="cc4f0-172">Identyfikator wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-172">A thread ID.</span></span> <span data-ttu-id="cc4f0-173">Wartość tylko do odczytu <xref:System.Threading.Thread.ManagedThreadId%2A> właściwości jest przypisywany przez środowisko uruchomieniowe i unikatowo identyfikuje wątku w swoim procesie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-173">The value of the read-only <xref:System.Threading.Thread.ManagedThreadId%2A> property is assigned by the runtime and uniquely identifies a thread within its process.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="cc4f0-174">System operacyjny [ThreadId](https://msdn.microsoft.com/library/windows/desktop/ms683233.aspx) nie ma stałej relacji wątków zarządzanych, ponieważ niezarządzany host może kontrolować relacji między wątkami zarządzanych i niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-174">An operating-system [ThreadId](https://msdn.microsoft.com/library/windows/desktop/ms683233.aspx) has no fixed relationship to a managed thread, because an unmanaged host can control the relationship between managed and unmanaged threads.</span></span> <span data-ttu-id="cc4f0-175">W szczególności można użyć zaawansowanych hosta [interfejs API hostingu środowiska CLR](https://msdn.microsoft.com/library/ms404385.aspx) zaplanować wiele wątków zarządzanych względem tego samego wątku systemu operacyjnego lub wątek być przenoszone między wątkami różnych systemów operacyjnych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-175">Specifically, a sophisticated host can use the [CLR Hosting API](https://msdn.microsoft.com/library/ms404385.aspx) to schedule many managed threads against the same operating system thread, or to move a managed thread between different operating system threads.</span></span>  
  
-   <span data-ttu-id="cc4f0-176">Bieżący stan wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-176">The thread's current state.</span></span> <span data-ttu-id="cc4f0-177">Czas trwania początku swojego istnienia wątku jest zawsze co najmniej jeden stanów z definicją <xref:System.Threading.ThreadState> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-177">For the duration of its existence, a thread is always in one or more of the states defined by the <xref:System.Threading.ThreadState> property.</span></span>  
  
-   <span data-ttu-id="cc4f0-178">Poziom priorytetu planowania, która jest zdefiniowana przez <xref:System.Threading.ThreadPriority> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-178">A scheduling priority level, which is defined by the <xref:System.Threading.ThreadPriority> property.</span></span> <span data-ttu-id="cc4f0-179">Mimo że można ustawić tę wartość, aby zażądać priorytet wątku, nie jest gwarantowana aby były używane przez system operacyjny.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-179">Although you can set this value to request a thread's priority, it is not guaranteed to be honored by the operating system.</span></span>  
  
-   <span data-ttu-id="cc4f0-180">Tylko do odczytu <xref:System.Threading.Thread.IsThreadPoolThread%2A> właściwość, która wskazuje, czy wątek jest wątku z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-180">The read-only <xref:System.Threading.Thread.IsThreadPoolThread%2A> property, which indicates whether a thread is  a thread pool thread.</span></span>  
  
-   <span data-ttu-id="cc4f0-181"><xref:System.Threading.Thread.IsBackground%2A> Właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-181">The <xref:System.Threading.Thread.IsBackground%2A> property.</span></span> <span data-ttu-id="cc4f0-182">Aby uzyskać więcej informacji, zobacz [wątki pierwszego planu i tła](#Foreground) sekcji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-182">For more information, see the [Foreground and background threads](#Foreground) section.</span></span>  
  
## Examples  
 <span data-ttu-id="cc4f0-183">W poniższym przykładzie pokazano proste funkcje wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-183">The following example demonstrates simple threading functionality.</span></span>  
  
 [!code-cpp[Classic Thread Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Thread Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Thread Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Thread Example/CS/source.cs#1)]
 [!code-vb[Classic Thread Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Thread Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-184">Ten kod tworzy dane wyjściowe podobne do następujących:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-184">This code produces output similar to the following:</span></span>  
  
```  
[VB, C++, C#]  
Main thread: Start a second thread.  
Main thread: Do some work.  
ThreadProc: 0  
Main thread: Do some work.  
ThreadProc: 1  
Main thread: Do some work.  
ThreadProc: 2  
Main thread: Do some work.  
ThreadProc: 3  
Main thread: Call Join(), to wait until ThreadProc ends.  
ThreadProc: 4  
ThreadProc: 5  
ThreadProc: 6  
ThreadProc: 7  
ThreadProc: 8  
ThreadProc: 9  
Main thread: ThreadProc.Join has returned.  Press Enter to end program.  
```  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="cc4f0-185">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc4f0-185">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
      <span data-ttu-id="cc4f0-186">Wątki i wątkowość</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc4f0-186">Threads and Threading</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">
      <span data-ttu-id="cc4f0-187">Używanie wątków i wątkowości</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc4f0-187">Using Threads and Threading</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="http://referencesource.microsoft.com/#mscorlib/system/threading/thread.cs#3980e012bae82e96">
      <span data-ttu-id="cc4f0-188">Źródło odwołania dla klasy wątku</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc4f0-188">Reference Source for the Thread Class</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-189">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-189">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ParameterizedThreadStart start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ParameterizedThreadStart start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ParameterizedThreadStart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ParameterizedThreadStart ^ start);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ParameterizedThreadStart -&gt; System.Threading.Thread" Usage="new System.Threading.Thread start" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ParameterizedThreadStart" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="cc4f0-190">Delegat, który reprezentuje metody do wywołania, gdy ten wątek rozpoczyna wykonywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-190">A delegate that represents the methods to be invoked when this thread begins executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-191">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy, określając delegat, który umożliwia obiektu mają być przekazywane do wątku, gdy wątek jest uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-191">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying a delegate that allows an object to be passed to the thread when the thread is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-192">Wątek nie rozpoczyna się wykonywanie po jego utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-192">A thread does not begin executing when it is created.</span></span> <span data-ttu-id="cc4f0-193">Aby zaplanować wątków do wykonania, należy wywołać <xref:System.Threading.Thread.Start%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-193">To schedule the thread for execution, call the <xref:System.Threading.Thread.Start%2A> method.</span></span> <span data-ttu-id="cc4f0-194">Aby przekazać obiekt danych do wątku, należy użyć <xref:System.Threading.Thread.Start%28System.Object%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-194">To pass a data object to the thread, use the <xref:System.Threading.Thread.Start%28System.Object%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-195">Użytkowników programu Visual Basic można pominąć <xref:System.Threading.ThreadStart> Konstruktor podczas tworzenia wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-195">Visual Basic users can omit the <xref:System.Threading.ThreadStart> constructor when creating a thread.</span></span> <span data-ttu-id="cc4f0-196">Użyj `AddressOf` operator przy przekazywaniu metodę, na przykład `Dim t As New Thread(AddressOf ThreadProc)`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-196">Use the `AddressOf` operator when passing your method, for example `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="cc4f0-197">Visual Basic automatycznie wywołuje <xref:System.Threading.ThreadStart> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-197">Visual Basic automatically calls the <xref:System.Threading.ThreadStart> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-198">W poniższym przykładzie pokazano Składnia służąca do tworzenia i używania <xref:System.Threading.ParameterizedThreadStart> delegowanego z metody statycznej i metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-198">The following example shows the syntax for creating and using a <xref:System.Threading.ParameterizedThreadStart> delegate with a static method and an instance method.</span></span>  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-199">
            <paramref name="start" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-199">
              <paramref name="start" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.ParameterizedThreadStart" />
        <altmember cref="Overload:System.Threading.Thread.Start" />
        <altmember cref="T:System.AppDomain" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">
          <span data-ttu-id="cc4f0-200">Tworzenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-200">Creating Threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ThreadStart start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ThreadStart start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ThreadStart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ThreadStart ^ start);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ThreadStart -&gt; System.Threading.Thread" Usage="new System.Threading.Thread start" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ThreadStart" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="cc4f0-201">A <see cref="T:System.Threading.ThreadStart" /> delegata, który reprezentuje metody do wywołania, gdy ten wątek rozpoczyna wykonywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-201">A <see cref="T:System.Threading.ThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-202">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-202">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-203">Wątek nie rozpoczyna się wykonywanie po jego utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-203">A thread does not begin executing when it is created.</span></span> <span data-ttu-id="cc4f0-204">Aby zaplanować wątków do wykonania, należy wywołać <xref:System.Threading.Thread.Start%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-204">To schedule the thread for execution, call the <xref:System.Threading.Thread.Start%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-205">Użytkowników programu Visual Basic można pominąć <xref:System.Threading.ThreadStart> Konstruktor podczas tworzenia wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-205">Visual Basic users can omit the <xref:System.Threading.ThreadStart> constructor when creating a thread.</span></span> <span data-ttu-id="cc4f0-206">Użyj `AddressOf` operator przy przekazywaniu metodę na przykład `Dim t As New Thread(AddressOf ThreadProc)`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-206">Use the `AddressOf` operator when passing your method for example `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="cc4f0-207">Visual Basic automatycznie wywołuje <xref:System.Threading.ThreadStart> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-207">Visual Basic automatically calls the <xref:System.Threading.ThreadStart> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-208">Poniższy przykład kodu pokazuje sposób tworzenia wątku, który wykonuje metodę statyczną.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-208">The following code example shows how to create a thread that executes a static method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ctor/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ctor/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-209">Poniższy przykład kodu pokazuje sposób tworzenia wątku, który wykonuje metodę wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-209">The following code example shows how to create a thread that executes an instance method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-210">
            <paramref name="start" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-210">The <paramref name="start" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.ThreadStart" />
        <altmember cref="Overload:System.Threading.Thread.Start" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">
          <span data-ttu-id="cc4f0-211">Tworzenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-211">Creating Threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ParameterizedThreadStart start, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ParameterizedThreadStart start, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ParameterizedThreadStart, maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ParameterizedThreadStart ^ start, int maxStackSize);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ParameterizedThreadStart * int -&gt; System.Threading.Thread" Usage="new System.Threading.Thread (start, maxStackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ParameterizedThreadStart" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="cc4f0-212">A <see cref="T:System.Threading.ParameterizedThreadStart" /> delegata, który reprezentuje metody do wywołania, gdy ten wątek rozpoczyna wykonywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-212">A <see cref="T:System.Threading.ParameterizedThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="cc4f0-213">Rozmiar maksymalny stosu w bajtach, do użycia przez wątku lub 0, rozmiar maksymalny stosu domyślnego określony w nagłówku pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-213">The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</span>
          </span>
          <span data-ttu-id="cc4f0-214">Ważne dla częściowo zaufanego kodu, <c>maxStackSize</c> jest ignorowana, jeśli jest on większy niż rozmiar stosu domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-214">Important   For partially trusted code, <c>maxStackSize</c> is ignored if it is greater than the default stack size.</span>
          </span>
          <span data-ttu-id="cc4f0-215">Jest zgłaszany żaden wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-215">No exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-216">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy, określając delegat, który umożliwia obiektu mają być przekazywane do wątku, gdy wątek jest uruchomiony i określając maksymalny rozmiar stosu dla wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-216">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-217">Należy unikać używania tego przeciążenia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-217">Avoid using this constructor overload.</span></span> <span data-ttu-id="cc4f0-218">Domyślny rozmiar stosu używana przez <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> przeciążenia konstruktora jest rozmiar stosu zalecane dla wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-218">The default stack size used by the <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor overload is the recommended stack size for threads.</span></span> <span data-ttu-id="cc4f0-219">Jeśli wątek ma problemy z pamięcią, najbardziej prawdopodobną przyczyną jest programowania błędu, takie jak nieskończoną rekursję.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-219">If a thread has memory problems, the most likely cause is programming error, such as infinite recursion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-220">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]należy korzystać tylko z w pełni zaufany kod można ustawić `maxStackSize` wartość, która jest większa niż rozmiar stosu domyślnego (1 megabajt).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-220">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], only fully trusted code can set `maxStackSize` to a value that is greater than the default stack size (1 megabyte).</span></span> <span data-ttu-id="cc4f0-221">Jeśli określono większą wartość dla `maxStackSize` gdy kod jest wykonywany z częściowym zaufaniem `maxStackSize` jest ignorowany i jest używany domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-221">If a larger value is specified for `maxStackSize` when code is running with partial trust, `maxStackSize` is ignored and the default stack size is used.</span></span> <span data-ttu-id="cc4f0-222">Jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-222">No exception is thrown.</span></span> <span data-ttu-id="cc4f0-223">Można ustawić kodu na dowolnym poziomie zaufania `maxStackSize` wartość, która jest mniejsza niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-223">Code at any trust level can set `maxStackSize` to a value that is less than the default stack size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-224">Jeśli tworzysz bibliotekę pełni zaufany, który będzie używany przez częściowo zaufany kod, a wówczas musisz uruchomić wątek wymagającym dużej stosu, pełne zaufanie musi potwierdzenia przed utworzeniem wątku lub będzie używany domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-224">If you are developing a fully trusted library that will be used by partially trusted code, and you need to start a thread that requires a large stack, you must assert full trust before creating the thread, or the default stack size will be used.</span></span> <span data-ttu-id="cc4f0-225">Nie należy tego robić, chyba że w pełni kontrolować kod, który jest uruchamiany na wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-225">Do not do this unless you fully control the code that runs on the thread.</span></span>  
  
 <span data-ttu-id="cc4f0-226">Jeśli `maxStackSize` jest mniejszy niż rozmiar minimalny stos jest używany rozmiar minimalny stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-226">If `maxStackSize` is less than the minimum stack size, the minimum stack size is used.</span></span> <span data-ttu-id="cc4f0-227">Jeśli `maxStackSize` nie jest wielokrotnością rozmiaru strony jest zaokrąglana do większych kolejną wielokrotnością rozmiaru strony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-227">If `maxStackSize` is not a multiple of the page size, it is rounded to the next larger multiple of the page size.</span></span> <span data-ttu-id="cc4f0-228">Na przykład jeśli używasz platformy .NET Framework w wersji 2.0 w systemie Windows Vista, 256KB (262 144 bajty) to rozmiar minimalny stos, a rozmiar strony wynosi 64KB (65 536 bajtów).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-228">For example, if you are using the .NET Framework version 2.0 on Windows Vista, 256KB (262,144 bytes) is the minimum stack size, and the page size is 64KB (65,536 bytes).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-229">W wersjach systemu Microsoft Windows przed Windows XP i Windows Server 2003 `maxStackSize` jest ignorowany i jest używany rozmiar stosu, określony w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-229">On versions of Microsoft Windows prior to Windows XP and Windows Server 2003, `maxStackSize` is ignored, and the stack size specified in the executable header is used.</span></span>  
  
 <span data-ttu-id="cc4f0-230">Możesz określić rozmiar bardzo mały stos, może być konieczne wyłączenie sondowanie przepełnienia stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-230">If you specify a very small stack size, you might need to disable stack-overflow probing.</span></span> <span data-ttu-id="cc4f0-231">Stos poważnie jest ograniczony, sondowanie może sam spowodować przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-231">When the stack is severely constrained, the probing can itself cause a stack overflow.</span></span> <span data-ttu-id="cc4f0-232">Aby wyłączyć, sondowanie przepełnienie stosu, Dodaj następujący element do pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-232">To disable stack overflow probing, add the following to your application configuration file.</span></span>  
  
```xml  
<configuration>  
  <runtime>  
    <disableStackOverflowProbing enabled="true"/>  
  </runtime>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-233">
            <paramref name="start" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-233">
              <paramref name="start" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-234">
            <paramref name="maxStackSize" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-234">
              <paramref name="maxStackSize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ThreadStart start, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ThreadStart start, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ThreadStart, maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ThreadStart ^ start, int maxStackSize);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ThreadStart * int -&gt; System.Threading.Thread" Usage="new System.Threading.Thread (start, maxStackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ThreadStart" />
        <Parameter Name="maxStackSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="cc4f0-235">A <see cref="T:System.Threading.ThreadStart" /> delegata, który reprezentuje metody do wywołania, gdy ten wątek rozpoczyna wykonywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-235">A <see cref="T:System.Threading.ThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span>
          </span>
        </param>
        <param name="maxStackSize">
          <span data-ttu-id="cc4f0-236">Rozmiar maksymalny stosu w bajtach, do użycia przez wątku lub 0, rozmiar maksymalny stosu domyślnego określony w nagłówku pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-236">The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</span>
          </span>
          <span data-ttu-id="cc4f0-237">Ważne dla częściowo zaufanego kodu, <c>maxStackSize</c> jest ignorowana, jeśli jest on większy niż rozmiar stosu domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-237">Important   For partially trusted code, <c>maxStackSize</c> is ignored if it is greater than the default stack size.</span>
          </span>
          <span data-ttu-id="cc4f0-238">Jest zgłaszany żaden wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-238">No exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-239">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy, określając maksymalny rozmiar stosu dla wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-239">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying the maximum stack size for the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-240">Należy unikać używania tego przeciążenia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-240">Avoid using this constructor overload.</span></span> <span data-ttu-id="cc4f0-241">Domyślny rozmiar stosu używana przez <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29> przeciążenia konstruktora jest rozmiar stosu zalecane dla wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-241">The default stack size used by the <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29> constructor overload is the recommended stack size for threads.</span></span> <span data-ttu-id="cc4f0-242">Jeśli wątek ma problemy z pamięcią, najbardziej prawdopodobną przyczyną jest programowania błędu, takie jak nieskończoną rekursję.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-242">If a thread has memory problems, the most likely cause is programming error, such as infinite recursion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-243">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]należy korzystać tylko z w pełni zaufany kod można ustawić `maxStackSize` wartość, która jest większa niż rozmiar stosu domyślnego (1 megabajt).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-243">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], only fully trusted code can set `maxStackSize` to a value that is greater than the default stack size (1 megabyte).</span></span> <span data-ttu-id="cc4f0-244">Jeśli określono większą wartość dla `maxStackSize` gdy kod jest wykonywany z częściowym zaufaniem `maxStackSize` jest ignorowany i jest używany domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-244">If a larger value is specified for `maxStackSize` when code is running with partial trust, `maxStackSize` is ignored and the default stack size is used.</span></span> <span data-ttu-id="cc4f0-245">Jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-245">No exception is thrown.</span></span> <span data-ttu-id="cc4f0-246">Można ustawić kodu na dowolnym poziomie zaufania `maxStackSize` wartość, która jest mniejsza niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-246">Code at any trust level can set `maxStackSize` to a value that is less than the default stack size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-247">Jeśli tworzysz bibliotekę pełni zaufany, który będzie używany przez częściowo zaufany kod, a wówczas musisz uruchomić wątek wymagającym dużej stosu, pełne zaufanie musi potwierdzenia przed utworzeniem wątku lub będzie używany domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-247">If you are developing a fully trusted library that will be used by partially trusted code, and you need to start a thread that requires a large stack, you must assert full trust before creating the thread, or the default stack size will be used.</span></span> <span data-ttu-id="cc4f0-248">Nie należy tego robić, chyba że w pełni kontrolować kod, który jest uruchamiany na wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-248">Do not do this unless you fully control the code that runs on the thread.</span></span>  
  
 <span data-ttu-id="cc4f0-249">Jeśli `maxStackSize` jest mniejszy niż rozmiar minimalny stos jest używany rozmiar minimalny stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-249">If `maxStackSize` is less than the minimum stack size, the minimum stack size is used.</span></span> <span data-ttu-id="cc4f0-250">Jeśli `maxStackSize` nie jest wielokrotnością rozmiaru strony jest zaokrąglana do większych kolejną wielokrotnością rozmiaru strony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-250">If `maxStackSize` is not a multiple of the page size, it is rounded to the next larger multiple of the page size.</span></span> <span data-ttu-id="cc4f0-251">Na przykład jeśli używasz platformy .NET Framework w wersji 2.0 w systemie Windows Vista, 256KB (262 144 bajty) to rozmiar minimalny stos, a rozmiar strony wynosi 64KB (65 536 bajtów).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-251">For example, if you are using the .NET Framework version 2.0 on Windows Vista, 256KB (262,144 bytes) is the minimum stack size, and the page size is 64KB (65,536 bytes).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-252">W wersjach systemu Microsoft Windows przed Windows XP i Windows Server 2003 `maxStackSize` jest ignorowany i jest używany rozmiar stosu, określony w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-252">On versions of Microsoft Windows prior to Windows XP and Windows Server 2003, `maxStackSize` is ignored, and the stack size specified in the executable header is used.</span></span>  
  
 <span data-ttu-id="cc4f0-253">Możesz określić rozmiar bardzo mały stos, może być konieczne wyłączenie sondowanie przepełnienia stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-253">If you specify a very small stack size, you might need to disable stack-overflow probing.</span></span> <span data-ttu-id="cc4f0-254">Stos poważnie jest ograniczony, sondowanie może sam spowodować przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-254">When the stack is severely constrained, the probing can itself cause a stack overflow.</span></span> <span data-ttu-id="cc4f0-255">Aby wyłączyć, sondowanie przepełnienie stosu, Dodaj następujący element do pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-255">To disable stack overflow probing, add the following to your application configuration file.</span></span>  
  
```xml  
<configuration>  
  <runtime>  
    <disableStackOverflowProbing enabled="true"/>  
  </runtime>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-256">
            <paramref name="start" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-256">
              <paramref name="start" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-257">
            <paramref name="maxStackSize" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-257">
              <paramref name="maxStackSize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-258">Wywołuje <see cref="T:System.Threading.ThreadAbortException" /> w wątku, na którym jest wywoływana, aby rozpocząć proces zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-258">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread.</span>
          </span>
          <span data-ttu-id="cc4f0-259">Zazwyczaj wywołanie tej metody powoduje zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-259">Calling this method usually terminates the thread.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="thread.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-260">Wywołuje <see cref="T:System.Threading.ThreadAbortException" /> w wątku, na którym jest wywoływana, aby rozpocząć proces zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-260">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread.</span>
          </span>
          <span data-ttu-id="cc4f0-261">Zazwyczaj wywołanie tej metody powoduje zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-261">Calling this method usually terminates the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-262">Gdy ta metoda jest wywoływana w wątku, system zgłasza <xref:System.Threading.ThreadAbortException> w wątku, aby je przerwać.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-262">When this method is invoked on a thread, the system throws a <xref:System.Threading.ThreadAbortException> in the thread to abort it.</span></span> <span data-ttu-id="cc4f0-263">`ThreadAbortException` specjalne wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest ponownie zgłoszony na końcu `catch` blokowania, chyba że <xref:System.Threading.Thread.ResetAbort%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-263">`ThreadAbortException` is a special exception that can be caught by application code, but is re-thrown at the end of the `catch` block unless <xref:System.Threading.Thread.ResetAbort%2A> is called.</span></span> <span data-ttu-id="cc4f0-264">`ResetAbort` anuluje żądanie do przerwania i zapobiega `ThreadAbortException` z zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-264">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span> <span data-ttu-id="cc4f0-265">Cofnąć `finally` bloki są wykonywane przed wątek został przerwany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-265">Unexecuted `finally` blocks are executed before the thread is aborted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-266">Kiedy wątek wywołuje `Abort` na siebie, efekt jest podobny do zgłaszania wyjątku; <xref:System.Threading.ThreadAbortException> się stanie, natychmiast, a wynik jest przewidywalne.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-266">When a thread calls `Abort` on itself, the effect is similar to throwing an exception; the <xref:System.Threading.ThreadAbortException> happens immediately, and the result is predictable.</span></span> <span data-ttu-id="cc4f0-267">Jednak jeśli jeden wątek wywołuje `Abort` w innym wątku przerwanie przerywa działanie niezależnie od kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-267">However, if one thread calls `Abort` on another thread, the abort interrupts whatever code is running.</span></span> <span data-ttu-id="cc4f0-268">Istnieje również ryzyko, statyczny Konstruktor może przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-268">There is also a chance that a static constructor could be aborted.</span></span> <span data-ttu-id="cc4f0-269">W rzadkich przypadkach to może uniemożliwić wystąpień tej klasy są tworzone w tej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-269">In rare cases, this might prevent instances of that class from being created in that application domain.</span></span> <span data-ttu-id="cc4f0-270">W .NET Framework w wersji 1.0 i 1.1, istnieje ryzyko, wątek może przerwać podczas `finally` bloku jest uruchomiona, w którym to przypadku `finally` bloku zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-270">In the .NET Framework versions 1.0 and 1.1, there is a chance the thread could abort while a `finally` block is running, in which case the `finally` block is aborted.</span></span>  
  
 <span data-ttu-id="cc4f0-271">Wątek nie jest gwarantowane do przerwania bezpośrednio lub w ogóle.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-271">The thread is not guaranteed to abort immediately, or at all.</span></span> <span data-ttu-id="cc4f0-272">Taka sytuacja może wystąpić, jeśli wątek ma niezwiązana ilość obliczeń w `finally` bloki, które są wywoływane w ramach procedury przerwania, w tym samym przez nieokreślony czas opóźnienia przerwanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-272">This situation can occur if a thread does an unbounded amount of computation in the `finally` blocks that are called as part of the abort procedure, thereby indefinitely delaying the abort.</span></span> <span data-ttu-id="cc4f0-273">Poczekać, aż wątek został przerwany, można wywołać <xref:System.Threading.Thread.Join%2A> wątku po wywołaniu metody <xref:System.Threading.Thread.Abort%2A> metody, ale nie ma żadnej gwarancji, zakończy się czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-273">To wait until a thread has aborted, you can call the <xref:System.Threading.Thread.Join%2A> method on the thread after calling the <xref:System.Threading.Thread.Abort%2A> method, but there is no guarantee the wait will end.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-274">Wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> może spowodować zablokowanie, jeśli wątek, który Trwa przerywanie znajduje się w regionie chronionym kodu, takich jak `catch` bloku `finally` bloku lub region ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-274">The thread that calls <xref:System.Threading.Thread.Abort%2A> might block if the thread that is being aborted is in a protected region of code, such as a `catch` block, `finally` block, or constrained execution region.</span></span> <span data-ttu-id="cc4f0-275">Jeśli wątku wywołującym <xref:System.Threading.Thread.Abort%2A> posiada blokadę, wymagająca przerwanie wątku zakleszczenia mogą wystąpić.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-275">If the thread that calls <xref:System.Threading.Thread.Abort%2A> holds a lock that the aborted thread requires, a deadlock can occur.</span></span>  
  
 <span data-ttu-id="cc4f0-276">Jeśli `Abort` jest wywoływana w wątku, który nie został uruchomiony, wątek zostanie przerwany, gdy <xref:System.Threading.Thread.Start%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-276">If `Abort` is called on a thread that has not been started, the thread will abort when <xref:System.Threading.Thread.Start%2A> is called.</span></span> <span data-ttu-id="cc4f0-277">Jeśli `Abort` jest wywoływana w wątku, który jest zablokowany lub jest w stanie uśpienia, wątek jest przerwane i następnie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-277">If `Abort` is called on a thread that is blocked or is sleeping, the thread is interrupted and then aborted.</span></span>  
  
 <span data-ttu-id="cc4f0-278">Jeśli `Abort` jest wywoływana w wątku, który zostało zawieszone, <xref:System.Threading.ThreadStateException> jest zgłaszany w wątku, który wywołał <xref:System.Threading.Thread.Abort%2A>, i <xref:System.Threading.ThreadState.AbortRequested> jest dodawany do <xref:System.Threading.Thread.ThreadState%2A> właściwości wątku przerwanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-278">If `Abort` is called on a thread that has been suspended, a <xref:System.Threading.ThreadStateException> is thrown in the thread that called <xref:System.Threading.Thread.Abort%2A>, and <xref:System.Threading.ThreadState.AbortRequested> is added to the <xref:System.Threading.Thread.ThreadState%2A> property of the thread being aborted.</span></span> <span data-ttu-id="cc4f0-279">A <xref:System.Threading.ThreadAbortException> nie jest zgłaszany w wstrzymania wątków, aż <xref:System.Threading.Thread.Resume%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-279">A <xref:System.Threading.ThreadAbortException> is not thrown in the suspended thread until <xref:System.Threading.Thread.Resume%2A> is called.</span></span>  
  
 <span data-ttu-id="cc4f0-280">Jeśli `Abort` jest wywoływana w wątków zarządzanych, podczas wykonywania kodu niezarządzanego `ThreadAbortException` nie jest generowany, aż wątek wraca z kodem zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-280">If `Abort` is called on a managed thread while it is executing unmanaged code, a `ThreadAbortException` is not thrown until the thread returns to managed code.</span></span>  
  
 <span data-ttu-id="cc4f0-281">Jeśli dwa wywołania `Abort` występować w tym samym czasie, jest jedno wywołanie ustawić informacje o stanie i inne wywołanie, aby wykonać `Abort`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-281">If two calls to `Abort` come at the same time, it is possible for one call to set the state information and the other call to execute the `Abort`.</span></span> <span data-ttu-id="cc4f0-282">Jednak aplikacja nie może wykryć tę sytuację.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-282">However, an application cannot detect this situation.</span></span>  
  
 <span data-ttu-id="cc4f0-283">Po `Abort` zostanie wywołana w wątku, obejmuje stan wątku <xref:System.Threading.ThreadState.AbortRequested>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-283">After `Abort` is invoked on a thread, the state of the thread includes <xref:System.Threading.ThreadState.AbortRequested>.</span></span> <span data-ttu-id="cc4f0-284">Po zakończeniu wątku wyniku pomyślnego `Abort`, stan wątku jest zmieniany na <xref:System.Threading.ThreadState.Stopped>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-284">After the thread has terminated as a result of a successful call to `Abort`, the state of the thread is changed to <xref:System.Threading.ThreadState.Stopped>.</span></span> <span data-ttu-id="cc4f0-285">Z wystarczającymi uprawnieniami, wątek to obiekt docelowy `Abort` można anulować przy użyciu przerwania `ResetAbort` metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-285">With sufficient permissions, a thread that is the target of an `Abort` can cancel the abort using the `ResetAbort` method.</span></span> <span data-ttu-id="cc4f0-286">Aby uzyskać przykład, który demonstruje wywołanie `ResetAbort` metody, zobacz `ThreadAbortException` klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-286">For an example that demonstrates calling the `ResetAbort` method, see the `ThreadAbortException` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-287">.NET core: ten element członkowski nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-287">.NET Core only: This member is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-288">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-288">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-289">Wątek, który Trwa przerywanie jest aktualnie wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-289">The thread that is being aborted is currently suspended.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-290">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-290">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-291">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-291">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.ThreadAbortException" />
        <altmember cref="F:System.Threading.ThreadState.Aborted" />
        <altmember cref="F:System.Threading.ThreadState.AbortRequested" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-292">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-292">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">
          <span data-ttu-id="cc4f0-293">Używanie wątków i wątkowości</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-293">Using threads and threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md">
          <span data-ttu-id="cc4f0-294">Niszczenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-294">Destroying threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (object stateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(object stateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Abort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (stateInfo As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::Object ^ stateInfo);" />
      <MemberSignature Language="F#" Value="member this.Abort : obj -&gt; unit" Usage="thread.Abort stateInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stateInfo">
          <span data-ttu-id="cc4f0-295">Obiekt, który zawiera informacje specyficzne dla aplikacji, takie jak stan, który może służyć przez wątek przerwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-295">An object that contains application-specific information, such as state, which can be used by the thread being aborted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-296">Wywołuje <see cref="T:System.Threading.ThreadAbortException" /> w wątku, na którym jest wywoływana, aby rozpocząć proces zakończenie wątku, a jednocześnie zapewniając wyjątku o zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-296">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination.</span>
          </span>
          <span data-ttu-id="cc4f0-297">Zazwyczaj wywołanie tej metody powoduje zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-297">Calling this method usually terminates the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-298">Gdy ta metoda jest wywoływana w wątku, system zgłasza <xref:System.Threading.ThreadAbortException> w wątku, aby je przerwać.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-298">When this method is invoked on a thread, the system throws a <xref:System.Threading.ThreadAbortException> in the thread to abort it.</span></span> <span data-ttu-id="cc4f0-299">`ThreadAbortException` specjalne wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest ponownie zgłoszony na końcu `catch` blokowania, chyba że <xref:System.Threading.Thread.ResetAbort%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-299">`ThreadAbortException` is a special exception that can be caught by application code, but is re-thrown at the end of the `catch` block unless <xref:System.Threading.Thread.ResetAbort%2A> is called.</span></span> <span data-ttu-id="cc4f0-300">`ResetAbort` anuluje żądanie do przerwania i zapobiega `ThreadAbortException` z zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-300">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span> <span data-ttu-id="cc4f0-301">Cofnąć `finally` bloki są wykonywane przed wątek został przerwany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-301">Unexecuted `finally` blocks are executed before the thread is aborted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-302">Kiedy wątek wywołuje `Abort` na siebie, efekt jest podobny do zgłaszania wyjątku; <xref:System.Threading.ThreadAbortException> się stanie, natychmiast, a wynik jest przewidywalne.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-302">When a thread calls `Abort` on itself, the effect is similar to throwing an exception; the <xref:System.Threading.ThreadAbortException> happens immediately, and the result is predictable.</span></span> <span data-ttu-id="cc4f0-303">Jednak jeśli jeden wątek wywołuje `Abort` w innym wątku przerwanie przerywa działanie niezależnie od kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-303">However, if one thread calls `Abort` on another thread, the abort interrupts whatever code is running.</span></span> <span data-ttu-id="cc4f0-304">Istnieje ryzyko, statyczny Konstruktor może przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-304">There is a chance that a static constructor could be aborted.</span></span> <span data-ttu-id="cc4f0-305">W rzadkich przypadkach to może uniemożliwić wystąpień tej klasy są tworzone w tej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-305">In rare cases, this might prevent instances of that class from being created in that application domain.</span></span> <span data-ttu-id="cc4f0-306">W .NET Framework w wersji 1.0 i 1.1, istnieje ryzyko, wątek może przerwać podczas `finally` bloku jest uruchomiona, w którym to przypadku `finally` bloku zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-306">In the .NET Framework versions 1.0 and 1.1, there is a chance the thread could abort while a `finally` block is running, in which case the `finally` block is aborted.</span></span>  
  
 <span data-ttu-id="cc4f0-307">Wątek nie jest gwarantowane do przerwania bezpośrednio lub w ogóle.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-307">The thread is not guaranteed to abort immediately, or at all.</span></span> <span data-ttu-id="cc4f0-308">Taka sytuacja może wystąpić, jeśli wątek ma niezwiązana ilość obliczeń w `finally` bloki, które są wywoływane w ramach procedury przerwania, w tym samym przez nieokreślony czas opóźnienia przerwanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-308">This situation can occur if a thread does an unbounded amount of computation in the `finally` blocks that are called as part of the abort procedure, thereby indefinitely delaying the abort.</span></span> <span data-ttu-id="cc4f0-309">Należy poczekać, aż wątek został przerwany, można wywołać <xref:System.Threading.Thread.Join%2A> wątku po wywołaniu metody <xref:System.Threading.Thread.Abort%2A> metody, ale nie ma żadnej gwarancji, która zakończy się czas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-309">To wait until a thread has aborted, you can call the <xref:System.Threading.Thread.Join%2A> method on the thread after calling the <xref:System.Threading.Thread.Abort%2A> method, but there is no guarantee that the wait will end.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-310">Wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> może spowodować zablokowanie, jeśli wątek, który Trwa przerywanie znajduje się w regionie chronionym kodu, takich jak `catch` bloku `finally` bloku lub region ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-310">The thread that calls <xref:System.Threading.Thread.Abort%2A> might block if the thread that is being aborted is in a protected region of code, such as a `catch` block, `finally` block, or constrained execution region.</span></span> <span data-ttu-id="cc4f0-311">Jeśli wątku wywołującym <xref:System.Threading.Thread.Abort%2A> posiada blokadę, wymagająca przerwanie wątku zakleszczenia mogą wystąpić.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-311">If the thread that calls <xref:System.Threading.Thread.Abort%2A> holds a lock that the aborted thread requires, a deadlock can occur.</span></span>  
  
 <span data-ttu-id="cc4f0-312">Jeśli `Abort` jest wywoływana w wątku, który nie został uruchomiony, wątek zostanie przerwany, gdy <xref:System.Threading.Thread.Start%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-312">If `Abort` is called on a thread that has not been started, the thread will abort when <xref:System.Threading.Thread.Start%2A> is called.</span></span> <span data-ttu-id="cc4f0-313">Jeśli `Abort` jest wywoływana w wątku, który jest zablokowany lub jest w stanie uśpienia, wątek jest przerwane i następnie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-313">If `Abort` is called on a thread that is blocked or is sleeping, the thread is interrupted and then aborted.</span></span>  
  
 <span data-ttu-id="cc4f0-314">Jeśli `Abort` jest wywoływana w wątku, który zostało zawieszone, <xref:System.Threading.ThreadStateException> jest zgłaszany w wątku, który wywołał <xref:System.Threading.Thread.Abort%2A>, i <xref:System.Threading.ThreadState.AbortRequested> jest dodawany do <xref:System.Threading.Thread.ThreadState%2A> właściwości wątku przerwanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-314">If `Abort` is called on a thread that has been suspended, a <xref:System.Threading.ThreadStateException> is thrown in the thread that called <xref:System.Threading.Thread.Abort%2A>, and <xref:System.Threading.ThreadState.AbortRequested> is added to the <xref:System.Threading.Thread.ThreadState%2A> property of the thread being aborted.</span></span> <span data-ttu-id="cc4f0-315">A <xref:System.Threading.ThreadAbortException> nie jest zgłaszany w wstrzymania wątków, aż <xref:System.Threading.Thread.Resume%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-315">A <xref:System.Threading.ThreadAbortException> is not thrown in the suspended thread until <xref:System.Threading.Thread.Resume%2A> is called.</span></span>  
  
 <span data-ttu-id="cc4f0-316">Jeśli `Abort` jest wywoływana w wątków zarządzanych, podczas wykonywania kodu niezarządzanego `ThreadAbortException` nie jest generowany, aż wątek wraca z kodem zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-316">If `Abort` is called on a managed thread while it is executing unmanaged code, a `ThreadAbortException` is not thrown until the thread returns to managed code.</span></span>  
  
 <span data-ttu-id="cc4f0-317">Jeśli dwa wywołania `Abort` występować w tym samym czasie, jest jedno wywołanie ustawić informacje o stanie i inne wywołanie, aby wykonać `Abort`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-317">If two calls to `Abort` come at the same time, it is possible for one call to set the state information and the other call to execute the `Abort`.</span></span> <span data-ttu-id="cc4f0-318">Jednak aplikacja nie może wykryć tę sytuację.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-318">However, an application cannot detect this situation.</span></span>  
  
 <span data-ttu-id="cc4f0-319">Po `Abort` zostanie wywołana w wątku, obejmuje stan wątku <xref:System.Threading.ThreadState.AbortRequested>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-319">After `Abort` is invoked on a thread, the state of the thread includes <xref:System.Threading.ThreadState.AbortRequested>.</span></span> <span data-ttu-id="cc4f0-320">Po zakończeniu wątku wyniku pomyślnego `Abort`, stan wątku jest zmieniany na <xref:System.Threading.ThreadState.Stopped>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-320">After the thread has terminated as a result of a successful call to `Abort`, the state of the thread is changed to <xref:System.Threading.ThreadState.Stopped>.</span></span> <span data-ttu-id="cc4f0-321">Z wystarczającymi uprawnieniami, wątek to obiekt docelowy `Abort` można anulować przy użyciu przerwania `ResetAbort` metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-321">With sufficient permissions, a thread that is the target of an `Abort` can cancel the abort using the `ResetAbort` method.</span></span> <span data-ttu-id="cc4f0-322">Aby uzyskać przykład, który demonstruje wywołanie `ResetAbort` metody, zobacz `ThreadAbortException` klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-322">For an example that demonstrates calling the `ResetAbort` method, see the `ThreadAbortException` class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-323">Poniższy przykład kodu pokazuje sposób przekazywania informacji do wątku, który jest przerywana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-323">The following code example shows how to pass information to a thread that is being aborted.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Abort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Abort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Abort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-324">.NET core: ten element członkowski nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-324">.NET Core only: This member is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-325">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-325">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-326">Wątek, który Trwa przerywanie jest aktualnie wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-326">The thread that is being aborted is currently suspended.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-327">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-327">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-328">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-328">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.ThreadAbortException" />
        <altmember cref="F:System.Threading.ThreadState.Aborted" />
        <altmember cref="F:System.Threading.ThreadState.AbortRequested" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-329">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-329">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">
          <span data-ttu-id="cc4f0-330">Używanie wątków i wątkowości</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-330">Using threads and threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md">
          <span data-ttu-id="cc4f0-331">Niszczenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-331">Destroying threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AllocateDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot AllocateDataSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot AllocateDataSlot() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.AllocateDataSlot" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateDataSlot () As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ AllocateDataSlot();" />
      <MemberSignature Language="F#" Value="static member AllocateDataSlot : unit -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.AllocateDataSlot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-332">Przydziela miejsce nienazwane danych we wszystkich wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-332">Allocates an unnamed data slot on all the threads.</span>
          </span>
          <span data-ttu-id="cc4f0-333">Lepszą wydajność, należy użyć pola, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-333">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-334">Przydzielony o nazwie gniazda danych we wszystkich wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-334">The allocated named data slot on all threads.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-335">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-335">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-336">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-336">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-337">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-337">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-338">Gniazdo jest przydzielany we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-338">The slot is allocated on all threads.</span></span>  
  
 <span data-ttu-id="cc4f0-339">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-339">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-340">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-340">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-341">Wątek może przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania, po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-341">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="cc4f0-342">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-342">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-343">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-343">No other thread (not even a child thread) can get that data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-344">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-344">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-345">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-345">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-346">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-346">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-347">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-347">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-348">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-348">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-349">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-349">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-350">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-350">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-351">Poniższy przykład kodu pokazuje, jak używać gniazda danych do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-351">The following code example demonstrates how to use a data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-352">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-352">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-353">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-353">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AllocateNamedDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot AllocateNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot AllocateNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateNamedDataSlot (name As String) As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ AllocateNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AllocateNamedDataSlot : string -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.AllocateNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc4f0-354">Nazwa miejsca danych do przydzielenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-354">The name of the data slot to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-355">Przydziela miejsce danych o podanej nazwie, we wszystkich wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-355">Allocates a named data slot on all threads.</span>
          </span>
          <span data-ttu-id="cc4f0-356">Lepszą wydajność, należy użyć pola, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-356">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-357">Przydzielony o nazwie gniazda danych we wszystkich wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-357">The allocated named data slot on all threads.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-358">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-358">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-359">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-359">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-360">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-360">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-361">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-361">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-362">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-362">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-363">Wątek może przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania, po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-363">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="cc4f0-364">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-364">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-365">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-365">No other thread (not even a child thread) can get that data.</span></span>  
  
 <span data-ttu-id="cc4f0-366">Nie jest konieczne użycie <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metodę, aby przydzielić miejsce danych o podanej nazwie, ponieważ <xref:System.Threading.Thread.GetNamedDataSlot%2A> — metoda przydziela miejsce, jeśli nie została już przydzielona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-366">It is not necessary to use the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method to allocate a named data slot, because the <xref:System.Threading.Thread.GetNamedDataSlot%2A> method allocates the slot if it has not already been allocated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-367">Jeśli <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metoda jest używana, powinna zostać wywołana w wątku głównym, w momencie uruchamiania programu, ponieważ zgłasza wyjątek, jeśli w miejscu o określonej nazwie został już przydzielony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-367">If the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method is used, it should be called in the main thread at program startup, because it throws an exception if a slot with the specified name has already been allocated.</span></span> <span data-ttu-id="cc4f0-368">Nie istnieje żaden sposób, aby sprawdzić, czy miejsce została już przydzielona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-368">There is no way to test whether a slot has already been allocated.</span></span>  
  
 <span data-ttu-id="cc4f0-369">Gniazd przydzielonych przy użyciu tej metody musi być zwolniona przez <xref:System.Threading.Thread.FreeNamedDataSlot%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-369">Slots allocated with this method must be freed with <xref:System.Threading.Thread.FreeNamedDataSlot%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-370">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-370">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-371">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-371">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-372">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-372">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-373">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-373">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-374">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-374">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-375">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-375">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-376">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-376">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-377">Poniższy przykład pokazuje, jak używać miejsca danych o podanej nazwie do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-377">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-378">Przykładowy kod nie używać <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metody, ponieważ <xref:System.Threading.Thread.GetNamedDataSlot%2A> — metoda przydziela miejsce, jeśli nie została już przydzielona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-378">The example code does not use the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method, because the <xref:System.Threading.Thread.GetNamedDataSlot%2A> method allocates the slot if it has not already been allocated.</span></span> <span data-ttu-id="cc4f0-379">Jeśli <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metoda jest używana, powinien zostać wywołany w wątku głównym, w momencie uruchamiania programu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-379">If the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method is used, it should be called in the main thread at program startup.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-380">Gniazdo danych o podanej nazwie, o określonej nazwie już istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-380">A named data slot with the specified name already exists.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-381">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-381">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-382">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-382">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ApartmentState">
      <MemberSignature Language="C#" Value="public System.Threading.ApartmentState ApartmentState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ApartmentState ApartmentState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ApartmentState" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentState As ApartmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ApartmentState ApartmentState { System::Threading::ApartmentState get(); void set(System::Threading::ApartmentState value); };" />
      <MemberSignature Language="F#" Value="member this.ApartmentState : System.Threading.ApartmentState with get, set" Usage="System.Threading.Thread.ApartmentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Deprecated in favor of GetApartmentState, SetApartmentState and TrySetApartmentState.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("The ApartmentState property has been deprecated.  Use GetApartmentState, SetApartmentState or TrySetApartmentState instead.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ApartmentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-383">Pobiera lub ustawia stan apartamentu tego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-383">Gets or sets the apartment state of this thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-384">Jedną z <see cref="T:System.Threading.ApartmentState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-384">One of the <see cref="T:System.Threading.ApartmentState" /> values.</span>
          </span>
          <span data-ttu-id="cc4f0-385">Wartość początkowa to <see langword="Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-385">The initial value is <see langword="Unknown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-386">**<xref:System.Threading.Thread.ApartmentState%2A> Właściwość jest przestarzała.**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-386">**The <xref:System.Threading.Thread.ApartmentState%2A> property is obsolete.**</span></span>  <span data-ttu-id="cc4f0-387">Nieprzestarzała alternatywami są <xref:System.Threading.Thread.GetApartmentState%2A> metodę, aby pobrać stan apartamentu i <xref:System.Threading.Thread.SetApartmentState%2A> metodę, aby ustawić stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-387">The non-obsolete alternatives are the <xref:System.Threading.Thread.GetApartmentState%2A> method to retrieve the apartment state and the   <xref:System.Threading.Thread.SetApartmentState%2A> method to set the apartment state.</span></span>  
  
 <span data-ttu-id="cc4f0-388">W .NET Framework w wersji 1.0 i 1.1 `ApartmentState` właściwość oznacza wątku w celu wskazania, że wykona w apartamentu jednowątkowe lub wielowątkowych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-388">In the .NET Framework versions 1.0 and 1.1, the `ApartmentState` property marks a thread to indicate that it will execute in a single-threaded or multithreaded apartment.</span></span> <span data-ttu-id="cc4f0-389">Tę właściwość można ustawić, gdy wątek jest w `Unstarted` lub `Running` wątek stanie; jednak może zostać ustawiony tylko raz dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-389">This property can be set when the thread is in the `Unstarted` or `Running` thread state; however, it can be set only once for a thread.</span></span> <span data-ttu-id="cc4f0-390">Jeśli właściwość nie została ustawiona, zwraca `Unknown`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-390">If the property has not been set, it returns `Unknown`.</span></span>  
  
 <span data-ttu-id="cc4f0-391">Próba użycia <xref:System.Threading.Thread.ApartmentState%2A> właściwość można ustawić stan apartamentu wątku, w których stan apartamentu został już ustawiony jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-391">An attempt to use the <xref:System.Threading.Thread.ApartmentState%2A> property to set the apartment state of a thread whose apartment state has already been set is ignored.</span></span> <span data-ttu-id="cc4f0-392">Jednak <xref:System.Threading.Thread.SetApartmentState%2A> metoda zgłasza wyjątek <xref:System.InvalidOperationException> w tym przypadku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-392">However, the <xref:System.Threading.Thread.SetApartmentState%2A> method throws a <xref:System.InvalidOperationException> in this case.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-393">W .NET Framework w wersji 2.0, nowe wątki są inicjowane jako <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> jeśli ich stan apartamentu nie została ustawiona, zanim zostaną uruchomione.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-393">In the .NET Framework version 2.0, new threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="cc4f0-394">Głównego wątku aplikacji jest inicjowany do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-394">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="cc4f0-395">Nie można ustawić wątku głównego aplikacji na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> , ustawiając <xref:System.Threading.ApartmentState?displayProperty=nameWithType> właściwość w pierwszym wierszu kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-395">You can no longer set the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> by setting the <xref:System.Threading.ApartmentState?displayProperty=nameWithType> property on the first line of code.</span></span> <span data-ttu-id="cc4f0-396">Użyj <xref:System.STAThreadAttribute> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-396">Use the <xref:System.STAThreadAttribute> instead.</span></span>  
  
 <span data-ttu-id="cc4f0-397">W .NET Framework w wersji 2.0, można określić model wątkowości COM dla aplikacji C++ za pomocą [/CLRTHREADATTRIBUTE (Ustaw wątku atrybut CLR)](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) — opcja konsolidatora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-397">In the .NET Framework version 2.0, you can specify the COM threading model for a C++ application using the [/CLRTHREADATTRIBUTE (Set CLR Thread Attribute)](http://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) linker option.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-398">Poniższy przykład kodu pokazuje, jak można ustawić stan apartamentu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-398">The following code example demonstrates how to set the apartment state of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-399">Zostanie podjęta próba, aby ustawić tę właściwość do stanu, który nie jest to stan apartamentu nieprawidłowy (stan innych niż jednowątkowym apartamentem (<see langword="STA" />) lub wielowątkowe apartamentu (<see langword="MTA" />)).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-399">An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (<see langword="STA" />) or multithreaded apartment (<see langword="MTA" />)).</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.ThreadState" />
        <altmember cref="M:System.Threading.Thread.GetApartmentState" />
        <altmember cref="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
      </Docs>
    </Member>
    <Member MemberName="BeginCriticalRegion">
      <MemberSignature Language="C#" Value="public static void BeginCriticalRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginCriticalRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.BeginCriticalRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BeginCriticalRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BeginCriticalRegion();" />
      <MemberSignature Language="F#" Value="static member BeginCriticalRegion : unit -&gt; unit" Usage="System.Threading.Thread.BeginCriticalRegion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-400">Powiadamia hosta, że wykonanie zostanie regionu kodu, w którym przerwanie wątku lub nieobsługiwany wyjątek mogłyby zagrozić innych zadań w domenie aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-400">Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-401">Hosty środowisko uruchomieniowe języka wspólnego (CLR), takich jak Microsoft SQL Server 2005, można ustanowić różnych zasad pod kątem błędów krytyczne i niekrytyczne regiony kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-401">Hosts of the common language runtime (CLR), such as Microsoft SQL Server 2005, can establish different policies for failures in critical and non-critical regions of code.</span></span> <span data-ttu-id="cc4f0-402">Krytyczne region jest jeden w którym skutków przerwanie wątku lub nieobsługiwany wyjątek nie może być ograniczona do bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-402">A critical region is one in which the effects of a thread abort or an unhandled exception might not be limited to the current task.</span></span> <span data-ttu-id="cc4f0-403">Z drugiej strony przerwania lub niepowodzenia w regionie niekrytyczne kodu ma wpływ na zadania, w której występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-403">By contrast, an abort or failure in a non-critical region of code affects only the task in which the error occurs.</span></span>  
  
 <span data-ttu-id="cc4f0-404">Rozważmy na przykład zadanie, które próbuje przydzielić pamięci podczas utrzymywania blokady.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-404">For example, consider a task that attempts to allocate memory while holding a lock.</span></span> <span data-ttu-id="cc4f0-405">Jeśli alokacja pamięci nie powiedzie się, przerywanie bieżącego zadania nie jest wystarczająca, aby zapewnić trwałość <xref:System.AppDomain>, ponieważ w domenie, oczekujący na blokadę tego samego mogą być inne zadania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-405">If the memory allocation fails, aborting the current task is not sufficient to ensure stability of the <xref:System.AppDomain>, because there can be other tasks in the domain waiting for the same lock.</span></span> <span data-ttu-id="cc4f0-406">Jeśli bieżące zadanie jest zakończone, można zakleszczone innych zadań.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-406">If the current task is terminated, other tasks could be deadlocked.</span></span>  
  
 <span data-ttu-id="cc4f0-407">Gdy wystąpi awaria w regionie krytycznych, host może podjąć decyzję o zwolnić całej <xref:System.AppDomain> zamiast zaryzykować i kontynuowanie wykonywania w potencjalnie niestabilnym stanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-407">When a failure occurs in a critical region, the host might decide to unload the entire <xref:System.AppDomain> rather than take the risk of continuing execution in a potentially unstable state.</span></span> <span data-ttu-id="cc4f0-408">Aby informuje hosta, że Twój kod wchodzi krytyczne regionu, należy wywołać <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-408">To inform the host that your code is entering a critical region, call <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span></span> <span data-ttu-id="cc4f0-409">Wywołaj <xref:System.Threading.Thread.EndCriticalRegion%2A> gdy wykonywanie powraca do zastosowania niekrytyczne obszar kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-409">Call <xref:System.Threading.Thread.EndCriticalRegion%2A> when execution returns to a non-critical region of code.</span></span>  
  
 <span data-ttu-id="cc4f0-410">Za pomocą tej metody w kodzie, który jest uruchamiany w ramach programu SQL Server 2005 wymaga kodu do uruchomienia na najwyższy poziom ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-410">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-411">W poniższym przykładzie pokazano użycie <xref:System.Threading.Thread.BeginCriticalRegion%2A> i <xref:System.Threading.Thread.EndCriticalRegion%2A> metody dzielenia bloku kodu na krytyczne i niekrytyczne regionów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-411">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginCriticalRegion%2A> and <xref:System.Threading.Thread.EndCriticalRegion%2A> methods to divide a block of code into critical and non-critical regions.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.EndCriticalRegion" />
      </Docs>
    </Member>
    <Member MemberName="BeginThreadAffinity">
      <MemberSignature Language="C#" Value="public static void BeginThreadAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginThreadAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.BeginThreadAffinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BeginThreadAffinity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BeginThreadAffinity();" />
      <MemberSignature Language="F#" Value="static member BeginThreadAffinity : unit -&gt; unit" Usage="System.Threading.Thread.BeginThreadAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-412">Informuje, że ma wykonać instrukcje, które są zależne od tożsamość bieżącego wątku systemu operacyjnego fizycznego hosta, który kodu zarządzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-412">Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-413">Niektóre hosty środowisko uruchomieniowe języka wspólnego, takich jak Microsoft SQL Server 2005, podaj własne zarządzanie wątkami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-413">Some hosts of the common language runtime, such as Microsoft SQL Server 2005, provide their own thread management.</span></span> <span data-ttu-id="cc4f0-414">Hosta, który udostępnia swoje własne zarządzanie wątkami można przenieść wykonywanie zadań z jednego wątku systemu operacyjnego fizycznego w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-414">A host that provides its own thread management can move an executing task from one physical operating system thread to another at any time.</span></span> <span data-ttu-id="cc4f0-415">Większość zadań nie dotyczy to przełączanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-415">Most tasks are not affected by this switching.</span></span> <span data-ttu-id="cc4f0-416">Jednak niektóre zadania pozostają w koligacji wątku — oznacza to, że są one zależne od tożsamość wątku fizycznego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-416">However, some tasks have thread affinity - that is, they depend on the identity of a physical operating system thread.</span></span> <span data-ttu-id="cc4f0-417">Te zadania, musi powiadomić hosta podczas ich wykonywania kodu, który nie powinien być przełączane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-417">These tasks must inform the host when they execute code that should not be switched.</span></span>  
  
 <span data-ttu-id="cc4f0-418">Jeśli na przykład blokowanie wywołania aplikacji interfejsu API systemu można uzyskać systemu operacyjnego mającego koligacji wątku, takich jak Win32 CRITICAL_SECTION, należy wywołać <xref:System.Threading.Thread.BeginThreadAffinity%2A> przed uzyskiwania blokady, a <xref:System.Threading.Thread.EndThreadAffinity%2A> po zwolnienie blokady.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-418">For example, if your application calls a system API to acquire an operating system lock that has thread affinity, such as a Win32 CRITICAL_SECTION, you must call <xref:System.Threading.Thread.BeginThreadAffinity%2A> before acquiring the lock, and <xref:System.Threading.Thread.EndThreadAffinity%2A> after releasing the lock.</span></span>  
  
 <span data-ttu-id="cc4f0-419">Za pomocą tej metody w kodzie, który jest uruchamiany w ramach programu SQL Server 2005 wymaga kodu do uruchomienia na najwyższy poziom ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-419">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-420">W poniższym przykładzie pokazano użycie <xref:System.Threading.Thread.BeginThreadAffinity%2A> i <xref:System.Threading.Thread.EndThreadAffinity%2A> metody w celu powiadomienia hosta, który bloku kodu zależy od tożsamość wątku fizycznego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-420">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginThreadAffinity%2A> and <xref:System.Threading.Thread.EndThreadAffinity%2A> methods to notify a host that a block of code depends on the identity of a physical operating system thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-421">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-421">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-422">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-422">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-423">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-423">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Threading.Thread.EndThreadAffinity" />
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Contexts.Context CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Remoting.Contexts.Context CurrentContext" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentContext As Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::Contexts::Context ^ CurrentContext { System::Runtime::Remoting::Contexts::Context ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : System.Runtime.Remoting.Contexts.Context" Usage="System.Threading.Thread.CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Contexts.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-424">Pobiera bieżący kontekst, w którym wykonywany jest wątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-424">Gets the current context in which the thread is executing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-425">A <see cref="T:System.Runtime.Remoting.Contexts.Context" /> reprezentujący bieżący kontekst wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-425">A <see cref="T:System.Runtime.Remoting.Contexts.Context" /> representing the current thread context.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-426">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-426">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-427">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-427">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-428">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-428">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Threading.Thread.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-429">Pobiera lub ustawia kulturę bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-429">Gets or sets the culture for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-430">Obiekt, który reprezentuje kulturę bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-430">An object that represents the culture for the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-431"><xref:System.Globalization.CultureInfo> Obiektu, który jest zwracany przez tę właściwość, wraz z jego skojarzone obiekty określenia domyślnego formatu daty, godziny, numery, wartości waluty, sortowanie kolejność tekstu, wielkość liter konwencje i porównywania ciągów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-431">The <xref:System.Globalization.CultureInfo> object that is returned by this property, together with its associated objects, determine the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.</span></span> <span data-ttu-id="cc4f0-432">Zobacz <xref:System.Globalization.CultureInfo> klasy, aby dowiedzieć się więcej o nazwy i identyfikatory i różnice między niezmienne, neutralne i nacechowane kultury i informacji o kulturze sposób wpływa na wątki i domen aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-432">See the <xref:System.Globalization.CultureInfo> class to learn about culture names and identifiers, the differences between invariant, neutral, and specific cultures, and the way culture information affects threads and application domains.</span></span> <span data-ttu-id="cc4f0-433">Zobacz <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości, aby dowiedzieć się sposób ustalania kultury domyślnej dla wątku i jak użytkownicy ustawić informacje o ustawieniach kulturowych na swoich komputerach.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-433">See the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to learn how a thread's default culture is determined, and how users set culture information for their computers.</span></span>  
  
 <span data-ttu-id="cc4f0-434">Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], można ustawić <xref:System.Threading.Thread.CurrentCulture%2A> właściwości kultury neutralnej.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-434">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you can set the <xref:System.Threading.Thread.CurrentCulture%2A> property to a neutral culture.</span></span> <span data-ttu-id="cc4f0-435">Jest to spowodowane zachowanie <xref:System.Globalization.CultureInfo> klasy został zmieniony: gdy reprezentuje kultury neutralnej wartości właściwości (w szczególności <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, i <xref:System.Globalization.CultureInfo.TextInfo%2A> właściwości) teraz odzwierciedlają określoną kulturę, który jest skojarzony z wykorzystaniem kultury neutralnej.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-435">This is because the behavior of the <xref:System.Globalization.CultureInfo> class has changed: When it represents a neutral culture, its property values (in particular, the <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, and <xref:System.Globalization.CultureInfo.TextInfo%2A> properties) now reflect the specific culture that is associated with the neutral culture.</span></span> <span data-ttu-id="cc4f0-436">We wcześniejszych wersjach programu .NET Framework <xref:System.Threading.Thread.CurrentCulture%2A> zgłosił właściwość <xref:System.NotSupportedException> wyjątek, jeśli przypisano kultury neutralnej.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-436">In earlier versions of the .NET Framework, the <xref:System.Threading.Thread.CurrentCulture%2A> property threw a <xref:System.NotSupportedException> exception when a neutral culture was assigned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-437">Poniższy przykład kodu pokazuje wątkowości instrukcji, która umożliwia interfejsu użytkownika formularzy Windows w celu wyświetlenia w kulturze, który jest ustawiony w Panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-437">The following code example shows the threading statement that allows the user interface of a Windows Forms to display in the culture that is set in Control Panel.</span></span> <span data-ttu-id="cc4f0-438">Dodatkowy kod jest wymagany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-438">Additional code is needed.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Culture#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Culture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Culture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Culture/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-439">Właściwość jest ustawiona na <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-439">The property is set to <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-440">do ustawiania właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-440">for setting the property.</span>
          </span>
          <span data-ttu-id="cc4f0-441">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-441">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="System.Threading.Thread.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-442">Pobiera lub ustawia bieżący podmiot zabezpieczeń dla wątku (w przypadku opartej na rolach zabezpieczeń).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-442">Gets or sets the thread's current principal (for role-based security).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-443">
            <see cref="T:System.Security.Principal.IPrincipal" /> Reprezentującą kontekst zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-443">An <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc4f0-444">Poniższy przykład kodu pokazuje sposób ustawiania i pobierania jednostki wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-444">The following code example shows how to set and retrieve the principal of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-445">Obiekt wywołujący nie ma uprawnień, aby ustawić podmiot zabezpieczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-445">The caller does not have the permission required to set the principal.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-446">Aby manipulować głównym przedmiotem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-446">to manipulate the principal object.</span>
          </span>
          <span data-ttu-id="cc4f0-447">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-447">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentThread">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread CurrentThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Thread CurrentThread" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Thread ^ CurrentThread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThread : System.Threading.Thread" Usage="System.Threading.Thread.CurrentThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-448">Pobiera aktualnie uruchomionemu wątkowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-448">Gets the currently running thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-449">A <see cref="T:System.Threading.Thread" /> oznacza to reprezentacja aktualnie uruchomionemu wątkowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-449">A <see cref="T:System.Threading.Thread" /> that is the representation of the currently running thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc4f0-450">Poniższy przykład tworzy zadanie, które z kolei tworzy 20 zadań podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-450">The following example creates a task that in turn creates 20 child tasks.</span></span> <span data-ttu-id="cc4f0-451">Aplikacja, jak również każdego zadania wywołuje `ShowThreadInformation` metodę, która używa <xref:System.Threading.Thread.CurrentThread%2A> właściwość do wyświetlenia informacji na temat wątku, na którym jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-451">The application itself, as well as each task, calls the `ShowThreadInformation` method, which uses the <xref:System.Threading.Thread.CurrentThread%2A> property  to display information about the thread on which it is running.</span></span>  
  
 [!code-csharp[System.Threading.Thread.CurrentThread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.currentthread/cs/currentthread2.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentThread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.currentthread/vb/currentthread2.vb#1)]  
  
 <span data-ttu-id="cc4f0-452">Każde zadanie podrzędne generuje 1 milion losowych liczb od 1 do 1 mln i zwraca ich wartości średniej.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-452">Each child task generates 1 million random numbers between 1 and 1 million and returns their mean.</span></span> <span data-ttu-id="cc4f0-453">Wywołuje zadanie nadrzędne <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metodę, aby upewnić się, że zadania podrzędne zostały ukończone przed wyświetleniem średniej zwracany przez każde zadanie podrzędne i obliczania średniej oznacza, że.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-453">The parent task calls the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method to ensure that the child tasks have completed before displaying the mean returned by each task and calculating the mean of means.</span></span>  
  
 <span data-ttu-id="cc4f0-454">Należy pamiętać, że gdy aplikacja zostanie uruchomiona w wątku na pierwszym planie, każde zadanie podrzędne uruchamia się na wątku z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-454">Note that while the application runs on a foreground thread, each task runs on a thread pool thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Threading.Thread.CurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-455">Pobiera lub ustawia bieżącą kulturę używaną przez Menedżera zasobów do wyszukiwania w czasie wykonywania zasoby specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-455">Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-456">Obiekt, który reprezentuje bieżącą kulturę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-456">An object that represents the current culture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-457">Kultura interfejsu użytkownika określa zasoby, aplikacja musi obsługiwać dane wejściowe użytkownika i danych wyjściowych i domyślnie jest taka sama jak kultury systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-457">The UI culture specifies the resources an application needs to support user input and output, and by default is the same as the operating system culture.</span></span> <span data-ttu-id="cc4f0-458">Zobacz <xref:System.Globalization.CultureInfo> klasy, aby dowiedzieć się więcej o nazwy i identyfikatory i różnice między niezmienne, neutralne i nacechowane kultury i informacji o kulturze sposób wpływa na wątki i domen aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-458">See the <xref:System.Globalization.CultureInfo> class to learn about culture names and identifiers, the differences between invariant, neutral, and specific cultures, and the way culture information affects threads and application domains.</span></span> <span data-ttu-id="cc4f0-459">Zobacz <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> właściwości, aby dowiedzieć się, jak kultura interfejsu użytkownika domyślnego dla wątku jest określana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-459">See the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property to learn how a thread's default UI culture is determined.</span></span>  
  
 <span data-ttu-id="cc4f0-460"><xref:System.Globalization.CultureInfo> Zwracane przez tę właściwość można kultury neutralnej.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-460">The <xref:System.Globalization.CultureInfo> returned by this property can be a neutral culture.</span></span> <span data-ttu-id="cc4f0-461">Nie należy używać kultury neutralnej za pomocą metod formatowania, takich jak <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, i <xref:System.Convert.ToString%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-461">Neutral cultures should not be used with formatting methods such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, and <xref:System.Convert.ToString%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-462">Użyj <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> metodę, aby pobrać określoną kulturę, lub użyj <xref:System.Threading.Thread.CurrentCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-462">Use the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method to get a specific culture, or use the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-463"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> Metoda zgłasza wyjątek <xref:System.ArgumentException> dla kultury neutralnej "zh-Hant" ("zh-CHT") i "zh-Hans" ("zh-CHS").</span><span class="sxs-lookup"><span data-stu-id="cc4f0-463">The <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method throws <xref:System.ArgumentException> for the neutral cultures "zh-Hant" ("zh-CHT") and "zh-Hans" ("zh-CHS").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-464">Poniższy przykład określa, czy język bieżący wątek kultury interfejsu użytkownika jest francuski.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-464">The following example determines whether the language of the current thread's UI culture is French.</span></span> <span data-ttu-id="cc4f0-465">Jeśli nie jest, ustawia kulturę bieżącego wątku interfejsu użytkownika do języka angielskiego (Stany Zjednoczone).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-465">If it is not, it sets the UI culture of the current thread to English (United States).</span></span>  
  
 [!code-csharp[System.Threading.Thread.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread.CurrentUICulture/cs/CurrentUICulture1.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread.CurrentUICulture/vb/CurrentUICulture1.vb#1)]  
  
 <span data-ttu-id="cc4f0-466">Poniższy przykład kodu pokazuje wątkowości instrukcji, która umożliwia interfejsu użytkownika formularzy Windows w celu wyświetlenia w kulturze, który jest ustawiony w Panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-466">The following code example shows the threading statement that allows the user interface of a Windows Forms to display in the culture that is set in Control Panel.</span></span> <span data-ttu-id="cc4f0-467">Dodatkowy kod jest wymagany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-467">Additional code is needed.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Culture#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Culture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Culture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Culture/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cc4f0-468">Właściwość jest ustawiona na <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-468">The property is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-469">Nazwa kultury, która nie może być używana do lokalizowania plików zasobów jest właściwością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-469">The property is set to a culture name that cannot be used to locate a resource file.</span>
          </span>
          <span data-ttu-id="cc4f0-470">W nazwach plików zasobów mogą zawierać wyłącznie litery, cyfry, łączniki i podkreślenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-470">Resource filenames must include only letters, numbers, hyphens or underscores.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DisableComObjectEagerCleanup">
      <MemberSignature Language="C#" Value="public void DisableComObjectEagerCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableComObjectEagerCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.DisableComObjectEagerCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableComObjectEagerCleanup ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableComObjectEagerCleanup();" />
      <MemberSignature Language="F#" Value="member this.DisableComObjectEagerCleanup : unit -&gt; unit" Usage="thread.DisableComObjectEagerCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-471">Powoduje wyłączenie automatycznego czyszczenia wywoływanych otok środowiska uruchomieniowego (RCW) dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-471">Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-472">Domyślnie środowisko uruchomieniowe języka wspólnego (CLR), które utraciły wywoływanych otok środowiska uruchomieniowego automatycznie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-472">By default, the common language runtime (CLR) cleans up runtime callable wrappers automatically.</span></span> <span data-ttu-id="cc4f0-473">Komunikaty pomp CLR podczas oczyszczania, co może prowadzić do problemów współużytkowania wątkowości kilka aplikacji, które spełniają następujące kryteria nietypowe:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-473">The CLR pumps messages during the cleanup, which might cause reentrancy problems for a few applications that meet the following unusual criteria:</span></span>  
  
-   <span data-ttu-id="cc4f0-474">Aplikacja wykonuje swoje własne przekazywanie komunikatów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-474">The application does its own message pumping.</span></span>  
  
-   <span data-ttu-id="cc4f0-475">Aplikacja musi kontrolować dokładnie sytuacji przekazywanie komunikatów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-475">The application needs to control precisely when message pumping occurs.</span></span>  
  
 <span data-ttu-id="cc4f0-476">Takie aplikacje mogą używać <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A> metodę, aby uniemożliwić wykonywanie automatyczne odzyskiwanie plików wykonywalnych wywoływanych otok przez środowisko CLR.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-476">Such applications can use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A> method to prevent the CLR from doing automatic reclamation of runtime callable wrappers.</span></span>  
  
 <span data-ttu-id="cc4f0-477">Gdy ta metoda została wywołana w wątku, automatycznego oczyszczania nie może być ponownie włączone dla tego wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-477">When this method has been called on a thread, automatic cleanup cannot be re-enabled for that thread.</span></span> <span data-ttu-id="cc4f0-478">Jeśli aplikacja jest gotowa do oczyszczenia wywoływanych otok środowiska uruchomieniowego, użyj <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A?displayProperty=nameWithType> metodę, aby nakazać środowiska uruchomieniowego, aby wyczyścić wszystkie wywoływanych otok środowiska uruchomieniowego w bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-478">When your application is ready to clean up runtime callable wrappers, use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A?displayProperty=nameWithType> method to instruct the runtime to clean up all runtime callable wrappers in the current context.</span></span> <span data-ttu-id="cc4f0-479">Przekazywanie komunikatów występuje, gdy metoda jest wykonywana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-479">Message pumping occurs while the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-480">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-480">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-481">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-481">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndCriticalRegion">
      <MemberSignature Language="C#" Value="public static void EndCriticalRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCriticalRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.EndCriticalRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCriticalRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCriticalRegion();" />
      <MemberSignature Language="F#" Value="static member EndCriticalRegion : unit -&gt; unit" Usage="System.Threading.Thread.EndCriticalRegion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-482">Powiadamia hosta, że wykonanie zostanie regionu kodu, w którym są ograniczone do bieżącego zadania przerwanie wątku lub nieobsługiwany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-482">Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-483">Hosty środowisko uruchomieniowe języka wspólnego (CLR), takich jak Microsoft SQL Server 2005, można ustanowić różnych zasad pod kątem błędów krytyczne i niekrytyczne regiony kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-483">Hosts of the common language runtime (CLR), such as Microsoft SQL Server 2005, can establish different policies for failures in critical and non-critical regions of code.</span></span> <span data-ttu-id="cc4f0-484">Krytyczne region jest jeden w którym skutków przerwanie wątku lub nieobsługiwany wyjątek nie może być ograniczona do bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-484">A critical region is one in which the effects of a thread abort or an unhandled exception might not be limited to the current task.</span></span> <span data-ttu-id="cc4f0-485">Z drugiej strony przerwania lub niepowodzenia w regionie niekrytyczne kodu ma wpływ na zadania, w której występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-485">By contrast, an abort or failure in a non-critical region of code affects only the task in which the error occurs.</span></span>  
  
 <span data-ttu-id="cc4f0-486">Rozważmy na przykład zadanie, które próbuje przydzielić pamięci podczas utrzymywania blokady.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-486">For example, consider a task that attempts to allocate memory while holding a lock.</span></span> <span data-ttu-id="cc4f0-487">Jeśli alokacja pamięci nie powiedzie się, przerywanie bieżącego zadania nie jest wystarczająca, aby zapewnić trwałość <xref:System.AppDomain>, ponieważ w domenie, oczekujący na blokadę tego samego mogą być inne zadania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-487">If the memory allocation fails, aborting the current task is not sufficient to ensure stability of the <xref:System.AppDomain>, because there can be other tasks in the domain waiting for the same lock.</span></span> <span data-ttu-id="cc4f0-488">Jeśli bieżące zadanie jest zakończone, można zakleszczone innych zadań.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-488">If the current task is terminated, other tasks could be deadlocked.</span></span>  
  
 <span data-ttu-id="cc4f0-489">Gdy wystąpi awaria w regionie krytycznych, host może podjąć decyzję o zwolnić całej <xref:System.AppDomain> zamiast zaryzykować i kontynuowanie wykonywania w potencjalnie niestabilnym stanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-489">When a failure occurs in a critical region, the host might decide to unload the entire <xref:System.AppDomain> rather than take the risk of continuing execution in a potentially unstable state.</span></span> <span data-ttu-id="cc4f0-490">Aby informuje hosta, że Twój kod wchodzi krytyczne regionu, należy wywołać <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-490">To inform the host that your code is entering a critical region, call <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span></span> <span data-ttu-id="cc4f0-491">Wywołaj <xref:System.Threading.Thread.EndCriticalRegion%2A> gdy wykonywanie powraca do zastosowania niekrytyczne obszar kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-491">Call <xref:System.Threading.Thread.EndCriticalRegion%2A> when execution returns to a non-critical region of code.</span></span>  
  
 <span data-ttu-id="cc4f0-492">Za pomocą tej metody w kodzie, który jest uruchamiany w ramach programu SQL Server 2005 wymaga kodu do uruchomienia na najwyższy poziom ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-492">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-493">W poniższym przykładzie pokazano użycie <xref:System.Threading.Thread.BeginCriticalRegion%2A> i <xref:System.Threading.Thread.EndCriticalRegion%2A> metody dzielenia bloku kodu na krytyczne i niekrytyczne regionów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-493">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginCriticalRegion%2A> and <xref:System.Threading.Thread.EndCriticalRegion%2A> methods to divide a block of code into critical and non-critical regions.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.BeginCriticalRegion" />
      </Docs>
    </Member>
    <Member MemberName="EndThreadAffinity">
      <MemberSignature Language="C#" Value="public static void EndThreadAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndThreadAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.EndThreadAffinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndThreadAffinity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndThreadAffinity();" />
      <MemberSignature Language="F#" Value="static member EndThreadAffinity : unit -&gt; unit" Usage="System.Threading.Thread.EndThreadAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-494">Powiadamia hosta, który zarządzanego kodu zostało zakończone, wykonywania instrukcji, które są zależne od tożsamość bieżącego wątku fizycznego systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-494">Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-495">Niektóre hosty środowisko uruchomieniowe języka wspólnego, takich jak Microsoft SQL Server 2005, podaj własne zarządzanie wątkami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-495">Some hosts of the common language runtime, such as Microsoft SQL Server 2005, provide their own thread management.</span></span> <span data-ttu-id="cc4f0-496">Hosta, który udostępnia swoje własne zarządzanie wątkami można przenieść wykonywanie zadań z jednego wątku systemu operacyjnego fizycznego w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-496">A host that provides its own thread management can move an executing task from one physical operating system thread to another at any time.</span></span> <span data-ttu-id="cc4f0-497">Większość zadań nie dotyczy to przełączanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-497">Most tasks are not affected by this switching.</span></span> <span data-ttu-id="cc4f0-498">Jednak niektóre zadania pozostają w koligacji wątku — oznacza to, że są one zależne od tożsamość wątku fizycznego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-498">However, some tasks have thread affinity - that is, they depend on the identity of a physical operating system thread.</span></span> <span data-ttu-id="cc4f0-499">Te zadania, musi powiadomić hosta podczas ich wykonywania kodu, który nie powinien być przełączane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-499">These tasks must inform the host when they execute code that should not be switched.</span></span>  
  
 <span data-ttu-id="cc4f0-500">Jeśli na przykład blokowanie wywołania aplikacji interfejsu API systemu można uzyskać systemu operacyjnego mającego koligacji wątku, takich jak Win32 CRITICAL_SECTION, należy wywołać <xref:System.Threading.Thread.BeginThreadAffinity%2A> przed uzyskiwania blokady, a <xref:System.Threading.Thread.EndThreadAffinity%2A> po zwolnienie blokady.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-500">For example, if your application calls a system API to acquire an operating system lock that has thread affinity, such as a Win32 CRITICAL_SECTION, you must call <xref:System.Threading.Thread.BeginThreadAffinity%2A> before acquiring the lock, and <xref:System.Threading.Thread.EndThreadAffinity%2A> after releasing the lock.</span></span>  
  
 <span data-ttu-id="cc4f0-501">Za pomocą tej metody w kodzie, który jest uruchamiany w ramach programu SQL Server 2005 wymaga kodu do uruchomienia na najwyższy poziom ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-501">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-502">W poniższym przykładzie pokazano użycie <xref:System.Threading.Thread.BeginThreadAffinity%2A> i <xref:System.Threading.Thread.EndThreadAffinity%2A> metody w celu powiadomienia hosta, który bloku kodu zależy od tożsamość wątku fizycznego systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-502">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginThreadAffinity%2A> and <xref:System.Threading.Thread.EndThreadAffinity%2A> methods to notify a host that a block of code depends on the identity of a physical operating system thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-503">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-503">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-504">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-504">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-505">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-505">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Threading.Thread.BeginThreadAffinity" />
      </Docs>
    </Member>
    <Member MemberName="ExecutionContext">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext ExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ExecutionContext ExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionContext As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ExecutionContext ^ ExecutionContext { System::Threading::ExecutionContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionContext : System.Threading.ExecutionContext" Usage="System.Threading.Thread.ExecutionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-506">Pobiera <see cref="T:System.Threading.ExecutionContext" /> obiekt, który zawiera informacje na temat różnych kontekstach bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-506">Gets an <see cref="T:System.Threading.ExecutionContext" /> object that contains information about the various contexts of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-507">
            <see cref="T:System.Threading.ExecutionContext" /> Obiekt, który konsoliduje informacje o kontekście dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-507">An <see cref="T:System.Threading.ExecutionContext" /> object that consolidates context information for the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-508"><xref:System.Threading.ExecutionContext> Klasa udostępnia jeden kontener dla wszystkich informacji dotyczących logiczne wątek wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-508">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="cc4f0-509">Obejmuje to kontekst zabezpieczeń, kontekst wywołania, kontekst synchronizacji, lokalizacja kontekstu i kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-509">This includes security context, call context, synchronization context, localization context, and transaction context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Thread ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Thread ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="thread.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-510">Zapewnia, że zasoby są zwalniane, a inne operacje oczyszczania są wykonywane, gdy moduł odśmiecania pamięci odzyskuje <see cref="T:System.Threading.Thread" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-510">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Threading.Thread" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-511">Moduł odśmiecania pamięci wywołuje <xref:System.Threading.Thread.Finalize%2A> kiedy bieżący obiekt jest gotowy do można sfinalizować.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-511">The garbage collector calls <xref:System.Threading.Thread.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNamedDataSlot">
      <MemberSignature Language="C#" Value="public static void FreeNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.FreeNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeNamedDataSlot (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member FreeNamedDataSlot : string -&gt; unit" Usage="System.Threading.Thread.FreeNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc4f0-512">Nazwa miejsca danych ma zostać zwolniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-512">The name of the data slot to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-513">Eliminuje skojarzenie między nazwę i miejsce, aby uzyskać wszystkie wątki w procesie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-513">Eliminates the association between a name and a slot, for all threads in the process.</span>
          </span>
          <span data-ttu-id="cc4f0-514">Lepszą wydajność, należy użyć pola, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-514">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-515">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-515">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-516">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-516">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-517">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-517">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-518">Po dowolny wątek jest wywołany `FreeNamedDataSlot`, wątek, który wywołuje <xref:System.Threading.Thread.GetNamedDataSlot%2A> o takiej samej nazwie spowoduje przydzielenie nowe gniazdo skojarzone z nazwą.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-518">After any thread calls `FreeNamedDataSlot`, any other thread that calls <xref:System.Threading.Thread.GetNamedDataSlot%2A> with the same name will allocate a new slot associated with the name.</span></span> <span data-ttu-id="cc4f0-519">Kolejne wywołania `GetNamedDataSlot` w żadnym z wątków zwróci nowe miejsce.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-519">Subsequent calls to `GetNamedDataSlot` by any thread will return the new slot.</span></span> <span data-ttu-id="cc4f0-520">Jednak żadnym z wątków, środki, nieopłacone <xref:System.LocalDataStoreSlot?displayProperty=nameWithType> zwrócony przez podczas wcześniejszego wywołania `GetNamedDataSlot` nadal używać starego miejsca.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-520">However, any thread that still has a <xref:System.LocalDataStoreSlot?displayProperty=nameWithType> returned by an earlier call to `GetNamedDataSlot` can continue to use the old slot.</span></span>  
  
 <span data-ttu-id="cc4f0-521">Miejsca, które zostało skojarzone z nazwą jest zwalniany tylko wtedy, gdy każdy `LocalDataStoreSlot` uzyskany przed wywołaniem do `FreeNamedDataSlot` został zwolniony i zebranych elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-521">A slot that has been associated with a name is released only when every `LocalDataStoreSlot` that was obtained prior to the call to `FreeNamedDataSlot` has been released and garbage-collected.</span></span>  
  
 <span data-ttu-id="cc4f0-522">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-522">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-523">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-523">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-524">Wątek może przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania, po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-524">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="cc4f0-525">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-525">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-526">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-526">No other thread (not even a child thread) can get that data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-527">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-527">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-528">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-528">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-529">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-529">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-530">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-530">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-531">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-531">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-532">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-532">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-533">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-533">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-534">Poniższy przykład pokazuje, jak używać miejsca danych o podanej nazwie do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-534">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-535">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-535">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-536">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-536">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetApartmentState">
      <MemberSignature Language="C#" Value="public System.Threading.ApartmentState GetApartmentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.ApartmentState GetApartmentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetApartmentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApartmentState () As ApartmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ApartmentState GetApartmentState();" />
      <MemberSignature Language="F#" Value="member this.GetApartmentState : unit -&gt; System.Threading.ApartmentState" Usage="thread.GetApartmentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ApartmentState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-537">Zwraca <see cref="T:System.Threading.ApartmentState" /> wartość wskazującą stan apartamentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-537">Returns an <see cref="T:System.Threading.ApartmentState" /> value indicating the apartment state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-538">Jedną z <see cref="T:System.Threading.ApartmentState" /> wartości, wskazującą stan apartamentu wątków zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-538">One of the <see cref="T:System.Threading.ApartmentState" /> values indicating the apartment state of the managed thread.</span>
          </span>
          <span data-ttu-id="cc4f0-539">Wartość domyślna to <see cref="F:System.Threading.ApartmentState.Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-539">The default is <see cref="F:System.Threading.ApartmentState.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-540">Tej metody wraz z <xref:System.Threading.Thread.SetApartmentState%2A> metody i <xref:System.Threading.Thread.TrySetApartmentState%2A> zastępuje metodę <xref:System.Threading.Thread.ApartmentState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-540">This method, along with the <xref:System.Threading.Thread.SetApartmentState%2A> method and the <xref:System.Threading.Thread.TrySetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-541">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-541">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="cc4f0-542">Przykład kodu tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-542">The code example creates a thread.</span></span> <span data-ttu-id="cc4f0-543">Przed rozpoczęciem wątku <xref:System.Threading.Thread.GetApartmentState%2A> Wyświetla początkowej <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> stanu i <xref:System.Threading.Thread.SetApartmentState%2A> zmienia stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-543">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-544"><xref:System.Threading.Thread.TrySetApartmentState%2A> Następnie metoda zwraca `false` podczas próby zmiany stanu do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> ponieważ stan apartamentu została już ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-544">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="cc4f0-545">Jeśli w tej samej operacji miał zostanie podjęta określona za pomocą <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> będzie zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-545">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="cc4f0-546">Po rozpoczęciu wątku <xref:System.Threading.Thread.TrySetApartmentState%2A> metoda jest używana ponownie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-546">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="cc4f0-547">Tym razem zgłasza <xref:System.Threading.ThreadStateException> ponieważ wątek jest już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-547">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompressedStack">
      <MemberSignature Language="C#" Value="public System.Threading.CompressedStack GetCompressedStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.CompressedStack GetCompressedStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetCompressedStack" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompressedStack () As CompressedStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CompressedStack ^ GetCompressedStack();" />
      <MemberSignature Language="F#" Value="member this.GetCompressedStack : unit -&gt; System.Threading.CompressedStack" Usage="thread.GetCompressedStack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Thread.GetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.CompressedStack</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-548">Zwraca <see cref="T:System.Threading.CompressedStack" /> obiektu, który może służyć do przechwytywania stosu dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-548">Returns a <see cref="T:System.Threading.CompressedStack" /> object that can be used to capture the stack for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-549">Brak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-549">None.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-550">Ta metoda nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-550">This method is no longer supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc4f0-551">We wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-551">In all cases.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-552">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-552">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-553">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-553">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProcessorId">
      <MemberSignature Language="C#" Value="public static int GetCurrentProcessorId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCurrentProcessorId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetCurrentProcessorId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentProcessorId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetCurrentProcessorId();" />
      <MemberSignature Language="F#" Value="static member GetCurrentProcessorId : unit -&gt; int" Usage="System.Threading.Thread.GetCurrentProcessorId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (LocalDataStoreSlot slot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(class System.LocalDataStoreSlot slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (slot As LocalDataStoreSlot) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(LocalDataStoreSlot ^ slot);" />
      <MemberSignature Language="F#" Value="static member GetData : LocalDataStoreSlot -&gt; obj" Usage="System.Threading.Thread.GetData slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
      </Parameters>
      <Docs>
        <param name="slot">
          <span data-ttu-id="cc4f0-554">
            <see cref="T:System.LocalDataStoreSlot" /> z którego można pobrać wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-554">The <see cref="T:System.LocalDataStoreSlot" /> from which to get the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-555">Pobiera wartość z określonego miejsca w bieżącym wątku, w bieżącej domenie bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-555">Retrieves the value from the specified slot on the current thread, within the current thread's current domain.</span>
          </span>
          <span data-ttu-id="cc4f0-556">Lepszą wydajność, należy użyć pola, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-556">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-557">Pobrana wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-557">The retrieved value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-558">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-558">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-559">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-559">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-560">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-560">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-561">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-561">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-562">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-562">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-563">Wątek może przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania, po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-563">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="cc4f0-564">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-564">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-565">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-565">No other thread (not even a child thread) can get that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-566"><xref:System.Threading.Thread.GetData%2A> jest `Shared` metodę, która zawsze ma zastosowanie do aktualnie wykonywany wątek, nawet jeśli wywołasz ją za pomocą zmiennej, która odwołuje się do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-566"><xref:System.Threading.Thread.GetData%2A> is a `Shared` method that always applies to the currently executing thread, even if you call it using a variable that refers to another thread.</span></span> <span data-ttu-id="cc4f0-567">Aby uniknąć nieporozumień, użyj nazwy klasy podczas wywoływania `Shared` metody: `Dim test As Object = Thread.GetData(testSlot)`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-567">To avoid confusion, use the class name when calling `Shared` methods: `Dim test As Object = Thread.GetData(testSlot)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-568">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-568">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-569">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-569">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-570">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-570">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-571">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-571">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-572">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-572">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-573">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-573">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-574">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-574">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-575">Poniższy przykład pokazuje, jak używać gniazda danych do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-575">The following example demonstrates how to use a data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-576">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-576">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-577">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-577">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static AppDomain GetDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain GetDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomain () As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ GetDomain();" />
      <MemberSignature Language="F#" Value="static member GetDomain : unit -&gt; AppDomain" Usage="System.Threading.Thread.GetDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-578">Zwraca bieżąca domena, w której bieżący wątek jest uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-578">Returns the current domain in which the current thread is running.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-579">
            <see cref="T:System.AppDomain" /> Reprezentujący bieżącej domeny aplikacji uruchomionemu wątkowi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-579">An <see cref="T:System.AppDomain" /> representing the current application domain of the running thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc4f0-580">Poniższy przykład kodu pokazuje, jak pobrać nazwy i Identyfikatora `AppDomain` , w którym jest uruchomiona w wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-580">The following code example shows how to retrieve the name and ID of the `AppDomain` in which the thread is running.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Domain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Domain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Domain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Domain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainID">
      <MemberSignature Language="C#" Value="public static int GetDomainID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDomainID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetDomainID" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomainID () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDomainID();" />
      <MemberSignature Language="F#" Value="static member GetDomainID : unit -&gt; int" Usage="System.Threading.Thread.GetDomainID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-581">Zwraca unikatowy identyfikator domeny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-581">Returns a unique application domain identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-582">32-bitowych całkowita unikatowo identyfikujący domeny aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-582">A 32-bit signed integer uniquely identifying the application domain.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc4f0-583">Poniższy przykład kodu pokazuje, jak pobrać nazwy i Identyfikatora `AppDomain` , w którym jest uruchomiona w wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-583">The following code example shows how to retrieve the name and ID of the `AppDomain` in which the thread is running.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Domain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Domain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Domain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Domain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="thread.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-584">Zwraca wartość skrótu dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-584">Returns a hash code for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-585">Wartość całkowita kod skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-585">An integer hash code value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-586">Wartość skrótu nie musi być unikatowa.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-586">The hash code is not guaranteed to be unique.</span></span> <span data-ttu-id="cc4f0-587">Użyj <xref:System.Threading.Thread.ManagedThreadId%2A> właściwość, jeśli potrzebujesz Unikatowy identyfikator dla wątków zarządzanych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-587">Use the <xref:System.Threading.Thread.ManagedThreadId%2A> property if you need a unique identifier for a managed thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot GetNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot GetNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedDataSlot (name As String) As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ GetNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedDataSlot : string -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.GetNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cc4f0-588">Nazwa miejsca danych lokalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-588">The name of the local data slot.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-589">Wyszukuje gniazdo danych o podanej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-589">Looks up a named data slot.</span>
          </span>
          <span data-ttu-id="cc4f0-590">Lepszą wydajność, należy użyć pola, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-590">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-591">A <see cref="T:System.LocalDataStoreSlot" /> przydzielone dla tego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-591">A <see cref="T:System.LocalDataStoreSlot" /> allocated for this thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-592">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-592">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-593">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-593">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-594">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-594">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-595">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-595">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-596">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-596">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-597">Wątek może przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania, po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-597">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="cc4f0-598">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-598">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-599">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-599">No other thread (not even a child thread) can get that data.</span></span>  
  
 <span data-ttu-id="cc4f0-600">Jeśli miejsce o nazwie nie istnieje, jest przydzielany nowe miejsce.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-600">If the named slot does not exist, a new slot is allocated.</span></span> <span data-ttu-id="cc4f0-601">Gniazda danych o nazwie były publiczne i mogą być zmieniane przez dowolną osobę.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-601">Named data slots are public and can be manipulated by anyone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-602">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-602">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-603">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-603">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-604">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-604">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-605">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-605">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-606">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-606">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-607">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-607">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-608">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-608">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-609">Poniższy przykład pokazuje, jak używać miejsca danych o podanej nazwie do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-609">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-610">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-610">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-611">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-611">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Interrupt();" />
      <MemberSignature Language="F#" Value="member this.Interrupt : unit -&gt; unit" Usage="thread.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-612">Przerywa działanie wątku, który znajduje się w <see langword="WaitSleepJoin" /> stan wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-612">Interrupts a thread that is in the <see langword="WaitSleepJoin" /> thread state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-613">Jeśli ten wątek nie jest obecnie zablokowany w oczekiwania, uśpiony lub stanu dołączania do, zostanie przerwane, gdy następnie rozpoczyna się do blokowania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-613">If this thread is not currently blocked in a wait, sleep, or join state, it will be interrupted when it next begins to block.</span></span>  
  
 <span data-ttu-id="cc4f0-614"><xref:System.Threading.ThreadInterruptedException> jest zgłaszany w przerwanego wątku, ale nie do bloków wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-614"><xref:System.Threading.ThreadInterruptedException> is thrown in the interrupted thread, but not until the thread blocks.</span></span> <span data-ttu-id="cc4f0-615">Jeśli wątek nigdy nie blokuje, nigdy nie jest zgłaszany wyjątek, i dlatego wątek może wykonać bez kiedykolwiek przerwane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-615">If the thread never blocks, the exception is never thrown, and thus the thread might complete without ever being interrupted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-616">Poniższy przykład kodu pokazuje zachowanie uruchomionego wątku, gdy zostało przerwane, a następnie zostanie zablokowane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-616">The following code example shows the behavior of a running thread when it is interrupted and subsequently gets blocked.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Interrupt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Interrupt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Interrupt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-617">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-617">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-618">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-618">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-619">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-619">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.ThreadState" />
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md">
          <span data-ttu-id="cc4f0-620">Wstrzymywanie i przerywanie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-620">Pausing and interrupting threads</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-621">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-621">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="System.Threading.Thread.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-622">Pobiera wartość wskazującą stan wykonania bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-622">Gets a value indicating the execution status of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-623">
            <see langword="true" /> Jeśli ten wątek został uruchomiony, a nie zostało zakończone normalnie lub zostało przerwane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-623">
              <see langword="true" /> if this thread has been started and has not terminated normally or aborted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackground">
      <MemberSignature Language="C#" Value="public bool IsBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackground" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBackground As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBackground { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBackground : bool with get, set" Usage="System.Threading.Thread.IsBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-624">Pobiera lub ustawia wartość wskazującą, czy wątek jest wątku w tle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-624">Gets or sets a value indicating whether or not a thread is a background thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-625">
            <see langword="true" /> Jeśli tego wątku lub wątku w tle; staje się w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-625">
              <see langword="true" /> if this thread is or is to become a background thread; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-626">Wątek jest wątku w tle lub wątku na pierwszym planie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-626">A thread is either a background thread or a foreground thread.</span></span> <span data-ttu-id="cc4f0-627">Wątków w tle są identyczne z wątki pierwszoplanowe, z tą różnicą, że wątków w tle uniemożliwia zakończenie procesu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-627">Background threads are identical to foreground threads, except that background threads do not prevent a process from terminating.</span></span> <span data-ttu-id="cc4f0-628">Gdy wszystkie wątki pierwszoplanowe należących do procesu zostały zakończone, środowisko uruchomieniowe języka wspólnego kończy proces.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-628">Once all foreground threads belonging to a process have terminated, the common language runtime ends the process.</span></span> <span data-ttu-id="cc4f0-629">Wszystkie pozostałe wątków w tle zostaną zatrzymane, a nie zakończą się.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-629">Any remaining background threads are stopped and do not complete.</span></span>  
  
 <span data-ttu-id="cc4f0-630">Domyślnie następujące wątki są wykonywane na pierwszym planie (oznacza to, że ich <xref:System.Threading.Thread.IsBackground%2A> właściwość zwraca `false`):</span><span class="sxs-lookup"><span data-stu-id="cc4f0-630">By default, the following threads execute in the foreground (that is, their <xref:System.Threading.Thread.IsBackground%2A> property returns `false`):</span></span>  
  
-   <span data-ttu-id="cc4f0-631">Wątek główny (lub wątku głównego aplikacji).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-631">The primary thread (or main application thread).</span></span>  
  
-   <span data-ttu-id="cc4f0-632">Wszystkie wątki, utworzonych przez wywoływanie <xref:System.Threading.Thread> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-632">All threads created by calling a <xref:System.Threading.Thread> class constructor.</span></span>  
  
 <span data-ttu-id="cc4f0-633">Domyślnie następujące wątki są wykonywane w tle (oznacza to, że ich <xref:System.Threading.Thread.IsBackground%2A> właściwość zwraca `true`):</span><span class="sxs-lookup"><span data-stu-id="cc4f0-633">By default, the following threads execute in the background  (that is, their <xref:System.Threading.Thread.IsBackground%2A> property returns `true`):</span></span>  
  
-   <span data-ttu-id="cc4f0-634">Wątek puli wątków, które puli wątków roboczych utrzymywane przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-634">Thread pool threads, which are a pool of worker threads maintained by the runtime.</span></span> <span data-ttu-id="cc4f0-635">Wątek puli i harmonogram pracy można skonfigurować na wątków z puli wątków, przy użyciu <xref:System.Threading.ThreadPool> klasy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-635">You can configure the thread pool and schedule work on thread pool threads by using the <xref:System.Threading.ThreadPool> class.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="cc4f0-636">Oparta na zadaniach asynchronicznej operacji automatycznie wykonać na wątków z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-636">Task-based asynchronous operations automatically execute on thread pool threads.</span></span>  
  
-   <span data-ttu-id="cc4f0-637">Wszystkie wątki, które wprowadzać środowiska wykonawczego zarządzanych z niezarządzanego kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-637">All threads that enter the managed execution environment from unmanaged code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-638">Poniższy przykład różni się znacząco zachowanie wątki pierwszego planu i tła.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-638">The following example contrasts the behavior of foreground and background threads.</span></span> <span data-ttu-id="cc4f0-639">Tworzy on wątku na pierwszym planie i wątku w tle.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-639">It creates a foreground thread and a background thread.</span></span> <span data-ttu-id="cc4f0-640">Wątku na pierwszym planie utrzymuje proces uruchomiony, dopóki nie ukończy jego `for` pętli i kończy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-640">The foreground thread keeps the process running until completes its `for` loop and terminates.</span></span> <span data-ttu-id="cc4f0-641">Jednak dane wyjściowe z przykładu pokazują, ponieważ wątku na pierwszym planie zakończył wykonanie, proces zostanie zakończony przed wątku w tle zakończyła wykonanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-641">However, as the output from the example shows, because the foreground thread has finished execution, the process is terminated before the background thread has completed execution.</span></span>  
  
 [!code-cpp[System.Threading.Thread.IsBackground#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.IsBackground#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.IsBackground#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-642">Wątek jest nieaktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-642">The thread is dead.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/foreground-and-background-threads.md">
          <span data-ttu-id="cc4f0-643">Wątki pierwszego planu i tła</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-643">Foreground and Background Threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsThreadPoolThread">
      <MemberSignature Language="C#" Value="public bool IsThreadPoolThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadPoolThread" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsThreadPoolThread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsThreadPoolThread As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadPoolThread { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadPoolThread : bool" Usage="System.Threading.Thread.IsThreadPoolThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-644">Pobiera wartość wskazującą, czy wątek należy do puli wątków zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-644">Gets a value indicating whether or not a thread belongs to the managed thread pool.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-645">
            <see langword="true" /> Jeśli ten wątek należy do puli wątków zarządzanych; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-645">
              <see langword="true" /> if this thread belongs to the managed thread pool; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-646">Aby uzyskać więcej informacji, zobacz [zarządzana Pula wątków](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-646">For more information see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-647">Poniższy przykład kodu pokazuje, jak ustalić, czy wątek jest z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-647">The following code example shows how to determine whether a thread is from the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ThreadPool" />
        <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md">
          <span data-ttu-id="cc4f0-648">Zarządzana pula wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-648">The Managed Thread Pool</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-649">Blokuje wątek wywołujący, aż do zakończenia wątku, reprezentowane przez to wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-649">Blocks the calling thread until the thread represented by this instance terminates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public void Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join" />
      <MemberSignature Language="VB.NET" Value="Public Sub Join ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Join();" />
      <MemberSignature Language="F#" Value="member this.Join : unit -&gt; unit" Usage="thread.Join " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-650">Blokuje wątek wywołujący, aż do zakończenia wątku, reprezentowane przez to wystąpienie, przy jednoczesnym dalszym wykonać standardowe COM i <see langword="SendMessage" /> przekazywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-650">Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and <see langword="SendMessage" /> pumping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-651"><xref:System.Threading.Thread.Join%2A> jest to metoda synchronizacji, która blokuje wątek wywołujący (oznacza to, że wątek, który wywołuje metodę), aż wątek którego <xref:System.Threading.Thread.Join%2A> wywoływana jest metoda została zakończona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-651"><xref:System.Threading.Thread.Join%2A> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed.</span></span> <span data-ttu-id="cc4f0-652">Użyj tej metody, aby upewnić się, że wątek został zakończony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-652">Use this method to ensure that a thread has been terminated.</span></span> <span data-ttu-id="cc4f0-653">Obiekt wywołujący zablokuje przez czas nieokreślony, jeśli wątek nie skończył się.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-653">The caller will block indefinitely if the thread does not terminate.</span></span> <span data-ttu-id="cc4f0-654">W poniższym przykładzie `Thread1` wątek jest wywołany <xref:System.Threading.Thread.Join> metody `Thread2`, co powoduje, że `Thread1` do bloku, dopóki nie `Thread2` zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-654">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block until `Thread2` has completed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1a.cs#1)]
 [!code-vb[System.Threading.Thread.Join#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1a.vb#1)]  
  
 <span data-ttu-id="cc4f0-655">Jeśli wątek został już zakończony podczas <xref:System.Threading.Thread.Join%2A> jest wywoływana metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-655">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="cc4f0-656">Nigdy nie powinien wywoływać <xref:System.Threading.Thread.Join%2A> metody <xref:System.Threading.Thread> obiekt, który reprezentuje bieżący wątek z bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-656">You should never call the <xref:System.Threading.Thread.Join%2A> method of the <xref:System.Threading.Thread> object that represents the current thread from the current thread.</span></span> <span data-ttu-id="cc4f0-657">Powoduje to, że aplikacja zawieszenie, ponieważ bieżący wątek czeka sam przez czas nieokreślony,</span><span class="sxs-lookup"><span data-stu-id="cc4f0-657">This causes your app to hang because the current thread waits upon itself indefinitely,</span></span>  
  
 <span data-ttu-id="cc4f0-658">Ta metoda zmienia stan wątku wywołującego do uwzględnienia <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-658">This method changes the state of the calling thread to include <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-659">Nie można wywołać `Join` w wątku, który znajduje się w <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> stanu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-659">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-660">Obiekt wywołujący próbował Dołącz do wątku, który znajduje się w <see cref="F:System.Threading.ThreadState.Unstarted" /> stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-660">The caller attempted to join a thread that is in the <see cref="F:System.Threading.ThreadState.Unstarted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadInterruptedException">
          <span data-ttu-id="cc4f0-661">Wątek jest przerwany podczas oczekiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-661">The thread is interrupted while waiting.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-662">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-662">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public bool Join (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Join(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Join(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Join : int -&gt; bool" Usage="thread.Join millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="cc4f0-663">Liczba milisekund oczekiwania na zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-663">The number of milliseconds to wait for the thread to terminate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-664">Blokuje wątek wywołujący, aż do zakończenia wątku, reprezentowane przez to wystąpienie lub określonego czasu upływa przerywając do wykonywania standardowych COM i SendMessage przekazywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-664">Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-665">
            <see langword="true" /> Jeśli wątek został zakończony; <see langword="false" /> Jeśli wątek nie został zakończony po upływie czasu określonego przez <paramref name="millisecondsTimeout" /> upłynął parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-665">
              <see langword="true" /> if the thread has terminated; <see langword="false" /> if the thread has not terminated after the amount of time specified by the <paramref name="millisecondsTimeout" /> parameter has elapsed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-666"><xref:System.Threading.Thread.Join%28System.Int32%29> jest to metoda synchronizacji, która blokuje wątek wywołujący (oznacza to, że wątek, który wywołuje metodę), aż wątek albo którego <xref:System.Threading.Thread.Join%2A> metoda jest wywoływana zostało ukończone lub upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-666"><xref:System.Threading.Thread.Join%28System.Int32%29> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until either the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed or the time-out interval has elapsed.</span></span> <span data-ttu-id="cc4f0-667">W poniższym przykładzie `Thread1` wątek jest wywołany <xref:System.Threading.Thread.Join> metody `Thread2`, co powoduje, że `Thread1` bądź do blokowania `Thread2` zostało ukończone lub upłynie 2 sekundy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-667">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block either until `Thread2` has completed or 2 seconds have elapsed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1b.cs#2)]
 [!code-vb[System.Threading.Thread.Join#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1b.vb#2)]  
  
 <span data-ttu-id="cc4f0-668">Jeśli <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jest określona dla `millisecondsTimeout` parametr, Metoda ta działa identycznie do <xref:System.Threading.Thread.Join> przeciążenia metody, z wyjątkiem wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-668">If <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> is specified for the `millisecondsTimeout` parameter, this method behaves identically to the <xref:System.Threading.Thread.Join> method overload, except for the return value.</span></span>  
  
 <span data-ttu-id="cc4f0-669">Jeśli wątek został już zakończony podczas <xref:System.Threading.Thread.Join%2A> jest wywoływana metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-669">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
 <span data-ttu-id="cc4f0-670">Ta metoda zmienia stan wątku wywołującego do uwzględnienia <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-670">This method changes the state of the calling thread to include <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-671">Nie można wywołać `Join` w wątku, który znajduje się w <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> stanu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-671">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-672">Wartość <paramref name="millisecondsTimeout" /> jest ujemna, a nie jest równa <see cref="F:System.Threading.Timeout.Infinite" /> w milisekundach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-672">The value of <paramref name="millisecondsTimeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-673">Wątek nie został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-673">The thread has not been started.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-674">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-674">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public bool Join (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Join(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Join(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Join : TimeSpan -&gt; bool" Usage="thread.Join timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="cc4f0-675">A <see cref="T:System.TimeSpan" /> równa ilość czasu oczekiwania na zakończenie wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-675">A <see cref="T:System.TimeSpan" /> set to the amount of time to wait for the thread to terminate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-676">Blokuje wątek wywołujący, aż do zakończenia wątku, reprezentowane przez to wystąpienie lub określonego czasu upływa przerywając do wykonywania standardowych COM i SendMessage przekazywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-676">Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-677">
            <see langword="true" /> Jeśli wątek się zakończył; <see langword="false" /> Jeśli wątek nie został zakończony po upływie czasu określonego przez <paramref name="timeout" /> upłynął parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-677">
              <see langword="true" /> if the thread terminated; <see langword="false" /> if the thread has not terminated after the amount of time specified by the <paramref name="timeout" /> parameter has elapsed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-678"><xref:System.Threading.Thread.Join%28System.TimeSpan%29> jest to metoda synchronizacji, która blokuje wątek wywołujący (oznacza to, że wątek, który wywołuje metodę), aż wątek albo którego <xref:System.Threading.Thread.Join%2A> metoda jest wywoływana zostało ukończone lub upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-678"><xref:System.Threading.Thread.Join%28System.TimeSpan%29> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until either the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed or the time-out interval has elapsed.</span></span> <span data-ttu-id="cc4f0-679">W poniższym przykładzie `Thread1` wątek jest wywołany <xref:System.Threading.Thread.Join> metody `Thread2`, co powoduje, że `Thread1` bądź do blokowania `Thread2` zostało ukończone lub upłynie 2 sekundy.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-679">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block either until `Thread2` has completed or 2 seconds have elapsed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1c.cs#3)]
 [!code-vb[System.Threading.Thread.Join#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1c.vb#3)]  
  
 <span data-ttu-id="cc4f0-680">Jeśli <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jest określona dla `timeout`, Metoda ta działa identycznie do <xref:System.Threading.Thread.Join> przeciążenia metody, z wyjątkiem wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-680">If <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> is specified for `timeout`, this method behaves identically to the <xref:System.Threading.Thread.Join> method overload, except for the return value.</span></span>  
  
 <span data-ttu-id="cc4f0-681">Jeśli wątek został już zakończony podczas <xref:System.Threading.Thread.Join%2A> jest wywoływana metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-681">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
 <span data-ttu-id="cc4f0-682">Ta metoda zmienia stan bieżący wątek, aby uwzględnić <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-682">This method changes the state of the current thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span> <span data-ttu-id="cc4f0-683">Nie można wywołać `Join` w wątku, który znajduje się w <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> stanu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-683">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-684">Poniższy przykład kodu demonstruje sposób używania `TimeSpan` wartością `Join` metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-684">The following code example demonstrates how to use a `TimeSpan` value with the `Join` method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Timespan#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Timespan#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Timespan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-685">Wartość <paramref name="timeout" /> jest ujemna, a nie jest równa <see cref="F:System.Threading.Timeout.Infinite" /> (w milisekundach), lub jest większa niż <see cref="F:System.Int32.MaxValue" /> milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-685">The value of <paramref name="timeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds, or is greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-686">Obiekt wywołujący próbował Dołącz do wątku, który znajduje się w <see cref="F:System.Threading.ThreadState.Unstarted" /> stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-686">The caller attempted to join a thread that is in the <see cref="F:System.Threading.ThreadState.Unstarted" /> state.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-687">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-687">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ManagedThreadId">
      <MemberSignature Language="C#" Value="public int ManagedThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ManagedThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ManagedThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedThreadId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ManagedThreadId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ManagedThreadId : int" Usage="System.Threading.Thread.ManagedThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-688">Pobiera unikatowy identyfikator dla bieżącego wątku zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-688">Gets a unique identifier for the current managed thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-689">Liczba całkowita, która reprezentuje unikatowy identyfikator dla tego wątku zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-689">An integer that represents a unique identifier for this managed thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-690">Wątek <xref:System.Threading.Thread.ManagedThreadId%2A> wartość właściwości służy do jednoznacznego identyfikowania wątek w ramach procesu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-690">A thread's <xref:System.Threading.Thread.ManagedThreadId%2A> property value serves to uniquely identify that thread within its process.</span></span>  
  
 <span data-ttu-id="cc4f0-691">Wartość <xref:System.Threading.Thread.ManagedThreadId%2A> właściwości nie różnią się wraz z upływem czasu, nawet wtedy, gdy kod niezarządzany, który hostuje środowisko uruchomieniowe języka wspólnego implementuje wątek jako włókien.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-691">The value of the <xref:System.Threading.Thread.ManagedThreadId%2A> property does not vary over time, even if unmanaged code that hosts the common language runtime implements the thread as a fiber.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrier">
      <MemberSignature Language="C#" Value="public static void MemoryBarrier ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrier() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.MemoryBarrier" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrier ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrier();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrier : unit -&gt; unit" Usage="System.Threading.Thread.MemoryBarrier " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-692">Synchronizuje dostęp do pamięci w następujący sposób: procesor, wykonywanie bieżącego wątku nie można zmienić kolejności instrukcje w taki sposób, że pamięć uzyskuje dostęp do przed wywołaniem do <see cref="M:System.Threading.Thread.MemoryBarrier" /> wykonaj po dostępy do pamięci, które należy wykonać wywołanie <see cref="M:System.Threading.Thread.MemoryBarrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-692">Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to <see cref="M:System.Threading.Thread.MemoryBarrier" /> execute after memory accesses that follow the call to <see cref="M:System.Threading.Thread.MemoryBarrier" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-693"><xref:System.Threading.Thread.MemoryBarrier%2A> jest wymagany tylko w systemach wieloprocesorowych pamięci słabe porządkowanie (na przykład system, w których zastosowano wiele procesorów Intel Itanium).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-693"><xref:System.Threading.Thread.MemoryBarrier%2A> is required only on multiprocessor systems with weak memory ordering (for example, a system employing multiple Intel Itanium processors).</span></span>  
  
 <span data-ttu-id="cc4f0-694">W większości przypadków języka C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji lub <xref:System.Threading.Monitor> klasy umożliwiają łatwiejsze do synchronizacji danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-694">For most purposes, the C# `lock` statement, the Visual Basic `SyncLock` statement, or the <xref:System.Threading.Monitor> class provide easier ways to synchronize data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Threading.Thread.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-695">Pobiera lub ustawia nazwę wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-695">Gets or sets the name of the thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-696">Ciąg zawierający nazwę wątku, lub <see langword="null" /> Jeśli nazwa nie została ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-696">A string containing the name of the thread, or <see langword="null" /> if no name was set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-697">Ta właściwość jest zapisu — po.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-697">This property is write-once.</span></span> <span data-ttu-id="cc4f0-698">Ponieważ wartość domyślną dla wątku <xref:System.Threading.Thread.Name%2A> właściwość `null`, można określić, czy nazwy został już jawnie przypisany do wątku, porównując ją za pomocą `null`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-698">Because the default value of a thread's <xref:System.Threading.Thread.Name%2A> property is `null`, you can determine whether a name has already been explicitly assigned to the thread by comparing it with `null`.</span></span>  
  
 <span data-ttu-id="cc4f0-699">Ciąg znaków, przypisany do <xref:System.Threading.Thread.Name%2A> właściwość może zawierać żadnych znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-699">The string assigned to the <xref:System.Threading.Thread.Name%2A> property can include any Unicode character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-700">Poniższy przykład pokazuje, jak nazwę wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-700">The following example shows how to name a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Name#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Name/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Name#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Name/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Name#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Name/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc4f0-701">Zażądano operacji zestawu, ale <see langword="Name" /> właściwość została już ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-701">A set operation was requested, but the <see langword="Name" /> property has already been set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Threading.ThreadPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ThreadPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As ThreadPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ThreadPriority Priority { System::Threading::ThreadPriority get(); void set(System::Threading::ThreadPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Threading.ThreadPriority with get, set" Usage="System.Threading.Thread.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-702">Pobiera lub ustawia wartość wskazującą planowania priorytet wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-702">Gets or sets a value indicating the scheduling priority of a thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-703">Jedną z <see cref="T:System.Threading.ThreadPriority" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-703">One of the <see cref="T:System.Threading.ThreadPriority" /> values.</span>
          </span>
          <span data-ttu-id="cc4f0-704">Wartość domyślna to <see cref="F:System.Threading.ThreadPriority.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-704">The default value is <see cref="F:System.Threading.ThreadPriority.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-705">Wątek można przypisać dowolny z następujących — priorytet <xref:System.Threading.ThreadPriority> wartości:</span><span class="sxs-lookup"><span data-stu-id="cc4f0-705">A thread can be assigned any one of the following priority <xref:System.Threading.ThreadPriority> values:</span></span>  
  
-   `Highest`  
  
-   `AboveNormal`  
  
-   `Normal`  
  
-   `BelowNormal`  
  
-   `Lowest`  
  
 <span data-ttu-id="cc4f0-706">Systemy operacyjne nie muszą przestrzegać priorytet wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-706">Operating systems are not required to honor the priority of a thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-707">Poniższy przykład pokazuje wynik zmiana priorytetu wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-707">The following example shows the result of changing the priority of a thread.</span></span> <span data-ttu-id="cc4f0-708">Trzy wątki nie są tworzone, priorytet jeden wątek jest ustawiona na <xref:System.Threading.ThreadPriority.BelowNormal?displayProperty=nameWithType>, i ustawiono priorytet sekundy <xref:System.Threading.ThreadPriority.AboveNormal?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-708">Three threads are created, the priority of one thread is set to <xref:System.Threading.ThreadPriority.BelowNormal?displayProperty=nameWithType>, and the priority of a second is set to <xref:System.Threading.ThreadPriority.AboveNormal?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-709">Każdy wątek zwiększa wartość zmiennej w `while` pętli i uruchamia na określony czas.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-709">Each thread increments a variable in a `while` loop and runs for a set time.</span></span>  
  
 [!code-csharp[System.Threading.ThreadPriority#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.ThreadPriority/cs/Example1.cs#1)]
 [!code-vb[System.Threading.ThreadPriority#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.ThreadPriority/vb/Example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-710">Wątek osiągnęło stan końcowy, takich jak <see cref="F:System.Threading.ThreadState.Aborted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-710">The thread has reached a final state, such as <see cref="F:System.Threading.ThreadState.Aborted" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-711">Wartość określona dla operacji zestawu nie jest prawidłowym <see cref="T:System.Threading.ThreadPriority" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-711">The value specified for a set operation is not a valid <see cref="T:System.Threading.ThreadPriority" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.ThreadPriority" />
        <related type="Article" href="~/docs/standard/threading/scheduling-threads.md">
          <span data-ttu-id="cc4f0-712">Harmonogram wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-712">Scheduling threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ResetAbort">
      <MemberSignature Language="C#" Value="public static void ResetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.ResetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetAbort();" />
      <MemberSignature Language="F#" Value="static member ResetAbort : unit -&gt; unit" Usage="System.Threading.Thread.ResetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-713">Anuluje <see cref="M:System.Threading.Thread.Abort(System.Object)" /> żądane dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-713">Cancels an <see cref="M:System.Threading.Thread.Abort(System.Object)" /> requested for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-714">Ta metoda jest wywołana tylko przez kod z odpowiednimi uprawnieniami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-714">This method can only be called by code with the proper permissions.</span></span>  
  
 <span data-ttu-id="cc4f0-715">Gdy połączenie jest nawiązywane w przypadku `Abort` , aby zakończyć wątek, system generuje <xref:System.Threading.ThreadAbortException>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-715">When a call is made to `Abort` to terminate a thread, the system throws a <xref:System.Threading.ThreadAbortException>.</span></span> <span data-ttu-id="cc4f0-716">`ThreadAbortException` specjalne wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest zgłaszany ponownie na końcu bloku catch, chyba że `ResetAbort` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-716">`ThreadAbortException` is a special exception that can be caught by application code, but is rethrown at the end of the catch block unless `ResetAbort` is called.</span></span> <span data-ttu-id="cc4f0-717">`ResetAbort` anuluje żądanie do przerwania i zapobiega `ThreadAbortException` z zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-717">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span>  
  
 <span data-ttu-id="cc4f0-718">Zobacz <xref:System.Threading.ThreadAbortException> dla przykładu, który demonstruje wywołanie `ResetAbort` metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-718">See <xref:System.Threading.ThreadAbortException> for an example that demonstrates calling the `ResetAbort` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-719">.NET core: ten element członkowski nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-719">.NET Core only: This member is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-720">
            <see langword="Abort" /> nie została wywołana w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-720">
              <see langword="Abort" /> was not invoked on the current thread.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-721">Obiekt wywołujący nie ma wymaganych uprawnień zabezpieczeń dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-721">The caller does not have the required security permission for the current thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-722">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-722">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-723">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-723">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          </span>
        </permission>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md">
          <span data-ttu-id="cc4f0-724">Niszczenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-724">Destroying threads</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-725">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-725">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="thread.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-726">Wznawia działanie wątku, która została zawieszona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-726">Resumes a thread that has been suspended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="cc4f0-727">Nie używaj <xref:System.Threading.Thread.Suspend%2A> i <xref:System.Threading.Thread.Resume%2A> metody, aby zsynchronizować działania wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-727">Do not use the <xref:System.Threading.Thread.Suspend%2A> and <xref:System.Threading.Thread.Resume%2A> methods to synchronize the activities of threads.</span></span> <span data-ttu-id="cc4f0-728">Nie ma możliwości określenia, jaki kod w wątku jest wykonywany, gdy zostanie zawieszone.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-728">You have no way of knowing what code a thread is executing when you suspend it.</span></span> <span data-ttu-id="cc4f0-729">Jeśli wątek zostanie zawieszone, gdy posiada blokady podczas oceny uprawnień zabezpieczeń, inne wątki w <xref:System.AppDomain> może zostać zablokowany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-729">If you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="cc4f0-730">Jeśli podczas wykonywania konstruktora klasy zawieszenie wątku, inne wątki w <xref:System.AppDomain> , podejmują próbę użycia, że klasy są blokowane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-730">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span> <span data-ttu-id="cc4f0-731">Zakleszczenia mogą wystąpić w bardzo prosty sposób.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-731">Deadlocks can occur very easily.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-732">.NET core: ten element członkowski nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-732">.NET Core only: This member is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-733">Wątek nie został uruchomiony, jest nieaktywny lub nie znajduje się w stanie wstrzymania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-733">The thread has not been started, is dead, or is not in the suspended state.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-734">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-734">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-735">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-735">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-736">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-736">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span>
          </span>
        </permission>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md">
          <span data-ttu-id="cc4f0-737">Wstrzymywanie i przerywanie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-737">Pausing and interrupting threads</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-738">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-738">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetApartmentState">
      <MemberSignature Language="C#" Value="public void SetApartmentState (System.Threading.ApartmentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetApartmentState(valuetype System.Threading.ApartmentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApartmentState (state As ApartmentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetApartmentState(System::Threading::ApartmentState state);" />
      <MemberSignature Language="F#" Value="member this.SetApartmentState : System.Threading.ApartmentState -&gt; unit" Usage="thread.SetApartmentState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Threading.ApartmentState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="cc4f0-739">Nowy stan apartamentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-739">The new apartment state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-740">Ustawia stan apartamentu wątku, przed jej ponownym uruchomieniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-740">Sets the apartment state of a thread before it is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-741">Nowe wątki są inicjowane jako <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> jeśli ich stan apartamentu nie została ustawiona, zanim zostaną uruchomione.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-741">New threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="cc4f0-742">Stan apartamentu musi być ustawiona przed uruchomieniem wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-742">Apartment state must be set before a thread is started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-743">Głównego wątku aplikacji jest inicjowany do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-743">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="cc4f0-744">Jedynym sposobem, aby ustawić stan apartamentu wątku głównego aplikacji, aby <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> polega na zastosowaniu <xref:System.STAThreadAttribute> atrybutu do metody punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-744">The only way to set the apartment state of the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> is to apply the <xref:System.STAThreadAttribute> attribute to the entry point method.</span></span>  
  
 <span data-ttu-id="cc4f0-745"><xref:System.Threading.Thread.SetApartmentState%2A> Metody, wraz z <xref:System.Threading.Thread.GetApartmentState%2A> metody i <xref:System.Threading.Thread.TrySetApartmentState%2A> zastępuje metodę <xref:System.Threading.Thread.ApartmentState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-745">The <xref:System.Threading.Thread.SetApartmentState%2A> method, along with the <xref:System.Threading.Thread.GetApartmentState%2A> method and the <xref:System.Threading.Thread.TrySetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-746">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-746">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="cc4f0-747">Przykład kodu tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-747">The code example creates a thread.</span></span> <span data-ttu-id="cc4f0-748">Przed rozpoczęciem wątku <xref:System.Threading.Thread.GetApartmentState%2A> Wyświetla początkowej <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> stanu i <xref:System.Threading.Thread.SetApartmentState%2A> zmienia stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-748">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-749"><xref:System.Threading.Thread.TrySetApartmentState%2A> Następnie metoda zwraca `false` podczas próby zmiany stanu do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> ponieważ stan apartamentu została już ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-749">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="cc4f0-750">Jeśli w tej samej operacji miał zostanie podjęta określona za pomocą <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> będzie zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-750">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="cc4f0-751">Po rozpoczęciu wątku <xref:System.Threading.Thread.TrySetApartmentState%2A> metoda jest używana ponownie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-751">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="cc4f0-752">Tym razem zgłasza <xref:System.Threading.ThreadStateException> ponieważ wątek jest już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-752">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-753">.NET core: ten element członkowski nie jest obsługiwana w systemach macOS i platformy Linux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-753">.NET Core only: This member is not supported on the macOS and Linux platforms.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-754">
            <paramref name="state" /> nie jest stan apartamentu prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-754">
              <paramref name="state" /> is not a valid apartment state.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-755">Wątek już został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-755">The thread has already been started.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc4f0-756">Stan apartamentu został już zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-756">The apartment state has already been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetCompressedStack">
      <MemberSignature Language="C#" Value="public void SetCompressedStack (System.Threading.CompressedStack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompressedStack(class System.Threading.CompressedStack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompressedStack (stack As CompressedStack)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompressedStack(System::Threading::CompressedStack ^ stack);" />
      <MemberSignature Language="F#" Value="member this.SetCompressedStack : System.Threading.CompressedStack -&gt; unit" Usage="thread.SetCompressedStack stack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Thread.SetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="System.Threading.CompressedStack" />
      </Parameters>
      <Docs>
        <param name="stack">
          <span data-ttu-id="cc4f0-757">
            <see cref="T:System.Threading.CompressedStack" /> Obiektów, które mają być stosowane do bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-757">The <see cref="T:System.Threading.CompressedStack" /> object to be applied to the current thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-758">Stosuje przechwyconych <see cref="T:System.Threading.CompressedStack" /> w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-758">Applies a captured <see cref="T:System.Threading.CompressedStack" /> to the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-759">Ta metoda nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-759">This method is no longer supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc4f0-760">We wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-760">In all cases.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="cc4f0-761">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-761">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="cc4f0-762">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-762">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (LocalDataStoreSlot slot, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(class System.LocalDataStoreSlot slot, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (slot As LocalDataStoreSlot, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(LocalDataStoreSlot ^ slot, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : LocalDataStoreSlot * obj -&gt; unit" Usage="System.Threading.Thread.SetData (slot, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="slot">
          <span data-ttu-id="cc4f0-763">
            <see cref="T:System.LocalDataStoreSlot" /> w którym można ustawić wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-763">The <see cref="T:System.LocalDataStoreSlot" /> in which to set the value.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="cc4f0-764">Wartość do ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-764">The value to be set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-765">Ustawia dane w miejscu określonym na aktualnie uruchomionemu wątkowi, dla bieżącej domeny dla wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-765">Sets the data in the specified slot on the currently running thread, for that thread's current domain.</span>
          </span>
          <span data-ttu-id="cc4f0-766">Lepszą wydajność, należy użyć pola oznaczone <see cref="T:System.ThreadStaticAttribute" /> zamiast tego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-766">For better performance, use fields marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-767">Program .NET Framework zawiera dwa mechanizmy przy użyciu pamięci lokalnej wątku (TLS): względne wątkom pola statyczne (czyli tych pól, które są oznaczone <xref:System.ThreadStaticAttribute> atrybutu) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-767">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="cc4f0-768">Względne wątkom pola statyczne zapewnia znacznie lepszą wydajność niż gniazda danych i Włącz sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-768">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="cc4f0-769">Aby uzyskać więcej informacji o korzystaniu z protokołu TLS, zobacz [magazynu lokalnego wątku: względne wątkom pola statyczne i gniazda danych](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-769">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="cc4f0-770">Wątki używany był mechanizm pamięci magazynu lokalnego do przechowywania danych specyficznych wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-770">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="cc4f0-771">Środowisko uruchomieniowe języka wspólnego przydziela tablicy magazynu danych wielu miejsce, do każdego procesu, podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-771">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="cc4f0-772">Wątku można przydzielić miejsce danych w magazynie danych, przechowywania i pobierania danych wartość w gnieździe, a wolne miejsce do ponownego wykorzystania po zakończeniu procedury wątku i <xref:System.Threading.Thread> obiekt został odzyskany przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-772">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread procedure ends and the <xref:System.Threading.Thread> object has been reclaimed by garbage collection.</span></span> <span data-ttu-id="cc4f0-773">Gniazda danych są unikatowe dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-773">Data slots are unique per thread.</span></span> <span data-ttu-id="cc4f0-774">Nie innego wątku (nawet wątek podrzędnych) można przekazać dane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-774">No other thread (not even a child thread) can get that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-775"><xref:System.Threading.Thread.SetData%2A> jest `Shared` metodę, która zawsze ma zastosowanie do aktualnie wykonywany wątek, nawet jeśli wywołasz ją za pomocą zmiennej, która odwołuje się do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-775"><xref:System.Threading.Thread.SetData%2A> is a `Shared` method that always applies to the currently executing thread, even if you call it using a variable that refers to another thread.</span></span> <span data-ttu-id="cc4f0-776">Aby uniknąć nieporozumień, użyj nazwy klasy podczas wywoływania `Shared` metody: `Thread.SetData(testSlot, "test data")`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-776">To avoid confusion, use the class name when calling `Shared` methods: `Thread.SetData(testSlot, "test data")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-777">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-777">This section contains two code examples.</span></span> <span data-ttu-id="cc4f0-778">Pierwszy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> atrybutu do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-778">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-779">Drugi przykład pokazuje, jak zrobić to samo za pomocą gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-779">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="cc4f0-780">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-780">**First Example**</span></span>  
  
 <span data-ttu-id="cc4f0-781">Poniższy przykład pokazuje, jak użyć pola, które jest oznaczona za pomocą <xref:System.ThreadStaticAttribute> do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-781">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="cc4f0-782">Ta metoda zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-782">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="cc4f0-783">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="cc4f0-783">**Second Example**</span></span>  
  
 <span data-ttu-id="cc4f0-784">Poniższy przykład pokazuje, jak używać miejsca danych o podanej nazwie do przechowywania informacji specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-784">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-785">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-785">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md">
          <span data-ttu-id="cc4f0-786">Pamięć lokalna wątku: powiązane z wątkiem pola statyczne i gniazda danych</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-786">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sleep">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-787">Wstrzymuje działanie bieżącego wątku dla określonego przedziału czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-787">Suspends the current thread for the specified amount of time.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Sleep(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sleep (millisecondsTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sleep(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member Sleep : int -&gt; unit" Usage="System.Threading.Thread.Sleep millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="cc4f0-788">Liczba milisekund, dla których wątek jest zawieszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-788">The number of milliseconds for which the thread is suspended.</span>
          </span>
          <span data-ttu-id="cc4f0-789">Jeśli wartość <c>millisecondsTimeout</c> argument ma wartość zero, wątek zwalnia pozostałą część jego przedziału czasu na żadnym z wątków taki sam priorytet, który jest gotowy do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-789">If the value of the <c>millisecondsTimeout</c> argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run.</span>
          </span>
          <span data-ttu-id="cc4f0-790">Jeśli nie ma innych wątków programu taki sam priorytet, które są gotowe do uruchomienia, wykonywanie bieżącego wątku nie jest wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-790">If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-791">Wstrzymuje działanie bieżącego wątku dla określoną liczbę milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-791">Suspends the current thread for the specified number of milliseconds.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-792">Wątek nie zostanie zostaną zaplanowane do wykonania przez system operacyjny przez czas określony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-792">The thread will not be scheduled for execution by the operating system for the amount of time specified.</span></span> <span data-ttu-id="cc4f0-793">Ta metoda zmienia stan wątku zawierać <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-793">This method changes the state of the thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span>  
  
 <span data-ttu-id="cc4f0-794">Można określić <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> dla `millisecondsTimeout` parametr wstrzymania wątku na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-794">You can specify <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the `millisecondsTimeout` parameter to suspend the thread indefinitely.</span></span> <span data-ttu-id="cc4f0-795">Jednak firma Microsoft zaleca użycie innych <xref:System.Threading?displayProperty=nameWithType> klasy, takie jak <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, lub <xref:System.Threading.Semaphore> zamiast wątków sychronize lub zarządzania zasobami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-795">However, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="cc4f0-796">Taktów zegara systemu z określoną szybkością nazywany rozpoznawaniem zegara.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-796">The system clock ticks at a specific rate called the clock resolution.</span></span> <span data-ttu-id="cc4f0-797">Limit czasu rzeczywistego może nie być dokładnie określony limit czasu, ponieważ określony limit czasu zostanie dostosowana postoju taktów zegara.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-797">The actual timeout might not be exactly the specified timeout, because the specified timeout will be adjusted to coincide with clock ticks.</span></span> <span data-ttu-id="cc4f0-798">Aby uzyskać więcej informacji na temat rozdzielczość zegara i czas oczekiwania, zobacz [uśpienia funkcja](http://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) tematu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-798">For more information on clock resolution and the waiting time, see the [Sleep function](http://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) topic.</span></span> <span data-ttu-id="cc4f0-799">Ta metoda wywołuje [uśpienia funkcja](http://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) z interfejsów API systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-799">This method calls the [Sleep function](http://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) from the Windows system APIs.</span></span>  
  
 <span data-ttu-id="cc4f0-800">Ta metoda nie wykonuje standardowego modelu COM i SendMessage przekazywanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-800">This method does not perform standard COM and SendMessage pumping.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-801">Jeśli musisz uśpienia w wątku, który ma <xref:System.STAThreadAttribute>, ale użytkownik chce wykonać standardowego modelu COM i SendMessage przekazywanie, należy wziąć pod uwagę przy użyciu jednego z przeciążeń <xref:System.Threading.Thread.Join%2A> metody, która określa interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-801">If you need to sleep on a thread that has <xref:System.STAThreadAttribute>, but you want to perform standard COM and SendMessage pumping, consider using one of the overloads of the <xref:System.Threading.Thread.Join%2A> method that specifies a timeout interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-802">W poniższym przykładzie użyto <xref:System.Threading.Thread.Sleep%2A> metody do blokowania wątku głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-802">The following example uses the <xref:System.Threading.Thread.Sleep%2A> method to block the application's main thread.</span></span>  
  
 [!code-cpp[Thread.Sleep#1](~/samples/snippets/cpp/VS_Snippets_CLR/thread.sleep/cpp/example.cpp#1)]
 [!code-csharp[Thread.Sleep#1](~/samples/snippets/csharp/VS_Snippets_CLR/thread.sleep/cs/example.cs#1)]
 [!code-vb[Thread.Sleep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/thread.sleep/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-803">Wartość limitu czasu jest ujemna i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-803">The time-out value is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Sleep(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sleep (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sleep(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member Sleep : TimeSpan -&gt; unit" Usage="System.Threading.Thread.Sleep timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="cc4f0-804">Ilość czasu, dla którego wątek jest zawieszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-804">The amount of time for which the thread is suspended.</span>
          </span>
          <span data-ttu-id="cc4f0-805">Jeśli wartość <c>millisecondsTimeout</c> argument jest <see cref="F:System.TimeSpan.Zero" />, wątek zwalnia pozostałą część jego przedziału czasu na żadnym z wątków taki sam priorytet, który jest gotowy do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-805">If the value of the <c>millisecondsTimeout</c> argument is <see cref="F:System.TimeSpan.Zero" />, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run.</span>
          </span>
          <span data-ttu-id="cc4f0-806">Jeśli nie ma innych wątków programu taki sam priorytet, które są gotowe do uruchomienia, wykonywanie bieżącego wątku nie jest wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-806">If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-807">Wstrzymuje działanie bieżącego wątku dla określonego przedziału czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-807">Suspends the current thread for the specified amount of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-808">Wątek nie zostanie zostaną zaplanowane do wykonania przez system operacyjny przez czas określony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-808">The thread will not be scheduled for execution by the operating system for the amount of time specified.</span></span> <span data-ttu-id="cc4f0-809">Ta metoda zmienia stan wątku zawierać <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-809">This method changes the state of the thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span>  
  
 <span data-ttu-id="cc4f0-810">Można określić <xref:System.Threading.Timeout.InfiniteTimeSpan?displayProperty=nameWithType> dla `timeout` parametr wstrzymania wątku na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-810">You can specify <xref:System.Threading.Timeout.InfiniteTimeSpan?displayProperty=nameWithType> for the `timeout` parameter to suspend the thread indefinitely.</span></span> <span data-ttu-id="cc4f0-811">Jednak firma Microsoft zaleca użycie innych <xref:System.Threading?displayProperty=nameWithType> klasy, takie jak <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, lub <xref:System.Threading.Semaphore> zamiast wątków sychronize lub zarządzania zasobami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-811">However, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="cc4f0-812">To przeciążenie <xref:System.Threading.Thread.Sleep%2A> używa całkowita liczba milisekund całego `timeout`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-812">This overload of <xref:System.Threading.Thread.Sleep%2A> uses the total number of whole milliseconds in `timeout`.</span></span> <span data-ttu-id="cc4f0-813">Ułamkowe milisekund są odrzucane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-813">Fractional milliseconds are discarded.</span></span>  
  
 <span data-ttu-id="cc4f0-814">Ta metoda nie wykonuje standardowego modelu COM i SendMessage przekazywanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-814">This method does not perform standard COM and SendMessage pumping.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-815">Jeśli musisz uśpienia w wątku, który ma <xref:System.STAThreadAttribute>, ale użytkownik chce wykonać standardowego modelu COM i SendMessage przekazywanie, należy wziąć pod uwagę przy użyciu jednego z przeciążeń <xref:System.Threading.Thread.Join%2A> metody, która określa interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-815">If you need to sleep on a thread that has <xref:System.STAThreadAttribute>, but you want to perform standard COM and SendMessage pumping, consider using one of the overloads of the <xref:System.Threading.Thread.Join%2A> method that specifies a timeout interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-816">W poniższym przykładzie użyto <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29> przeciążenia metody, aby zablokować wątku głównego aplikacji pięć razy na dwóch sekund.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-816">The following example uses the <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29> method overload to block the application's main thread five times, for two seconds each time.</span></span>  
  
 [!code-cpp[Thread.Sleep_TimeSpan#1](~/samples/snippets/cpp/VS_Snippets_CLR/thread.sleep_timespan/cpp/example.cpp#1)]
 [!code-csharp[Thread.Sleep_TimeSpan#1](~/samples/snippets/csharp/VS_Snippets_CLR/thread.sleep_timespan/cs/example.cs#1)]
 [!code-vb[Thread.Sleep_TimeSpan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/thread.sleep_timespan/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cc4f0-817">Wartość <paramref name="timeout" /> jest ujemna, a nie jest równa <see cref="F:System.Threading.Timeout.Infinite" /> (w milisekundach), lub jest większa niż <see cref="F:System.Int32.MaxValue" /> milisekund.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-817">The value of <paramref name="timeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds, or is greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SpinWait">
      <MemberSignature Language="C#" Value="public static void SpinWait (int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinWait(int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SpinWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinWait (iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinWait(int iterations);" />
      <MemberSignature Language="F#" Value="static member SpinWait : int -&gt; unit" Usage="System.Threading.Thread.SpinWait iterations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="iterations">
          <span data-ttu-id="cc4f0-818">32-bitowa liczba całkowita ze znakiem definiuje, jak długo trwa wątku oczekiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-818">A 32-bit signed integer that defines how long a thread is to wait.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-819">Powoduje, że wątek oczekiwania liczba zdefiniowanych przez <paramref name="iterations" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-819">Causes a thread to wait the number of times defined by the <paramref name="iterations" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-820"><xref:System.Threading.Thread.SpinWait%2A> Metoda jest przydatna do implementowania blokad.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-820">The <xref:System.Threading.Thread.SpinWait%2A> method is useful for implementing locks.</span></span> <span data-ttu-id="cc4f0-821">Klasy w .NET Framework, takich jak <xref:System.Threading.Monitor> i <xref:System.Threading.ReaderWriterLock>, korzystanie z tej metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-821">Classes in the .NET Framework, such as <xref:System.Threading.Monitor> and <xref:System.Threading.ReaderWriterLock>, use this method internally.</span></span> <span data-ttu-id="cc4f0-822"><xref:System.Threading.Thread.SpinWait%2A> zasadniczo umieszcza procesor w bardzo pętli, liczba pętli, określony przez `iterations` parametru.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-822"><xref:System.Threading.Thread.SpinWait%2A> essentially puts the processor into a very tight loop, with the loop count specified by the `iterations` parameter.</span></span> <span data-ttu-id="cc4f0-823">Czas trwania oczekiwania zależy od w związku z tym od szybkości procesora.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-823">The duration of the wait therefore depends on the speed of the processor.</span></span>  
  
 <span data-ttu-id="cc4f0-824">Natomiast to za pomocą <xref:System.Threading.Thread.Sleep%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-824">Contrast this with the <xref:System.Threading.Thread.Sleep%2A> method.</span></span> <span data-ttu-id="cc4f0-825">Wątek, który wywołuje <xref:System.Threading.Thread.Sleep%2A> daje pozostałą część jej bieżącego wycinka czasu procesora, nawet jeśli w określonym przedziale czasu wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-825">A thread that calls <xref:System.Threading.Thread.Sleep%2A> yields the rest of its current slice of processor time, even if the specified interval is zero.</span></span> <span data-ttu-id="cc4f0-826">Określanie niezerowy interwał <xref:System.Threading.Thread.Sleep%2A> usuwa wątku pod uwagę przez harmonogram wątku, dopóki upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-826">Specifying a non-zero interval for <xref:System.Threading.Thread.Sleep%2A> removes the thread from consideration by the thread scheduler until the time interval has elapsed.</span></span>  
  
 <span data-ttu-id="cc4f0-827"><xref:System.Threading.Thread.SpinWait%2A> nie jest zazwyczaj przydatne w przypadku zwykłych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-827"><xref:System.Threading.Thread.SpinWait%2A> is not generally useful for ordinary applications.</span></span> <span data-ttu-id="cc4f0-828">W większości przypadków należy używać klas synchronizacji dostarczonych przez program .NET Framework; na przykład wywołać <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> lub instrukcję, która otacza <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> (`lock` w języku C# lub `SyncLock` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-828">In most cases, you should use the synchronization classes provided by the .NET Framework; for example, call <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> or a statement that wraps <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> (`lock` in C# or `SyncLock` in Visual Basic).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cc4f0-829">W rzadkich przypadkach, w których jest korzystne, aby uniknąć przełączenie kontekstu, na przykład jeśli wiadomo, że zmiany stanu jest bliska, wywoływania <xref:System.Threading.Thread.SpinWait%2A> metody w swojej pętli.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-829">In the rare case where it is advantageous to avoid a context switch, such as when you know that a state change is imminent, make a call to the <xref:System.Threading.Thread.SpinWait%2A> method in your loop.</span></span> <span data-ttu-id="cc4f0-830">Kod <xref:System.Threading.Thread.SpinWait%2A> wykonuje zaprojektowano, aby uniknąć problemów, które mogą wystąpić na komputerach z wieloma procesorami.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-830">The code <xref:System.Threading.Thread.SpinWait%2A> executes is designed to prevent problems that can occur on computers with multiple processors.</span></span> <span data-ttu-id="cc4f0-831">Na przykład, na komputerach z wielu procesorów Intel wykorzystujące technologię hiperwątkowości <xref:System.Threading.Thread.SpinWait%2A> zapobiega zablokowania procesora w niektórych sytuacjach.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-831">For example, on computers with multiple Intel processors employing Hyper-Threading technology, <xref:System.Threading.Thread.SpinWait%2A> prevents processor starvation in certain situations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-832">Powoduje, że wątek być zaplanowane do wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-832">Causes a thread to be scheduled for execution.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="thread.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-833">Powoduje, że system operacyjny, można zmienić stanu bieżącego wystąpienia do <see cref="F:System.Threading.ThreadState.Running" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-833">Causes the operating system to change the state of the current instance to <see cref="F:System.Threading.ThreadState.Running" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-834">Gdy wątek <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> stanu systemu operacyjnego można zaplanować jego wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-834">Once a thread is in the <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> state, the operating system can schedule it for execution.</span></span> <span data-ttu-id="cc4f0-835">Wątek, który rozpoczyna się wykonywanie w pierwszym wierszu metody reprezentowanej przez <xref:System.Threading.ThreadStart> lub <xref:System.Threading.ParameterizedThreadStart> delegata dostarczonego do konstruktora wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-835">The thread begins executing at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate supplied to the thread constructor.</span></span> <span data-ttu-id="cc4f0-836">Należy pamiętać, że wywołanie <xref:System.Threading.Thread.Start%2A> nie blokuje wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-836">Note that the call to <xref:System.Threading.Thread.Start%2A> does not block the calling thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-837">Jeśli to przeciążenie jest używany z wątkiem utworzone za pomocą <xref:System.Threading.ParameterizedThreadStart> delegować, `null` jest przekazywany do metody, wykonywane przez wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-837">If this overload is used with a thread created using a <xref:System.Threading.ParameterizedThreadStart> delegate, `null` is passed to the method executed by the thread.</span></span>  
  
 <span data-ttu-id="cc4f0-838">Gdy wątek się kończy, go nie można uruchomić ponownie z innym wywołaniu `Start`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-838">Once the thread terminates, it cannot be restarted with another call to `Start`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-839">Poniższy przykład tworzy i uruchamia wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-839">The following example creates and starts a thread.</span></span>  
  
 [!code-cpp[ThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR/ThreadStart/CPP/threadstart.cpp#1)]
 [!code-csharp[ThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR/ThreadStart/CS/threadstart.cs#1)]
 [!code-vb[ThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ThreadStart/VB/threadstart.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-840">Wątek już został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-840">The thread has already been started.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="cc4f0-841">Nie jest za mało pamięci uruchomić ten wątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-841">There is not enough memory available to start this thread.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
          <span data-ttu-id="cc4f0-842">Wątki i wątkowość</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-842">Threads and Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">
          <span data-ttu-id="cc4f0-843">Tworzenie wątków i przekazywanie danych w czasie rozpoczęcia</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-843">Creating Threads and Passing Data at Start Time</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Start(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Start : obj -&gt; unit" Usage="thread.Start parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="cc4f0-844">Obiekt zawierający dane do użycia przez metodę wątek wykonuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-844">An object that contains data to be used by the method the thread executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-845">Powoduje, że system operacyjny, można zmienić stanu bieżącego wystąpienia do <see cref="F:System.Threading.ThreadState.Running" />i opcjonalnie dostarcza obiekt zawierający dane do użycia przez metodę wątek wykonuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-845">Causes the operating system to change the state of the current instance to <see cref="F:System.Threading.ThreadState.Running" />, and optionally supplies an object containing data to be used by the method the thread executes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-846">Gdy wątek <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> stanu systemu operacyjnego można zaplanować jego wykonywania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-846">Once a thread is in the <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> state, the operating system can schedule it for execution.</span></span> <span data-ttu-id="cc4f0-847">Wątek, który rozpoczyna się wykonywanie w pierwszym wierszu metody reprezentowanej przez <xref:System.Threading.ThreadStart> lub <xref:System.Threading.ParameterizedThreadStart> delegata dostarczonego do konstruktora wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-847">The thread begins executing at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate supplied to the thread constructor.</span></span> <span data-ttu-id="cc4f0-848">Należy pamiętać, że wywołanie <xref:System.Threading.Thread.Start%2A> nie blokuje wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-848">Note that the call to <xref:System.Threading.Thread.Start%2A> does not block the calling thread.</span></span>  
  
 <span data-ttu-id="cc4f0-849">Gdy wątek się kończy, go nie można uruchomić ponownie z innym wywołaniu `Start`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-849">Once the thread terminates, it cannot be restarted with another call to `Start`.</span></span>  
  
 <span data-ttu-id="cc4f0-850">To przeciążenie i <xref:System.Threading.ParameterizedThreadStart> delegata ułatwiają przekazywanie danych do procedury wątku, ale techniki nie jest bezpiecznym typem, ponieważ każdy obiekt może być przekazywany do tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-850">This overload and the <xref:System.Threading.ParameterizedThreadStart> delegate make it easy to pass data to a thread procedure, but the technique is not type safe because any object can be passed to this overload.</span></span> <span data-ttu-id="cc4f0-851">Bardziej niezawodny sposób przekazywania danych do procedury wątku jest umieszczenie procedury wątku i pola danych do obiektu procesu roboczego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-851">A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</span></span> <span data-ttu-id="cc4f0-852">Aby uzyskać więcej informacji, zobacz [Tworzenie wątków i przekazywanie danych na czas rozpoczęcia](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-852">For more information, see [Creating Threads and Passing Data at Start Time](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-853">Poniższy przykład tworzy <xref:System.Threading.ParameterizedThreadStart> delegowanego z metody statycznej i metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-853">The following example creates a <xref:System.Threading.ParameterizedThreadStart> delegate with a static method and an instance method.</span></span>  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-854">Wątek już został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-854">The thread has already been started.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="cc4f0-855">Nie jest za mało pamięci uruchomić ten wątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-855">There is not enough memory available to start this thread.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cc4f0-856">Ten wątek został utworzony przy użyciu <see cref="T:System.Threading.ThreadStart" /> delegować zamiast <see cref="T:System.Threading.ParameterizedThreadStart" /> delegować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-856">This thread was created using a <see cref="T:System.Threading.ThreadStart" /> delegate instead of a <see cref="T:System.Threading.ParameterizedThreadStart" /> delegate.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.ParameterizedThreadStart" />
        <altmember cref="T:System.AppDomain" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">
          <span data-ttu-id="cc4f0-857">Tworzenie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-857">Creating Threads</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Suspend" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend();" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="thread.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Thread.Suspend has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-858">Wstrzymuje działanie wątku albo jeśli wątek jest już zawieszony, nie ma znaczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-858">Either suspends the thread, or if the thread is already suspended, has no effect.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-859">Jeśli wątek jest już zawieszony, ta metoda nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-859">If the thread is already suspended, this method has no effect.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cc4f0-860">Nie używaj <xref:System.Threading.Thread.Suspend%2A> i <xref:System.Threading.Thread.Resume%2A> metody, aby zsynchronizować działania wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-860">Do not use the <xref:System.Threading.Thread.Suspend%2A> and <xref:System.Threading.Thread.Resume%2A> methods to synchronize the activities of threads.</span></span> <span data-ttu-id="cc4f0-861">Nie ma możliwości określenia, jaki kod w wątku jest wykonywany, gdy zostanie zawieszone.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-861">You have no way of knowing what code a thread is executing when you suspend it.</span></span> <span data-ttu-id="cc4f0-862">Jeśli wątek zostanie zawieszone, gdy posiada blokady podczas oceny uprawnień zabezpieczeń, inne wątki w <xref:System.AppDomain> może zostać zablokowany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-862">If you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="cc4f0-863">Jeśli podczas wykonywania konstruktora klasy zawieszenie wątku, inne wątki w <xref:System.AppDomain> , podejmują próbę użycia, że klasy są blokowane.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-863">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span> <span data-ttu-id="cc4f0-864">Zakleszczenia mogą wystąpić w bardzo prosty sposób.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-864">Deadlocks can occur very easily.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cc4f0-865">.NET core: ten element członkowski nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-865">.NET Core only: This member is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-866">Wątek nie została uruchomiona lub jest nieaktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-866">The thread has not been started or is dead.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="cc4f0-867">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-867">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cc4f0-868">Aby uzyskać zaawansowane operacje na wątkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-868">for advanced operations on threads.</span>
          </span>
          <span data-ttu-id="cc4f0-869">Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-869">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span>
          </span>
        </permission>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md">
          <span data-ttu-id="cc4f0-870">Wstrzymywanie i przerywanie wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-870">Pausing and interrupting threads</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-871">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-871">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Thread.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Thread.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Thread::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="cc4f0-872">Zarezerwowane do użytku w przyszłości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-872">Reserved for future use.</span>
          </span>
          <span data-ttu-id="cc4f0-873">Musi być wartością IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-873">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="cc4f0-874">Przekazana tablica nazw ma być mapowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-874">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="cc4f0-875">Liczba nazw, które mają być mapowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-875">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cc4f0-876">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-876">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="cc4f0-877">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-877">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-878">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-878">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-879">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-879">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc4f0-880">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz: Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-880">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cc4f0-881">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-881">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Thread.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Thread.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Thread::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="cc4f0-882">Informacje o typie, który będzie zwracany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-882">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cc4f0-883">Identyfikator regionalny dla informacji o typie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-883">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="cc4f0-884">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-884">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-885">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-885">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-886">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-886">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc4f0-887">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz: Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-887">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cc4f0-888">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-888">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Thread.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Thread.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Thread::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="cc4f0-889">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-889">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-890">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-890">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-891">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-891">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc4f0-892">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz: Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-892">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cc4f0-893">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-893">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.Invoke">
      <MemberSignature Language="C#" Value="void _Thread.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Thread.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Thread::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="cc4f0-894">Określa element członkowski.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-894">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="cc4f0-895">Zarezerwowane do użytku w przyszłości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-895">Reserved for future use.</span>
          </span>
          <span data-ttu-id="cc4f0-896">Musi być wartością IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-896">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="cc4f0-897">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-897">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="cc4f0-898">Flagi opisujące kontekst wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-898">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="cc4f0-899">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-899">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="cc4f0-900">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-900">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="cc4f0-901">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-901">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="cc4f0-902">Indeks pierwszego argumentu, który zawiera błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-902">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-903">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-903">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-904">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-904">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc4f0-905">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz: Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-905">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="cc4f0-906">Dostęp z późnym wiązaniem przy użyciu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-906">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadState">
      <MemberSignature Language="C#" Value="public System.Threading.ThreadState ThreadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ThreadState ThreadState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ThreadState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadState As ThreadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ThreadState ThreadState { System::Threading::ThreadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadState : System.Threading.ThreadState" Usage="System.Threading.Thread.ThreadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-907">Pobiera wartość zawierającą stany bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-907">Gets a value containing the states of the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc4f0-908">Jedną z <see cref="T:System.Threading.ThreadState" /> wartości, wskazującą stan bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-908">One of the <see cref="T:System.Threading.ThreadState" /> values indicating the state of the current thread.</span>
          </span>
          <span data-ttu-id="cc4f0-909">Wartość początkowa to <see langword="Unstarted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-909">The initial value is <see langword="Unstarted" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-910"><xref:System.Threading.Thread.ThreadState%2A> Właściwość zapewnia bardziej szczegółowe informacje, niż <xref:System.Threading.Thread.IsAlive%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-910">The <xref:System.Threading.Thread.ThreadState%2A> property provides more specific information than the <xref:System.Threading.Thread.IsAlive%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cc4f0-911">Stan wątku jest tylko w scenariuszach debugowania.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-911">Thread state is only of interest in debugging scenarios.</span></span> <span data-ttu-id="cc4f0-912">Kod powinien nigdy nie używaj stan wątku do synchronizowania działania wątków.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-912">Your code should never use thread state to synchronize the activities of threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-913">Poniższy przykład kodu demonstruje, uzyskiwanie dostępu do `ThreadState` wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-913">The following code example demonstrates accessing the `ThreadState` of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ThreadState#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.thread.threadstate/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ThreadState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.threadstate/cs/source.cs#1)]
 [!code-vb[System.Threading.Thread.ThreadState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.threadstate/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/managed-thread-states.md">
          <span data-ttu-id="cc4f0-914">Zarządzane stany wątków</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-914">Managed Thread States</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TrySetApartmentState">
      <MemberSignature Language="C#" Value="public bool TrySetApartmentState (System.Threading.ApartmentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetApartmentState(valuetype System.Threading.ApartmentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetApartmentState (state As ApartmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetApartmentState(System::Threading::ApartmentState state);" />
      <MemberSignature Language="F#" Value="member this.TrySetApartmentState : System.Threading.ApartmentState -&gt; bool" Usage="thread.TrySetApartmentState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Threading.ApartmentState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="cc4f0-915">Nowy stan apartamentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-915">The new apartment state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-916">Ustawia stan apartamentu wątku, przed jej ponownym uruchomieniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-916">Sets the apartment state of a thread before it is started.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-917">
            <see langword="true" /> Jeśli ustawiono stan apartamentu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-917">
              <see langword="true" /> if the apartment state is set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-918">Nowe wątki są inicjowane jako <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> jeśli ich stan apartamentu nie została ustawiona, zanim zostaną uruchomione.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-918">New threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="cc4f0-919">Stan apartamentu musi być ustawiona przed uruchomieniem wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-919">Apartment state must be set before a thread is started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-920">Głównego wątku aplikacji jest inicjowany do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-920">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="cc4f0-921">Jedynym sposobem, aby ustawić stan apartamentu wątku głównego aplikacji, aby <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> polega na zastosowaniu <xref:System.STAThreadAttribute> atrybutu do metody punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-921">The only way to set the apartment state of the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> is to apply the <xref:System.STAThreadAttribute> attribute to the entry point method.</span></span>  
  
 <span data-ttu-id="cc4f0-922"><xref:System.Threading.Thread.TrySetApartmentState%2A> Metody, wraz z <xref:System.Threading.Thread.GetApartmentState%2A> metody i <xref:System.Threading.Thread.SetApartmentState%2A> zastępuje metodę <xref:System.Threading.Thread.ApartmentState%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-922">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method, along with the <xref:System.Threading.Thread.GetApartmentState%2A> method and the <xref:System.Threading.Thread.SetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc4f0-923">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-923">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="cc4f0-924">Przykład kodu tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-924">The code example creates a thread.</span></span> <span data-ttu-id="cc4f0-925">Przed rozpoczęciem wątku <xref:System.Threading.Thread.GetApartmentState%2A> Wyświetla początkowej <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> stanu i <xref:System.Threading.Thread.SetApartmentState%2A> zmienia stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-925">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cc4f0-926"><xref:System.Threading.Thread.TrySetApartmentState%2A> Następnie metoda zwraca `false` podczas próby zmiany stanu do <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> ponieważ stan apartamentu została już ustawiona.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-926">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="cc4f0-927">Jeśli w tej samej operacji miał zostanie podjęta określona za pomocą <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> będzie zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-927">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="cc4f0-928">Po rozpoczęciu wątku <xref:System.Threading.Thread.TrySetApartmentState%2A> metoda jest używana ponownie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-928">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="cc4f0-929">Tym razem zgłasza <xref:System.Threading.ThreadStateException> ponieważ wątek jest już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-929">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cc4f0-930">
            <paramref name="state" /> nie jest stan apartamentu prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-930">
              <paramref name="state" /> is not a valid apartment state.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="cc4f0-931">Wątek już został uruchomiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-931">The thread has already been started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VolatileRead">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-932">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-932">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-933">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-933">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static byte VolatileRead (ref byte address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 VolatileRead(unsigned int8&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte VolatileRead(System::Byte % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; byte" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-934">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-934">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-935">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-935">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-936">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-936">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-937">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-937">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-938"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-938"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-939">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-939">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-940">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-940">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-941">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-941">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-942">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-942">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-943">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-943">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-944">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-944">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-945">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-945">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-946">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-946">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static double VolatileRead (ref double address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 VolatileRead(float64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double VolatileRead(double % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; double" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-947">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-947">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-948">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-948">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-949">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-949">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-950">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-950">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-951"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-951"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-952">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-952">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-953">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-953">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-954">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-954">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-955">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-955">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-956">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-956">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-957">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-957">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-958">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-958">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-959">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-959">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static short VolatileRead (ref short address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 VolatileRead(int16&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short VolatileRead(short % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int16" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-960">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-960">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-961">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-961">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-962">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-962">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-963">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-963">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-964"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-964"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-965">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-965">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-966">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-966">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-967">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-967">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-968">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-968">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-969">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-969">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-970">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-970">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-971">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-971">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-972">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-972">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static int VolatileRead (ref int address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 VolatileRead(int32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int VolatileRead(int % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-973">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-973">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-974">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-974">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-975">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-975">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-976">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-976">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-977"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-977"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-978">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-978">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-979">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-979">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-980">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-980">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-981">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-981">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-982">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-982">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-983">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-983">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-984">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-984">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-985">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-985">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static long VolatileRead (ref long address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 VolatileRead(int64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long VolatileRead(long % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int64" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-986">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-986">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-987">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-987">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-988">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-988">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-989">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-989">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-990"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-990"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-991">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-991">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-992">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-992">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-993">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-993">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-994">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-994">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-995">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-995">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-996">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-996">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-997">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-997">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-998">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-998">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static IntPtr VolatileRead (ref IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int VolatileRead(native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr VolatileRead(IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; nativeint" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.IntPtr" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-999">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-999">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1000">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1000">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1001">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1001">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1002">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1002">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1003"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1003"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1004">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1004">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1005">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1005">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1006">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1006">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1007">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1007">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1008">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1008">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1009">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1009">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1010">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1010">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1011">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1011">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static object VolatileRead (ref object address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object VolatileRead(object&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ VolatileRead(System::Object ^ % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; obj" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1012">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1012">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1013">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1013">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1014">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1014">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1015">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1015">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1016"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1016"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1017">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1017">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1018">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1018">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1019">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1019">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1020">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1020">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1021">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1021">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1022">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1022">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1023">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1023">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1024">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1024">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static sbyte VolatileRead (ref sbyte address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 VolatileRead(int8&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte VolatileRead(System::SByte % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; sbyte" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1025">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1025">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1026">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1026">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1027">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1027">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1028">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1028">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1029"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1029"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1030">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1030">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1031">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1031">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1032">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1032">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1033">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1033">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1034">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1034">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1035">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1035">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1036">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1036">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1037">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1037">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static float VolatileRead (ref float address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 VolatileRead(float32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float VolatileRead(float % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; single" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1038">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1038">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1039">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1039">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1040">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1040">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1041">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1041">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1042"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1042"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1043">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1043">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1044">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1044">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1045">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1045">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1046">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1046">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1047">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1047">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1048">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1048">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1049">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1049">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1050">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1050">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static ushort VolatileRead (ref ushort address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 VolatileRead(unsigned int16&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 VolatileRead(System::UInt16 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint16" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1051">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1051">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1052">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1052">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1053">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1053">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1054">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1054">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1055"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1055"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1056">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1056">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1057">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1057">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1058">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1058">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1059">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1059">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1060">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1060">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1061">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1061">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1062">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1062">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1063">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1063">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static uint VolatileRead (ref uint address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 VolatileRead(unsigned int32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 VolatileRead(System::UInt32 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint32" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1064">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1064">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1065">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1065">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1066">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1066">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1067">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1067">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1068"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1068"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1069">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1069">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1070">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1070">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1071">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1071">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1072">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1072">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1073">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1073">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1074">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1074">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1075">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1075">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1076">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1076">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static ulong VolatileRead (ref ulong address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 VolatileRead(unsigned int64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 VolatileRead(System::UInt64 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint64" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1077">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1077">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1078">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1078">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1079">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1079">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1080">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1080">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1081"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1081"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1082">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1082">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1083">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1083">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1084">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1084">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1085">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1085">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1086">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1086">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1087">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1087">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1088">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1088">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1089">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1089">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static UIntPtr VolatileRead (ref UIntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native unsigned int VolatileRead(native unsigned int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UIntPtr) As UIntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UIntPtr VolatileRead(UIntPtr % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; unativeint" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UIntPtr" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1090">Pole do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1090">The field to be read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1091">Odczytuje wartość pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1091">Reads the value of a field.</span>
          </span>
          <span data-ttu-id="cc4f0-1092">Wartość jest najnowsza wersja napisane przez każdy procesor w komputerze, niezależnie od tego, czy liczba procesorów lub stan pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1092">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1093">Ostatnia wartość zapisywane do tego pola przez każdy procesor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1093">The latest value written to the field by any processor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1094"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1094"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1095">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1095">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1096">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje wartość najnowszych zapisanych przez każdy procesor lokalizacji w pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1096">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="cc4f0-1097">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1097">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1098">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1098">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1099">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1099">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1100">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1100">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1101">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1101">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1102">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1102">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VolatileWrite">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-1103">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1103">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref byte address, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int8&amp; address, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Byte, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::Byte % address, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * byte -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte" RefType="ref" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1104">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1104">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1105">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1105">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1106">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1106">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1107"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1107"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1108">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1108">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1109">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1109">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1110">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1110">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1111">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1111">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1112">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1112">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1113">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1113">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1114">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1114">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1115">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1115">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref double address, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(float64&amp; address, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Double, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(double % address, double value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * double -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1116">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1116">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1117">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1117">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1118">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1118">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1119"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1119"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1120">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1120">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1121">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1121">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1122">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1122">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1123">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1123">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1124">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1124">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1125">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1125">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1126">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1126">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1127">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1127">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref short address, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int16&amp; address, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Short, value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(short % address, short value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int16 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16" RefType="ref" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1128">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1128">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1129">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1129">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1130">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1130">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1131"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1131"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1132">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1132">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1133">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1133">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1134">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1134">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1135">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1135">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1136">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1136">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1137">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1137">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1138">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1138">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1139">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1139">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref int address, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int32&amp; address, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Integer, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(int % address, int value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1140">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1140">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1141">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1141">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1142">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1142">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1143"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1143"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1144">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1144">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1145">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1145">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1146">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1146">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1147">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1147">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1148">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1148">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1149">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1149">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1150">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1150">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1151">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1151">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref long address, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int64&amp; address, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Long, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(long % address, long value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int64 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1152">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1152">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1153">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1153">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1154">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1154">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1155"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1155"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1156">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1156">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1157">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1157">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1158">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1158">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1159">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1159">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1160">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1160">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1161">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1161">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1162">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1162">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1163">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1163">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref IntPtr address, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(native int&amp; address, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As IntPtr, value As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(IntPtr % address, IntPtr value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * nativeint -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1164">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1164">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1165">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1165">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1166">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1166">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1167"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1167"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1168">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1168">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1169">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1169">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1170">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1170">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1171">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1171">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1172">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1172">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1173">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1173">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1174">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1174">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1175">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1175">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref object address, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(object&amp; address, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::Object ^ % address, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * obj -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Object" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1176">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1176">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1177">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1177">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1178">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1178">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1179"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1179"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1180">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1180">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1181">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1181">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1182">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1182">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1183">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1183">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1184">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1184">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1185">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1185">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1186">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1186">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1187">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1187">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref sbyte address, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int8&amp; address, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As SByte, value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::SByte % address, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * sbyte -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte" RefType="ref" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1188">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1188">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1189">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1189">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1190">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1190">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1191"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1191"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1192">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1192">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1193">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1193">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1194">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1194">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1195">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1195">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1196">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1196">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1197">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1197">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1198">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1198">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1199">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1199">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref float address, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(float32&amp; address, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Single, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(float % address, float value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * single -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1200">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1200">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1201">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1201">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1202">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1202">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1203"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1203"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1204">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1204">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1205">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1205">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1206">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1206">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1207">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1207">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1208">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1208">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1209">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1209">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1210">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1210">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1211">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1211">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref ushort address, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int16&amp; address, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UShort, value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt16 % address, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint16 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16" RefType="ref" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1212">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1212">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1213">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1213">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1214">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1214">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1215"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1215"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1216">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1216">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1217">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1217">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1218">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1218">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1219">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1219">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1220">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1220">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1221">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1221">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1222">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1222">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1223">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1223">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref uint address, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int32&amp; address, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UInteger, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt32 % address, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint32 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32" RefType="ref" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1224">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1224">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1225">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1225">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1226">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1226">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1227"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1227"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1228">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1228">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1229">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1229">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1230">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1230">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1231">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1231">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1232">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1232">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1233">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1233">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1234">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1234">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1235">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1235">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref ulong address, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int64&amp; address, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As ULong, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt64 % address, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint64 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt64" RefType="ref" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1236">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1236">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1237">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1237">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1238">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1238">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1239"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1239"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1240">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1240">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1241">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1241">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1242">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1242">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1243">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1243">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1244">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1244">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1245">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1245">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1246">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1246">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1247">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1247">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref UIntPtr address, UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(native unsigned int&amp; address, native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UIntPtr, value As UIntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(UIntPtr % address, UIntPtr value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * unativeint -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UIntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.UIntPtr" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="cc4f0-1248">Pole, do której ma być zapisywane wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1248">The field to which the value is to be written.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cc4f0-1249">Wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1249">The value to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc4f0-1250">Zapisuje wartość do pola natychmiast, tak aby wartość jest widoczna dla wszystkich procesorów w komputerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1250">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1251"><xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> dla szczególnych przypadkach synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1251"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="cc4f0-1252">W normalnych warunkach, C# `lock` instrukcji, Visual Basic `SyncLock` instrukcji i <xref:System.Threading.Monitor> klasy dostarczają alternatywy łatwiejsze.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1252">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="cc4f0-1253">W systemie wieloprocesorowym <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartości zapisane w lokalizacji pamięci jest natychmiast widoczny dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1253">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="cc4f0-1254">Może to wymagać opróżnianie procesora, pamięci podręcznych.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1254">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="cc4f0-1255">Nawet na komputerze jednoprocesorowym <xref:System.Threading.Thread.VolatileRead%2A> i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytać lub zapisywane w pamięci, a nie pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1255">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="cc4f0-1256">W związku z tym można ich użyć do synchronizowania dostępu do pola, które mogą być aktualizowane przez inny wątek lub sprzętu.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1256">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="cc4f0-1257">Wywołanie tej metody wpływa na tylko dostęp do jednej pamięci.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1257">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="cc4f0-1258">Aby zapewnić skuteczne synchronizacji dla pola, należy użyć wszelki dostęp do pola <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1258">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc4f0-1259">W języku C# za pomocą `volatile` modyfikator pola gwarantuje, że wszelki dostęp do tego pola używa <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1259">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static bool Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; bool" Usage="System.Threading.Thread.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cc4f0-1260">Powoduje, że wątek wywołujący, umożliwiające uzyskanie wykonywania do innego wątku, który jest gotowy do uruchomienia na bieżącym procesora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1260">Causes the calling thread to yield execution to another thread that is ready to run on the current processor.</span>
          </span>
          <span data-ttu-id="cc4f0-1261">System operacyjny wybiera wątku do podania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1261">The operating system selects the thread to yield to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cc4f0-1262">
            <see langword="true" /> Jeśli system operacyjny przełączenie wykonywania do innego wątku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc4f0-1262">
              <see langword="true" /> if the operating system switched execution to another thread; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc4f0-1263">Jeśli ta metoda zakończy się powodzeniem, jest uzyskane pozostałej części bieżącego przedziału czasu dla wątku.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1263">If this method succeeds, the rest of the thread's current time slice is yielded.</span></span> <span data-ttu-id="cc4f0-1264">System operacyjny planuje wątku wywołującego do innego przedziału czasu, zgodnie z jego priorytet i stan innych wątków, które są dostępne do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1264">The operating system schedules the calling thread for another time slice, according to its priority and the status of other threads that are available to run.</span></span>  
  
 <span data-ttu-id="cc4f0-1265">Reaguje jest ograniczona do procesora, który jest wykonywany wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1265">Yielding is limited to the processor that is executing the calling thread.</span></span> <span data-ttu-id="cc4f0-1266">System operacyjny nie przełączy wykonywania do innego procesora, nawet jeśli ten procesor jest w stanie bezczynności lub jest uruchomiona w wątku o niższym priorytecie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1266">The operating system will not switch execution to another processor, even if that processor is idle or is running a thread of lower priority.</span></span> <span data-ttu-id="cc4f0-1267">Jeśli istnieją nie ma innych wątków, które są gotowe do wykonania na procesorze bieżącego systemu operacyjnego nie przekazuje wykonywanie i ta metoda zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1267">If there are no other threads that are ready to execute on the current processor, the operating system does not yield execution, and this method returns `false`.</span></span>  
  
 <span data-ttu-id="cc4f0-1268">Ta metoda jest odpowiednikiem przy użyciu platformy wywołana w celu wywołania natywny Win32 `SwitchToThread` funkcji.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1268">This method is equivalent to using platform invoke to call the native Win32 `SwitchToThread` function.</span></span> <span data-ttu-id="cc4f0-1269">Należy wywołać <xref:System.Threading.Thread.Yield%2A> wywołać metody zamiast przy użyciu platformy, ponieważ wywołanie platformy pomija wszelkie niestandardowe zachowanie wątkowości host zgłosił żądanie.</span><span class="sxs-lookup"><span data-stu-id="cc4f0-1269">You should call the <xref:System.Threading.Thread.Yield%2A> method instead of using platform invoke, because platform invoke bypasses any custom threading behavior the host has requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>