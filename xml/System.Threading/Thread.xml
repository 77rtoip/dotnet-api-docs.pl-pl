<Type Name="Thread" FullName="System.Threading.Thread">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b191f27764f5c1ddc44910f2efc96055d50d4945" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143879" /></Metadata><TypeSignature Language="C#" Value="public sealed class Thread : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, System.Runtime.InteropServices._Thread" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Thread extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.Runtime.InteropServices._Thread" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Thread" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Thread&#xA;Inherits CriticalFinalizerObject&#xA;Implements _Thread" />
  <TypeSignature Language="C++ CLI" Value="public ref class Thread sealed : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, System::Runtime::InteropServices::_Thread" />
  <TypeSignature Language="F#" Value="type Thread = class&#xA;    inherit CriticalFinalizerObject&#xA;    interface _Thread" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Thread</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Thread))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d19b6-101">Tworzy i kontroluje wątek, ustawia jego priorytet i pobiera jego stan.</span><span class="sxs-lookup"><span data-stu-id="d19b6-101">Creates and controls a thread, sets its priority, and gets its status.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-102">Po rozpoczęciu procesu środowisko uruchomieniowe języka wspólnego automatycznie tworzy jeden wątek pierwszego planu, aby wykonać kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-102">When a process starts, the common language runtime automatically creates a single foreground thread to execute application code.</span></span> <span data-ttu-id="d19b6-103">Wraz z tym głównym wątkiem pierwszego planu proces może utworzyć jeden lub więcej wątków, aby wykonać część kodu programu skojarzonego z procesem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-103">Along with this main foreground thread, a process can create one or more threads to execute a portion of the program code associated with the process.</span></span> <span data-ttu-id="d19b6-104">Te wątki można wykonać na pierwszym planie lub w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-104">These threads can execute either in the foreground or in the background.</span></span> <span data-ttu-id="d19b6-105">Ponadto można użyć <xref:System.Threading.ThreadPool> klasy do wykonywania kodu w wątkach roboczych, które są zarządzane przez środowisko uruchomieniowe języka wspólnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-105">In addition, you can use the <xref:System.Threading.ThreadPool> class to execute code on worker threads that are managed by the common language runtime.</span></span>  
  
 <span data-ttu-id="d19b6-106">W tej sekcji</span><span class="sxs-lookup"><span data-stu-id="d19b6-106">In this section</span></span>  
  
 <span data-ttu-id="d19b6-107">[Uruchamianie wątku](#Starting) </span><span class="sxs-lookup"><span data-stu-id="d19b6-107">[Starting a thread](#Starting) </span></span>  
 <span data-ttu-id="d19b6-108">[Pobieranie obiektów wątków](#Retrieving) </span><span class="sxs-lookup"><span data-stu-id="d19b6-108">[Retrieving Thread objects](#Retrieving) </span></span>  
 <span data-ttu-id="d19b6-109">[Wątki pierwszego planu i tła](#Foreground) </span><span class="sxs-lookup"><span data-stu-id="d19b6-109">[Foreground and background threads](#Foreground) </span></span>  
 <span data-ttu-id="d19b6-110">[Kultura i wątki](#Culture) </span><span class="sxs-lookup"><span data-stu-id="d19b6-110">[Culture and threads](#Culture) </span></span>  
 [<span data-ttu-id="d19b6-111">Pobieranie informacji o wątkach i sterowanie nimi</span><span class="sxs-lookup"><span data-stu-id="d19b6-111">Getting information about and controlling threads</span></span>](#Properties)   
   
<a name="Starting"></a>   
## <a name="starting-a-thread"></a><span data-ttu-id="d19b6-112">Uruchamianie wątku</span><span class="sxs-lookup"><span data-stu-id="d19b6-112">Starting a thread</span></span>  
 <span data-ttu-id="d19b6-113">Wątek można uruchomić, dostarczając delegata, który reprezentuje metodę, którą wątek ma wykonać w konstruktorze klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-113">You start a thread by supplying a delegate that represents the method the thread is to execute in its class constructor.</span></span> <span data-ttu-id="d19b6-114">Następnie należy wywołać metodę <xref:System.Threading.Thread.Start%2A> , aby rozpocząć wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-114">You then call the <xref:System.Threading.Thread.Start%2A> method to begin execution.</span></span>  
  
 <span data-ttu-id="d19b6-115"><xref:System.Threading.Thread> Konstruktory mogą przyjmować jeden z dwóch typów delegatów, w zależności od tego, czy można przekazać argument do metody do wykonania:</span><span class="sxs-lookup"><span data-stu-id="d19b6-115">The <xref:System.Threading.Thread> constructors can take either of two delegate types, depending on whether you can pass an argument to the method to be executed:</span></span>  
  
-   <span data-ttu-id="d19b6-116">Jeśli metoda nie ma argumentów, przekazuje <xref:System.Threading.ThreadStart> delegata do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-116">If the method has no arguments, you pass a <xref:System.Threading.ThreadStart> delegate to  the constructor.</span></span> <span data-ttu-id="d19b6-117">Ma podpis:</span><span class="sxs-lookup"><span data-stu-id="d19b6-117">It has the signature:</span></span>  
  
    ```csharp  
    public delegate void ThreadStart()  
    ```  
  
    ```vb  
    Public Delegate Sub ThreadStart()  
    ```  
  
     <span data-ttu-id="d19b6-118">Poniższy przykład tworzy i uruchamia wątek, który wykonuje `ExecuteInForeground` metodę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-118">The following example creates and starts a thread that executes the `ExecuteInForeground` method.</span></span> <span data-ttu-id="d19b6-119">Metoda Wyświetla informacje o niektórych właściwościach wątku, a następnie wykonuje pętlę, w której wstrzymuje się w ciągu pół sekundy i wyświetla upłynęło liczbę sekund.</span><span class="sxs-lookup"><span data-stu-id="d19b6-119">The method displays  information about some thread properties, then executes a loop in which it pauses for half a second and displays the elapsed number of seconds.</span></span> <span data-ttu-id="d19b6-120">Gdy wątek jest wykonywany przez co najmniej pięć sekund, pętla kończy się i wątek kończy wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-120">When the thread has executed for at least five seconds, the loop ends and the thread terminates execution.</span></span>  
  
     [!code-csharp[System.Threading.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/ThreadStart1.cs#1)]
     [!code-vb[System.Threading.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/ThreadStart1.vb#1)]  
  
-   <span data-ttu-id="d19b6-121">Jeśli metoda ma argument, przekazuje <xref:System.Threading.ParameterizedThreadStart> delegata do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-121">If the method has an argument, you pass a <xref:System.Threading.ParameterizedThreadStart> delegate to the constructor.</span></span> <span data-ttu-id="d19b6-122">Ma podpis:</span><span class="sxs-lookup"><span data-stu-id="d19b6-122">It has the signature:</span></span>  
  
    ```csharp  
    public delegate void ParameterizedThreadStart(object obj)  
    ```  
  
    ```vb  
    Public Delegate Sub ParameterizedThreadStart(obj As Object)  
    ```  
  
     <span data-ttu-id="d19b6-123">Metoda wykonywana przez delegata może następnie rzutować (w C#) lub skonwertować (w Visual Basic) parametr do odpowiedniego typu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-123">The method executed by the delegate can then cast (in C#) or convert (in Visual Basic) the parameter to the appropriate type.</span></span>  
  
     <span data-ttu-id="d19b6-124">Poniższy przykład jest identyczny z poprzednim, z tą różnicą, że wywołuje <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-124">The following example is identical to the previous one, except that it calls the <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor.</span></span> <span data-ttu-id="d19b6-125">Ta wersja `ExecuteInForeground` metody ma jeden parametr, który reprezentuje przybliżoną liczbę milisekund, jaką ma wykonać pętla.</span><span class="sxs-lookup"><span data-stu-id="d19b6-125">This version of the `ExecuteInForeground` method has a single parameter that represents the approximate number of milliseconds the loop is to execute.</span></span>  
  
     [!code-csharp[System.Threading.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/ThreadStart2.cs#2)]
     [!code-vb[System.Threading.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/ThreadStart2.vb#2)]  
  
 <span data-ttu-id="d19b6-126">Nie jest konieczne zachowywanie odwołania do <xref:System.Threading.Thread> obiektu po rozpoczęciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-126">It is not necessary to retain a reference to a <xref:System.Threading.Thread> object once you have started the thread.</span></span> <span data-ttu-id="d19b6-127">Wątek będzie nadal wykonywany do momentu zakończenia procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-127">The thread continues to execute until the thread procedure is complete.</span></span>  
  
<a name="Retrieving"></a>   
## <a name="retrieving-thread-objects"></a><span data-ttu-id="d19b6-128">Pobieranie obiektów wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-128">Retrieving Thread objects</span></span>  
 <span data-ttu-id="d19b6-129">Można użyć właściwości static (`Shared` in Visual Basic) <xref:System.Threading.Thread.CurrentThread%2A> , aby pobrać odwołanie do aktualnie wykonywanego wątku z kodu, który wykonuje wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-129">You can use the static (`Shared` in Visual Basic)  <xref:System.Threading.Thread.CurrentThread%2A> property to retrieve a reference to the currently executing thread from the code that the thread is executing.</span></span> <span data-ttu-id="d19b6-130">Poniższy przykład używa <xref:System.Threading.Thread.CurrentThread%2A> właściwości, aby wyświetlić informacje o wątku głównej aplikacji, drugi wątek pierwszego planu, wątek w tle i wątek puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-130">The following example uses the <xref:System.Threading.Thread.CurrentThread%2A> property to display information about the main application thread, another foreground thread, a background thread, and a thread pool thread.</span></span>  
  
 [!code-csharp[System.Threading.Thread#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/Instance1.cs#4)]
 [!code-vb[System.Threading.Thread#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/Instance1.vb#4)]  
  
<a name="Foreground"></a>   
## <a name="foreground-and-background-threads"></a><span data-ttu-id="d19b6-131">Wątki pierwszego planu i tła</span><span class="sxs-lookup"><span data-stu-id="d19b6-131">Foreground and background threads</span></span>  
 <span data-ttu-id="d19b6-132"><xref:System.Threading.Thread> Wystąpienia klasy reprezentują wątki pierwszego planu lub wątki w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-132">Instances of the <xref:System.Threading.Thread> class represent either foreground threads or background threads.</span></span> <span data-ttu-id="d19b6-133">Wątki w tle są takie same jak wątki pierwszego planu z jednym wyjątkiem: wątek w tle nie utrzymuje procesu uruchomionego, jeśli wszystkie wątki pierwszego planu zostały zakończone.</span><span class="sxs-lookup"><span data-stu-id="d19b6-133">Background threads are identical to foreground threads with one exception: a background thread does not keep a process running if all foreground threads have terminated.</span></span> <span data-ttu-id="d19b6-134">Po zatrzymaniu wszystkich wątków pierwszego planu środowisko uruchomieniowe zatrzymuje wszystkie wątki w tle i zamknie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-134">Once all foreground threads have been stopped, the runtime stops all background threads and shuts down.</span></span>  
  
 <span data-ttu-id="d19b6-135">Domyślnie następujące wątki są wykonywane na pierwszym planie:</span><span class="sxs-lookup"><span data-stu-id="d19b6-135">By default, the following threads execute in the foreground:</span></span>  
  
-   <span data-ttu-id="d19b6-136">Główny wątek aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-136">The main application thread.</span></span>  
  
-   <span data-ttu-id="d19b6-137">Wszystkie wątki utworzone przez wywołanie <xref:System.Threading.Thread> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-137">All threads created by calling a <xref:System.Threading.Thread> class constructor.</span></span>  
  
 <span data-ttu-id="d19b6-138">Następujące wątki są domyślnie wykonywane w tle:</span><span class="sxs-lookup"><span data-stu-id="d19b6-138">The following threads execute in the background by default:</span></span>  
  
-   <span data-ttu-id="d19b6-139">Wątki puli wątków, które są pulą wątków roboczych obsługiwanych przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="d19b6-139">Thread pool threads, which are a pool of worker threads maintained by the runtime.</span></span>  <span data-ttu-id="d19b6-140">Można skonfigurować pulę wątków i zaplanować prace w wątkach puli wątków przy użyciu <xref:System.Threading.ThreadPool> klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-140">You can configure the thread pool and schedule work on thread pool threads by using the <xref:System.Threading.ThreadPool> class.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d19b6-141">Asynchroniczne operacje oparte na zadaniach są automatycznie wykonywane w wątkach puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-141">Task-based asynchronous operations automatically execute on thread pool threads.</span></span> <span data-ttu-id="d19b6-142">Asynchroniczne operacje oparte na zadaniach używają <xref:System.Threading.Tasks.Task> klas <xref:System.Threading.Tasks.Task%601> i, aby zaimplementować [wzorzec asynchroniczny oparty na zadaniach](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md).</span><span class="sxs-lookup"><span data-stu-id="d19b6-142">Task-based asynchronous operations use the <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> classes to implement the [task-based asynchronous pattern](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md).</span></span>  
  
-   <span data-ttu-id="d19b6-143">Wszystkie wątki, które wprowadzają zarządzane środowisko wykonawcze z kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-143">All threads that enter the managed execution environment from unmanaged code.</span></span>  
  
 <span data-ttu-id="d19b6-144">Można zmienić wątek do wykonania w tle, ustawiając <xref:System.Threading.Thread.IsBackground%2A> właściwość w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-144">You can change a thread to execute in the background by setting the <xref:System.Threading.Thread.IsBackground%2A> property at any time.</span></span>  <span data-ttu-id="d19b6-145">Wątki w tle są przydatne w przypadku każdej operacji, która powinna być kontynuowana, gdy aplikacja jest uruchomiona, ale nie powinna uniemożliwiać przerwania działania aplikacji, na przykład monitorowania zmian systemu plików lub połączeń gniazd przychodzących.</span><span class="sxs-lookup"><span data-stu-id="d19b6-145">Background threads are useful for any operation that should continue as long as an application is running but should not prevent the application from terminating, such as monitoring file system changes or incoming socket connections.</span></span>  
  
 <span data-ttu-id="d19b6-146">Poniższy przykład ilustruje różnicę między wątkiem na pierwszym planie i w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-146">The following example illustrates the difference between foreground and background threads.</span></span> <span data-ttu-id="d19b6-147">Jest on podobny do pierwszego przykładu w sekcji [Uruchamianie wątku](#Starting) , z tą różnicą, że ustawia wątek do wykonania w tle przed jego uruchomieniem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-147">It is like the first example in the [Starting a thread](#Starting) section, except that it sets the thread to execute in the background before starting it.</span></span> <span data-ttu-id="d19b6-148">Jak widać, pętla zostanie przerwana przed wykonaniem przez pięć sekund.</span><span class="sxs-lookup"><span data-stu-id="d19b6-148">As the output shows, the loop is interrupted before it executes for five seconds.</span></span>  
  
 [!code-csharp[System.Threading.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread/cs/BackgroundEx1.cs#3)]
 [!code-vb[System.Threading.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread/vb/BackgroundEx1.vb#3)]  
  
<a name="Culture"></a>   
## <a name="culture-and-threads"></a><span data-ttu-id="d19b6-149">Kultura i wątki</span><span class="sxs-lookup"><span data-stu-id="d19b6-149">Culture and threads</span></span>  
 <span data-ttu-id="d19b6-150">Każdy wątek ma kulturę, reprezentowane przez <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość i kulturę interfejsu użytkownika reprezentowanej <xref:System.Threading.Thread.CurrentUICulture%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-150">Each thread has a culture, represented by the <xref:System.Threading.Thread.CurrentCulture%2A> property, and a UI culture, represented by the <xref:System.Threading.Thread.CurrentUICulture%2A> property.</span></span>  <span data-ttu-id="d19b6-151">Bieżąca kultura obsługuje takie operacje, które są zależne od kultury, jak analizowanie i formatowanie, Porównywanie ciągów i sortowanie, a także kontroluje system pisania i kalendarz używany przez wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-151">The current culture supports such culture-sensitive  operations as parsing and formatting, string comparison and sorting, and also controls the writing system and calendar used by a thread.</span></span> <span data-ttu-id="d19b6-152">Bieżąca kultura interfejsu użytkownika umożliwia pobieranie zasobów z uwzględnieniem kultury w plikach zasobów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-152">The current UI culture provides for culture-sensitive retrieval of resources in resource files.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="d19b6-153">Właściwości <xref:System.Threading.Thread.CurrentCulture> i<xref:System.Threading.Thread.CurrentUICulture> nie działają prawidłowo, gdy są używane z jakimkolwiek wątkiem innym niż bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-153">The <xref:System.Threading.Thread.CurrentCulture> and <xref:System.Threading.Thread.CurrentUICulture> properties don't work reliably when used with any thread other than the current thread.</span></span> <span data-ttu-id="d19b6-154">W .NET Framework odczytywanie tych właściwości jest niezawodne, chociaż ustawienie tych właściwości dla wątku innego niż bieżący wątek nie jest.</span><span class="sxs-lookup"><span data-stu-id="d19b6-154">In .NET Framework, reading these properties is reliable, although setting these properties for a thread other than the current thread is not.</span></span> <span data-ttu-id="d19b6-155">W przypadku platformy .NET Core <xref:System.InvalidOperationException> jest zgłaszany, jeśli wątek próbuje odczytać lub zapisać te właściwości w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-155">On .NET Core, an <xref:System.InvalidOperationException> is thrown if a thread attempts to read or write these properties on a different thread.</span></span>
> <span data-ttu-id="d19b6-156">Zalecamy używanie <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> właściwości i <xref:System.Globalization.CultureInfo.CurrentUICulture?displayProperty=nameWithType> do pobierania i ustawiania bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="d19b6-156">We recommend that you use the <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> and <xref:System.Globalization.CultureInfo.CurrentUICulture?displayProperty=nameWithType> properties to retrieve and set the current culture.</span></span>

 <span data-ttu-id="d19b6-157">Podczas tworzenia wystąpienia nowego wątku jego kultura i kultura interfejsu użytkownika są definiowane przez bieżącą kulturę systemu i kulturę interfejsu użytkownika, a nie przez kulturę i kultury interfejsu użytkownika wątku, z którego tworzony jest nowy wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-157">When a new thread is instantiated, its culture and UI culture are defined by the current system culture and UI culture, and not by the culture and UI culture of the thread from which the new thread is created.</span></span> <span data-ttu-id="d19b6-158">Oznacza to, na przykład, że jeśli bieżącą kulturą systemu jest angielski (Stany Zjednoczone), a bieżąca kultura wątku aplikacji głównej jest francuski (Francja), kultura nowego wątku utworzonego przez wywołanie <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> konstruktora z wątku podstawowego jest angielski (Stany Zjednoczone), a nie francuski (Francja).</span><span class="sxs-lookup"><span data-stu-id="d19b6-158">This means, for example, that if the current system culture is English (United States) and the current culture of the primary application thread is French (France), the culture of a new thread created by calling the   <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor from the primary thread is English (United States), and not French (France).</span></span> <span data-ttu-id="d19b6-159">Aby uzyskać więcej informacji, zobacz sekcję <xref:System.Globalization.CultureInfo> "Kultura i wątki" tematu klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-159">For more information, see the "Culture and threads" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-160">Nie jest to prawdziwe w przypadku wątków, które wykonują operacje asynchroniczne dla aplikacji [!INCLUDE[net_v46](~/includes/net-v46-md.md)] przeznaczonych dla i nowszych wersji, w tym przypadku kultura i kultury interfejsu użytkownika są częścią operacji asynchronicznych "context"; wątek, w którym operacja asynchroniczna wykonywane domyślnie dziedziczy kultury i kulturę interfejsu użytkownika wątku, z którego została uruchomiona operacja asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="d19b6-160">This is not true of threads that execute asynchronous operations for apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] and later versions, In this case, the culture and UI culture is part of an asynchronous operations' context; the thread on which an asynchronous operation executes by default inherits the culture and UI culture of the thread from which the asynchronous operation was launched.</span></span> <span data-ttu-id="d19b6-161">Aby uzyskać więcej informacji, zapoznaj się z sekcją "kultury i operacje asynchroniczne oparte na <xref:System.Globalization.CultureInfo> zadaniach" w temacie dotyczącym klas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-161">For more information, see the "Culture and task-based asynchronous operations" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>  
  
 <span data-ttu-id="d19b6-162">Możesz wykonać jedną z następujących czynności, aby upewnić się, że wszystkie wątki wykonywane w aplikacji mają tę samą kulturę i kulturę interfejsu użytkownika:</span><span class="sxs-lookup"><span data-stu-id="d19b6-162">You can do either of the following to ensure that all of the threads executing in an application share the same culture and UI culture:</span></span>  
  
-   <span data-ttu-id="d19b6-163">Można przekazać <xref:System.Globalization.CultureInfo> obiekt, który reprezentuje tę kulturę, <xref:System.Threading.ParameterizedThreadStart> do delegata lub <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-163">You can pass a <xref:System.Globalization.CultureInfo> object that represents that culture to the <xref:System.Threading.ParameterizedThreadStart> delegate or the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="d19b6-164">W przypadku aplikacji uruchamianych [!INCLUDE[net_v45](~/includes/net-v45-md.md)] w systemie i nowszych wersjach można zdefiniować kulturę i kulturę interfejsu użytkownika, która ma być przypisana do wszystkich wątków utworzonych w domenie aplikacji przez ustawienie wartości <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A?displayProperty=nameWithType> właściwości i <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-164">For apps running on the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later versions, you can define the culture and UI culture that is to be assigned to all threads created in an application domain by setting the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A?displayProperty=nameWithType> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="d19b6-165">Należy zauważyć, że jest to ustawienie domeny dla poszczególnych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-165">Note that this is a per-application domain setting.</span></span>  

 <span data-ttu-id="d19b6-166">Aby uzyskać więcej informacji i przykładów, zobacz sekcję <xref:System.Globalization.CultureInfo> "Kultura i wątki" tematu klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-166">For more information and examples, see the "Culture and threads" section of the <xref:System.Globalization.CultureInfo> class topic.</span></span>

<a name="Properties"></a>   
## <a name="getting-information-about-and-controlling-threads"></a><span data-ttu-id="d19b6-167">Pobieranie informacji o wątkach i sterowanie nimi</span><span class="sxs-lookup"><span data-stu-id="d19b6-167">Getting information about and controlling threads</span></span>  
 <span data-ttu-id="d19b6-168">Można pobrać wiele wartości właściwości, które dostarczają informacje o wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-168">You can retrieve a number of property values that provide information about a thread.</span></span> <span data-ttu-id="d19b6-169">W niektórych przypadkach można również ustawić te wartości właściwości w celu kontrolowania operacji wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-169">In some cases, you can also set these property values to control the operation of the thread.</span></span> <span data-ttu-id="d19b6-170">Te właściwości wątku obejmują:</span><span class="sxs-lookup"><span data-stu-id="d19b6-170">These thread properties include:</span></span>  
  
-   <span data-ttu-id="d19b6-171">Nazwa.</span><span class="sxs-lookup"><span data-stu-id="d19b6-171">A name.</span></span> <span data-ttu-id="d19b6-172"><xref:System.Threading.Thread.Name%2A>to właściwość jednokrotnego zapisu, która służy do identyfikowania wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-172"><xref:System.Threading.Thread.Name%2A> is a write-once property that you can use to identify a thread.</span></span>  <span data-ttu-id="d19b6-173">Wartość domyślna to `null`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-173">Its default value is `null`.</span></span>  
  
-   <span data-ttu-id="d19b6-174">Kod skrótu, który można pobrać, wywołując <xref:System.Threading.Thread.GetHashCode%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-174">A hash code, which you can retrieve by calling the <xref:System.Threading.Thread.GetHashCode%2A> method.</span></span> <span data-ttu-id="d19b6-175">Kod skrótu może służyć do unikatowego identyfikowania wątku; w przypadku okresu istnienia wątku jego kod skrótu nie koliduje z wartością z dowolnego innego wątku, niezależnie od domeny aplikacji, z której ma zostać uzyskana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-175">The hash code can be used to uniquely identify a thread; for the lifetime of your thread, its hash code will not collide with the value from any other thread, regardless of the application domain from which you obtain the value.</span></span>  
  
-   <span data-ttu-id="d19b6-176">Identyfikator wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-176">A thread ID.</span></span> <span data-ttu-id="d19b6-177">Wartość właściwości tylko <xref:System.Threading.Thread.ManagedThreadId%2A> do odczytu jest przypisana przez środowisko uruchomieniowe i jednoznacznie identyfikuje wątek w ramach procesu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-177">The value of the read-only <xref:System.Threading.Thread.ManagedThreadId%2A> property is assigned by the runtime and uniquely identifies a thread within its process.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d19b6-178">[ThreadID](https://msdn.microsoft.com/library/windows/desktop/ms683233.aspx) systemu operacyjnego nie ma stałej relacji z zarządzanym wątkiem, ponieważ niezarządzany host może kontrolować relacje między wątki zarządzane i niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-178">An operating-system [ThreadId](https://msdn.microsoft.com/library/windows/desktop/ms683233.aspx) has no fixed relationship to a managed thread, because an unmanaged host can control the relationship between managed and unmanaged threads.</span></span> <span data-ttu-id="d19b6-179">W przypadku zaawansowanego hosta można użyć [interfejsu API hostingu środowiska CLR](https://msdn.microsoft.com/library/ms404385.aspx) do zaplanowania wielu zarządzanych wątków w tym samym wątku systemu operacyjnego lub przenoszenia zarządzanego wątku między różnymi wątkami systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-179">Specifically, a sophisticated host can use the [CLR Hosting API](https://msdn.microsoft.com/library/ms404385.aspx) to schedule many managed threads against the same operating system thread, or to move a managed thread between different operating system threads.</span></span>  
  
-   <span data-ttu-id="d19b6-180">Bieżący stan wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-180">The thread's current state.</span></span> <span data-ttu-id="d19b6-181">Na czas istnienia wątek jest zawsze w co najmniej jednym ze Stanów zdefiniowanych przez <xref:System.Threading.ThreadState> właściwość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-181">For the duration of its existence, a thread is always in one or more of the states defined by the <xref:System.Threading.ThreadState> property.</span></span>  
  
-   <span data-ttu-id="d19b6-182">Poziom priorytetu planowania zdefiniowany przez <xref:System.Threading.ThreadPriority> właściwość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-182">A scheduling priority level, which is defined by the <xref:System.Threading.ThreadPriority> property.</span></span> <span data-ttu-id="d19b6-183">Mimo że można ustawić tę wartość, aby zażądać priorytetu wątku, nie ma gwarancji, że jest on uznawany przez system operacyjny.</span><span class="sxs-lookup"><span data-stu-id="d19b6-183">Although you can set this value to request a thread's priority, it is not guaranteed to be honored by the operating system.</span></span>  
  
-   <span data-ttu-id="d19b6-184">Właściwość tylko <xref:System.Threading.Thread.IsThreadPoolThread%2A> do odczytu, która wskazuje, czy wątek jest wątkiem puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-184">The read-only <xref:System.Threading.Thread.IsThreadPoolThread%2A> property, which indicates whether a thread is  a thread pool thread.</span></span>  
  
-   <span data-ttu-id="d19b6-185"><xref:System.Threading.Thread.IsBackground%2A> Właściwość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-185">The <xref:System.Threading.Thread.IsBackground%2A> property.</span></span> <span data-ttu-id="d19b6-186">Aby uzyskać więcej informacji, zobacz sekcję dotyczącą [wątków pierwszego planu i tła](#Foreground) .</span><span class="sxs-lookup"><span data-stu-id="d19b6-186">For more information, see the [Foreground and background threads](#Foreground) section.</span></span>  
  
## Examples  
 <span data-ttu-id="d19b6-187">Poniższy przykład ilustruje prostą funkcję wątkowości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-187">The following example demonstrates simple threading functionality.</span></span>  
  
 [!code-cpp[Classic Thread Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Thread Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Thread Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Thread Example/CS/source.cs#1)]
 [!code-vb[Classic Thread Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Thread Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d19b6-188">Ten kod generuje dane wyjściowe podobne do następujących:</span><span class="sxs-lookup"><span data-stu-id="d19b6-188">This code produces output similar to the following:</span></span>  
  
```  
[VB, C++, C#]  
Main thread: Start a second thread.  
Main thread: Do some work.  
ThreadProc: 0  
Main thread: Do some work.  
ThreadProc: 1  
Main thread: Do some work.  
ThreadProc: 2  
Main thread: Do some work.  
ThreadProc: 3  
Main thread: Call Join(), to wait until ThreadProc ends.  
ThreadProc: 4  
ThreadProc: 5  
ThreadProc: 6  
ThreadProc: 7  
ThreadProc: 8  
ThreadProc: 9  
Main thread: ThreadProc.Join has returned.  Press Enter to end program.  
```  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d19b6-189">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="d19b6-189">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-190">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-190">Threads and Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md"><span data-ttu-id="d19b6-191">Używanie wątków i wątkowości</span><span class="sxs-lookup"><span data-stu-id="d19b6-191">Using Threads and Threading</span></span></related>
    <related type="ExternalDocumentation" href="https://referencesource.microsoft.com/#mscorlib/system/threading/thread.cs#3980e012bae82e96"><span data-ttu-id="d19b6-192">Źródło odwołania dla klasy wątku</span><span class="sxs-lookup"><span data-stu-id="d19b6-192">Reference Source for the Thread Class</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-193">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-193">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ParameterizedThreadStart start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ParameterizedThreadStart start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ParameterizedThreadStart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ParameterizedThreadStart ^ start);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ParameterizedThreadStart -&gt; System.Threading.Thread" Usage="new System.Threading.Thread start" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ParameterizedThreadStart" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="d19b6-194">Delegat reprezentujący metody, które mają być wywoływane po rozpoczęciu wykonywania tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-194">A delegate that represents the methods to be invoked when this thread begins executing.</span></span></param>
        <summary><span data-ttu-id="d19b6-195">Inicjuje nowe wystąpienie <see cref="T:System.Threading.Thread" /> klasy, określając delegat, który umożliwia przekazanie obiektu do wątku, gdy wątek zostanie uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-195">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying a delegate that allows an object to be passed to the thread when the thread is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-196">Wątek nie rozpoczyna wykonywania, gdy zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-196">A thread does not begin executing when it is created.</span></span> <span data-ttu-id="d19b6-197">Aby zaplanować wykonywanie wątku, wywołaj <xref:System.Threading.Thread.Start%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-197">To schedule the thread for execution, call the <xref:System.Threading.Thread.Start%2A> method.</span></span> <span data-ttu-id="d19b6-198">Aby przekazać obiekt danych do wątku, użyj <xref:System.Threading.Thread.Start%28System.Object%29> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-198">To pass a data object to the thread, use the <xref:System.Threading.Thread.Start%28System.Object%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-199">Visual Basic użytkownicy mogą pominąć <xref:System.Threading.ThreadStart> konstruktora podczas tworzenia wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-199">Visual Basic users can omit the <xref:System.Threading.ThreadStart> constructor when creating a thread.</span></span> <span data-ttu-id="d19b6-200">Użyj operatora podczas przekazywania metody, na przykład `Dim t As New Thread(AddressOf ThreadProc)`. `AddressOf`</span><span class="sxs-lookup"><span data-stu-id="d19b6-200">Use the `AddressOf` operator when passing your method, for example `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="d19b6-201">Visual Basic automatycznie wywołuje <xref:System.Threading.ThreadStart> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-201">Visual Basic automatically calls the <xref:System.Threading.ThreadStart> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-202">W poniższym przykładzie przedstawiono składnię tworzenia i używania <xref:System.Threading.ParameterizedThreadStart> delegata z metodą statyczną i metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-202">The following example shows the syntax for creating and using a <xref:System.Threading.ParameterizedThreadStart> delegate with a static method and an instance method.</span></span>  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-203"><paramref name="start" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-203"><paramref name="start" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Threading.ParameterizedThreadStart" />
        <altmember cref="Overload:System.Threading.Thread.Start" />
        <altmember cref="T:System.AppDomain" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md"><span data-ttu-id="d19b6-204">Tworzenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-204">Creating Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ThreadStart start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ThreadStart start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ThreadStart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ThreadStart ^ start);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ThreadStart -&gt; System.Threading.Thread" Usage="new System.Threading.Thread start" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ThreadStart" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="d19b6-205"><see cref="T:System.Threading.ThreadStart" /> Delegat reprezentujący metody, które mają być wywoływane po rozpoczęciu wykonywania tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-205">A <see cref="T:System.Threading.ThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span></span></param>
        <summary><span data-ttu-id="d19b6-206">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.Thread" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-206">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-207">Wątek nie rozpoczyna wykonywania, gdy zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-207">A thread does not begin executing when it is created.</span></span> <span data-ttu-id="d19b6-208">Aby zaplanować wykonywanie wątku, wywołaj <xref:System.Threading.Thread.Start%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-208">To schedule the thread for execution, call the <xref:System.Threading.Thread.Start%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-209">Visual Basic użytkownicy mogą pominąć <xref:System.Threading.ThreadStart> konstruktora podczas tworzenia wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-209">Visual Basic users can omit the <xref:System.Threading.ThreadStart> constructor when creating a thread.</span></span> <span data-ttu-id="d19b6-210">Użyj operatora podczas przekazywania metody na przykład `Dim t As New Thread(AddressOf ThreadProc)`. `AddressOf`</span><span class="sxs-lookup"><span data-stu-id="d19b6-210">Use the `AddressOf` operator when passing your method for example `Dim t As New Thread(AddressOf ThreadProc)`.</span></span> <span data-ttu-id="d19b6-211">Visual Basic automatycznie wywołuje <xref:System.Threading.ThreadStart> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-211">Visual Basic automatically calls the <xref:System.Threading.ThreadStart> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-212">Poniższy przykład kodu pokazuje, jak utworzyć wątek, który wykonuje metodę statyczną.</span><span class="sxs-lookup"><span data-stu-id="d19b6-212">The following code example shows how to create a thread that executes a static method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ctor/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ctor/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="d19b6-213">Poniższy przykład kodu pokazuje, jak utworzyć wątek, który wykonuje metodę wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-213">The following code example shows how to create a thread that executes an instance method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-214">Parametr ma wartość <see langword="null" />. <paramref name="start" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-214">The <paramref name="start" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Threading.ThreadStart" />
        <altmember cref="Overload:System.Threading.Thread.Start" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md"><span data-ttu-id="d19b6-215">Tworzenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-215">Creating Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ParameterizedThreadStart start, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ParameterizedThreadStart start, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ParameterizedThreadStart, maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ParameterizedThreadStart ^ start, int maxStackSize);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ParameterizedThreadStart * int -&gt; System.Threading.Thread" Usage="new System.Threading.Thread (start, maxStackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ParameterizedThreadStart" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="maxStackSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="d19b6-216"><see cref="T:System.Threading.ParameterizedThreadStart" /> Delegat reprezentujący metody, które mają być wywoływane po rozpoczęciu wykonywania tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-216">A <see cref="T:System.Threading.ParameterizedThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span></span></param>
        <param name="maxStackSize"><span data-ttu-id="d19b6-217">Maksymalny rozmiar stosu w bajtach, który ma być używany przez wątek, lub 0, aby użyć domyślnego maksymalnego rozmiaru stosu określonego w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-217">The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</span></span>  
  
<span data-ttu-id="d19b6-218">Ważne dla częściowo zaufanego kodu <paramref name="maxStackSize" /> , jest ignorowany, jeśli jest większy niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-218">Important   For partially trusted code, <paramref name="maxStackSize" /> is ignored if it is greater than the default stack size.</span></span> <span data-ttu-id="d19b6-219">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-219">No exception is thrown.</span></span></param>
        <summary><span data-ttu-id="d19b6-220">Inicjuje nowe wystąpienie <see cref="T:System.Threading.Thread" /> klasy, określając delegat, który umożliwia przekazanie obiektu do wątku podczas uruchamiania wątku i określanie maksymalnego rozmiaru stosu dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-220">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-221">Unikaj korzystania z tego przeciążenia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-221">Avoid using this constructor overload.</span></span> <span data-ttu-id="d19b6-222">Domyślny rozmiar stosu używany przez <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> przeciążenie konstruktora to zalecany rozmiar stosu dla wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-222">The default stack size used by the <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29> constructor overload is the recommended stack size for threads.</span></span> <span data-ttu-id="d19b6-223">Jeśli wątek ma problemy z pamięcią, najbardziej prawdopodobną przyczyną jest błąd programistyczny, taki jak nieskończona rekursja.</span><span class="sxs-lookup"><span data-stu-id="d19b6-223">If a thread has memory problems, the most likely cause is programming error, such as infinite recursion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-224">Począwszy od `maxStackSize` , tylko w pełni zaufany kod można ustawić na wartość, która jest większa niż domyślny rozmiar stosu (1 megabajt). [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d19b6-224">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], only fully trusted code can set `maxStackSize` to a value that is greater than the default stack size (1 megabyte).</span></span> <span data-ttu-id="d19b6-225">Jeśli jest określona `maxStackSize` większa wartość, gdy kod jest uruchomiony z częściowym zaufaniem `maxStackSize` , jest ignorowany i używany jest domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-225">If a larger value is specified for `maxStackSize` when code is running with partial trust, `maxStackSize` is ignored and the default stack size is used.</span></span> <span data-ttu-id="d19b6-226">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-226">No exception is thrown.</span></span> <span data-ttu-id="d19b6-227">Kod na dowolnym poziomie zaufania można ustawić `maxStackSize` na wartość, która jest mniejsza niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-227">Code at any trust level can set `maxStackSize` to a value that is less than the default stack size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-228">W przypadku tworzenia w pełni zaufanej biblioteki, która będzie używana przez częściowo zaufany kod i należy uruchomić wątek, który wymaga dużego stosu, należy poświadczyć pełne zaufanie przed utworzeniem wątku lub użyć domyślnego rozmiaru stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-228">If you are developing a fully trusted library that will be used by partially trusted code, and you need to start a thread that requires a large stack, you must assert full trust before creating the thread, or the default stack size will be used.</span></span> <span data-ttu-id="d19b6-229">Nie wykonuj tej czynności, chyba że w pełni kontrolujesz kod, który jest uruchamiany w wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-229">Do not do this unless you fully control the code that runs on the thread.</span></span>  
  
 <span data-ttu-id="d19b6-230">Jeśli `maxStackSize` jest mniejsza niż minimalny rozmiar stosu, używany jest minimalny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-230">If `maxStackSize` is less than the minimum stack size, the minimum stack size is used.</span></span> <span data-ttu-id="d19b6-231">Jeśli `maxStackSize` nie jest wielokrotnością rozmiaru strony, jest zaokrąglana do następnej większej wielokrotności rozmiaru strony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-231">If `maxStackSize` is not a multiple of the page size, it is rounded to the next larger multiple of the page size.</span></span> <span data-ttu-id="d19b6-232">Jeśli na przykład używasz .NET Framework w wersji 2,0 w systemie Windows Vista, 256 KB (262 144 bajtów) to minimalny rozmiar stosu, a rozmiar strony to 64 KB (65 536 bajtów).</span><span class="sxs-lookup"><span data-stu-id="d19b6-232">For example, if you are using the .NET Framework version 2.0 on Windows Vista, 256KB (262,144 bytes) is the minimum stack size, and the page size is 64KB (65,536 bytes).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-233">W wersjach systemu Microsoft Windows starszych niż Windows XP i Windows Server 2003 `maxStackSize` program jest ignorowany i jest używany rozmiar stosu określony w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-233">On versions of Microsoft Windows prior to Windows XP and Windows Server 2003, `maxStackSize` is ignored, and the stack size specified in the executable header is used.</span></span>  
  
 <span data-ttu-id="d19b6-234">W przypadku określenia bardzo małego rozmiaru stosu może być konieczne wyłączenie sondowania przepełnienia stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-234">If you specify a very small stack size, you might need to disable stack-overflow probing.</span></span> <span data-ttu-id="d19b6-235">Gdy stos jest poważnie ograniczony, sondowanie może sam spowodować przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-235">When the stack is severely constrained, the probing can itself cause a stack overflow.</span></span> <span data-ttu-id="d19b6-236">Aby wyłączyć sondowanie przeciążenia stosu, Dodaj następujący plik do pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-236">To disable stack overflow probing, add the following to your application configuration file.</span></span>  
  
```xml  
<configuration>  
  <runtime>  
    <disableStackOverflowProbing enabled="true"/>  
  </runtime>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-237"><paramref name="start" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-237"><paramref name="start" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-238"><paramref name="maxStackSize" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="d19b6-238"><paramref name="maxStackSize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Thread (System.Threading.ThreadStart start, int maxStackSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.ThreadStart start, int32 maxStackSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As ThreadStart, maxStackSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Thread(System::Threading::ThreadStart ^ start, int maxStackSize);" />
      <MemberSignature Language="F#" Value="new System.Threading.Thread : System.Threading.ThreadStart * int -&gt; System.Threading.Thread" Usage="new System.Threading.Thread (start, maxStackSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Threading.ThreadStart" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="maxStackSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="d19b6-239"><see cref="T:System.Threading.ThreadStart" /> Delegat reprezentujący metody, które mają być wywoływane po rozpoczęciu wykonywania tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-239">A <see cref="T:System.Threading.ThreadStart" /> delegate that represents the methods to be invoked when this thread begins executing.</span></span></param>
        <param name="maxStackSize"><span data-ttu-id="d19b6-240">Maksymalny rozmiar stosu w bajtach, który ma być używany przez wątek, lub 0, aby użyć domyślnego maksymalnego rozmiaru stosu określonego w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-240">The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.</span></span>  
  
<span data-ttu-id="d19b6-241">Ważne dla częściowo zaufanego kodu <paramref name="maxStackSize" /> , jest ignorowany, jeśli jest większy niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-241">Important   For partially trusted code, <paramref name="maxStackSize" /> is ignored if it is greater than the default stack size.</span></span> <span data-ttu-id="d19b6-242">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-242">No exception is thrown.</span></span></param>
        <summary><span data-ttu-id="d19b6-243">Inicjuje nowe wystąpienie <see cref="T:System.Threading.Thread" /> klasy, określając maksymalny rozmiar stosu dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-243">Initializes a new instance of the <see cref="T:System.Threading.Thread" /> class, specifying the maximum stack size for the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-244">Unikaj korzystania z tego przeciążenia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-244">Avoid using this constructor overload.</span></span> <span data-ttu-id="d19b6-245">Domyślny rozmiar stosu używany przez <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29> przeciążenie konstruktora to zalecany rozmiar stosu dla wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-245">The default stack size used by the <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29> constructor overload is the recommended stack size for threads.</span></span> <span data-ttu-id="d19b6-246">Jeśli wątek ma problemy z pamięcią, najbardziej prawdopodobną przyczyną jest błąd programistyczny, taki jak nieskończona rekursja.</span><span class="sxs-lookup"><span data-stu-id="d19b6-246">If a thread has memory problems, the most likely cause is programming error, such as infinite recursion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-247">Począwszy od `maxStackSize` , tylko w pełni zaufany kod można ustawić na wartość, która jest większa niż domyślny rozmiar stosu (1 megabajt). [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d19b6-247">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], only fully trusted code can set `maxStackSize` to a value that is greater than the default stack size (1 megabyte).</span></span> <span data-ttu-id="d19b6-248">Jeśli jest określona `maxStackSize` większa wartość, gdy kod jest uruchomiony z częściowym zaufaniem `maxStackSize` , jest ignorowany i używany jest domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-248">If a larger value is specified for `maxStackSize` when code is running with partial trust, `maxStackSize` is ignored and the default stack size is used.</span></span> <span data-ttu-id="d19b6-249">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-249">No exception is thrown.</span></span> <span data-ttu-id="d19b6-250">Kod na dowolnym poziomie zaufania można ustawić `maxStackSize` na wartość, która jest mniejsza niż domyślny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-250">Code at any trust level can set `maxStackSize` to a value that is less than the default stack size.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-251">W przypadku tworzenia w pełni zaufanej biblioteki, która będzie używana przez częściowo zaufany kod i należy uruchomić wątek, który wymaga dużego stosu, należy poświadczyć pełne zaufanie przed utworzeniem wątku lub użyć domyślnego rozmiaru stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-251">If you are developing a fully trusted library that will be used by partially trusted code, and you need to start a thread that requires a large stack, you must assert full trust before creating the thread, or the default stack size will be used.</span></span> <span data-ttu-id="d19b6-252">Nie wykonuj tej czynności, chyba że w pełni kontrolujesz kod, który jest uruchamiany w wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-252">Do not do this unless you fully control the code that runs on the thread.</span></span>  
  
 <span data-ttu-id="d19b6-253">Jeśli `maxStackSize` jest mniejsza niż minimalny rozmiar stosu, używany jest minimalny rozmiar stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-253">If `maxStackSize` is less than the minimum stack size, the minimum stack size is used.</span></span> <span data-ttu-id="d19b6-254">Jeśli `maxStackSize` nie jest wielokrotnością rozmiaru strony, jest zaokrąglana do następnej większej wielokrotności rozmiaru strony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-254">If `maxStackSize` is not a multiple of the page size, it is rounded to the next larger multiple of the page size.</span></span> <span data-ttu-id="d19b6-255">Jeśli na przykład używasz .NET Framework w wersji 2,0 w systemie Windows Vista, 256 KB (262 144 bajtów) to minimalny rozmiar stosu, a rozmiar strony to 64 KB (65 536 bajtów).</span><span class="sxs-lookup"><span data-stu-id="d19b6-255">For example, if you are using the .NET Framework version 2.0 on Windows Vista, 256KB (262,144 bytes) is the minimum stack size, and the page size is 64KB (65,536 bytes).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-256">W wersjach systemu Microsoft Windows starszych niż Windows XP i Windows Server 2003 `maxStackSize` program jest ignorowany i jest używany rozmiar stosu określony w nagłówku pliku wykonywalnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-256">On versions of Microsoft Windows prior to Windows XP and Windows Server 2003, `maxStackSize` is ignored, and the stack size specified in the executable header is used.</span></span>  
  
 <span data-ttu-id="d19b6-257">W przypadku określenia bardzo małego rozmiaru stosu może być konieczne wyłączenie sondowania przepełnienia stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-257">If you specify a very small stack size, you might need to disable stack-overflow probing.</span></span> <span data-ttu-id="d19b6-258">Gdy stos jest poważnie ograniczony, sondowanie może sam spowodować przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-258">When the stack is severely constrained, the probing can itself cause a stack overflow.</span></span> <span data-ttu-id="d19b6-259">Aby wyłączyć sondowanie przeciążenia stosu, Dodaj następujący plik do pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-259">To disable stack overflow probing, add the following to your application configuration file.</span></span>  
  
```xml  
<configuration>  
  <runtime>  
    <disableStackOverflowProbing enabled="true"/>  
  </runtime>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-260"><paramref name="start" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-260"><paramref name="start" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-261"><paramref name="maxStackSize" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="d19b6-261"><paramref name="maxStackSize" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-262"><see cref="T:System.Threading.ThreadAbortException" /> Podnosi do wątku, w którym jest wywoływana, aby rozpocząć proces kończenia wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-262">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread.</span></span> <span data-ttu-id="d19b6-263">Wywołanie tej metody zwykle kończy działanie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-263">Calling this method usually terminates the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> <span data-ttu-id="d19b6-264">`Thread.Abort` Metoda powinna być stosowana z zachowaniem ostrożności.</span><span class="sxs-lookup"><span data-stu-id="d19b6-264">The `Thread.Abort` method should be used with caution.</span></span> <span data-ttu-id="d19b6-265">Szczególnie w przypadku wywołania go w celu przerwania wątku innego niż bieżący wątek nie wiadomo, jaki kod został wykonany lub nie można wykonać, gdy <xref:System.Threading.ThreadAbortException> zostanie zgłoszony, ani nie może być określony stan aplikacji lub aplikacji i stanu użytkownika. odpowiedzialny za zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-265">Particularly when you call it to abort a thread other than the current thread, you do not know what code has executed or failed to execute when the <xref:System.Threading.ThreadAbortException> is thrown, nor can you be certain of the state of your application or any application and user state that it is responsible for preserving.</span></span> <span data-ttu-id="d19b6-266">Na przykład, wywołanie `Thread.Abort` może uniemożliwić wykonywanie przez konstruktory statyczne lub uniemożliwić wydawanie niezarządzanych zasobów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-266">For example, calling `Thread.Abort` may prevent static constructors from executing or prevent the release of unmanaged resources.</span></span> 
>
> <span data-ttu-id="d19b6-267">Należy zauważyć, `Thread.Abort` że metoda nie jest obsługiwana w programie .NET Core.</span><span class="sxs-lookup"><span data-stu-id="d19b6-267">Note that the `Thread.Abort` method is not supported on .NET Core.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="thread.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-268"><see cref="T:System.Threading.ThreadAbortException" /> Podnosi do wątku, w którym jest wywoływana, aby rozpocząć proces kończenia wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-268">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread.</span></span> <span data-ttu-id="d19b6-269">Wywołanie tej metody zwykle kończy działanie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-269">Calling this method usually terminates the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-270">Gdy ta metoda jest wywoływana w wątku, system zgłasza <xref:System.Threading.ThreadAbortException> w wątku, aby go przerwać.</span><span class="sxs-lookup"><span data-stu-id="d19b6-270">When this method is invoked on a thread, the system throws a <xref:System.Threading.ThreadAbortException> in the thread to abort it.</span></span> <span data-ttu-id="d19b6-271">`ThreadAbortException`to specjalny wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest ponownie zgłaszany na końcu `catch` bloku, chyba że <xref:System.Threading.Thread.ResetAbort%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-271">`ThreadAbortException` is a special exception that can be caught by application code, but is re-thrown at the end of the `catch` block unless <xref:System.Threading.Thread.ResetAbort%2A> is called.</span></span> <span data-ttu-id="d19b6-272">`ResetAbort`anuluje żądanie przerwania i uniemożliwia `ThreadAbortException` zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-272">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span> <span data-ttu-id="d19b6-273">Niewykonane `finally` bloki są wykonywane przed przerwaniem wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-273">Unexecuted `finally` blocks are executed before the thread is aborted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-274">Gdy wątek wywołuje `Abort` sam siebie, efekt jest podobny do zgłaszania wyjątku <xref:System.Threading.ThreadAbortException> ; dzieje się natychmiast, a wynik jest przewidywalny.</span><span class="sxs-lookup"><span data-stu-id="d19b6-274">When a thread calls `Abort` on itself, the effect is similar to throwing an exception; the <xref:System.Threading.ThreadAbortException> happens immediately, and the result is predictable.</span></span> <span data-ttu-id="d19b6-275">Jeśli jednak jeden wątek wywołuje `Abort` inny wątek, przerwanie przerywa działanie dowolnego kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-275">However, if one thread calls `Abort` on another thread, the abort interrupts whatever code is running.</span></span> <span data-ttu-id="d19b6-276">Istnieje również możliwość przerwania działania konstruktora statycznego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-276">There is also a chance that a static constructor could be aborted.</span></span> <span data-ttu-id="d19b6-277">W rzadkich przypadkach może to spowodować, że wystąpienia tej klasy zostaną utworzone w tej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-277">In rare cases, this might prevent instances of that class from being created in that application domain.</span></span> <span data-ttu-id="d19b6-278">W .NET Framework wersje 1,0 i 1,1 istnieje szansa, że wątek może zostać przerwany w trakcie `finally` działania bloku, w którym to `finally` przypadku blok został przerwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-278">In the .NET Framework versions 1.0 and 1.1, there is a chance the thread could abort while a `finally` block is running, in which case the `finally` block is aborted.</span></span>  
  
 <span data-ttu-id="d19b6-279">Wątek nie jest gwarantowany do natychmiastowego przerwania lub wcale.</span><span class="sxs-lookup"><span data-stu-id="d19b6-279">The thread is not guaranteed to abort immediately, or at all.</span></span> <span data-ttu-id="d19b6-280">Taka sytuacja może wystąpić, jeśli wątek wykonuje niepowiązaną ilość obliczeń w `finally` blokach, które są wywoływane w ramach procedury Abort, przez co nieoczekiwanie opóźnia to przerwanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-280">This situation can occur if a thread does an unbounded amount of computation in the `finally` blocks that are called as part of the abort procedure, thereby indefinitely delaying the abort.</span></span> <span data-ttu-id="d19b6-281">Aby poczekać, aż wątek zostanie przerwany, można wywołać <xref:System.Threading.Thread.Join%2A> metodę w wątku po <xref:System.Threading.Thread.Abort%2A> wywołaniu metody, ale nie ma żadnej gwarancji, że oczekiwanie zakończy się.</span><span class="sxs-lookup"><span data-stu-id="d19b6-281">To wait until a thread has aborted, you can call the <xref:System.Threading.Thread.Join%2A> method on the thread after calling the <xref:System.Threading.Thread.Abort%2A> method, but there is no guarantee the wait will end.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-282">Wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> wywołania, może blokować, jeśli wątek, który jest przerywany, znajduje się w chronionym regionie kodu, `catch` takim jak `finally` blok, blok lub region ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-282">The thread that calls <xref:System.Threading.Thread.Abort%2A> might block if the thread that is being aborted is in a protected region of code, such as a `catch` block, `finally` block, or constrained execution region.</span></span> <span data-ttu-id="d19b6-283">Jeśli wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> , ma blokadę wymaganą przez przerwany wątek, może wystąpić zakleszczenie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-283">If the thread that calls <xref:System.Threading.Thread.Abort%2A> holds a lock that the aborted thread requires, a deadlock can occur.</span></span>  
  
 <span data-ttu-id="d19b6-284">Jeśli `Abort` jest wywoływana w wątku, który nie został uruchomiony, wątek zostanie przerwany, gdy <xref:System.Threading.Thread.Start%2A> zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-284">If `Abort` is called on a thread that has not been started, the thread will abort when <xref:System.Threading.Thread.Start%2A> is called.</span></span> <span data-ttu-id="d19b6-285">Jeśli `Abort` jest wywoływana w wątku, który jest zablokowany lub jest uśpiony, wątek zostanie przerwany, a następnie przerwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-285">If `Abort` is called on a thread that is blocked or is sleeping, the thread is interrupted and then aborted.</span></span>  
  
 <span data-ttu-id="d19b6-286">Jeśli `Abort` jest wywoływana w wątku, który został zawieszony <xref:System.Threading.ThreadStateException> , jest zgłaszany w wątku, który został wywołany <xref:System.Threading.Thread.Abort%2A>, <xref:System.Threading.ThreadState.AbortRequested> i jest dodawany do <xref:System.Threading.Thread.ThreadState%2A> właściwości przerwanego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-286">If `Abort` is called on a thread that has been suspended, a <xref:System.Threading.ThreadStateException> is thrown in the thread that called <xref:System.Threading.Thread.Abort%2A>, and <xref:System.Threading.ThreadState.AbortRequested> is added to the <xref:System.Threading.Thread.ThreadState%2A> property of the thread being aborted.</span></span> <span data-ttu-id="d19b6-287">Element <xref:System.Threading.ThreadAbortException> nie jest zgłaszany w zawieszonym wątku <xref:System.Threading.Thread.Resume%2A> do momentu wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-287">A <xref:System.Threading.ThreadAbortException> is not thrown in the suspended thread until <xref:System.Threading.Thread.Resume%2A> is called.</span></span>  
  
 <span data-ttu-id="d19b6-288">Jeśli `Abort` jest wywoływana w wątku zarządzanym podczas wykonywania kodu niezarządzanego `ThreadAbortException` , nie jest generowane, dopóki wątek nie powróci do kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-288">If `Abort` is called on a managed thread while it is executing unmanaged code, a `ThreadAbortException` is not thrown until the thread returns to managed code.</span></span>  
  
 <span data-ttu-id="d19b6-289">Jeśli dwa wywołania `Abort` są w tym samym czasie, możliwe jest jedno wywołanie, aby ustawić informacje o stanie i inne wywołanie do `Abort`wykonania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-289">If two calls to `Abort` come at the same time, it is possible for one call to set the state information and the other call to execute the `Abort`.</span></span> <span data-ttu-id="d19b6-290">Jednak aplikacja nie może wykryć takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-290">However, an application cannot detect this situation.</span></span>  
  
 <span data-ttu-id="d19b6-291">Po `Abort` wywołaniu w wątku, stan wątku zawiera <xref:System.Threading.ThreadState.AbortRequested>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-291">After `Abort` is invoked on a thread, the state of the thread includes <xref:System.Threading.ThreadState.AbortRequested>.</span></span> <span data-ttu-id="d19b6-292">Po zakończeniu wątku w wyniku pomyślnego wywołania do `Abort`, stan wątku jest zmieniany na. <xref:System.Threading.ThreadState.Stopped></span><span class="sxs-lookup"><span data-stu-id="d19b6-292">After the thread has terminated as a result of a successful call to `Abort`, the state of the thread is changed to <xref:System.Threading.ThreadState.Stopped>.</span></span> <span data-ttu-id="d19b6-293">Mając wystarczające uprawnienia, wątek, który jest elementem docelowym `Abort` , może anulować przerwanie `ResetAbort` przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-293">With sufficient permissions, a thread that is the target of an `Abort` can cancel the abort using the `ResetAbort` method.</span></span> <span data-ttu-id="d19b6-294">Aby zapoznać się z przykładem, `ResetAbort` który demonstruje wywołanie metody `ThreadAbortException` , zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="d19b6-294">For an example that demonstrates calling the `ResetAbort` method, see the `ThreadAbortException` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-295">Tylko .NET Core: Ten element członkowski nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-295">.NET Core only: This member is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-296">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="d19b6-296">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-297">Przerwany wątek jest aktualnie zawieszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-297">The thread that is being aborted is currently suspended.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-298">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-298">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-299">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-299">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span></span></permission>
        <altmember cref="T:System.Threading.ThreadAbortException" />
        <altmember cref="F:System.Threading.ThreadState.Aborted" />
        <altmember cref="F:System.Threading.ThreadState.AbortRequested" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-300">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-300">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md"><span data-ttu-id="d19b6-301">Używanie wątków i wątkowości</span><span class="sxs-lookup"><span data-stu-id="d19b6-301">Using threads and threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md"><span data-ttu-id="d19b6-302">Niszczenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-302">Destroying threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (object stateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(object stateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Abort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (stateInfo As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::Object ^ stateInfo);" />
      <MemberSignature Language="F#" Value="member this.Abort : obj -&gt; unit" Usage="thread.Abort stateInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateInfo" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stateInfo"><span data-ttu-id="d19b6-303">Obiekt, który zawiera informacje specyficzne dla aplikacji, takie jak stan, który może być używany przez przerywany wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-303">An object that contains application-specific information, such as state, which can be used by the thread being aborted.</span></span></param>
        <summary><span data-ttu-id="d19b6-304"><see cref="T:System.Threading.ThreadAbortException" /> Podnosi do wątku, w którym jest wywoływana, aby rozpocząć proces kończenia wątku, a także dostarcza informacje o wyjątku dotyczące zakończenia wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-304">Raises a <see cref="T:System.Threading.ThreadAbortException" /> in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination.</span></span> <span data-ttu-id="d19b6-305">Wywołanie tej metody zwykle kończy działanie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-305">Calling this method usually terminates the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-306">Gdy ta metoda jest wywoływana w wątku, system zgłasza <xref:System.Threading.ThreadAbortException> w wątku, aby go przerwać.</span><span class="sxs-lookup"><span data-stu-id="d19b6-306">When this method is invoked on a thread, the system throws a <xref:System.Threading.ThreadAbortException> in the thread to abort it.</span></span> <span data-ttu-id="d19b6-307">`ThreadAbortException`to specjalny wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest ponownie zgłaszany na końcu `catch` bloku, chyba że <xref:System.Threading.Thread.ResetAbort%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-307">`ThreadAbortException` is a special exception that can be caught by application code, but is re-thrown at the end of the `catch` block unless <xref:System.Threading.Thread.ResetAbort%2A> is called.</span></span> <span data-ttu-id="d19b6-308">`ResetAbort`anuluje żądanie przerwania i uniemożliwia `ThreadAbortException` zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-308">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span> <span data-ttu-id="d19b6-309">Niewykonane `finally` bloki są wykonywane przed przerwaniem wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-309">Unexecuted `finally` blocks are executed before the thread is aborted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-310">Gdy wątek wywołuje `Abort` sam siebie, efekt jest podobny do zgłaszania wyjątku <xref:System.Threading.ThreadAbortException> ; dzieje się natychmiast, a wynik jest przewidywalny.</span><span class="sxs-lookup"><span data-stu-id="d19b6-310">When a thread calls `Abort` on itself, the effect is similar to throwing an exception; the <xref:System.Threading.ThreadAbortException> happens immediately, and the result is predictable.</span></span> <span data-ttu-id="d19b6-311">Jeśli jednak jeden wątek wywołuje `Abort` inny wątek, przerwanie przerywa działanie dowolnego kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-311">However, if one thread calls `Abort` on another thread, the abort interrupts whatever code is running.</span></span> <span data-ttu-id="d19b6-312">Istnieje prawdopodobieństwo, że można przerwać Konstruktor statyczny.</span><span class="sxs-lookup"><span data-stu-id="d19b6-312">There is a chance that a static constructor could be aborted.</span></span> <span data-ttu-id="d19b6-313">W rzadkich przypadkach może to spowodować, że wystąpienia tej klasy zostaną utworzone w tej domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-313">In rare cases, this might prevent instances of that class from being created in that application domain.</span></span> <span data-ttu-id="d19b6-314">W .NET Framework wersje 1,0 i 1,1 istnieje szansa, że wątek może zostać przerwany w trakcie `finally` działania bloku, w którym to `finally` przypadku blok został przerwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-314">In the .NET Framework versions 1.0 and 1.1, there is a chance the thread could abort while a `finally` block is running, in which case the `finally` block is aborted.</span></span>  
  
 <span data-ttu-id="d19b6-315">Wątek nie jest gwarantowany do natychmiastowego przerwania lub wcale.</span><span class="sxs-lookup"><span data-stu-id="d19b6-315">The thread is not guaranteed to abort immediately, or at all.</span></span> <span data-ttu-id="d19b6-316">Taka sytuacja może wystąpić, jeśli wątek wykonuje niepowiązaną ilość obliczeń w `finally` blokach, które są wywoływane w ramach procedury Abort, przez co nieoczekiwanie opóźnia to przerwanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-316">This situation can occur if a thread does an unbounded amount of computation in the `finally` blocks that are called as part of the abort procedure, thereby indefinitely delaying the abort.</span></span> <span data-ttu-id="d19b6-317">Aby poczekać, aż wątek zostanie przerwany, można wywołać <xref:System.Threading.Thread.Join%2A> metodę w wątku po <xref:System.Threading.Thread.Abort%2A> wywołaniu metody, ale nie ma żadnej gwarancji, że oczekiwanie zakończy się.</span><span class="sxs-lookup"><span data-stu-id="d19b6-317">To wait until a thread has aborted, you can call the <xref:System.Threading.Thread.Join%2A> method on the thread after calling the <xref:System.Threading.Thread.Abort%2A> method, but there is no guarantee that the wait will end.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-318">Wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> wywołania, może blokować, jeśli wątek, który jest przerywany, znajduje się w chronionym regionie kodu, `catch` takim jak `finally` blok, blok lub region ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-318">The thread that calls <xref:System.Threading.Thread.Abort%2A> might block if the thread that is being aborted is in a protected region of code, such as a `catch` block, `finally` block, or constrained execution region.</span></span> <span data-ttu-id="d19b6-319">Jeśli wątek, który wywołuje <xref:System.Threading.Thread.Abort%2A> , ma blokadę wymaganą przez przerwany wątek, może wystąpić zakleszczenie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-319">If the thread that calls <xref:System.Threading.Thread.Abort%2A> holds a lock that the aborted thread requires, a deadlock can occur.</span></span>  
  
 <span data-ttu-id="d19b6-320">Jeśli `Abort` jest wywoływana w wątku, który nie został uruchomiony, wątek zostanie przerwany, gdy <xref:System.Threading.Thread.Start%2A> zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-320">If `Abort` is called on a thread that has not been started, the thread will abort when <xref:System.Threading.Thread.Start%2A> is called.</span></span> <span data-ttu-id="d19b6-321">Jeśli `Abort` jest wywoływana w wątku, który jest zablokowany lub jest uśpiony, wątek zostanie przerwany, a następnie przerwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-321">If `Abort` is called on a thread that is blocked or is sleeping, the thread is interrupted and then aborted.</span></span>  
  
 <span data-ttu-id="d19b6-322">Jeśli `Abort` jest wywoływana w wątku, który został zawieszony <xref:System.Threading.ThreadStateException> , jest zgłaszany w wątku, który został wywołany <xref:System.Threading.Thread.Abort%2A>, <xref:System.Threading.ThreadState.AbortRequested> i jest dodawany do <xref:System.Threading.Thread.ThreadState%2A> właściwości przerwanego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-322">If `Abort` is called on a thread that has been suspended, a <xref:System.Threading.ThreadStateException> is thrown in the thread that called <xref:System.Threading.Thread.Abort%2A>, and <xref:System.Threading.ThreadState.AbortRequested> is added to the <xref:System.Threading.Thread.ThreadState%2A> property of the thread being aborted.</span></span> <span data-ttu-id="d19b6-323">Element <xref:System.Threading.ThreadAbortException> nie jest zgłaszany w zawieszonym wątku <xref:System.Threading.Thread.Resume%2A> do momentu wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-323">A <xref:System.Threading.ThreadAbortException> is not thrown in the suspended thread until <xref:System.Threading.Thread.Resume%2A> is called.</span></span>  
  
 <span data-ttu-id="d19b6-324">Jeśli `Abort` jest wywoływana w wątku zarządzanym podczas wykonywania kodu niezarządzanego `ThreadAbortException` , nie jest generowane, dopóki wątek nie powróci do kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-324">If `Abort` is called on a managed thread while it is executing unmanaged code, a `ThreadAbortException` is not thrown until the thread returns to managed code.</span></span>  
  
 <span data-ttu-id="d19b6-325">Jeśli dwa wywołania `Abort` są w tym samym czasie, możliwe jest jedno wywołanie, aby ustawić informacje o stanie i inne wywołanie do `Abort`wykonania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-325">If two calls to `Abort` come at the same time, it is possible for one call to set the state information and the other call to execute the `Abort`.</span></span> <span data-ttu-id="d19b6-326">Jednak aplikacja nie może wykryć takiej sytuacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-326">However, an application cannot detect this situation.</span></span>  
  
 <span data-ttu-id="d19b6-327">Po `Abort` wywołaniu w wątku, stan wątku zawiera <xref:System.Threading.ThreadState.AbortRequested>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-327">After `Abort` is invoked on a thread, the state of the thread includes <xref:System.Threading.ThreadState.AbortRequested>.</span></span> <span data-ttu-id="d19b6-328">Po zakończeniu wątku w wyniku pomyślnego wywołania do `Abort`, stan wątku jest zmieniany na. <xref:System.Threading.ThreadState.Stopped></span><span class="sxs-lookup"><span data-stu-id="d19b6-328">After the thread has terminated as a result of a successful call to `Abort`, the state of the thread is changed to <xref:System.Threading.ThreadState.Stopped>.</span></span> <span data-ttu-id="d19b6-329">Mając wystarczające uprawnienia, wątek, który jest elementem docelowym `Abort` , może anulować przerwanie `ResetAbort` przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-329">With sufficient permissions, a thread that is the target of an `Abort` can cancel the abort using the `ResetAbort` method.</span></span> <span data-ttu-id="d19b6-330">Aby zapoznać się z przykładem, `ResetAbort` który demonstruje wywołanie metody `ThreadAbortException` , zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="d19b6-330">For an example that demonstrates calling the `ResetAbort` method, see the `ThreadAbortException` class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-331">Poniższy przykład kodu pokazuje, jak przekazać informacje do wątku, który jest przerywany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-331">The following code example shows how to pass information to a thread that is being aborted.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Abort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Abort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Abort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-332">Tylko .NET Core: Ten element członkowski nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-332">.NET Core only: This member is not supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-333">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="d19b6-333">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-334">Przerwany wątek jest aktualnie zawieszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-334">The thread that is being aborted is currently suspended.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-335">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-335">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-336">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-336">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span></span></permission>
        <altmember cref="T:System.Threading.ThreadAbortException" />
        <altmember cref="F:System.Threading.ThreadState.Aborted" />
        <altmember cref="F:System.Threading.ThreadState.AbortRequested" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-337">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-337">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md"><span data-ttu-id="d19b6-338">Używanie wątków i wątkowości</span><span class="sxs-lookup"><span data-stu-id="d19b6-338">Using threads and threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md"><span data-ttu-id="d19b6-339">Niszczenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-339">Destroying threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllocateDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot AllocateDataSlot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot AllocateDataSlot() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.AllocateDataSlot" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateDataSlot () As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ AllocateDataSlot();" />
      <MemberSignature Language="F#" Value="static member AllocateDataSlot : unit -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.AllocateDataSlot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-340">Przydziela nienazwane gniazdo danych we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-340">Allocates an unnamed data slot on all the threads.</span></span> <span data-ttu-id="d19b6-341">W celu uzyskania lepszej wydajności Użyj pól, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-341">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <returns><span data-ttu-id="d19b6-342">Przydzielono nazwane gniazdo danych we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-342">The allocated named data slot on all threads.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-343">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-343">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-344">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-344">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-345">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-345">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-346">Gniazdo jest przydzielono we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-346">The slot is allocated on all threads.</span></span>  
  
 <span data-ttu-id="d19b6-347">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-347">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-348">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-348">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-349">Wątek może przydzielić miejsce danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwolnić miejsce do ponownego użycia po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-349">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="d19b6-350">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-350">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-351">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-351">No other thread (not even a child thread) can get that data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-352">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-352">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-353">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-353">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-354">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-354">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-355">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-355">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-356">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-356">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-357">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-357">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-358">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-358">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-359">Poniższy przykład kodu demonstruje, jak używać miejsca danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-359">The following code example demonstrates how to use a data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-360">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-360">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-361">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-361">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllocateNamedDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot AllocateNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot AllocateNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateNamedDataSlot (name As String) As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ AllocateNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member AllocateNamedDataSlot : string -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.AllocateNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d19b6-362">Nazwa miejsca danych do przydzielenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-362">The name of the data slot to be allocated.</span></span></param>
        <summary><span data-ttu-id="d19b6-363">Przydziela nazwane gniazdo danych we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-363">Allocates a named data slot on all threads.</span></span> <span data-ttu-id="d19b6-364">W celu uzyskania lepszej wydajności Użyj pól, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-364">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <returns><span data-ttu-id="d19b6-365">Przydzielono nazwane gniazdo danych we wszystkich wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-365">The allocated named data slot on all threads.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-366">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-366">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-367">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-367">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-368">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-368">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-369">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-369">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-370">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-370">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-371">Wątek może przydzielić miejsce danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwolnić miejsce do ponownego użycia po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-371">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="d19b6-372">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-372">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-373">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-373">No other thread (not even a child thread) can get that data.</span></span>  
  
 <span data-ttu-id="d19b6-374">Nie jest konieczne użycie <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metody do przydzielenia nazwanego gniazda danych, <xref:System.Threading.Thread.GetNamedDataSlot%2A> ponieważ metoda przydziela miejsce, jeśli nie zostało jeszcze przydzielone.</span><span class="sxs-lookup"><span data-stu-id="d19b6-374">It is not necessary to use the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method to allocate a named data slot, because the <xref:System.Threading.Thread.GetNamedDataSlot%2A> method allocates the slot if it has not already been allocated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-375"><xref:System.Threading.Thread.AllocateNamedDataSlot%2A> Jeśli metoda jest używana, powinna być wywoływana w wątku głównym przy uruchamianiu programu, ponieważ zgłasza wyjątek, jeśli gniazdo o określonej nazwie zostało już przydzielono.</span><span class="sxs-lookup"><span data-stu-id="d19b6-375">If the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method is used, it should be called in the main thread at program startup, because it throws an exception if a slot with the specified name has already been allocated.</span></span> <span data-ttu-id="d19b6-376">Nie ma możliwości sprawdzenia, czy gniazdo zostało już przydzieloną.</span><span class="sxs-lookup"><span data-stu-id="d19b6-376">There is no way to test whether a slot has already been allocated.</span></span>  
  
 <span data-ttu-id="d19b6-377">Gniazda przydzieloną za pomocą tej metody muszą być zwolnione z <xref:System.Threading.Thread.FreeNamedDataSlot%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-377">Slots allocated with this method must be freed with <xref:System.Threading.Thread.FreeNamedDataSlot%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-378">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-378">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-379">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-379">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-380">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-380">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-381">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-381">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-382">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-382">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-383">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-383">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-384">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-384">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-385">Poniższy przykład ilustruje sposób użycia nazwanego gniazda danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-385">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-386">Przykładowy kod nie używa <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> metody, <xref:System.Threading.Thread.GetNamedDataSlot%2A> ponieważ metoda przydziela miejsce, jeśli nie zostało jeszcze przydzielone.</span><span class="sxs-lookup"><span data-stu-id="d19b6-386">The example code does not use the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method, because the <xref:System.Threading.Thread.GetNamedDataSlot%2A> method allocates the slot if it has not already been allocated.</span></span> <span data-ttu-id="d19b6-387"><xref:System.Threading.Thread.AllocateNamedDataSlot%2A> Jeśli metoda jest używana, powinna być wywoływana w wątku głównym przy uruchamianiu programu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-387">If the <xref:System.Threading.Thread.AllocateNamedDataSlot%2A> method is used, it should be called in the main thread at program startup.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-388">Nazwane gniazdo danych o podanej nazwie już istnieje.</span><span class="sxs-lookup"><span data-stu-id="d19b6-388">A named data slot with the specified name already exists.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-389">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-389">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-390">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-390">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApartmentState">
      <MemberSignature Language="C#" Value="public System.Threading.ApartmentState ApartmentState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ApartmentState ApartmentState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ApartmentState" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentState As ApartmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ApartmentState ApartmentState { System::Threading::ApartmentState get(); void set(System::Threading::ApartmentState value); };" />
      <MemberSignature Language="F#" Value="member this.ApartmentState : System.Threading.ApartmentState with get, set" Usage="System.Threading.Thread.ApartmentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Deprecated in favor of GetApartmentState, SetApartmentState and TrySetApartmentState.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The ApartmentState property has been deprecated.  Use GetApartmentState, SetApartmentState or TrySetApartmentState instead.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ApartmentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-391">Pobiera lub ustawia stan apartamentu tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-391">Gets or sets the apartment state of this thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-392">Jedna z <see cref="T:System.Threading.ApartmentState" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-392">One of the <see cref="T:System.Threading.ApartmentState" /> values.</span></span> <span data-ttu-id="d19b6-393">Wartość początkowa to <see langword="Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-393">The initial value is <see langword="Unknown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-394">**<xref:System.Threading.Thread.ApartmentState%2A> Właściwość jest przestarzała.**</span><span class="sxs-lookup"><span data-stu-id="d19b6-394">**The <xref:System.Threading.Thread.ApartmentState%2A> property is obsolete.**</span></span>  <span data-ttu-id="d19b6-395">Nieprzestarzałe alternatywy to <xref:System.Threading.Thread.GetApartmentState%2A> Metoda pobrania stanu apartamentu <xref:System.Threading.Thread.SetApartmentState%2A> i metody w celu ustawienia stanu apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-395">The non-obsolete alternatives are the <xref:System.Threading.Thread.GetApartmentState%2A> method to retrieve the apartment state and the   <xref:System.Threading.Thread.SetApartmentState%2A> method to set the apartment state.</span></span>  
  
 <span data-ttu-id="d19b6-396">W .NET Framework wersje 1,0 i 1,1 `ApartmentState` Właściwość oznacza wątek, aby wskazać, że będzie wykonywany w jednowątkowym lub wielowątkowym apartamentie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-396">In the .NET Framework versions 1.0 and 1.1, the `ApartmentState` property marks a thread to indicate that it will execute in a single-threaded or multithreaded apartment.</span></span> <span data-ttu-id="d19b6-397">Tę właściwość można ustawić, gdy wątek jest w `Unstarted` stanie wątku lub `Running` , ale można ją ustawić tylko raz dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-397">This property can be set when the thread is in the `Unstarted` or `Running` thread state; however, it can be set only once for a thread.</span></span> <span data-ttu-id="d19b6-398">Jeśli właściwość nie została ustawiona, zwraca `Unknown`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-398">If the property has not been set, it returns `Unknown`.</span></span>  
  
 <span data-ttu-id="d19b6-399">Próba użycia <xref:System.Threading.Thread.ApartmentState%2A> właściwości w celu ustawienia stanu apartamentu wątku, którego stan apartamentu został już ustawiony, jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-399">An attempt to use the <xref:System.Threading.Thread.ApartmentState%2A> property to set the apartment state of a thread whose apartment state has already been set is ignored.</span></span> <span data-ttu-id="d19b6-400"><xref:System.Threading.Thread.SetApartmentState%2A> Jednak Metoda<xref:System.InvalidOperationException> zgłasza w tym przypadku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-400">However, the <xref:System.Threading.Thread.SetApartmentState%2A> method throws a <xref:System.InvalidOperationException> in this case.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-401">W .NET Framework w wersji 2,0 nowe wątki są inicjowane tak <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> , jakby ich stan apartamentu nie został ustawiony przed rozpoczęciem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-401">In the .NET Framework version 2.0, new threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="d19b6-402">Główny wątek aplikacji jest domyślnie zainicjowany <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-402">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="d19b6-403">Nie można już ustawić głównego wątku <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> aplikacji, <xref:System.Threading.ApartmentState?displayProperty=nameWithType> ustawiając właściwość w pierwszym wierszu kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-403">You can no longer set the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> by setting the <xref:System.Threading.ApartmentState?displayProperty=nameWithType> property on the first line of code.</span></span> <span data-ttu-id="d19b6-404"><xref:System.STAThreadAttribute> Użyj zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-404">Use the <xref:System.STAThreadAttribute> instead.</span></span>  
  
 <span data-ttu-id="d19b6-405">W .NET Framework w wersji 2,0 można określić model wątkowości COM dla C++ aplikacji przy użyciu [/CLRTHREADATTRIBUTE (ustaw atrybut wątku CLR)](https://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) opcji konsolidatora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-405">In the .NET Framework version 2.0, you can specify the COM threading model for a C++ application using the [/CLRTHREADATTRIBUTE (Set CLR Thread Attribute)](https://msdn.microsoft.com/library/4907e9ef-5031-446c-aecf-0a0b32fae1e8) linker option.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-406">Poniższy przykład kodu demonstruje sposób ustawiania stanu apartamentu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-406">The following code example demonstrates how to set the apartment state of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.ApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-407">Podjęto próbę ustawienia dla tej właściwości stanu, który nie jest prawidłowym stanem apartamentu (stanem innym niż Single-Threading Apartment<see langword="STA" />() lub apartamentem wielowątkowym<see langword="MTA" />()).</span><span class="sxs-lookup"><span data-stu-id="d19b6-407">An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (<see langword="STA" />) or multithreaded apartment (<see langword="MTA" />)).</span></span></exception>
        <altmember cref="T:System.Threading.ThreadState" />
        <altmember cref="M:System.Threading.Thread.GetApartmentState" />
        <altmember cref="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
      </Docs>
    </Member>
    <Member MemberName="BeginCriticalRegion">
      <MemberSignature Language="C#" Value="public static void BeginCriticalRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginCriticalRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.BeginCriticalRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BeginCriticalRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BeginCriticalRegion();" />
      <MemberSignature Language="F#" Value="static member BeginCriticalRegion : unit -&gt; unit" Usage="System.Threading.Thread.BeginCriticalRegion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-408">Powiadamia hosta, że wykonanie polega na wprowadzeniu regionu kodu, w którym efekty przerwania wątku lub nieobsłużonego wyjątku mogą zagrozić innym zadaniom w domenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-408">Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-409">Hosty środowiska uruchomieniowego języka wspólnego (CLR), takie jak Microsoft SQL Server 2005, mogą nawiązywać różne zasady dla błędów w regionach krytycznych i niekrytycznych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-409">Hosts of the common language runtime (CLR), such as Microsoft SQL Server 2005, can establish different policies for failures in critical and non-critical regions of code.</span></span> <span data-ttu-id="d19b6-410">Region krytyczny to jeden, w którym skutki przerwania wątku lub nieobsłużonego wyjątku mogą nie być ograniczone do bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-410">A critical region is one in which the effects of a thread abort or an unhandled exception might not be limited to the current task.</span></span> <span data-ttu-id="d19b6-411">Z kolei, przerwanie lub błąd w niekrytycznym regionie kodu ma wpływ tylko na zadanie, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d19b6-411">By contrast, an abort or failure in a non-critical region of code affects only the task in which the error occurs.</span></span>  
  
 <span data-ttu-id="d19b6-412">Rozważmy na przykład zadanie, które próbuje przydzielić pamięć podczas utrzymywania blokady.</span><span class="sxs-lookup"><span data-stu-id="d19b6-412">For example, consider a task that attempts to allocate memory while holding a lock.</span></span> <span data-ttu-id="d19b6-413">Jeśli alokacja pamięci nie powiedzie się, przerywanie bieżącego zadania nie jest wystarczające, aby zapewnić <xref:System.AppDomain>stabilność, ponieważ w domenie mogą znajdować się inne zadania oczekujące na tę samą blokadę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-413">If the memory allocation fails, aborting the current task is not sufficient to ensure stability of the <xref:System.AppDomain>, because there can be other tasks in the domain waiting for the same lock.</span></span> <span data-ttu-id="d19b6-414">Jeśli bieżące zadanie zostało zakończone, inne zadania mogą być zakleszczony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-414">If the current task is terminated, other tasks could be deadlocked.</span></span>  
  
 <span data-ttu-id="d19b6-415">Gdy wystąpi awaria w regionie krytycznym, host może podjąć decyzję o rozłączeniu <xref:System.AppDomain> całości, a nie z ryzykiem ciągłego wykonywania w stanie potencjalnie niestabilnym.</span><span class="sxs-lookup"><span data-stu-id="d19b6-415">When a failure occurs in a critical region, the host might decide to unload the entire <xref:System.AppDomain> rather than take the risk of continuing execution in a potentially unstable state.</span></span> <span data-ttu-id="d19b6-416">Aby poinformować hosta, że Twój kod przechodzi do regionu krytycznego, wywołaj <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-416">To inform the host that your code is entering a critical region, call <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span></span> <span data-ttu-id="d19b6-417">Wywołanie <xref:System.Threading.Thread.EndCriticalRegion%2A> , gdy wykonanie powraca do niekrytycznego regionu kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-417">Call <xref:System.Threading.Thread.EndCriticalRegion%2A> when execution returns to a non-critical region of code.</span></span>  
  
 <span data-ttu-id="d19b6-418">Użycie tej metody w kodzie, który jest uruchamiany w SQL Server 2005 wymaga, aby kod był uruchamiany na najwyższym poziomie ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="d19b6-418">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-419">Poniższy przykład ilustruje użycie <xref:System.Threading.Thread.BeginCriticalRegion%2A> metod i <xref:System.Threading.Thread.EndCriticalRegion%2A> do dzielenia bloku kodu na regiony krytyczne i niekrytyczne.</span><span class="sxs-lookup"><span data-stu-id="d19b6-419">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginCriticalRegion%2A> and <xref:System.Threading.Thread.EndCriticalRegion%2A> methods to divide a block of code into critical and non-critical regions.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.EndCriticalRegion" />
      </Docs>
    </Member>
    <Member MemberName="BeginThreadAffinity">
      <MemberSignature Language="C#" Value="public static void BeginThreadAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginThreadAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.BeginThreadAffinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BeginThreadAffinity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BeginThreadAffinity();" />
      <MemberSignature Language="F#" Value="static member BeginThreadAffinity : unit -&gt; unit" Usage="System.Threading.Thread.BeginThreadAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-420">Powiadamia hosta, że kod zarządzany ma wykonać instrukcje, które są zależne od tożsamości bieżącego fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-420">Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-421">Niektóre hosty środowiska uruchomieniowego języka wspólnego, takie jak Microsoft SQL Server 2005, zapewniają własne zarządzanie wątkami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-421">Some hosts of the common language runtime, such as Microsoft SQL Server 2005, provide their own thread management.</span></span> <span data-ttu-id="d19b6-422">Host, który zapewnia własne zarządzanie wątkami, może przenieść wykonywanie zadania z jednego fizycznego wątku systemu operacyjnego do innego w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-422">A host that provides its own thread management can move an executing task from one physical operating system thread to another at any time.</span></span> <span data-ttu-id="d19b6-423">Tego przełączania nie ma wpływ na większość zadań.</span><span class="sxs-lookup"><span data-stu-id="d19b6-423">Most tasks are not affected by this switching.</span></span> <span data-ttu-id="d19b6-424">Jednak niektóre zadania mają koligację wątku — to oznacza, że zależą od tożsamości fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-424">However, some tasks have thread affinity - that is, they depend on the identity of a physical operating system thread.</span></span> <span data-ttu-id="d19b6-425">Te zadania muszą poinformować hosta, gdy wykonują kod, który nie powinien być przełączany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-425">These tasks must inform the host when they execute code that should not be switched.</span></span>  
  
 <span data-ttu-id="d19b6-426">Na przykład jeśli aplikacja wywołuje systemowy interfejs API w celu uzyskania blokady systemu operacyjnego, która ma koligację wątku, taką jak critical_section Win32, należy wywołać <xref:System.Threading.Thread.BeginThreadAffinity%2A> przed uzyskaniem blokady i <xref:System.Threading.Thread.EndThreadAffinity%2A> po zwolnieniu blokady.</span><span class="sxs-lookup"><span data-stu-id="d19b6-426">For example, if your application calls a system API to acquire an operating system lock that has thread affinity, such as a Win32 CRITICAL_SECTION, you must call <xref:System.Threading.Thread.BeginThreadAffinity%2A> before acquiring the lock, and <xref:System.Threading.Thread.EndThreadAffinity%2A> after releasing the lock.</span></span>  
  
 <span data-ttu-id="d19b6-427">Użycie tej metody w kodzie, który jest uruchamiany w SQL Server 2005 wymaga, aby kod był uruchamiany na najwyższym poziomie ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="d19b6-427">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-428">Poniższy przykład ilustruje użycie <xref:System.Threading.Thread.BeginThreadAffinity%2A> metod i <xref:System.Threading.Thread.EndThreadAffinity%2A> w celu powiadomienia hosta, że blok kodu zależy od tożsamości fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-428">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginThreadAffinity%2A> and <xref:System.Threading.Thread.EndThreadAffinity%2A> methods to notify a host that a block of code depends on the identity of a physical operating system thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-429">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="d19b6-429">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-430">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-430">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-431">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-431">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Threading.Thread.EndThreadAffinity" />
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.Contexts.Context CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Remoting.Contexts.Context CurrentContext" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentContext As Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::Contexts::Context ^ CurrentContext { System::Runtime::Remoting::Contexts::Context ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : System.Runtime.Remoting.Contexts.Context" Usage="System.Threading.Thread.CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Contexts.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-432">Pobiera bieżący kontekst, w którym wykonywany jest wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-432">Gets the current context in which the thread is executing.</span></span></summary>
        <value><span data-ttu-id="d19b6-433"><see cref="T:System.Runtime.Remoting.Contexts.Context" /> Reprezentujący bieżący kontekst wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-433">A <see cref="T:System.Runtime.Remoting.Contexts.Context" /> representing the current thread context.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-434">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="d19b6-434">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-435">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-435">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-436">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-436">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Threading.Thread.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-437">Pobiera lub ustawia kulturę dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-437">Gets or sets the culture for the current thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-438">Obiekt, który reprezentuje kulturę dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-438">An object that represents the culture for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-439"><xref:System.Globalization.CultureInfo> Obiekt, który jest zwracany przez tę właściwość wraz ze skojarzonymi z nim obiektami, określa domyślny format dat, godzin, liczb, wartości walutowych, kolejności sortowania tekstu, Konwencji wielkości liter i porównań ciągów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-439">The <xref:System.Globalization.CultureInfo> object that is returned by this property, together with its associated objects, determine the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.</span></span> <span data-ttu-id="d19b6-440">Zapoznaj się z klasą, aby dowiedzieć się więcej o nazwach i identyfikatorach kultur, różnicach między niezmiennymi, neutralnymi i szczególnymi kulturami oraz sposobem, w jaki informacje kultury wpływają na wątki i domeny aplikacji. <xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="d19b6-440">See the <xref:System.Globalization.CultureInfo> class to learn about culture names and identifiers, the differences between invariant, neutral, and specific cultures, and the way culture information affects threads and application domains.</span></span> <span data-ttu-id="d19b6-441">Zapoznaj się z właściwością, aby dowiedzieć się, jak jest określana kultura domyślna wątku oraz jak użytkownicy ustawiają informacje o kulturze dla swoich komputerów. <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d19b6-441">See the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to learn how a thread's default culture is determined, and how users set culture information for their computers.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="d19b6-442">Właściwość <xref:System.Threading.Thread.CurrentCulture> nie działa w sposób niezawodny, gdy jest używany z jakimkolwiek wątkiem innym niż bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-442">The <xref:System.Threading.Thread.CurrentCulture> property doesn't work reliably when used with any thread other than the current thread.</span></span> <span data-ttu-id="d19b6-443">W .NET Framework odczytywanie właściwości jest niezawodne, chociaż ustawienie jej dla wątku innego niż bieżący wątek nie jest.</span><span class="sxs-lookup"><span data-stu-id="d19b6-443">In .NET Framework, reading the property is reliable, although setting it for a thread other than the current thread is not.</span></span> <span data-ttu-id="d19b6-444">W przypadku platformy .NET Core <xref:System.InvalidOperationException> jest zgłaszany, jeśli wątek próbuje odczytać lub <xref:System.Threading.Thread.CurrentCulture> zapisać właściwość w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-444">On .NET Core, an <xref:System.InvalidOperationException> is thrown if a thread attempts to read or write the <xref:System.Threading.Thread.CurrentCulture> property on a different thread.</span></span>
> <span data-ttu-id="d19b6-445">Zalecamy użycie <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> właściwości, aby pobrać i ustawić bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-445">We recommend that you use the <xref:System.Globalization.CultureInfo.CurrentCulture?displayProperty=nameWithType> property to retrieve and set the current culture.</span></span>

 <span data-ttu-id="d19b6-446">Począwszy od <xref:System.Threading.Thread.CurrentCulture%2A> , można ustawić właściwość na neutralną kulturę. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d19b6-446">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you can set the <xref:System.Threading.Thread.CurrentCulture%2A> property to a neutral culture.</span></span> <span data-ttu-id="d19b6-447">Wynika to z faktu, że <xref:System.Globalization.CultureInfo> zachowanie klasy zostało zmienione: Gdy reprezentuje kulturę neutralną, jej wartości właściwości (w <xref:System.Globalization.CultureInfo.Calendar%2A>szczególności <xref:System.Globalization.CultureInfo.CompareInfo%2A> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> <xref:System.Globalization.CultureInfo.NumberFormat%2A>właściwości,,, i <xref:System.Globalization.CultureInfo.TextInfo%2A> ) odzwierciedlają teraz określoną kulturę, która jest skojarzona z kulturą neutralną.</span><span class="sxs-lookup"><span data-stu-id="d19b6-447">This is because the behavior of the <xref:System.Globalization.CultureInfo> class has changed: When it represents a neutral culture, its property values (in particular, the <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, and <xref:System.Globalization.CultureInfo.TextInfo%2A> properties) now reflect the specific culture that is associated with the neutral culture.</span></span> <span data-ttu-id="d19b6-448">We wcześniejszych wersjach .NET Framework <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość <xref:System.NotSupportedException> zgłosiła wyjątek, gdy zostanie przypisana kultura neutralna.</span><span class="sxs-lookup"><span data-stu-id="d19b6-448">In earlier versions of the .NET Framework, the <xref:System.Threading.Thread.CurrentCulture%2A> property threw a <xref:System.NotSupportedException> exception when a neutral culture was assigned.</span></span>  
  
## Examples  
 <span data-ttu-id="d19b6-449">Poniższy przykład przedstawia instrukcję Threading, która umożliwia interfejsowi użytkownika aplikacji Windows Forms wyświetlanie w kulturze, która jest ustawiona w panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-449">The following example shows the threading statement that allows the user interface of a Windows Forms application to display in the culture that is set in Control Panel.</span></span> <span data-ttu-id="d19b6-450">Wymagany jest dodatkowy kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-450">Additional code is needed.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Culture#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Culture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Culture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Culture/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-451">Właściwość jest ustawiona na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-451">The property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-452">Tylko .NET Core: Odczytywanie lub zapisywanie kultury wątku z innego wątku nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-452">.NET Core only: Reading or writing the culture of a thread from another thread is not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-453">do ustawiania właściwości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-453">for setting the property.</span></span> <span data-ttu-id="d19b6-454">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="System.Threading.Thread.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-455">Pobiera lub ustawia bieżący podmiot zabezpieczeń wątku (dla zabezpieczeń opartych na rolach).</span><span class="sxs-lookup"><span data-stu-id="d19b6-455">Gets or sets the thread's current principal (for role-based security).</span></span></summary>
        <value><span data-ttu-id="d19b6-456"><see cref="T:System.Security.Principal.IPrincipal" /> Wartość reprezentująca kontekst zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="d19b6-456">An <see cref="T:System.Security.Principal.IPrincipal" /> value representing the security context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d19b6-457">Poniższy przykład kodu pokazuje, jak ustawić i pobrać podmiot zabezpieczeń wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-457">The following code example shows how to set and retrieve the principal of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentPrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.CurrentPrincipal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-458">Obiekt wywołujący nie ma uprawnienia wymaganego do ustawienia podmiotu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="d19b6-458">The caller does not have the permission required to set the principal.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-459">do manipulowania obiektem głównym.</span><span class="sxs-lookup"><span data-stu-id="d19b6-459">to manipulate the principal object.</span></span> <span data-ttu-id="d19b6-460">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-460">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentThread">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread CurrentThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Thread CurrentThread" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentThread As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Thread ^ CurrentThread { System::Threading::Thread ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentThread : System.Threading.Thread" Usage="System.Threading.Thread.CurrentThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-461">Pobiera aktualnie uruchomiony wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-461">Gets the currently running thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-462"><see cref="T:System.Threading.Thread" /> Jest to reprezentacja aktualnie działającego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-462">A <see cref="T:System.Threading.Thread" /> that is the representation of the currently running thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d19b6-463">Poniższy przykład tworzy zadanie, które z kolei tworzy 20 zadań podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-463">The following example creates a task that in turn creates 20 child tasks.</span></span> <span data-ttu-id="d19b6-464">Sama aplikacja, a także każde zadanie, wywołuje `ShowThreadInformation` metodę, która <xref:System.Threading.Thread.CurrentThread%2A> używa właściwości, aby wyświetlić informacje o wątku, w którym jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-464">The application itself, as well as each task, calls the `ShowThreadInformation` method, which uses the <xref:System.Threading.Thread.CurrentThread%2A> property  to display information about the thread on which it is running.</span></span>  
  
 [!code-csharp[System.Threading.Thread.CurrentThread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.currentthread/cs/currentthread2.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentThread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.currentthread/vb/currentthread2.vb#1)]  
  
 <span data-ttu-id="d19b6-465">Każde zadanie podrzędne generuje liczbę losową 1 000 000 z zakresu od 1 do 1 000 000 i zwraca ich średnią wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-465">Each child task generates 1 million random numbers between 1 and 1 million and returns their mean.</span></span> <span data-ttu-id="d19b6-466">Zadanie nadrzędne wywołuje <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> metodę, aby upewnić się, że zadania podrzędne zostały ukończone przed wyświetleniem średniej zwróconej przez każde zadanie i obliczenia średniego środka.</span><span class="sxs-lookup"><span data-stu-id="d19b6-466">The parent task calls the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method to ensure that the child tasks have completed before displaying the mean returned by each task and calculating the mean of means.</span></span>  
  
 <span data-ttu-id="d19b6-467">Należy pamiętać, że podczas gdy aplikacja jest uruchamiana w wątku pierwszego planu, każde zadanie jest uruchamiane w wątku puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-467">Note that while the application runs on a foreground thread, each task runs on a thread pool thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Threading.Thread.CurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-468">Pobiera lub ustawia bieżącą kulturę używaną przez Menedżer zasobów do wyszukiwania zasobów specyficznych dla kultury w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-468">Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.</span></span></summary>
        <value><span data-ttu-id="d19b6-469">Obiekt, który reprezentuje bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-469">An object that represents the current culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-470">Kultura interfejsu użytkownika określa zasoby, których aplikacja musi obsługiwać dane wejściowe i wyjściowe użytkownika, a domyślnie jest taka sama jak kultura systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-470">The UI culture specifies the resources an application needs to support user input and output, and by default is the same as the operating system culture.</span></span> <span data-ttu-id="d19b6-471">Zapoznaj się z klasą, aby dowiedzieć się więcej o nazwach i identyfikatorach kultur, różnicach między niezmiennymi, neutralnymi i szczególnymi kulturami oraz sposobem, w jaki informacje kultury wpływają na wątki i domeny aplikacji. <xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="d19b6-471">See the <xref:System.Globalization.CultureInfo> class to learn about culture names and identifiers, the differences between invariant, neutral, and specific cultures, and the way culture information affects threads and application domains.</span></span> <span data-ttu-id="d19b6-472">Zobacz Właściwość <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> , aby dowiedzieć się, jak jest określana domyślna kultura interfejsu użytkownika wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-472">See the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property to learn how a thread's default UI culture is determined.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="d19b6-473">Właściwość <xref:System.Threading.Thread.CurrentUICulture> nie działa w sposób niezawodny, gdy jest używany z jakimkolwiek wątkiem innym niż bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-473">The <xref:System.Threading.Thread.CurrentUICulture> property doesn't work reliably when used with any thread other than the current thread.</span></span> <span data-ttu-id="d19b6-474">W .NET Framework odczytywanie właściwości jest niezawodne, chociaż ustawienie jej dla wątku innego niż bieżący wątek nie jest.</span><span class="sxs-lookup"><span data-stu-id="d19b6-474">In .NET Framework, reading the property is reliable, although setting it for a thread other than the current thread is not.</span></span> <span data-ttu-id="d19b6-475">W przypadku platformy .NET Core <xref:System.InvalidOperationException> jest zgłaszany, jeśli wątek próbuje odczytać lub <xref:System.Threading.Thread.CurrentUICulture> zapisać właściwość w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-475">On .NET Core, an <xref:System.InvalidOperationException> is thrown if a thread attempts to read or write the <xref:System.Threading.Thread.CurrentUICulture> property on a different thread.</span></span>
> <span data-ttu-id="d19b6-476">Zalecamy użycie <xref:System.Globalization.CultureInfo.CurrentUICulture?displayProperty=nameWithType> właściwości, aby pobrać i ustawić bieżącą kulturę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-476">We recommend that you use the <xref:System.Globalization.CultureInfo.CurrentUICulture?displayProperty=nameWithType> property to retrieve and set the current culture.</span></span>

 <span data-ttu-id="d19b6-477"><xref:System.Globalization.CultureInfo> Zwracana przez tę właściwość może być kulturą neutralną.</span><span class="sxs-lookup"><span data-stu-id="d19b6-477">The <xref:System.Globalization.CultureInfo> returned by this property can be a neutral culture.</span></span> <span data-ttu-id="d19b6-478">Nie należy używać kultur neutralnych z metodami formatowania, <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>takimi jak <xref:System.Convert.ToString%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, i.</span><span class="sxs-lookup"><span data-stu-id="d19b6-478">Neutral cultures should not be used with formatting methods such as <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, and <xref:System.Convert.ToString%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-479">Użyj metody, aby uzyskać określoną kulturę, lub <xref:System.Threading.Thread.CurrentCulture%2A> Użyj właściwości. <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d19b6-479">Use the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method to get a specific culture, or use the <xref:System.Threading.Thread.CurrentCulture%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-480"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> Metoda zgłasza<xref:System.ArgumentException> dla nieneutralnych kultur "zh-Hant" ("zh-CHT") i "zh-Hans" ("zh-CHS").</span><span class="sxs-lookup"><span data-stu-id="d19b6-480">The <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method throws <xref:System.ArgumentException> for the neutral cultures "zh-Hant" ("zh-CHT") and "zh-Hans" ("zh-CHS").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-481">Poniższy przykład określa, czy język kultury interfejsu bieżącego wątku jest francuski.</span><span class="sxs-lookup"><span data-stu-id="d19b6-481">The following example determines whether the language of the current thread's UI culture is French.</span></span> <span data-ttu-id="d19b6-482">Jeśli tak nie jest, ustawia kulturę interfejsu użytkownika bieżącego wątku na angielski (Stany Zjednoczone).</span><span class="sxs-lookup"><span data-stu-id="d19b6-482">If it is not, it sets the UI culture of the current thread to English (United States).</span></span>  
  
 [!code-csharp[System.Threading.Thread.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Thread.CurrentUICulture/cs/CurrentUICulture1.cs#1)]
 [!code-vb[System.Threading.Thread.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Thread.CurrentUICulture/vb/CurrentUICulture1.vb#1)]  
  
 <span data-ttu-id="d19b6-483">Poniższy przykład kodu przedstawia instrukcję Threading, która umożliwia interfejsowi użytkownika Windows Forms wyświetlanie w kulturze, która jest ustawiona w panelu sterowania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-483">The following code example shows the threading statement that allows the user interface of a Windows Forms to display in the culture that is set in Control Panel.</span></span> <span data-ttu-id="d19b6-484">Wymagany jest dodatkowy kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-484">Additional code is needed.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Culture#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Culture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Culture/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Culture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Culture/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d19b6-485">Właściwość jest ustawiona na <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-485">The property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-486">Właściwość jest ustawiona na nazwę kultury, której nie można użyć do zlokalizowania pliku zasobów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-486">The property is set to a culture name that cannot be used to locate a resource file.</span></span> <span data-ttu-id="d19b6-487">Nazwy plików zasobów muszą zawierać tylko litery, cyfry, łączniki i podkreślenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-487">Resource filenames must include only letters, numbers, hyphens or underscores.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-488">Tylko .NET Core: Odczytywanie lub zapisywanie kultury wątku z innego wątku nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-488">.NET Core only: Reading or writing the culture of a thread from another thread is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableComObjectEagerCleanup">
      <MemberSignature Language="C#" Value="public void DisableComObjectEagerCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableComObjectEagerCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.DisableComObjectEagerCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableComObjectEagerCleanup ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableComObjectEagerCleanup();" />
      <MemberSignature Language="F#" Value="member this.DisableComObjectEagerCleanup : unit -&gt; unit" Usage="thread.DisableComObjectEagerCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-489">Wyłącza automatyczne czyszczenie wywoływanych otok (RCW) środowiska uruchomieniowego dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-489">Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-490">Domyślnie środowisko uruchomieniowe języka wspólnego (CLR) czyści automatycznie wywoływane otoki środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-490">By default, the common language runtime (CLR) cleans up runtime callable wrappers automatically.</span></span> <span data-ttu-id="d19b6-491">Komunikaty środowiska CLR podczas czyszczenia, co może powodować problemy z współużytkowania wątkowością dla kilku aplikacji, które spełniają następujące nietypowe kryteria:</span><span class="sxs-lookup"><span data-stu-id="d19b6-491">The CLR pumps messages during the cleanup, which might cause reentrancy problems for a few applications that meet the following unusual criteria:</span></span>  
  
-   <span data-ttu-id="d19b6-492">Aplikacja wykonuje własną pompę komunikatów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-492">The application does its own message pumping.</span></span>  
  
-   <span data-ttu-id="d19b6-493">Aplikacja musi dokładnie kontrolować, kiedy odbywa się pompa komunikatów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-493">The application needs to control precisely when message pumping occurs.</span></span>  
  
 <span data-ttu-id="d19b6-494">Takie aplikacje mogą korzystać <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A> z metody, aby uniemożliwić środowisku CLR automatyczne odzyskiwanie wywoływanych otok środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-494">Such applications can use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A> method to prevent the CLR from doing automatic reclamation of runtime callable wrappers.</span></span>  
  
 <span data-ttu-id="d19b6-495">Po wywołaniu tej metody w wątku automatyczne czyszczenie nie może zostać włączone dla tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-495">When this method has been called on a thread, automatic cleanup cannot be re-enabled for that thread.</span></span> <span data-ttu-id="d19b6-496">Gdy aplikacja jest gotowa do czyszczenia wywoływanych otok środowiska uruchomieniowego, użyj <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A?displayProperty=nameWithType> metody, aby nakazać środowisko uruchomieniowe oczyszczania wszystkich wywoływanych otok środowiska uruchomieniowego w bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="d19b6-496">When your application is ready to clean up runtime callable wrappers, use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A?displayProperty=nameWithType> method to instruct the runtime to clean up all runtime callable wrappers in the current context.</span></span> <span data-ttu-id="d19b6-497">Podczas wykonywania metody jest wykonywana pompa komunikatów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-497">Message pumping occurs while the method executes.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-498">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-498">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-499">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-499">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EndCriticalRegion">
      <MemberSignature Language="C#" Value="public static void EndCriticalRegion ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCriticalRegion() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.EndCriticalRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCriticalRegion ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCriticalRegion();" />
      <MemberSignature Language="F#" Value="static member EndCriticalRegion : unit -&gt; unit" Usage="System.Threading.Thread.EndCriticalRegion " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-500">Powiadamia hosta, że wykonanie polega na wprowadzeniu regionu kodu, w którym efekty przerwania wątku lub nieobsłużonego wyjątku są ograniczone do bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-500">Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-501">Hosty środowiska uruchomieniowego języka wspólnego (CLR), takie jak Microsoft SQL Server 2005, mogą nawiązywać różne zasady dla błędów w regionach krytycznych i niekrytycznych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-501">Hosts of the common language runtime (CLR), such as Microsoft SQL Server 2005, can establish different policies for failures in critical and non-critical regions of code.</span></span> <span data-ttu-id="d19b6-502">Region krytyczny to jeden, w którym skutki przerwania wątku lub nieobsłużonego wyjątku mogą nie być ograniczone do bieżącego zadania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-502">A critical region is one in which the effects of a thread abort or an unhandled exception might not be limited to the current task.</span></span> <span data-ttu-id="d19b6-503">Z kolei, przerwanie lub błąd w niekrytycznym regionie kodu ma wpływ tylko na zadanie, w którym występuje błąd.</span><span class="sxs-lookup"><span data-stu-id="d19b6-503">By contrast, an abort or failure in a non-critical region of code affects only the task in which the error occurs.</span></span>  
  
 <span data-ttu-id="d19b6-504">Rozważmy na przykład zadanie, które próbuje przydzielić pamięć podczas utrzymywania blokady.</span><span class="sxs-lookup"><span data-stu-id="d19b6-504">For example, consider a task that attempts to allocate memory while holding a lock.</span></span> <span data-ttu-id="d19b6-505">Jeśli alokacja pamięci nie powiedzie się, przerywanie bieżącego zadania nie jest wystarczające, aby zapewnić <xref:System.AppDomain>stabilność, ponieważ w domenie mogą znajdować się inne zadania oczekujące na tę samą blokadę.</span><span class="sxs-lookup"><span data-stu-id="d19b6-505">If the memory allocation fails, aborting the current task is not sufficient to ensure stability of the <xref:System.AppDomain>, because there can be other tasks in the domain waiting for the same lock.</span></span> <span data-ttu-id="d19b6-506">Jeśli bieżące zadanie zostało zakończone, inne zadania mogą być zakleszczony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-506">If the current task is terminated, other tasks could be deadlocked.</span></span>  
  
 <span data-ttu-id="d19b6-507">Gdy wystąpi awaria w regionie krytycznym, host może podjąć decyzję o rozłączeniu <xref:System.AppDomain> całości, a nie z ryzykiem ciągłego wykonywania w stanie potencjalnie niestabilnym.</span><span class="sxs-lookup"><span data-stu-id="d19b6-507">When a failure occurs in a critical region, the host might decide to unload the entire <xref:System.AppDomain> rather than take the risk of continuing execution in a potentially unstable state.</span></span> <span data-ttu-id="d19b6-508">Aby poinformować hosta, że Twój kod przechodzi do regionu krytycznego, wywołaj <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-508">To inform the host that your code is entering a critical region, call <xref:System.Threading.Thread.BeginCriticalRegion%2A>.</span></span> <span data-ttu-id="d19b6-509">Wywołanie <xref:System.Threading.Thread.EndCriticalRegion%2A> , gdy wykonanie powraca do niekrytycznego regionu kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-509">Call <xref:System.Threading.Thread.EndCriticalRegion%2A> when execution returns to a non-critical region of code.</span></span>  
  
 <span data-ttu-id="d19b6-510">Użycie tej metody w kodzie, który jest uruchamiany w SQL Server 2005 wymaga, aby kod był uruchamiany na najwyższym poziomie ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="d19b6-510">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-511">Poniższy przykład ilustruje użycie <xref:System.Threading.Thread.BeginCriticalRegion%2A> metod i <xref:System.Threading.Thread.EndCriticalRegion%2A> do dzielenia bloku kodu na regiony krytyczne i niekrytyczne.</span><span class="sxs-lookup"><span data-stu-id="d19b6-511">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginCriticalRegion%2A> and <xref:System.Threading.Thread.EndCriticalRegion%2A> methods to divide a block of code into critical and non-critical regions.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginCriticalRegion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginCriticalRegion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.BeginCriticalRegion" />
      </Docs>
    </Member>
    <Member MemberName="EndThreadAffinity">
      <MemberSignature Language="C#" Value="public static void EndThreadAffinity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndThreadAffinity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.EndThreadAffinity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndThreadAffinity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndThreadAffinity();" />
      <MemberSignature Language="F#" Value="static member EndThreadAffinity : unit -&gt; unit" Usage="System.Threading.Thread.EndThreadAffinity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-512">Powiadamia hosta, że kod zarządzany zakończył wykonywanie instrukcji, które są zależne od tożsamości bieżącego fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-512">Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-513">Niektóre hosty środowiska uruchomieniowego języka wspólnego, takie jak Microsoft SQL Server 2005, zapewniają własne zarządzanie wątkami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-513">Some hosts of the common language runtime, such as Microsoft SQL Server 2005, provide their own thread management.</span></span> <span data-ttu-id="d19b6-514">Host, który zapewnia własne zarządzanie wątkami, może przenieść wykonywanie zadania z jednego fizycznego wątku systemu operacyjnego do innego w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-514">A host that provides its own thread management can move an executing task from one physical operating system thread to another at any time.</span></span> <span data-ttu-id="d19b6-515">Tego przełączania nie ma wpływ na większość zadań.</span><span class="sxs-lookup"><span data-stu-id="d19b6-515">Most tasks are not affected by this switching.</span></span> <span data-ttu-id="d19b6-516">Jednak niektóre zadania mają koligację wątku — to oznacza, że zależą od tożsamości fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-516">However, some tasks have thread affinity - that is, they depend on the identity of a physical operating system thread.</span></span> <span data-ttu-id="d19b6-517">Te zadania muszą poinformować hosta, gdy wykonują kod, który nie powinien być przełączany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-517">These tasks must inform the host when they execute code that should not be switched.</span></span>  
  
 <span data-ttu-id="d19b6-518">Na przykład jeśli aplikacja wywołuje systemowy interfejs API w celu uzyskania blokady systemu operacyjnego, która ma koligację wątku, taką jak critical_section Win32, należy wywołać <xref:System.Threading.Thread.BeginThreadAffinity%2A> przed uzyskaniem blokady i <xref:System.Threading.Thread.EndThreadAffinity%2A> po zwolnieniu blokady.</span><span class="sxs-lookup"><span data-stu-id="d19b6-518">For example, if your application calls a system API to acquire an operating system lock that has thread affinity, such as a Win32 CRITICAL_SECTION, you must call <xref:System.Threading.Thread.BeginThreadAffinity%2A> before acquiring the lock, and <xref:System.Threading.Thread.EndThreadAffinity%2A> after releasing the lock.</span></span>  
  
 <span data-ttu-id="d19b6-519">Użycie tej metody w kodzie, który jest uruchamiany w SQL Server 2005 wymaga, aby kod był uruchamiany na najwyższym poziomie ochrony hosta.</span><span class="sxs-lookup"><span data-stu-id="d19b6-519">Using this method in code that runs under SQL Server 2005 requires the code to be run at the highest host protection level.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-520">Poniższy przykład ilustruje użycie <xref:System.Threading.Thread.BeginThreadAffinity%2A> metod i <xref:System.Threading.Thread.EndThreadAffinity%2A> w celu powiadomienia hosta, że blok kodu zależy od tożsamości fizycznego wątku systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-520">The following example demonstrates the use of the <xref:System.Threading.Thread.BeginThreadAffinity%2A> and <xref:System.Threading.Thread.EndThreadAffinity%2A> methods to notify a host that a block of code depends on the identity of a physical operating system thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.BeginThreadAffinity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.BeginThreadAffinity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-521">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="d19b6-521">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-522">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-522">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-523">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-523">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Threading.Thread.BeginThreadAffinity" />
      </Docs>
    </Member>
    <Member MemberName="ExecutionContext">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext ExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ExecutionContext ExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionContext As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ExecutionContext ^ ExecutionContext { System::Threading::ExecutionContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionContext : System.Threading.ExecutionContext" Usage="System.Threading.Thread.ExecutionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-524"><see cref="T:System.Threading.ExecutionContext" /> Pobiera obiekt, który zawiera informacje o różnych kontekstach bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-524">Gets an <see cref="T:System.Threading.ExecutionContext" /> object that contains information about the various contexts of the current thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-525"><see cref="T:System.Threading.ExecutionContext" /> Obiekt, który konsoliduje informacje kontekstu dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-525">An <see cref="T:System.Threading.ExecutionContext" /> object that consolidates context information for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-526"><xref:System.Threading.ExecutionContext> Klasa zawiera pojedynczy kontener dla wszystkich informacji istotnych dla logicznego wątku wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-526">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="d19b6-527">Dotyczy to kontekstu zabezpieczeń, kontekstu wywołania, kontekstu synchronizacji, kontekstu lokalizacji i kontekstu transakcji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-527">This includes security context, call context, synchronization context, localization context, and transaction context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Thread ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Thread ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="thread.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-528">Zapewnia, że zasoby są zwolnione i inne operacje czyszczenia są wykonywane, gdy moduł zbierający <see cref="T:System.Threading.Thread" /> elementy bezużyteczne odzyskuje obiekt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-528">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Threading.Thread" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-529">Moduł zbierający elementy <xref:System.Threading.Thread.Finalize%2A> bezużyteczne wywołuje, kiedy bieżący obiekt jest gotowy do sfinalizowania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-529">The garbage collector calls <xref:System.Threading.Thread.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNamedDataSlot">
      <MemberSignature Language="C#" Value="public static void FreeNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.FreeNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeNamedDataSlot (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member FreeNamedDataSlot : string -&gt; unit" Usage="System.Threading.Thread.FreeNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d19b6-530">Nazwa miejsca danych, które ma zostać zwolnione.</span><span class="sxs-lookup"><span data-stu-id="d19b6-530">The name of the data slot to be freed.</span></span></param>
        <summary><span data-ttu-id="d19b6-531">Eliminuje skojarzenie między nazwą i miejscem, dla wszystkich wątków w procesie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-531">Eliminates the association between a name and a slot, for all threads in the process.</span></span> <span data-ttu-id="d19b6-532">W celu uzyskania lepszej wydajności Użyj pól, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-532">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-533">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-533">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-534">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-534">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-535">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-535">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-536">Po dowolnych `FreeNamedDataSlot`wywołaniach wątku każdy inny wątek <xref:System.Threading.Thread.GetNamedDataSlot%2A> , który wywołuje o tej samej nazwie, przydzieli nowe miejsce skojarzone z nazwą.</span><span class="sxs-lookup"><span data-stu-id="d19b6-536">After any thread calls `FreeNamedDataSlot`, any other thread that calls <xref:System.Threading.Thread.GetNamedDataSlot%2A> with the same name will allocate a new slot associated with the name.</span></span> <span data-ttu-id="d19b6-537">Kolejne wywołania do `GetNamedDataSlot` każdego wątku zwracają nowe miejsce.</span><span class="sxs-lookup"><span data-stu-id="d19b6-537">Subsequent calls to `GetNamedDataSlot` by any thread will return the new slot.</span></span> <span data-ttu-id="d19b6-538">Jednak każdy wątek, który nadal jest <xref:System.LocalDataStoreSlot?displayProperty=nameWithType> zwracany przez poprzednie wywołanie do `GetNamedDataSlot` , może nadal używać starego gniazda.</span><span class="sxs-lookup"><span data-stu-id="d19b6-538">However, any thread that still has a <xref:System.LocalDataStoreSlot?displayProperty=nameWithType> returned by an earlier call to `GetNamedDataSlot` can continue to use the old slot.</span></span>  
  
 <span data-ttu-id="d19b6-539">Gniazdo, które zostało skojarzone z nazwą, jest uwalniane tylko wtedy `LocalDataStoreSlot` , gdy jest ono uzyskiwane przed `FreeNamedDataSlot` zwolnieniem i zebraniem elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-539">A slot that has been associated with a name is released only when every `LocalDataStoreSlot` that was obtained prior to the call to `FreeNamedDataSlot` has been released and garbage-collected.</span></span>  
  
 <span data-ttu-id="d19b6-540">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-540">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-541">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-541">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-542">Wątek może przydzielić miejsce danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwolnić miejsce do ponownego użycia po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-542">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="d19b6-543">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-543">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-544">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-544">No other thread (not even a child thread) can get that data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-545">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-545">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-546">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-546">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-547">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-547">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-548">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-548">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-549">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-549">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-550">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-550">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-551">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-551">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-552">Poniższy przykład ilustruje sposób użycia nazwanego gniazda danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-552">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-553">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-553">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-554">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-554">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetApartmentState">
      <MemberSignature Language="C#" Value="public System.Threading.ApartmentState GetApartmentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.ApartmentState GetApartmentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetApartmentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApartmentState () As ApartmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ApartmentState GetApartmentState();" />
      <MemberSignature Language="F#" Value="member this.GetApartmentState : unit -&gt; System.Threading.ApartmentState" Usage="thread.GetApartmentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ApartmentState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-555"><see cref="T:System.Threading.ApartmentState" /> Zwraca wartość wskazującą stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-555">Returns an <see cref="T:System.Threading.ApartmentState" /> value indicating the apartment state.</span></span></summary>
        <returns><span data-ttu-id="d19b6-556">Jedna z <see cref="T:System.Threading.ApartmentState" /> wartości wskazujących stan apartamentu zarządzanego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-556">One of the <see cref="T:System.Threading.ApartmentState" /> values indicating the apartment state of the managed thread.</span></span> <span data-ttu-id="d19b6-557">Wartość domyślna to <see cref="F:System.Threading.ApartmentState.Unknown" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-557">The default is <see cref="F:System.Threading.ApartmentState.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-558">Ta metoda, wraz z <xref:System.Threading.Thread.SetApartmentState%2A> metodą <xref:System.Threading.Thread.TrySetApartmentState%2A> i metodą, zastępuje <xref:System.Threading.Thread.ApartmentState%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-558">This method, along with the <xref:System.Threading.Thread.SetApartmentState%2A> method and the <xref:System.Threading.Thread.TrySetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-559">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>metody, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-559">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="d19b6-560">Przykładowy kod tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-560">The code example creates a thread.</span></span> <span data-ttu-id="d19b6-561">Przed uruchomieniem wątku program <xref:System.Threading.Thread.GetApartmentState%2A> wyświetli stan początkowy <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> i <xref:System.Threading.Thread.SetApartmentState%2A> zmieni stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-561">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-562">Następnie metoda zwraca `false` przy próbie zmiany stanu na <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> , ponieważ stan apartamentu jest już ustawiony. <xref:System.Threading.Thread.TrySetApartmentState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-562">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="d19b6-563">Jeśli podjęto próbę wykonania <xref:System.Threading.Thread.SetApartmentState%2A>tej samej operacji, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-563">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="d19b6-564">Gdy wątek zostanie uruchomiony, <xref:System.Threading.Thread.TrySetApartmentState%2A> Metoda zostanie użyta ponownie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-564">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="d19b6-565">Ten czas jest zgłaszany <xref:System.Threading.ThreadStateException> , ponieważ wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-565">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompressedStack">
      <MemberSignature Language="C#" Value="public System.Threading.CompressedStack GetCompressedStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.CompressedStack GetCompressedStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetCompressedStack" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompressedStack () As CompressedStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CompressedStack ^ GetCompressedStack();" />
      <MemberSignature Language="F#" Value="member this.GetCompressedStack : unit -&gt; System.Threading.CompressedStack" Usage="thread.GetCompressedStack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Thread.GetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.CompressedStack</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-566"><see cref="T:System.Threading.CompressedStack" /> Zwraca obiekt, który może służyć do przechwytywania stosu dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-566">Returns a <see cref="T:System.Threading.CompressedStack" /> object that can be used to capture the stack for the current thread.</span></span></summary>
        <returns><span data-ttu-id="d19b6-567">Brak.</span><span class="sxs-lookup"><span data-stu-id="d19b6-567">None.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-568">Ta metoda nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-568">This method is no longer supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-569">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-569">In all cases.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-570">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-570">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-571">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-571">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProcessorId">
      <MemberSignature Language="C#" Value="public static int GetCurrentProcessorId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCurrentProcessorId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetCurrentProcessorId" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentProcessorId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetCurrentProcessorId();" />
      <MemberSignature Language="F#" Value="static member GetCurrentProcessorId : unit -&gt; int" Usage="System.Threading.Thread.GetCurrentProcessorId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (LocalDataStoreSlot slot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(class System.LocalDataStoreSlot slot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (slot As LocalDataStoreSlot) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(LocalDataStoreSlot ^ slot);" />
      <MemberSignature Language="F#" Value="static member GetData : LocalDataStoreSlot -&gt; obj" Usage="System.Threading.Thread.GetData slot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.LocalDataStoreSlot" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="slot"><span data-ttu-id="d19b6-572">, <see cref="T:System.LocalDataStoreSlot" /> Z którego ma zostać pobrana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-572">The <see cref="T:System.LocalDataStoreSlot" /> from which to get the value.</span></span></param>
        <summary><span data-ttu-id="d19b6-573">Pobiera wartość z określonego gniazda w bieżącym wątku w bieżącej domenie bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-573">Retrieves the value from the specified slot on the current thread, within the current thread's current domain.</span></span> <span data-ttu-id="d19b6-574">W celu uzyskania lepszej wydajności Użyj pól, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-574">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <returns><span data-ttu-id="d19b6-575">Pobrana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-575">The retrieved value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-576">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-576">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-577">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-577">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-578">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-578">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-579">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-579">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-580">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-580">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-581">Wątek może przydzielić miejsce danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwolnić miejsce do ponownego użycia po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-581">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="d19b6-582">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-582">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-583">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-583">No other thread (not even a child thread) can get that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-584"><xref:System.Threading.Thread.GetData%2A>`Shared` to metoda, która zawsze ma zastosowanie do aktualnie wykonywanego wątku, nawet jeśli zostanie wywołana przy użyciu zmiennej, która odwołuje się do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-584"><xref:System.Threading.Thread.GetData%2A> is a `Shared` method that always applies to the currently executing thread, even if you call it using a variable that refers to another thread.</span></span> <span data-ttu-id="d19b6-585">Aby uniknąć nieporozumień, użyj nazwy klasy podczas `Shared` wywoływania metod `Dim test As Object = Thread.GetData(testSlot)`:.</span><span class="sxs-lookup"><span data-stu-id="d19b6-585">To avoid confusion, use the class name when calling `Shared` methods: `Dim test As Object = Thread.GetData(testSlot)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-586">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-586">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-587">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-587">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-588">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-588">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-589">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-589">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-590">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-590">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-591">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-591">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-592">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-592">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-593">Poniższy przykład ilustruje sposób użycia miejsca danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-593">The following example demonstrates how to use a data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-594">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-594">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-595">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-595">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static AppDomain GetDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AppDomain GetDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomain () As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static AppDomain ^ GetDomain();" />
      <MemberSignature Language="F#" Value="static member GetDomain : unit -&gt; AppDomain" Usage="System.Threading.Thread.GetDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-596">Zwraca bieżącą domenę, w której jest uruchomiony bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-596">Returns the current domain in which the current thread is running.</span></span></summary>
        <returns><span data-ttu-id="d19b6-597"><see cref="T:System.AppDomain" /> Reprezentująca bieżącą domenę aplikacji działającego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-597">An <see cref="T:System.AppDomain" /> representing the current application domain of the running thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d19b6-598">Poniższy przykład kodu pokazuje, jak pobrać nazwę i identyfikator, `AppDomain` w którym jest uruchomiony wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-598">The following code example shows how to retrieve the name and ID of the `AppDomain` in which the thread is running.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Domain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Domain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Domain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Domain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDomainID">
      <MemberSignature Language="C#" Value="public static int GetDomainID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDomainID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetDomainID" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomainID () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDomainID();" />
      <MemberSignature Language="F#" Value="static member GetDomainID : unit -&gt; int" Usage="System.Threading.Thread.GetDomainID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-599">Zwraca unikatowy identyfikator domeny aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-599">Returns a unique application domain identifier.</span></span></summary>
        <returns><span data-ttu-id="d19b6-600">32-bitowa liczba całkowita ze znakiem, która jednoznacznie identyfikuje domenę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-600">A 32-bit signed integer uniquely identifying the application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d19b6-601">Poniższy przykład kodu pokazuje, jak pobrać nazwę i identyfikator, `AppDomain` w którym jest uruchomiony wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-601">The following code example shows how to retrieve the name and ID of the `AppDomain` in which the thread is running.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Domain#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Domain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Domain/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Domain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Domain/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="thread.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-602">Zwraca kod skrótu dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-602">Returns a hash code for the current thread.</span></span></summary>
        <returns><span data-ttu-id="d19b6-603">Wartość kodu skrótu wartości całkowitej.</span><span class="sxs-lookup"><span data-stu-id="d19b6-603">An integer hash code value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-604">Kod skrótu nie gwarantuje unikalności.</span><span class="sxs-lookup"><span data-stu-id="d19b6-604">The hash code is not guaranteed to be unique.</span></span> <span data-ttu-id="d19b6-605">Użyj właściwości <xref:System.Threading.Thread.ManagedThreadId%2A> , jeśli potrzebujesz unikatowego identyfikatora dla wątku zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-605">Use the <xref:System.Threading.Thread.ManagedThreadId%2A> property if you need a unique identifier for a managed thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamedDataSlot">
      <MemberSignature Language="C#" Value="public static LocalDataStoreSlot GetNamedDataSlot (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.LocalDataStoreSlot GetNamedDataSlot(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.GetNamedDataSlot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedDataSlot (name As String) As LocalDataStoreSlot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static LocalDataStoreSlot ^ GetNamedDataSlot(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedDataSlot : string -&gt; LocalDataStoreSlot" Usage="System.Threading.Thread.GetNamedDataSlot name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LocalDataStoreSlot</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d19b6-606">Nazwa lokalnego miejsca danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-606">The name of the local data slot.</span></span></param>
        <summary><span data-ttu-id="d19b6-607">Wyszukuje nazwane gniazdo danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-607">Looks up a named data slot.</span></span> <span data-ttu-id="d19b6-608">W celu uzyskania lepszej wydajności Użyj pól, które są oznaczone <see cref="T:System.ThreadStaticAttribute" /> atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-608">For better performance, use fields that are marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <returns><span data-ttu-id="d19b6-609"><see cref="T:System.LocalDataStoreSlot" /> Przydzielono dla tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-609">A <see cref="T:System.LocalDataStoreSlot" /> allocated for this thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-610">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-610">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-611">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-611">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-612">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-612">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-613">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-613">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-614">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-614">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-615">Wątek może przydzielić miejsce danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwolnić miejsce do ponownego użycia po wygaśnięciu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-615">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread expires.</span></span> <span data-ttu-id="d19b6-616">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-616">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-617">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-617">No other thread (not even a child thread) can get that data.</span></span>  
  
 <span data-ttu-id="d19b6-618">Jeśli nazwane miejsce nie istnieje, przydzielono nowe miejsce.</span><span class="sxs-lookup"><span data-stu-id="d19b6-618">If the named slot does not exist, a new slot is allocated.</span></span> <span data-ttu-id="d19b6-619">Nazwane gniazda danych są publiczne i mogą być przetwarzane przez każdego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="d19b6-619">Named data slots are public and can be manipulated by anyone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-620">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-620">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-621">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-621">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-622">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-622">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-623">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-623">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-624">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-624">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-625">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-625">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-626">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-626">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-627">Poniższy przykład ilustruje sposób użycia nazwanego gniazda danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-627">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-628">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-628">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-629">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-629">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Interrupt();" />
      <MemberSignature Language="F#" Value="member this.Interrupt : unit -&gt; unit" Usage="thread.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-630">Przerywa wątek, który jest w <see cref="F:System.Threading.ThreadState.WaitSleepJoin" /> stanie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-630">Interrupts a thread that is in the <see cref="F:System.Threading.ThreadState.WaitSleepJoin" /> thread state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-631">Jeśli ten wątek nie jest obecnie blokowany w stanie oczekiwania, uśpienia lub przyłączania, zostanie przerwany po następnym rozpoczęciu bloku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-631">If this thread is not currently blocked in a wait, sleep, or join state, it will be interrupted when it next begins to block.</span></span>  
  
 <span data-ttu-id="d19b6-632"><xref:System.Threading.ThreadInterruptedException>jest zgłaszany w przerwanym wątku, ale nie do momentu blokowania wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-632"><xref:System.Threading.ThreadInterruptedException> is thrown in the interrupted thread, but not until the thread blocks.</span></span> <span data-ttu-id="d19b6-633">Jeśli wątek nigdy nie jest blokowany, wyjątek nigdy nie zostanie zgłoszony i w ten sposób wątek może zakończyć się bez przerywania działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-633">If the thread never blocks, the exception is never thrown, and thus the thread might complete without ever being interrupted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-634">Poniższy przykład kodu pokazuje zachowanie działającego wątku, gdy zostanie przerwany i następnie jest blokowany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-634">The following code example shows the behavior of a running thread when it is interrupted and subsequently gets blocked.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Interrupt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Interrupt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Interrupt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-635">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />elementu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-635">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-636">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-636">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-637">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-637">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span></span></permission>
        <altmember cref="T:System.Threading.ThreadState" />
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="d19b6-638">Wstrzymywanie i przerywanie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-638">Pausing and interrupting threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAlive">
      <MemberSignature Language="C#" Value="public bool IsAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlive" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAlive : bool" Usage="System.Threading.Thread.IsAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-639">Pobiera wartość wskazującą stan wykonywania bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-639">Gets a value indicating the execution status of the current thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-640"><see langword="true" />Jeśli ten wątek został uruchomiony i nie został zakończony normalnie lub przerwany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-640"><see langword="true" /> if this thread has been started and has not terminated normally or aborted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackground">
      <MemberSignature Language="C#" Value="public bool IsBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBackground" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBackground As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBackground { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBackground : bool with get, set" Usage="System.Threading.Thread.IsBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-641">Pobiera lub ustawia wartość wskazującą, czy wątek jest wątkiem w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-641">Gets or sets a value indicating whether or not a thread is a background thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-642"><see langword="true" />Jeśli ten wątek jest lub ma być wątkiem w tle; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-642"><see langword="true" /> if this thread is or is to become a background thread; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-643">Wątek jest wątkiem w tle lub wątkiem pierwszego planu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-643">A thread is either a background thread or a foreground thread.</span></span> <span data-ttu-id="d19b6-644">Wątki w tle są takie same jak wątki pierwszego planu, z wyjątkiem tego, że wątki w tle nie uniemożliwiają zakończenia procesu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-644">Background threads are identical to foreground threads, except that background threads do not prevent a process from terminating.</span></span> <span data-ttu-id="d19b6-645">Gdy wszystkie wątki pierwszego planu należące do procesu zakończą działanie, środowisko uruchomieniowe języka wspólnego kończy proces.</span><span class="sxs-lookup"><span data-stu-id="d19b6-645">Once all foreground threads belonging to a process have terminated, the common language runtime ends the process.</span></span> <span data-ttu-id="d19b6-646">Wszystkie pozostałe wątki w tle są zatrzymane i nie są kompletne.</span><span class="sxs-lookup"><span data-stu-id="d19b6-646">Any remaining background threads are stopped and do not complete.</span></span>  
  
 <span data-ttu-id="d19b6-647">Domyślnie następujące wątki są wykonywane na pierwszym planie (oznacza to, że ich <xref:System.Threading.Thread.IsBackground%2A> Właściwość zwraca `false`):</span><span class="sxs-lookup"><span data-stu-id="d19b6-647">By default, the following threads execute in the foreground (that is, their <xref:System.Threading.Thread.IsBackground%2A> property returns `false`):</span></span>  
  
-   <span data-ttu-id="d19b6-648">Wątek podstawowy (lub główny wątek aplikacji).</span><span class="sxs-lookup"><span data-stu-id="d19b6-648">The primary thread (or main application thread).</span></span>  
  
-   <span data-ttu-id="d19b6-649">Wszystkie wątki utworzone przez wywołanie <xref:System.Threading.Thread> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-649">All threads created by calling a <xref:System.Threading.Thread> class constructor.</span></span>  
  
 <span data-ttu-id="d19b6-650">Domyślnie następujące wątki są wykonywane w tle (oznacza to, że ich <xref:System.Threading.Thread.IsBackground%2A> Właściwość zwraca `true`):</span><span class="sxs-lookup"><span data-stu-id="d19b6-650">By default, the following threads execute in the background  (that is, their <xref:System.Threading.Thread.IsBackground%2A> property returns `true`):</span></span>  
  
-   <span data-ttu-id="d19b6-651">Wątki puli wątków, które są pulą wątków roboczych obsługiwanych przez środowisko uruchomieniowe.</span><span class="sxs-lookup"><span data-stu-id="d19b6-651">Thread pool threads, which are a pool of worker threads maintained by the runtime.</span></span> <span data-ttu-id="d19b6-652">Można skonfigurować pulę wątków i zaplanować prace w wątkach puli wątków przy użyciu <xref:System.Threading.ThreadPool> klasy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-652">You can configure the thread pool and schedule work on thread pool threads by using the <xref:System.Threading.ThreadPool> class.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d19b6-653">Asynchroniczne operacje oparte na zadaniach są automatycznie wykonywane w wątkach puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-653">Task-based asynchronous operations automatically execute on thread pool threads.</span></span>  
  
-   <span data-ttu-id="d19b6-654">Wszystkie wątki, które wprowadzają zarządzane środowisko wykonawcze z kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-654">All threads that enter the managed execution environment from unmanaged code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-655">Poniższy przykład kontrastuje zachowanie wątków pierwszego planu i tła.</span><span class="sxs-lookup"><span data-stu-id="d19b6-655">The following example contrasts the behavior of foreground and background threads.</span></span> <span data-ttu-id="d19b6-656">Tworzy wątek pierwszego planu i wątek w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-656">It creates a foreground thread and a background thread.</span></span> <span data-ttu-id="d19b6-657">Wątek pierwszego planu utrzymuje proces uruchomiony do momentu ukończenia `for` jego pętli i zakończenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-657">The foreground thread keeps the process running until completes its `for` loop and terminates.</span></span> <span data-ttu-id="d19b6-658">Jednak jako dane wyjściowe z przykładu pokazują, że wątek pierwszego planu zakończył wykonywanie, proces zostanie przerwany przed ukończeniem wykonywania wątku w tle.</span><span class="sxs-lookup"><span data-stu-id="d19b6-658">However, as the output from the example shows, because the foreground thread has finished execution, the process is terminated before the background thread has completed execution.</span></span>  
  
 [!code-cpp[System.Threading.Thread.IsBackground#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.IsBackground#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.IsBackground#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.IsBackground/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-659">Wątek jest martwy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-659">The thread is dead.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/foreground-and-background-threads.md"><span data-ttu-id="d19b6-660">Wątki pierwszego planu i tła</span><span class="sxs-lookup"><span data-stu-id="d19b6-660">Foreground and Background Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsThreadPoolThread">
      <MemberSignature Language="C#" Value="public bool IsThreadPoolThread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadPoolThread" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.IsThreadPoolThread" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsThreadPoolThread As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadPoolThread { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadPoolThread : bool" Usage="System.Threading.Thread.IsThreadPoolThread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-661">Pobiera wartość wskazującą, czy wątek należy do puli zarządzanych wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-661">Gets a value indicating whether or not a thread belongs to the managed thread pool.</span></span></summary>
        <value><span data-ttu-id="d19b6-662"><see langword="true" />Jeśli ten wątek należy do puli wątków zarządzanych; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-662"><see langword="true" /> if this thread belongs to the managed thread pool; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-663">Aby uzyskać więcej informacji [, zobacz Zarządzana pula wątków](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="d19b6-663">For more information see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-664">Poniższy przykład kodu pokazuje, jak ustalić, czy wątek pochodzi z puli wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-664">The following code example shows how to determine whether a thread is from the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.IsThreadPoolThread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.IsThreadPoolThread/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ThreadPool" />
        <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="d19b6-665">Zarządzana pula wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-665">The Managed Thread Pool</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-666">Blokuje wątek wywołujący do momentu zakończenia wątku reprezentowanego przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-666">Blocks the calling thread until the thread represented by this instance terminates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public void Join ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Join() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join" />
      <MemberSignature Language="VB.NET" Value="Public Sub Join ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Join();" />
      <MemberSignature Language="F#" Value="member this.Join : unit -&gt; unit" Usage="thread.Join " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-667">Blokuje wątek wywołujący do momentu przerwania wątku reprezentowanego przez to wystąpienie, przy jednoczesnym kontynuowaniu <see langword="SendMessage" /> wykonywania standardowych modeli com i pompowania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-667">Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and <see langword="SendMessage" /> pumping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-668"><xref:System.Threading.Thread.Join%2A>jest metodą synchronizacji, która blokuje wątek wywołujący (czyli wątek wywołujący metodę) do momentu, gdy wątek, którego <xref:System.Threading.Thread.Join%2A> Metoda jest wywoływana, została ukończona.</span><span class="sxs-lookup"><span data-stu-id="d19b6-668"><xref:System.Threading.Thread.Join%2A> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed.</span></span> <span data-ttu-id="d19b6-669">Użyj tej metody, aby upewnić się, że wątek został zakończony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-669">Use this method to ensure that a thread has been terminated.</span></span> <span data-ttu-id="d19b6-670">Obiekt wywołujący będzie blokowany w nieskończoność, jeśli wątek nie zostanie zakończony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-670">The caller will block indefinitely if the thread does not terminate.</span></span> <span data-ttu-id="d19b6-671">W `Thread1` poniższym przykładzie wątek `Thread2` <xref:System.Threading.Thread.Join> wywołuje metodę, która powoduje `Thread1` zablokowanie do momentu `Thread2` ukończenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-671">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block until `Thread2` has completed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1a.cs#1)]
 [!code-vb[System.Threading.Thread.Join#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1a.vb#1)]  
  
 <span data-ttu-id="d19b6-672">Jeśli wątek został już zakończony, gdy <xref:System.Threading.Thread.Join%2A> jest wywoływana, metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d19b6-672">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="d19b6-673">Nigdy nie należy wywoływać <xref:System.Threading.Thread.Join%2A> metody <xref:System.Threading.Thread> obiektu, który reprezentuje bieżący wątek z bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-673">You should never call the <xref:System.Threading.Thread.Join%2A> method of the <xref:System.Threading.Thread> object that represents the current thread from the current thread.</span></span> <span data-ttu-id="d19b6-674">Powoduje to, że aplikacja przestanie odpowiadać, ponieważ bieżący wątek czeka na siebie,</span><span class="sxs-lookup"><span data-stu-id="d19b6-674">This causes your app to become unresponsive because the current thread waits upon itself indefinitely,</span></span>  
  
 <span data-ttu-id="d19b6-675">Ta metoda zmienia stan wątku wywołującego do dołączenia <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-675">This method changes the state of the calling thread to include <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-676">Nie można wywołać `Join` w wątku, który jest <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> w stanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-676">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-677">Obiekt wywołujący próbował dołączyć do wątku znajdującego się w <see cref="F:System.Threading.ThreadState.Unstarted" /> stanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-677">The caller attempted to join a thread that is in the <see cref="F:System.Threading.ThreadState.Unstarted" /> state.</span></span></exception>
        <exception cref="T:System.Threading.ThreadInterruptedException"><span data-ttu-id="d19b6-678">Wątek został przerwany podczas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-678">The thread is interrupted while waiting.</span></span></exception>
        <altmember cref="T:System.Threading.ThreadState" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public bool Join (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Join(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Join(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Join : int -&gt; bool" Usage="thread.Join millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="d19b6-679">Liczba milisekund oczekiwania na zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-679">The number of milliseconds to wait for the thread to terminate.</span></span></param>
        <summary><span data-ttu-id="d19b6-680">Blokuje wątek wywołujący do momentu przerwania wątku reprezentowanego przez to wystąpienie lub określonego czasu, przy jednoczesnym kontynuowaniu standardowej pompowania modelu COM i SendMessage.</span><span class="sxs-lookup"><span data-stu-id="d19b6-680">Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.</span></span></summary>
        <returns><span data-ttu-id="d19b6-681"><see langword="true" />Jeśli wątek został zakończony; Jeśli wątek nie został zakończony po upływie czasu określonego <paramref name="millisecondsTimeout" /> przez parametr. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-681"><see langword="true" /> if the thread has terminated; <see langword="false" /> if the thread has not terminated after the amount of time specified by the <paramref name="millisecondsTimeout" /> parameter has elapsed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-682"><xref:System.Threading.Thread.Join%28System.Int32%29>jest metodą synchronizacji, która blokuje wątek wywołujący (czyli wątek wywołujący metodę) do momentu, gdy wątek, którego <xref:System.Threading.Thread.Join%2A> Metoda jest wywoływana, została zakończona lub upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-682"><xref:System.Threading.Thread.Join%28System.Int32%29> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until either the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed or the time-out interval has elapsed.</span></span> <span data-ttu-id="d19b6-683">W `Thread1` poniższym przykładzie wątek `Thread2` <xref:System.Threading.Thread.Join> wywołuje metodę, która powoduje `Thread1` zablokowanie do czasu `Thread2` zakończenia lub 2 sekundy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-683">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block either until `Thread2` has completed or 2 seconds have elapsed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1b.cs#2)]
 [!code-vb[System.Threading.Thread.Join#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1b.vb#2)]  
  
 <span data-ttu-id="d19b6-684">Jeśli <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jest określony `millisecondsTimeout` dla parametru, ta metoda zachowuje się identycznie z <xref:System.Threading.Thread.Join> przeciążeniem metody, z wyjątkiem wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="d19b6-684">If <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> is specified for the `millisecondsTimeout` parameter, this method behaves identically to the <xref:System.Threading.Thread.Join> method overload, except for the return value.</span></span>  
  
 <span data-ttu-id="d19b6-685">Jeśli wątek został już zakończony, gdy <xref:System.Threading.Thread.Join%2A> jest wywoływana, metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d19b6-685">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
 <span data-ttu-id="d19b6-686">Ta metoda zmienia stan wątku wywołującego do dołączenia <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-686">This method changes the state of the calling thread to include <xref:System.Threading.ThreadState.WaitSleepJoin?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-687">Nie można wywołać `Join` w wątku, który jest <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> w stanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-687">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-688">Wartość <paramref name="millisecondsTimeout" /> jest ujemna i nie jest <see cref="F:System.Threading.Timeout.Infinite" /> równa wartości w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-688">The value of <paramref name="millisecondsTimeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-689">Wątek nie został uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-689">The thread has not been started.</span></span></exception>
        <altmember cref="T:System.Threading.ThreadState" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-690"><paramref name="millisecondsTimeout" />jest mniejsza niż-1 (timeout. Infinite).</span><span class="sxs-lookup"><span data-stu-id="d19b6-690"><paramref name="millisecondsTimeout" /> is less than -1 (Timeout.Infinite).</span></span></exception>
        <exception cref="T:System.Threading.ThreadInterruptedException"><span data-ttu-id="d19b6-691">Wątek został przerwany podczas oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-691">The thread was interrupted while waiting.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public bool Join (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Join(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Join(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Join (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Join(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Join : TimeSpan -&gt; bool" Usage="thread.Join timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d19b6-692"><see cref="T:System.TimeSpan" /> Ustawiony na czas oczekiwania na zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-692">A <see cref="T:System.TimeSpan" /> set to the amount of time to wait for the thread to terminate.</span></span></param>
        <summary><span data-ttu-id="d19b6-693">Blokuje wątek wywołujący do momentu przerwania wątku reprezentowanego przez to wystąpienie lub określonego czasu, przy jednoczesnym kontynuowaniu standardowej pompowania modelu COM i SendMessage.</span><span class="sxs-lookup"><span data-stu-id="d19b6-693">Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.</span></span></summary>
        <returns><span data-ttu-id="d19b6-694"><see langword="true" />Jeśli wątek został przerwany; Jeśli wątek nie został zakończony po upływie czasu określonego <paramref name="timeout" /> przez parametr. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-694"><see langword="true" /> if the thread terminated; <see langword="false" /> if the thread has not terminated after the amount of time specified by the <paramref name="timeout" /> parameter has elapsed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-695"><xref:System.Threading.Thread.Join%28System.TimeSpan%29>jest metodą synchronizacji, która blokuje wątek wywołujący (czyli wątek wywołujący metodę) do momentu, gdy wątek, którego <xref:System.Threading.Thread.Join%2A> Metoda jest wywoływana, została zakończona lub upłynął limit czasu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-695"><xref:System.Threading.Thread.Join%28System.TimeSpan%29> is a synchronization method that blocks the calling thread (that is, the thread that calls the method) until either the thread whose <xref:System.Threading.Thread.Join%2A> method is called has completed or the time-out interval has elapsed.</span></span> <span data-ttu-id="d19b6-696">W `Thread1` poniższym przykładzie wątek `Thread2` <xref:System.Threading.Thread.Join> wywołuje metodę, która powoduje `Thread1` zablokowanie do czasu `Thread2` zakończenia lub 2 sekundy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-696">In the following example, the `Thread1` thread calls the <xref:System.Threading.Thread.Join> method of `Thread2`, which causes `Thread1` to block either until `Thread2` has completed or 2 seconds have elapsed.</span></span>  
  
 [!code-csharp[System.Threading.Thread.Join#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.join/cs/join1c.cs#3)]
 [!code-vb[System.Threading.Thread.Join#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.join/vb/join1c.vb#3)]  
  
 <span data-ttu-id="d19b6-697">Jeśli <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> jest określony dla `timeout`, ta metoda zachowuje się identycznie z <xref:System.Threading.Thread.Join> przeciążeniem metody, z wyjątkiem wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="d19b6-697">If <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> is specified for `timeout`, this method behaves identically to the <xref:System.Threading.Thread.Join> method overload, except for the return value.</span></span>  
  
 <span data-ttu-id="d19b6-698">Jeśli wątek został już zakończony, gdy <xref:System.Threading.Thread.Join%2A> jest wywoływana, metoda zwraca natychmiast.</span><span class="sxs-lookup"><span data-stu-id="d19b6-698">If the thread has already terminated when <xref:System.Threading.Thread.Join%2A> is called, the method returns immediately.</span></span>  
  
 <span data-ttu-id="d19b6-699">Ta metoda zmienia stan bieżącego wątku do dołączenia <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-699">This method changes the state of the current thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span> <span data-ttu-id="d19b6-700">Nie można wywołać `Join` w wątku, który jest <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> w stanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-700">You cannot invoke `Join` on a thread that is in the <xref:System.Threading.ThreadState.Unstarted?displayProperty=nameWithType> state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-701">Poniższy przykład kodu ilustruje sposób używania `TimeSpan` wartości `Join` z metodą.</span><span class="sxs-lookup"><span data-stu-id="d19b6-701">The following code example demonstrates how to use a `TimeSpan` value with the `Join` method.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Timespan#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Timespan#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Timespan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Timespan/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-702">Wartość <paramref name="timeout" /> jest ujemna i nie jest <see cref="F:System.Threading.Timeout.Infinite" /> równa wartości w milisekundach lub jest większa od <see cref="F:System.Int32.MaxValue" /> milisekund.</span><span class="sxs-lookup"><span data-stu-id="d19b6-702">The value of <paramref name="timeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds, or is greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-703">Obiekt wywołujący próbował dołączyć do wątku znajdującego się w <see cref="F:System.Threading.ThreadState.Unstarted" /> stanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-703">The caller attempted to join a thread that is in the <see cref="F:System.Threading.ThreadState.Unstarted" /> state.</span></span></exception>
        <altmember cref="T:System.Threading.ThreadState" />
      </Docs>
    </Member>
    <Member MemberName="ManagedThreadId">
      <MemberSignature Language="C#" Value="public int ManagedThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ManagedThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ManagedThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManagedThreadId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ManagedThreadId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ManagedThreadId : int" Usage="System.Threading.Thread.ManagedThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-704">Pobiera unikatowy identyfikator bieżącego wątku zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-704">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-705">Liczba całkowita reprezentująca unikatowy identyfikator dla tego wątku zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-705">An integer that represents a unique identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-706">Wartość <xref:System.Threading.Thread.ManagedThreadId%2A> właściwości wątku służy do jednoznacznego identyfikowania tego wątku w ramach procesu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-706">A thread's <xref:System.Threading.Thread.ManagedThreadId%2A> property value serves to uniquely identify that thread within its process.</span></span>  
  
 <span data-ttu-id="d19b6-707">Wartość <xref:System.Threading.Thread.ManagedThreadId%2A> właściwości nie różni się w zależności od czasu, nawet jeśli kod niezarządzany, który obsługuje środowisko uruchomieniowe języka wspólnego, implementuje wątek jako włókna.</span><span class="sxs-lookup"><span data-stu-id="d19b6-707">The value of the <xref:System.Threading.Thread.ManagedThreadId%2A> property does not vary over time, even if unmanaged code that hosts the common language runtime implements the thread as a fiber.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrier">
      <MemberSignature Language="C#" Value="public static void MemoryBarrier ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrier() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.MemoryBarrier" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrier ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrier();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrier : unit -&gt; unit" Usage="System.Threading.Thread.MemoryBarrier " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-708">Synchronizuje dostęp do pamięci w następujący sposób: Procesor wykonujący bieżący wątek nie może zmienić kolejności instrukcji w taki sposób, że dostęp do pamięci przed wywołaniem <see cref="M:System.Threading.Thread.MemoryBarrier" /> zostanie wykonany po uzyskaniu dostępu do pamięci, który jest zgodny z <see cref="M:System.Threading.Thread.MemoryBarrier" />wywołaniem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-708">Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to <see cref="M:System.Threading.Thread.MemoryBarrier" /> execute after memory accesses that follow the call to <see cref="M:System.Threading.Thread.MemoryBarrier" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-709"><xref:System.Threading.Thread.MemoryBarrier%2A>jest wymagana tylko w systemach wieloprocesorowych z słabą kolejnością pamięci (na przykład w systemie wykorzystującym wiele procesorów Intel Itanium).</span><span class="sxs-lookup"><span data-stu-id="d19b6-709"><xref:System.Threading.Thread.MemoryBarrier%2A> is required only on multiprocessor systems with weak memory ordering (for example, a system employing multiple Intel Itanium processors).</span></span>  
  
 <span data-ttu-id="d19b6-710">W C# `lock` większości zastosowań instrukcja, instrukcja Visual Basic `SyncLock` lub <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze sposoby synchronizowania danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-710">For most purposes, the C# `lock` statement, the Visual Basic `SyncLock` statement, or the <xref:System.Threading.Monitor> class provide easier ways to synchronize data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Threading.Thread.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-711">Pobiera lub ustawia nazwę wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-711">Gets or sets the name of the thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-712">Ciąg zawierający nazwę wątku lub <see langword="null" /> Jeśli nie ustawiono żadnej nazwy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-712">A string containing the name of the thread, or <see langword="null" /> if no name was set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-713">Ta właściwość jest jednokrotnie zapisu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-713">This property is write-once.</span></span> <span data-ttu-id="d19b6-714">Ponieważ wartością domyślną <xref:System.Threading.Thread.Name%2A> właściwości wątku jest `null`, można określić, czy nazwa została już jawnie przypisana do wątku, porównując ją z `null`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-714">Because the default value of a thread's <xref:System.Threading.Thread.Name%2A> property is `null`, you can determine whether a name has already been explicitly assigned to the thread by comparing it with `null`.</span></span>  
  
 <span data-ttu-id="d19b6-715">Ciąg przypisany do <xref:System.Threading.Thread.Name%2A> właściwości może zawierać dowolny znak Unicode.</span><span class="sxs-lookup"><span data-stu-id="d19b6-715">The string assigned to the <xref:System.Threading.Thread.Name%2A> property can include any Unicode character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-716">Poniższy przykład pokazuje, jak nazwać wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-716">The following example shows how to name a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.Name#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Name/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Name#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Name/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Name#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Name/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-717">Zażądano operacji zestawu, ale <see langword="Name" /> właściwość została już ustawiona.</span><span class="sxs-lookup"><span data-stu-id="d19b6-717">A set operation was requested, but the <see langword="Name" /> property has already been set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Threading.ThreadPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ThreadPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As ThreadPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ThreadPriority Priority { System::Threading::ThreadPriority get(); void set(System::Threading::ThreadPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Threading.ThreadPriority with get, set" Usage="System.Threading.Thread.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-718">Pobiera lub ustawia wartość wskazującą priorytet planowania wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-718">Gets or sets a value indicating the scheduling priority of a thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-719">Jedna z <see cref="T:System.Threading.ThreadPriority" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-719">One of the <see cref="T:System.Threading.ThreadPriority" /> values.</span></span> <span data-ttu-id="d19b6-720">Wartość domyślna to <see cref="F:System.Threading.ThreadPriority.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-720">The default value is <see cref="F:System.Threading.ThreadPriority.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-721">Do wątku można przypisać jedną z następujących wartości priorytetu <xref:System.Threading.ThreadPriority> :</span><span class="sxs-lookup"><span data-stu-id="d19b6-721">A thread can be assigned any one of the following priority <xref:System.Threading.ThreadPriority> values:</span></span>  
  
-   `Highest`  
  
-   `AboveNormal`  
  
-   `Normal`  
  
-   `BelowNormal`  
  
-   `Lowest`  
  
 <span data-ttu-id="d19b6-722">Systemy operacyjne nie są wymagane do przestrzegania priorytetu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-722">Operating systems are not required to honor the priority of a thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-723">Poniższy przykład pokazuje wynik zmiany priorytetu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-723">The following example shows the result of changing the priority of a thread.</span></span> <span data-ttu-id="d19b6-724">Trzy wątki są tworzone, priorytet jednego wątku jest ustawiony na <xref:System.Threading.ThreadPriority.BelowNormal?displayProperty=nameWithType>, a priorytet sekundy jest ustawiony na. <xref:System.Threading.ThreadPriority.AboveNormal?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d19b6-724">Three threads are created, the priority of one thread is set to <xref:System.Threading.ThreadPriority.BelowNormal?displayProperty=nameWithType>, and the priority of a second is set to <xref:System.Threading.ThreadPriority.AboveNormal?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-725">Każdy wątek zwiększa zmienną w `while` pętli i działa przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-725">Each thread increments a variable in a `while` loop and runs for a set time.</span></span>  
  
 [!code-csharp[System.Threading.ThreadPriority#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.ThreadPriority/cs/Example1.cs#1)]
 [!code-vb[System.Threading.ThreadPriority#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.ThreadPriority/vb/Example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-726">Wątek osiągnął stan końcowy, na <see cref="F:System.Threading.ThreadState.Aborted" />przykład.</span><span class="sxs-lookup"><span data-stu-id="d19b6-726">The thread has reached a final state, such as <see cref="F:System.Threading.ThreadState.Aborted" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-727">Wartość określona dla operacji zestawu nie jest prawidłową <see cref="T:System.Threading.ThreadPriority" /> wartością.</span><span class="sxs-lookup"><span data-stu-id="d19b6-727">The value specified for a set operation is not a valid <see cref="T:System.Threading.ThreadPriority" /> value.</span></span></exception>
        <altmember cref="T:System.Threading.ThreadPriority" />
        <related type="Article" href="~/docs/standard/threading/scheduling-threads.md"><span data-ttu-id="d19b6-728">Harmonogram wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-728">Scheduling threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetAbort">
      <MemberSignature Language="C#" Value="public static void ResetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.ResetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetAbort();" />
      <MemberSignature Language="F#" Value="static member ResetAbort : unit -&gt; unit" Usage="System.Threading.Thread.ResetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-729">Anuluje <see cref="M:System.Threading.Thread.Abort(System.Object)" /> żądanie dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-729">Cancels an <see cref="M:System.Threading.Thread.Abort(System.Object)" /> requested for the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-730">Tę metodę można wywołać tylko przy użyciu kodu z odpowiednimi uprawnieniami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-730">This method can only be called by code with the proper permissions.</span></span>  
  
 <span data-ttu-id="d19b6-731">Gdy wywołanie `Abort` w celu zakończenia wątku, system <xref:System.Threading.ThreadAbortException>zgłasza.</span><span class="sxs-lookup"><span data-stu-id="d19b6-731">When a call is made to `Abort` to terminate a thread, the system throws a <xref:System.Threading.ThreadAbortException>.</span></span> <span data-ttu-id="d19b6-732">`ThreadAbortException`to specjalny wyjątek, który może zostać przechwycony przez kod aplikacji, ale jest ponownie zgłaszany na końcu bloku catch, chyba że `ResetAbort` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-732">`ThreadAbortException` is a special exception that can be caught by application code, but is rethrown at the end of the catch block unless `ResetAbort` is called.</span></span> <span data-ttu-id="d19b6-733">`ResetAbort`anuluje żądanie przerwania i uniemożliwia `ThreadAbortException` zakończenie wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-733">`ResetAbort` cancels the request to abort, and prevents the `ThreadAbortException` from terminating the thread.</span></span>  
  
 <span data-ttu-id="d19b6-734">Zobacz <xref:System.Threading.ThreadAbortException> , aby zapoznać się z przykładem `ResetAbort` , który demonstruje wywoływanie metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-734">See <xref:System.Threading.ThreadAbortException> for an example that demonstrates calling the `ResetAbort` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-735">Tylko .NET Core: Ten element członkowski nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-735">.NET Core only: This member is not supported.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-736"><see langword="Abort" />nie została wywołana w bieżącym wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-736"><see langword="Abort" /> was not invoked on the current thread.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-737">Obiekt wywołujący nie ma wymaganego uprawnienia zabezpieczeń dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-737">The caller does not have the required security permission for the current thread.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-738">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-738">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-739">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-739">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/destroying-threads.md"><span data-ttu-id="d19b6-740">Niszczenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-740">Destroying threads</span></span></related>
        <altmember cref="T:System.Threading.ThreadState" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="thread.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  https://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-741">Wznawia wątek, który został zawieszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-741">Resumes a thread that has been suspended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d19b6-742">Nie należy używać <xref:System.Threading.Thread.Suspend%2A> metod i <xref:System.Threading.Thread.Resume%2A> do synchronizowania działań wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-742">Do not use the <xref:System.Threading.Thread.Suspend%2A> and <xref:System.Threading.Thread.Resume%2A> methods to synchronize the activities of threads.</span></span> <span data-ttu-id="d19b6-743">Nie ma możliwości znajomości kodu, który jest wykonywany przez wątek po jego wstrzymaniu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-743">You have no way of knowing what code a thread is executing when you suspend it.</span></span> <span data-ttu-id="d19b6-744">W przypadku wstrzymania wątku, gdy jest on blokowany podczas oceny uprawnień zabezpieczeń, inne wątki w programie <xref:System.AppDomain> mogą zostać zablokowane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-744">If you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="d19b6-745">Jeśli wątek zawiesza się podczas wykonywania konstruktora klasy, inne wątki w <xref:System.AppDomain> tej próbce użycia tej klasy są blokowane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-745">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span> <span data-ttu-id="d19b6-746">Zakleszczenia mogą być bardzo proste.</span><span class="sxs-lookup"><span data-stu-id="d19b6-746">Deadlocks can occur very easily.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-747">Tylko .NET Core: Ten element członkowski nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-747">.NET Core only: This member is not supported.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-748">Wątek nie został uruchomiony, jest martwy lub nie jest w stanie wstrzymania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-748">The thread has not been started, is dead, or is not in the suspended state.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-749">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />elementu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-749">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-750">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-750">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-751">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-751">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></span></span></permission>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="d19b6-752">Wstrzymywanie i przerywanie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-752">Pausing and interrupting threads</span></span></related>
        <altmember cref="T:System.Threading.ThreadState" />
      </Docs>
    </Member>
    <Member MemberName="SetApartmentState">
      <MemberSignature Language="C#" Value="public void SetApartmentState (System.Threading.ApartmentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetApartmentState(valuetype System.Threading.ApartmentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetApartmentState (state As ApartmentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetApartmentState(System::Threading::ApartmentState state);" />
      <MemberSignature Language="F#" Value="member this.SetApartmentState : System.Threading.ApartmentState -&gt; unit" Usage="thread.SetApartmentState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Threading.ApartmentState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d19b6-753">Nowy stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-753">The new apartment state.</span></span></param>
        <summary><span data-ttu-id="d19b6-754">Ustawia stan apartamentu wątku przed jego uruchomieniem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-754">Sets the apartment state of a thread before it is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-755">Nowe wątki są inicjowane <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> tak, jakby ich stan apartamentu nie został ustawiony przed rozpoczęciem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-755">New threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="d19b6-756">Przed uruchomieniem wątku należy ustawić stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-756">Apartment state must be set before a thread is started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-757">Główny wątek aplikacji jest domyślnie zainicjowany <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-757">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="d19b6-758">Jedynym sposobem ustawienia statusu apartamentu głównego wątku <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> aplikacji jest <xref:System.STAThreadAttribute> zastosowanie atrybutu do metody punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-758">The only way to set the apartment state of the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> is to apply the <xref:System.STAThreadAttribute> attribute to the entry point method.</span></span>  
  
 <span data-ttu-id="d19b6-759">Metoda, wraz <xref:System.Threading.Thread.GetApartmentState%2A> z metodą i <xref:System.Threading.Thread.TrySetApartmentState%2A> metodą, zastępuje <xref:System.Threading.Thread.ApartmentState%2A> właściwość. <xref:System.Threading.Thread.SetApartmentState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-759">The <xref:System.Threading.Thread.SetApartmentState%2A> method, along with the <xref:System.Threading.Thread.GetApartmentState%2A> method and the <xref:System.Threading.Thread.TrySetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-760">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>metody, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-760">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="d19b6-761">Przykładowy kod tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-761">The code example creates a thread.</span></span> <span data-ttu-id="d19b6-762">Przed uruchomieniem wątku program <xref:System.Threading.Thread.GetApartmentState%2A> wyświetli stan początkowy <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> i <xref:System.Threading.Thread.SetApartmentState%2A> zmieni stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-762">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-763">Następnie metoda zwraca `false` przy próbie zmiany stanu na <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> , ponieważ stan apartamentu jest już ustawiony. <xref:System.Threading.Thread.TrySetApartmentState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-763">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="d19b6-764">Jeśli podjęto próbę wykonania <xref:System.Threading.Thread.SetApartmentState%2A>tej samej operacji, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-764">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="d19b6-765">Gdy wątek zostanie uruchomiony, <xref:System.Threading.Thread.TrySetApartmentState%2A> Metoda zostanie użyta ponownie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-765">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="d19b6-766">Ten czas jest zgłaszany <xref:System.Threading.ThreadStateException> , ponieważ wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-766">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-767">Tylko .NET Core: Ten element członkowski nie jest obsługiwany na platformach macOS i Linux.</span><span class="sxs-lookup"><span data-stu-id="d19b6-767">.NET Core only: This member is not supported on the macOS and Linux platforms.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-768"><paramref name="state" />nie jest prawidłowym stanem apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-768"><paramref name="state" /> is not a valid apartment state.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-769">Wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-769">The thread has already been started.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-770">Stan apartamentu został już zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-770">The apartment state has already been initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCompressedStack">
      <MemberSignature Language="C#" Value="public void SetCompressedStack (System.Threading.CompressedStack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompressedStack(class System.Threading.CompressedStack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompressedStack (stack As CompressedStack)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompressedStack(System::Threading::CompressedStack ^ stack);" />
      <MemberSignature Language="F#" Value="member this.SetCompressedStack : System.Threading.CompressedStack -&gt; unit" Usage="thread.SetCompressedStack stack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Thread.SetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="System.Threading.CompressedStack" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="stack"><span data-ttu-id="d19b6-771"><see cref="T:System.Threading.CompressedStack" /> Obiekt, który ma zostać zastosowany do bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-771">The <see cref="T:System.Threading.CompressedStack" /> object to be applied to the current thread.</span></span></param>
        <summary><span data-ttu-id="d19b6-772">Stosuje przechwyconą <see cref="T:System.Threading.CompressedStack" /> do bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-772">Applies a captured <see cref="T:System.Threading.CompressedStack" /> to the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-773">Ta metoda nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-773">This method is no longer supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-774">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-774">In all cases.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d19b6-775">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-775">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d19b6-776">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="d19b6-776">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (LocalDataStoreSlot slot, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(class System.LocalDataStoreSlot slot, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (slot As LocalDataStoreSlot, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(LocalDataStoreSlot ^ slot, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : LocalDataStoreSlot * obj -&gt; unit" Usage="System.Threading.Thread.SetData (slot, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slot" Type="System.LocalDataStoreSlot" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="slot"><span data-ttu-id="d19b6-777">, <see cref="T:System.LocalDataStoreSlot" /> W którym ma zostać ustawiona wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-777">The <see cref="T:System.LocalDataStoreSlot" /> in which to set the value.</span></span></param>
        <param name="data"><span data-ttu-id="d19b6-778">Wartość, która ma zostać ustawiona.</span><span class="sxs-lookup"><span data-stu-id="d19b6-778">The value to be set.</span></span></param>
        <summary><span data-ttu-id="d19b6-779">Ustawia dane w określonym gnieździe w aktualnie uruchomionym wątku dla bieżącej domeny tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-779">Sets the data in the specified slot on the currently running thread, for that thread's current domain.</span></span> <span data-ttu-id="d19b6-780">Aby uzyskać lepszą wydajność, zamiast tego użyj pól <see cref="T:System.ThreadStaticAttribute" /> oznaczonych atrybutem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-780">For better performance, use fields marked with the <see cref="T:System.ThreadStaticAttribute" /> attribute instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-781">.NET Framework zapewnia dwa mechanizmy używania lokalnego magazynu wątków (TLS): pola statyczne powiązane z <xref:System.ThreadStaticAttribute> wątkiem (czyli pola oznaczone atrybutem) i gniazda danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-781">The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields (that is, fields that are marked with the <xref:System.ThreadStaticAttribute> attribute) and data slots.</span></span> <span data-ttu-id="d19b6-782">Pola statyczne względne dla wątków zapewniają znacznie lepszą wydajność niż gniazda danych i umożliwiają sprawdzanie typów w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-782">Thread-relative static fields provide much better performance than data slots, and enable compile-time type checking.</span></span> <span data-ttu-id="d19b6-783">Aby uzyskać więcej informacji o korzystaniu z [protokołu TLS, zobacz temat lokalny magazyn wątków: Pola statyczne powiązane z wątkiem i gniazda](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md)danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-783">For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md).</span></span>  
  
 <span data-ttu-id="d19b6-784">Wątki używają mechanizmu pamięci magazynu lokalnego do przechowywania danych specyficznych dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-784">Threads use a local store memory mechanism to store thread-specific data.</span></span> <span data-ttu-id="d19b6-785">Środowisko uruchomieniowe języka wspólnego przydziela tablicę magazynów danych z obsługą wielu gniazd do każdego procesu podczas jego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-785">The common language runtime allocates a multi-slot data store array to each process when it is created.</span></span> <span data-ttu-id="d19b6-786">Wątek może przydzielić miejsce na danych w magazynie danych, przechowywać i pobierać wartość danych w gnieździe i zwalniać miejsce do ponownego użycia po zakończeniu procedury wątku i <xref:System.Threading.Thread> odzyskania obiektu przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-786">The thread can allocate a data slot in the data store, store and retrieve a data value in the slot, and free the slot for reuse after the thread procedure ends and the <xref:System.Threading.Thread> object has been reclaimed by garbage collection.</span></span> <span data-ttu-id="d19b6-787">Gniazda danych są unikatowe dla każdego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-787">Data slots are unique per thread.</span></span> <span data-ttu-id="d19b6-788">Żaden inny wątek (nawet wątek podrzędny) nie może uzyskać tych danych.</span><span class="sxs-lookup"><span data-stu-id="d19b6-788">No other thread (not even a child thread) can get that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-789"><xref:System.Threading.Thread.SetData%2A>`Shared` to metoda, która zawsze ma zastosowanie do aktualnie wykonywanego wątku, nawet jeśli zostanie wywołana przy użyciu zmiennej, która odwołuje się do innego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-789"><xref:System.Threading.Thread.SetData%2A> is a `Shared` method that always applies to the currently executing thread, even if you call it using a variable that refers to another thread.</span></span> <span data-ttu-id="d19b6-790">Aby uniknąć nieporozumień, użyj nazwy klasy podczas `Shared` wywoływania metod `Thread.SetData(testSlot, "test data")`:.</span><span class="sxs-lookup"><span data-stu-id="d19b6-790">To avoid confusion, use the class name when calling `Shared` methods: `Thread.SetData(testSlot, "test data")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-791">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-791">This section contains two code examples.</span></span> <span data-ttu-id="d19b6-792">Pierwszy przykład pokazuje, jak używać pola, które jest oznaczone <xref:System.ThreadStaticAttribute> atrybutem, aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-792">The first example shows how to use a field that is marked with the <xref:System.ThreadStaticAttribute> attribute to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-793">Drugi przykład pokazuje, jak używać miejsca danych do wykonania tego samego działania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-793">The second example shows how to use a data slot to do the same thing.</span></span>  
  
 <span data-ttu-id="d19b6-794">**Pierwszy przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-794">**First Example**</span></span>  
  
 <span data-ttu-id="d19b6-795">Poniższy przykład pokazuje, jak używać pola oznaczonego przez <xref:System.ThreadStaticAttribute> , aby przechowywać informacje specyficzne dla wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-795">The following example shows how to use a field that is marked with <xref:System.ThreadStaticAttribute> to hold thread-specific information.</span></span> <span data-ttu-id="d19b6-796">Ta technika zapewnia lepszą wydajność niż technika, która jest wyświetlana w drugim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-796">This technique provides better performance than the technique that is shown in the second example.</span></span>  
  
 [!code-cpp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.DoNotUseDataSlots#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.DoNotUseDataSlots/vb/source.vb#1)]  
  
 <span data-ttu-id="d19b6-797">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="d19b6-797">**Second Example**</span></span>  
  
 <span data-ttu-id="d19b6-798">Poniższy przykład ilustruje sposób użycia nazwanego gniazda danych do przechowywania informacji dotyczących wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-798">The following example demonstrates how to use a named data slot to store thread-specific information.</span></span>  
  
 [!code-cpp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.NamedDataSlot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.NamedDataSlot/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-799">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-799">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/thread-local-storage-thread-relative-static-fields-and-data-slots.md"><span data-ttu-id="d19b6-800">Pamięć lokalna wątku: Powiązane z wątkiem pola statyczne i gniazda danych</span><span class="sxs-lookup"><span data-stu-id="d19b6-800">Thread Local Storage: Thread-Relative Static Fields and Data Slots</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sleep">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-801">Wstrzymuje bieżący wątek przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-801">Suspends the current thread for the specified amount of time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Sleep(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sleep (millisecondsTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sleep(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member Sleep : int -&gt; unit" Usage="System.Threading.Thread.Sleep millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="d19b6-802">Liczba milisekund, przez jaką wątek jest zawieszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-802">The number of milliseconds for which the thread is suspended.</span></span> <span data-ttu-id="d19b6-803">Jeśli wartość <paramref name="millisecondsTimeout" /> argumentu jest równa zero, wątek zwalnia resztę jego wycinka czasu do dowolnego wątku o równym priorytecie, który jest gotowy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-803">If the value of the <paramref name="millisecondsTimeout" /> argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run.</span></span> <span data-ttu-id="d19b6-804">Jeśli nie ma innych wątków o równym priorytecie, które są gotowe do uruchomienia, wykonanie bieżącego wątku nie jest wstrzymane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-804">If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.</span></span></param>
        <summary><span data-ttu-id="d19b6-805">Wstrzymuje bieżący wątek przez określoną liczbę milisekund.</span><span class="sxs-lookup"><span data-stu-id="d19b6-805">Suspends the current thread for the specified number of milliseconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-806">Wątek nie zostanie zaplanowany do wykonania przez system operacyjny przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-806">The thread will not be scheduled for execution by the operating system for the amount of time specified.</span></span> <span data-ttu-id="d19b6-807">Ta metoda zmienia stan wątku do uwzględnienia <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-807">This method changes the state of the thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span>  
  
 <span data-ttu-id="d19b6-808">Możesz określić <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> `millisecondsTimeout` parametr, aby wstrzymać wątek w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="d19b6-808">You can specify <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> for the `millisecondsTimeout` parameter to suspend the thread indefinitely.</span></span> <span data-ttu-id="d19b6-809">Zaleca się jednak używanie innych <xref:System.Threading?displayProperty=nameWithType> klas, takich jak <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor> <xref:System.Threading.EventWaitHandle>,, lub <xref:System.Threading.Semaphore> zamiast synchronizować wątki lub zarządzać zasobami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-809">However, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to synchronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="d19b6-810">Zegar systemowy taktuje określoną stawkę nazywaną rozdzielczością zegara.</span><span class="sxs-lookup"><span data-stu-id="d19b6-810">The system clock ticks at a specific rate called the clock resolution.</span></span> <span data-ttu-id="d19b6-811">Rzeczywisty limit czasu może nie być dokładnie określony w określonym limicie czasu, ponieważ określony limit czasu zostanie dostosowany tak, aby był zbieżny z taktami zegara.</span><span class="sxs-lookup"><span data-stu-id="d19b6-811">The actual timeout might not be exactly the specified timeout, because the specified timeout will be adjusted to coincide with clock ticks.</span></span> <span data-ttu-id="d19b6-812">Aby uzyskać więcej informacji o rozdzielczości zegara i czasie oczekiwania, zobacz temat [Funkcja uśpienia](https://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) .</span><span class="sxs-lookup"><span data-stu-id="d19b6-812">For more information on clock resolution and the waiting time, see the [Sleep function](https://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) topic.</span></span> <span data-ttu-id="d19b6-813">Ta metoda wywołuje [funkcję uśpienia](https://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) z interfejsów API systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="d19b6-813">This method calls the [Sleep function](https://msdn.microsoft.com/library/windows/desktop/ms686298.aspx) from the Windows system APIs.</span></span>  
  
 <span data-ttu-id="d19b6-814">Ta metoda nie wykonuje standardowej pompowania modelu COM i SendMessage.</span><span class="sxs-lookup"><span data-stu-id="d19b6-814">This method does not perform standard COM and SendMessage pumping.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-815">Jeśli zachodzi potrzeba uśpienia w wątku, który <xref:System.STAThreadAttribute>ma, ale chcesz wykonać standardowe pompowanie modelu COM i SendMessage, rozważ użycie jednego z przeciążeń <xref:System.Threading.Thread.Join%2A> metody, która określa interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-815">If you need to sleep on a thread that has <xref:System.STAThreadAttribute>, but you want to perform standard COM and SendMessage pumping, consider using one of the overloads of the <xref:System.Threading.Thread.Join%2A> method that specifies a timeout interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-816">Poniższy przykład używa <xref:System.Threading.Thread.Sleep%2A> metody do blokowania głównego wątku aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-816">The following example uses the <xref:System.Threading.Thread.Sleep%2A> method to block the application's main thread.</span></span>  
  
 [!code-cpp[Thread.Sleep#1](~/samples/snippets/cpp/VS_Snippets_CLR/thread.sleep/cpp/example.cpp#1)]
 [!code-csharp[Thread.Sleep#1](~/samples/snippets/csharp/VS_Snippets_CLR/thread.sleep/cs/example.cs#1)]
 [!code-vb[Thread.Sleep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/thread.sleep/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-817">Wartość limitu czasu jest ujemna i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-817">The time-out value is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Sleep(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sleep (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sleep(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member Sleep : TimeSpan -&gt; unit" Usage="System.Threading.Thread.Sleep timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d19b6-818">Czas wstrzymania wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-818">The amount of time for which the thread is suspended.</span></span> <span data-ttu-id="d19b6-819">Jeśli wartość <paramref name="millisecondsTimeout" /> argumentu to <see cref="F:System.TimeSpan.Zero" />, wątek zrzeka reszty jego wycinka czasu do dowolnego wątku o równym priorytecie, który jest gotowy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-819">If the value of the <paramref name="millisecondsTimeout" /> argument is <see cref="F:System.TimeSpan.Zero" />, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run.</span></span> <span data-ttu-id="d19b6-820">Jeśli nie ma innych wątków o równym priorytecie, które są gotowe do uruchomienia, wykonanie bieżącego wątku nie jest wstrzymane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-820">If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.</span></span></param>
        <summary><span data-ttu-id="d19b6-821">Wstrzymuje bieżący wątek przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-821">Suspends the current thread for the specified amount of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-822">Wątek nie zostanie zaplanowany do wykonania przez system operacyjny przez określony czas.</span><span class="sxs-lookup"><span data-stu-id="d19b6-822">The thread will not be scheduled for execution by the operating system for the amount of time specified.</span></span> <span data-ttu-id="d19b6-823">Ta metoda zmienia stan wątku do uwzględnienia <xref:System.Threading.ThreadState.WaitSleepJoin>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-823">This method changes the state of the thread to include <xref:System.Threading.ThreadState.WaitSleepJoin>.</span></span>  
  
 <span data-ttu-id="d19b6-824">Możesz określić <xref:System.Threading.Timeout.InfiniteTimeSpan?displayProperty=nameWithType> `timeout` parametr, aby wstrzymać wątek w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="d19b6-824">You can specify <xref:System.Threading.Timeout.InfiniteTimeSpan?displayProperty=nameWithType> for the `timeout` parameter to suspend the thread indefinitely.</span></span> <span data-ttu-id="d19b6-825">Zaleca się jednak używanie innych <xref:System.Threading?displayProperty=nameWithType> klas, takich jak <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor> <xref:System.Threading.EventWaitHandle>,, lub <xref:System.Threading.Semaphore> zamiast synchronizować wątki lub zarządzać zasobami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-825">However, we recommend that you use other <xref:System.Threading?displayProperty=nameWithType> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to synchronize threads or manage resources.</span></span>  
  
 <span data-ttu-id="d19b6-826">To Przeciążenie <xref:System.Threading.Thread.Sleep%2A> używa łącznej liczby całych milisekund w `timeout`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-826">This overload of <xref:System.Threading.Thread.Sleep%2A> uses the total number of whole milliseconds in `timeout`.</span></span> <span data-ttu-id="d19b6-827">Ułamki milisekundy są odrzucane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-827">Fractional milliseconds are discarded.</span></span>  
  
 <span data-ttu-id="d19b6-828">Ta metoda nie wykonuje standardowej pompowania modelu COM i SendMessage.</span><span class="sxs-lookup"><span data-stu-id="d19b6-828">This method does not perform standard COM and SendMessage pumping.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-829">Jeśli zachodzi potrzeba uśpienia w wątku, który <xref:System.STAThreadAttribute>ma, ale chcesz wykonać standardowe pompowanie modelu COM i SendMessage, rozważ użycie jednego z przeciążeń <xref:System.Threading.Thread.Join%2A> metody, która określa interwał limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-829">If you need to sleep on a thread that has <xref:System.STAThreadAttribute>, but you want to perform standard COM and SendMessage pumping, consider using one of the overloads of the <xref:System.Threading.Thread.Join%2A> method that specifies a timeout interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-830">Poniższy przykład używa <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29> przeciążenia metody do zablokowania głównego wątku aplikacji pięć razy, przez dwa sekundy za każdym razem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-830">The following example uses the <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29> method overload to block the application's main thread five times, for two seconds each time.</span></span>  
  
 [!code-cpp[Thread.Sleep_TimeSpan#1](~/samples/snippets/cpp/VS_Snippets_CLR/thread.sleep_timespan/cpp/example.cpp#1)]
 [!code-csharp[Thread.Sleep_TimeSpan#1](~/samples/snippets/csharp/VS_Snippets_CLR/thread.sleep_timespan/cs/example.cs#1)]
 [!code-vb[Thread.Sleep_TimeSpan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/thread.sleep_timespan/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d19b6-831">Wartość <paramref name="timeout" /> jest ujemna i nie jest <see cref="F:System.Threading.Timeout.Infinite" /> równa wartości w milisekundach lub jest większa od <see cref="F:System.Int32.MaxValue" /> milisekund.</span><span class="sxs-lookup"><span data-stu-id="d19b6-831">The value of <paramref name="timeout" /> is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /> in milliseconds, or is greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SpinWait">
      <MemberSignature Language="C#" Value="public static void SpinWait (int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinWait(int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.SpinWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinWait (iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinWait(int iterations);" />
      <MemberSignature Language="F#" Value="static member SpinWait : int -&gt; unit" Usage="System.Threading.Thread.SpinWait iterations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iterations" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="iterations"><span data-ttu-id="d19b6-832">32-bitowa liczba całkowita ze znakiem, która definiuje czas oczekiwania wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-832">A 32-bit signed integer that defines how long a thread is to wait.</span></span></param>
        <summary><span data-ttu-id="d19b6-833">Powoduje, że wątek oczekuje liczby razy zdefiniowanej przez <paramref name="iterations" /> parametr.</span><span class="sxs-lookup"><span data-stu-id="d19b6-833">Causes a thread to wait the number of times defined by the <paramref name="iterations" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-834"><xref:System.Threading.Thread.SpinWait%2A> Metoda jest przydatna do implementowania blokad.</span><span class="sxs-lookup"><span data-stu-id="d19b6-834">The <xref:System.Threading.Thread.SpinWait%2A> method is useful for implementing locks.</span></span> <span data-ttu-id="d19b6-835">Klasy w .NET Framework, takie jak <xref:System.Threading.Monitor> i <xref:System.Threading.ReaderWriterLock>, używają tej metody wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-835">Classes in the .NET Framework, such as <xref:System.Threading.Monitor> and <xref:System.Threading.ReaderWriterLock>, use this method internally.</span></span> <span data-ttu-id="d19b6-836"><xref:System.Threading.Thread.SpinWait%2A>zasadniczo umieszcza procesor w bardzo ścisłej pętli, z liczbą pętli określoną przez `iterations` parametr.</span><span class="sxs-lookup"><span data-stu-id="d19b6-836"><xref:System.Threading.Thread.SpinWait%2A> essentially puts the processor into a very tight loop, with the loop count specified by the `iterations` parameter.</span></span> <span data-ttu-id="d19b6-837">W związku z tym czas oczekiwania zależy od szybkości procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-837">The duration of the wait therefore depends on the speed of the processor.</span></span>  
  
 <span data-ttu-id="d19b6-838">Z drugiej strony, <xref:System.Threading.Thread.Sleep%2A> za pomocą metody.</span><span class="sxs-lookup"><span data-stu-id="d19b6-838">Contrast this with the <xref:System.Threading.Thread.Sleep%2A> method.</span></span> <span data-ttu-id="d19b6-839">Wątek, który wywołuje <xref:System.Threading.Thread.Sleep%2A> program, zwraca resztę bieżącego wycinka czasu procesora, nawet jeśli określony interwał wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="d19b6-839">A thread that calls <xref:System.Threading.Thread.Sleep%2A> yields the rest of its current slice of processor time, even if the specified interval is zero.</span></span> <span data-ttu-id="d19b6-840">Określanie interwału niezerowego dla <xref:System.Threading.Thread.Sleep%2A> usuwa wątek z rozważenia przez harmonogram wątków do momentu, aż upłynie interwał czasu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-840">Specifying a non-zero interval for <xref:System.Threading.Thread.Sleep%2A> removes the thread from consideration by the thread scheduler until the time interval has elapsed.</span></span>  
  
 <span data-ttu-id="d19b6-841"><xref:System.Threading.Thread.SpinWait%2A>nie jest zazwyczaj przydatne w przypadku zwykłych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-841"><xref:System.Threading.Thread.SpinWait%2A> is not generally useful for ordinary applications.</span></span> <span data-ttu-id="d19b6-842">W większości przypadków należy używać klas synchronizacji dostarczonych przez .NET Framework; na przykład wywołanie <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> lub instrukcja, `SyncLock` która <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> zawija (`lock` w C# lub w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d19b6-842">In most cases, you should use the synchronization classes provided by the .NET Framework; for example, call <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> or a statement that wraps <xref:System.Threading.Monitor.Enter%2A?displayProperty=nameWithType> (`lock` in C# or `SyncLock` in Visual Basic).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d19b6-843">W rzadkich przypadkach, gdy jest korzystne, aby uniknąć przełączenia kontekstu, na przykład gdy wiadomo, że zmiana stanu jest bliska, należy wywołać <xref:System.Threading.Thread.SpinWait%2A> metodę w pętli.</span><span class="sxs-lookup"><span data-stu-id="d19b6-843">In the rare case where it is advantageous to avoid a context switch, such as when you know that a state change is imminent, make a call to the <xref:System.Threading.Thread.SpinWait%2A> method in your loop.</span></span> <span data-ttu-id="d19b6-844">Ten kod <xref:System.Threading.Thread.SpinWait%2A> jest przeznaczony do zapobiegania problemom, które mogą wystąpić na komputerach z wieloma procesorami.</span><span class="sxs-lookup"><span data-stu-id="d19b6-844">The code <xref:System.Threading.Thread.SpinWait%2A> executes is designed to prevent problems that can occur on computers with multiple processors.</span></span> <span data-ttu-id="d19b6-845">Na przykład na komputerach z wieloma procesorami firmy Intel wykorzystujących technologię wielowątkowości w niektórych <xref:System.Threading.Thread.SpinWait%2A> sytuacjach program zapobiega zastępowaniu procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-845">For example, on computers with multiple Intel processors employing Hyper-Threading technology, <xref:System.Threading.Thread.SpinWait%2A> prevents processor starvation in certain situations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-846">Powoduje zaplanowanie wykonywania wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-846">Causes a thread to be scheduled for execution.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="thread.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-847">Powoduje zmianę stanu bieżącego wystąpienia systemu operacyjnego na <see cref="F:System.Threading.ThreadState.Running" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-847">Causes the operating system to change the state of the current instance to <see cref="F:System.Threading.ThreadState.Running" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-848">Gdy wątek jest w <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> stanie, system operacyjny może zaplanować jego wykonanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-848">Once a thread is in the <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> state, the operating system can schedule it for execution.</span></span> <span data-ttu-id="d19b6-849">Wątek rozpoczyna wykonywanie w pierwszym wierszu metody reprezentowanej przez <xref:System.Threading.ThreadStart> obiekt lub <xref:System.Threading.ParameterizedThreadStart> delegata dostarczonego do konstruktora wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-849">The thread begins executing at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate supplied to the thread constructor.</span></span> <span data-ttu-id="d19b6-850">Należy zauważyć, że wywołanie <xref:System.Threading.Thread.Start%2A> nie blokuje wątku wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-850">Note that the call to <xref:System.Threading.Thread.Start%2A> does not block the calling thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-851">Jeśli to przeciążenie jest używane z wątkiem utworzonym za <xref:System.Threading.ParameterizedThreadStart> pomocą delegata, `null` jest przenoszona do metody wykonywanej przez wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-851">If this overload is used with a thread created using a <xref:System.Threading.ParameterizedThreadStart> delegate, `null` is passed to the method executed by the thread.</span></span>  
  
 <span data-ttu-id="d19b6-852">Po zakończeniu wątku nie można go uruchomić ponownie przy użyciu innego wywołania metody `Start`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-852">Once the thread terminates, it cannot be restarted with another call to `Start`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-853">Poniższy przykład tworzy i uruchamia wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-853">The following example creates and starts a thread.</span></span>  
  
 [!code-cpp[ThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR/ThreadStart/CPP/threadstart.cpp#1)]
 [!code-csharp[ThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR/ThreadStart/CS/threadstart.cs#1)]
 [!code-vb[ThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ThreadStart/VB/threadstart.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-854">Wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-854">The thread has already been started.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d19b6-855">Za mało dostępnej pamięci do uruchomienia tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-855">There is not enough memory available to start this thread.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="d19b6-856">Wątki i wątkowość</span><span class="sxs-lookup"><span data-stu-id="d19b6-856">Threads and Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md"><span data-ttu-id="d19b6-857">Tworzenie wątków i przekazywanie danych w czasie rozpoczęcia</span><span class="sxs-lookup"><span data-stu-id="d19b6-857">Creating Threads and Passing Data at Start Time</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Start(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.Start : obj -&gt; unit" Usage="thread.Start parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="d19b6-858">Obiekt, który zawiera dane, które mają być używane przez ten wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-858">An object that contains data to be used by the method the thread executes.</span></span></param>
        <summary><span data-ttu-id="d19b6-859">Powoduje, że system operacyjny zmienia stan bieżącego wystąpienia na <see cref="F:System.Threading.ThreadState.Running" />i opcjonalnie dostarcza obiekt zawierający dane, które mają być używane przez ten wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-859">Causes the operating system to change the state of the current instance to <see cref="F:System.Threading.ThreadState.Running" />, and optionally supplies an object containing data to be used by the method the thread executes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-860">Gdy wątek jest w <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> stanie, system operacyjny może zaplanować jego wykonanie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-860">Once a thread is in the <xref:System.Threading.ThreadState.Running?displayProperty=nameWithType> state, the operating system can schedule it for execution.</span></span> <span data-ttu-id="d19b6-861">Wątek rozpoczyna wykonywanie w pierwszym wierszu metody reprezentowanej przez <xref:System.Threading.ThreadStart> obiekt lub <xref:System.Threading.ParameterizedThreadStart> delegata dostarczonego do konstruktora wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-861">The thread begins executing at the first line of the method represented by the <xref:System.Threading.ThreadStart> or <xref:System.Threading.ParameterizedThreadStart> delegate supplied to the thread constructor.</span></span> <span data-ttu-id="d19b6-862">Należy zauważyć, że wywołanie <xref:System.Threading.Thread.Start%2A> nie blokuje wątku wywołującego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-862">Note that the call to <xref:System.Threading.Thread.Start%2A> does not block the calling thread.</span></span>  
  
 <span data-ttu-id="d19b6-863">Po zakończeniu wątku nie można go uruchomić ponownie przy użyciu innego wywołania metody `Start`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-863">Once the thread terminates, it cannot be restarted with another call to `Start`.</span></span>  
  
 <span data-ttu-id="d19b6-864">Takie Przeciążenie i <xref:System.Threading.ParameterizedThreadStart> delegat ułatwiają przekazywanie danych do procedury wątku, ale technika nie jest bezpieczna, ponieważ każdy obiekt może zostać przekazany do tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-864">This overload and the <xref:System.Threading.ParameterizedThreadStart> delegate make it easy to pass data to a thread procedure, but the technique is not type safe because any object can be passed to this overload.</span></span> <span data-ttu-id="d19b6-865">Bardziej niezawodny sposób przekazywania danych do procedury wątku polega na umieszczeniu procedury wątku i pól danych w obiekcie Worker.</span><span class="sxs-lookup"><span data-stu-id="d19b6-865">A more robust way to pass data to a thread procedure is to put both the thread procedure and the data fields into a worker object.</span></span> <span data-ttu-id="d19b6-866">Aby uzyskać więcej informacji, zobacz [Tworzenie wątków i przekazywanie danych w czasie rozpoczęcia](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span><span class="sxs-lookup"><span data-stu-id="d19b6-866">For more information, see [Creating Threads and Passing Data at Start Time](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-867">Poniższy przykład tworzy <xref:System.Threading.ParameterizedThreadStart> delegat z metodą statyczną i metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-867">The following example creates a <xref:System.Threading.ParameterizedThreadStart> delegate with a static method and an instance method.</span></span>  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-868">Wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-868">The thread has already been started.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d19b6-869">Za mało dostępnej pamięci do uruchomienia tego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-869">There is not enough memory available to start this thread.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d19b6-870">Ten wątek został utworzony przy użyciu <see cref="T:System.Threading.ThreadStart" /> delegata, a <see cref="T:System.Threading.ParameterizedThreadStart" /> nie delegata.</span><span class="sxs-lookup"><span data-stu-id="d19b6-870">This thread was created using a <see cref="T:System.Threading.ThreadStart" /> delegate instead of a <see cref="T:System.Threading.ParameterizedThreadStart" /> delegate.</span></span></exception>
        <altmember cref="T:System.Threading.ParameterizedThreadStart" />
        <altmember cref="T:System.AppDomain" />
        <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md"><span data-ttu-id="d19b6-871">Tworzenie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-871">Creating Threads</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Suspend" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend();" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="thread.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Thread.Suspend has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Thread.Suspend has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  https://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-872">Zawiesza wątek lub jeśli wątek jest już wstrzymany, nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-872">Either suspends the thread, or if the thread is already suspended, has no effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-873">Jeśli wątek jest już wstrzymany, ta metoda nie ma żadnego wpływu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-873">If the thread is already suspended, this method has no effect.</span></span>  
  
> [!CAUTION]
> <span data-ttu-id="d19b6-874">Nie należy używać <xref:System.Threading.Thread.Suspend%2A> metod i <xref:System.Threading.Thread.Resume%2A> do synchronizowania działań wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-874">Do not use the <xref:System.Threading.Thread.Suspend%2A> and <xref:System.Threading.Thread.Resume%2A> methods to synchronize the activities of threads.</span></span> <span data-ttu-id="d19b6-875">Nie ma możliwości znajomości kodu, który jest wykonywany przez wątek po jego wstrzymaniu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-875">You have no way of knowing what code a thread is executing when you suspend it.</span></span> <span data-ttu-id="d19b6-876">W przypadku wstrzymania wątku, gdy jest on blokowany podczas oceny uprawnień zabezpieczeń, inne wątki w programie <xref:System.AppDomain> mogą zostać zablokowane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-876">If you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="d19b6-877">Jeśli wątek zawiesza się podczas wykonywania konstruktora klasy, inne wątki w <xref:System.AppDomain> tej próbce użycia tej klasy są blokowane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-877">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span> <span data-ttu-id="d19b6-878">Zakleszczenia mogą być bardzo proste.</span><span class="sxs-lookup"><span data-stu-id="d19b6-878">Deadlocks can occur very easily.</span></span>

<span data-ttu-id="d19b6-879">Po wywołaniu `Suspend` metody w wątku, system odnotowuje, że zażądano zawieszenia wątku i zezwala na wykonanie wątku do momentu osiągnięcia bezpiecznego punktu przed faktycznym wstrzymaniem wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-879">When you call the `Suspend` method on a thread, the system notes that a thread suspension has been requested and allows the thread to execute until it reaches a safe point before actually suspending the thread.</span></span> <span data-ttu-id="d19b6-880">Bezpiecznym punktem dla wątku jest punkt w jego wykonaniu, w którym można wykonać odzyskiwanie pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-880">A safe point for a thread is a point in its execution at which garbage collection can be performed.</span></span> <span data-ttu-id="d19b6-881">Po osiągnięciu bezpiecznego punktu środowiska uruchomieniowego gwarantuje, że wstrzymany wątek nie będzie podejmować dalszych postępów w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="d19b6-881">Once a safe point is reached, the runtime guarantees that the suspended thread will not make any further progress in managed code.</span></span> <span data-ttu-id="d19b6-882">Wątek wykonujący się poza kodem zarządzanym jest zawsze bezpieczny do wyrzucania elementów bezużytecznych, a jego wykonywanie jest kontynuowane do momentu próby wznowienia wykonywania kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-882">A thread executing outside managed code is always safe for garbage collection, and its execution continues until it attempts to resume execution of managed code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-883">Tylko .NET Core: Ten element członkowski nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-883">.NET Core only: This member is not supported.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-884">Wątek nie został uruchomiony lub jest nieaktywny.</span><span class="sxs-lookup"><span data-stu-id="d19b6-884">The thread has not been started or is dead.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d19b6-885">Obiekt wywołujący nie ma odpowiedniego <see cref="T:System.Security.Permissions.SecurityPermission" />elementu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-885">The caller does not have the appropriate <see cref="T:System.Security.Permissions.SecurityPermission" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d19b6-886">dla zaawansowanych operacji na wątkach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-886">for advanced operations on threads.</span></span> <span data-ttu-id="d19b6-887">Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-887">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/pausing-and-resuming-threads.md"><span data-ttu-id="d19b6-888">Wstrzymywanie i przerywanie wątków</span><span class="sxs-lookup"><span data-stu-id="d19b6-888">Pausing and interrupting threads</span></span></related>
        <altmember cref="T:System.Threading.ThreadState" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Thread.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Thread.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Thread::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="d19b6-889">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-889">Reserved for future use.</span></span> <span data-ttu-id="d19b6-890">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="d19b6-890">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="d19b6-891">Przekazana tablica nazw ma być mapowana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-891">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="d19b6-892">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-892">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="d19b6-893">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-893">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="d19b6-894">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span><span class="sxs-lookup"><span data-stu-id="d19b6-894">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="d19b6-895">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-895">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-896">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-896">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d19b6-897">Więcej informacji o `IDispatch::GetIDsOfNames`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="d19b6-897">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d19b6-898">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-898">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Thread.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Thread.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Thread::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="d19b6-899">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-899">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="d19b6-900">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-900">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="d19b6-901">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-901">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="d19b6-902">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-902">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-903">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-903">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d19b6-904">Więcej informacji o `IDispatch::GetTypeInfo`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="d19b6-904">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d19b6-905">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-905">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Thread.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Thread.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Thread::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="d19b6-906">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-906">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="d19b6-907">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="d19b6-907">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-908">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-908">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d19b6-909">Więcej informacji o `IDispatch::GetTypeInfoCount`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="d19b6-909">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d19b6-910">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-910">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Thread.Invoke">
      <MemberSignature Language="C#" Value="void _Thread.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Thread.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Thread.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Thread.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Thread::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Thread.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="d19b6-911">Określa element członkowski.</span><span class="sxs-lookup"><span data-stu-id="d19b6-911">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="d19b6-912">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="d19b6-912">Reserved for future use.</span></span> <span data-ttu-id="d19b6-913">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="d19b6-913">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="d19b6-914">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="d19b6-914">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="d19b6-915">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-915">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="d19b6-916">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="d19b6-916">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="d19b6-917">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="d19b6-917">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="d19b6-918">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-918">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="d19b6-919">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="d19b6-919">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="d19b6-920">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-920">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-921">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="d19b6-921">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="d19b6-922">Więcej informacji o `IDispatch::Invoke`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="d19b6-922">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d19b6-923">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="d19b6-923">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadState">
      <MemberSignature Language="C#" Value="public System.Threading.ThreadState ThreadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.ThreadState ThreadState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Thread.ThreadState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadState As ThreadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::ThreadState ThreadState { System::Threading::ThreadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadState : System.Threading.ThreadState" Usage="System.Threading.Thread.ThreadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d19b6-924">Pobiera wartość zawierającą Stany bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-924">Gets a value containing the states of the current thread.</span></span></summary>
        <value><span data-ttu-id="d19b6-925">Jedna z <see cref="T:System.Threading.ThreadState" /> wartości wskazujących stan bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-925">One of the <see cref="T:System.Threading.ThreadState" /> values indicating the state of the current thread.</span></span> <span data-ttu-id="d19b6-926">Wartość początkowa to <see cref="F:System.Threading.ThreadState.Unstarted" />.</span><span class="sxs-lookup"><span data-stu-id="d19b6-926">The initial value is <see cref="F:System.Threading.ThreadState.Unstarted" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-927">Właściwość zawiera bardziej szczegółowe informacje <xref:System.Threading.Thread.IsAlive%2A> niż właściwość. <xref:System.Threading.Thread.ThreadState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-927">The <xref:System.Threading.Thread.ThreadState%2A> property provides more specific information than the <xref:System.Threading.Thread.IsAlive%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d19b6-928">Stan wątku jest interesujący tylko w scenariuszach debugowania.</span><span class="sxs-lookup"><span data-stu-id="d19b6-928">Thread state is only of interest in debugging scenarios.</span></span> <span data-ttu-id="d19b6-929">Kod nigdy nie powinien używać stanu wątku do synchronizowania działań wątków.</span><span class="sxs-lookup"><span data-stu-id="d19b6-929">Your code should never use thread state to synchronize the activities of threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-930">Poniższy przykład kodu demonstruje dostęp `ThreadState` do wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-930">The following code example demonstrates accessing the `ThreadState` of a thread.</span></span>  
  
 [!code-cpp[System.Threading.Thread.ThreadState#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.threading.thread.threadstate/cpp/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.ThreadState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.thread.threadstate/cs/source.cs#1)]
 [!code-vb[System.Threading.Thread.ThreadState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.thread.threadstate/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySetApartmentState">
      <MemberSignature Language="C#" Value="public bool TrySetApartmentState (System.Threading.ApartmentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetApartmentState(valuetype System.Threading.ApartmentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetApartmentState (state As ApartmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetApartmentState(System::Threading::ApartmentState state);" />
      <MemberSignature Language="F#" Value="member this.TrySetApartmentState : System.Threading.ApartmentState -&gt; bool" Usage="thread.TrySetApartmentState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Threading.ApartmentState" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d19b6-931">Nowy stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-931">The new apartment state.</span></span></param>
        <summary><span data-ttu-id="d19b6-932">Ustawia stan apartamentu wątku przed jego uruchomieniem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-932">Sets the apartment state of a thread before it is started.</span></span></summary>
        <returns><span data-ttu-id="d19b6-933"><see langword="true" />Jeśli jest ustawiony stan apartamentu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-933"><see langword="true" /> if the apartment state is set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-934">Nowe wątki są inicjowane <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> tak, jakby ich stan apartamentu nie został ustawiony przed rozpoczęciem.</span><span class="sxs-lookup"><span data-stu-id="d19b6-934">New threads are initialized as <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> if their apartment state has not been set before they are started.</span></span> <span data-ttu-id="d19b6-935">Przed uruchomieniem wątku należy ustawić stan apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-935">Apartment state must be set before a thread is started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-936">Główny wątek aplikacji jest domyślnie zainicjowany <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-936">The main application thread is initialized to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> by default.</span></span> <span data-ttu-id="d19b6-937">Jedynym sposobem ustawienia statusu apartamentu głównego wątku <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> aplikacji jest <xref:System.STAThreadAttribute> zastosowanie atrybutu do metody punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-937">The only way to set the apartment state of the main application thread to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType> is to apply the <xref:System.STAThreadAttribute> attribute to the entry point method.</span></span>  
  
 <span data-ttu-id="d19b6-938">Metoda, wraz <xref:System.Threading.Thread.GetApartmentState%2A> z metodą i <xref:System.Threading.Thread.SetApartmentState%2A> metodą, zastępuje <xref:System.Threading.Thread.ApartmentState%2A> właściwość. <xref:System.Threading.Thread.TrySetApartmentState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-938">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method, along with the <xref:System.Threading.Thread.GetApartmentState%2A> method and the <xref:System.Threading.Thread.SetApartmentState%2A> method, replaces the <xref:System.Threading.Thread.ApartmentState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d19b6-939">Poniższy przykład kodu demonstruje <xref:System.Threading.Thread.GetApartmentState%2A>metody, <xref:System.Threading.Thread.SetApartmentState%2A>, i <xref:System.Threading.Thread.TrySetApartmentState%2A> .</span><span class="sxs-lookup"><span data-stu-id="d19b6-939">The following code example demonstrates the <xref:System.Threading.Thread.GetApartmentState%2A>, <xref:System.Threading.Thread.SetApartmentState%2A>, and <xref:System.Threading.Thread.TrySetApartmentState%2A> methods.</span></span> <span data-ttu-id="d19b6-940">Przykładowy kod tworzy wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-940">The code example creates a thread.</span></span> <span data-ttu-id="d19b6-941">Przed uruchomieniem wątku program <xref:System.Threading.Thread.GetApartmentState%2A> wyświetli stan początkowy <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> i <xref:System.Threading.Thread.SetApartmentState%2A> zmieni stan na <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-941">Before the thread is started, <xref:System.Threading.Thread.GetApartmentState%2A> displays the initial <xref:System.Threading.ApartmentState.Unknown?displayProperty=nameWithType> state and <xref:System.Threading.Thread.SetApartmentState%2A> changes the state to <xref:System.Threading.ApartmentState.STA?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d19b6-942">Następnie metoda zwraca `false` przy próbie zmiany stanu na <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> , ponieważ stan apartamentu jest już ustawiony. <xref:System.Threading.Thread.TrySetApartmentState%2A></span><span class="sxs-lookup"><span data-stu-id="d19b6-942">The <xref:System.Threading.Thread.TrySetApartmentState%2A> method then returns `false` when attempting to change the state to <xref:System.Threading.ApartmentState.MTA?displayProperty=nameWithType> because the apartment state is already set.</span></span> <span data-ttu-id="d19b6-943">Jeśli podjęto próbę wykonania <xref:System.Threading.Thread.SetApartmentState%2A>tej samej operacji, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-943">If the same operation had been attempted with <xref:System.Threading.Thread.SetApartmentState%2A>, <xref:System.InvalidOperationException> would have been thrown.</span></span>  
  
 <span data-ttu-id="d19b6-944">Gdy wątek zostanie uruchomiony, <xref:System.Threading.Thread.TrySetApartmentState%2A> Metoda zostanie użyta ponownie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-944">After the thread is started, the <xref:System.Threading.Thread.TrySetApartmentState%2A> method is used again.</span></span> <span data-ttu-id="d19b6-945">Ten czas jest zgłaszany <xref:System.Threading.ThreadStateException> , ponieważ wątek został już uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="d19b6-945">This time it throws <xref:System.Threading.ThreadStateException> because the thread has already been started.</span></span>  
  
 [!code-cpp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cpp/source.cpp#1)]
 [!code-csharp[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/cs/source.cs#1)]
 [!code-vb[Thread.GetSetTrySetApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Thread.GetSetTrySetApartmentState/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d19b6-946">Tylko .NET Core: Ten element członkowski nie jest obsługiwany na platformach macOS i Linux.</span><span class="sxs-lookup"><span data-stu-id="d19b6-946">.NET Core only: This member is not supported on the macOS and Linux platforms.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d19b6-947"><paramref name="state" />nie jest prawidłowym stanem apartamentu.</span><span class="sxs-lookup"><span data-stu-id="d19b6-947"><paramref name="state" /> is not a valid apartment state.</span></span></exception>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="d19b6-948">Wątek został uruchomiony i zakończył się lub wywołanie nie jest wykonywane z kontekstu wątku, gdy działa wątek.</span><span class="sxs-lookup"><span data-stu-id="d19b6-948">The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VolatileRead">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-949">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-949">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-950">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-950">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static byte VolatileRead (ref byte address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 VolatileRead(unsigned int8&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte VolatileRead(System::Byte % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; byte" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-951">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-951">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-952">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-952">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-953">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-953">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-954">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-954">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-955"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-955"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-956">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-956">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-957">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-957">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-958">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-958">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-959">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-959">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-960">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-960">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-961">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-961">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-962">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-962">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-963">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-963">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static double VolatileRead (ref double address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 VolatileRead(float64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double VolatileRead(double % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; double" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Double" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-964">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-964">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-965">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-965">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-966">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-966">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-967">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-967">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-968"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-968"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-969">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-969">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-970">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-970">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-971">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-971">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-972">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-972">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-973">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-973">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-974">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-974">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-975">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-975">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-976">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-976">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static short VolatileRead (ref short address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 VolatileRead(int16&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short VolatileRead(short % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int16" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-977">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-977">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-978">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-978">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-979">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-979">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-980">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-980">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-981"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-981"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-982">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-982">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-983">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-983">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-984">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-984">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-985">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-985">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-986">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-986">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-987">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-987">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-988">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-988">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-989">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-989">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static int VolatileRead (ref int address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 VolatileRead(int32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int VolatileRead(int % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-990">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-990">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-991">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-991">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-992">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-992">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-993">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-993">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-994"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-994"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-995">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-995">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-996">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-996">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-997">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-997">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-998">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-998">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-999">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-999">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1000">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1000">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1001">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1001">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1002">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1002">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static long VolatileRead (ref long address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 VolatileRead(int64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long VolatileRead(long % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; int64" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1003">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1003">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1004">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1004">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1005">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1005">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1006">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1006">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1007"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1007"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1008">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1008">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1009">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1009">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1010">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1010">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1011">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1011">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1012">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1012">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1013">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1013">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1014">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1014">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1015">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1015">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static IntPtr VolatileRead (ref IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int VolatileRead(native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr VolatileRead(IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; nativeint" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.IntPtr" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1016">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1016">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1017">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1017">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1018">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1018">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1019">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1019">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1020"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1020"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1021">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1021">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1022">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1022">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1023">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1023">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1024">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1024">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1025">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1025">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1026">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1026">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1027">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1027">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1028">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1028">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static object VolatileRead (ref object address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object VolatileRead(object&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ VolatileRead(System::Object ^ % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; obj" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Object" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1029">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1029">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1030">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1030">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1031">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1031">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1032">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1032">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1033"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1033"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1034">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1034">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1035">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1035">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1036">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1036">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1037">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1037">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1038">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1038">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1039">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1039">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1040">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1040">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1041">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1041">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static sbyte VolatileRead (ref sbyte address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 VolatileRead(int8&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte VolatileRead(System::SByte % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; sbyte" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1042">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1042">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1043">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1043">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1044">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1044">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1045">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1045">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1046"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1046"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1047">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1047">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1048">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1048">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1049">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1049">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1050">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1050">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1051">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1051">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1052">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1052">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1053">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1053">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1054">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1054">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static float VolatileRead (ref float address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 VolatileRead(float32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float VolatileRead(float % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; single" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Single" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1055">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1055">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1056">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1056">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1057">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1057">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1058">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1058">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1059"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1059"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1060">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1060">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1061">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1061">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1062">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1062">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1063">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1063">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1064">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1064">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1065">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1065">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1066">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1066">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1067">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1067">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static ushort VolatileRead (ref ushort address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 VolatileRead(unsigned int16&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 VolatileRead(System::UInt16 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint16" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1068">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1068">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1069">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1069">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1070">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1070">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1071">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1071">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1072"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1072"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1073">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1073">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1074">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1074">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1075">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1075">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1076">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1076">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1077">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1077">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1078">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1078">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1079">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1079">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1080">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1080">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static uint VolatileRead (ref uint address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 VolatileRead(unsigned int32&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 VolatileRead(System::UInt32 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint32" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1081">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1081">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1082">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1082">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1083">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1083">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1084">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1084">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1085"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1085"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1086">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1086">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1087">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1087">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1088">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1088">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1089">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1089">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1090">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1090">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1091">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1091">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1092">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1092">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1093">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1093">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static ulong VolatileRead (ref ulong address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 VolatileRead(unsigned int64&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 VolatileRead(System::UInt64 % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; uint64" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt64" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1094">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1094">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1095">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1095">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1096">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1096">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1097">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1097">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1098"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1098"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1099">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1099">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1100">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1100">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1101">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1101">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1102">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1102">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1103">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1103">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1104">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1104">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1105">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1105">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1106">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1106">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileRead">
      <MemberSignature Language="C#" Value="public static UIntPtr VolatileRead (ref UIntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native unsigned int VolatileRead(native unsigned int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VolatileRead (ByRef address As UIntPtr) As UIntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UIntPtr VolatileRead(UIntPtr % address);" />
      <MemberSignature Language="F#" Value="static member VolatileRead :  -&gt; unativeint" Usage="System.Threading.Thread.VolatileRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UIntPtr" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1107">Pole, które ma zostać odczytane.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1107">The field to be read.</span></span></param>
        <summary><span data-ttu-id="d19b6-1108">Odczytuje wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1108">Reads the value of a field.</span></span> <span data-ttu-id="d19b6-1109">Wartość to Najnowsza wersja zapisywana przez dowolny procesor w komputerze, niezależnie od liczby procesorów lub stanu pamięci podręcznej procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1109">The value is the latest written by any processor in a computer, regardless of the number of processors or the state of processor cache.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1110">Najnowsza wartość zapisywana w polu przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1110">The latest value written to the field by any processor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1111"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1111"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1112">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1112">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1113">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileRead%2A> uzyskuje bardzo aktualną wartość zapisaną w lokalizacji pamięci przez dowolny procesor.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1113">On a multiprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="d19b6-1114">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1114">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1115">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1115">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1116">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1116">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1117">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1117">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1118">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1118">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1119">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1119">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VolatileWrite">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d19b6-1120">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1120">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref byte address, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int8&amp; address, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Byte, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::Byte % address, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * byte -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Byte" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1121">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1121">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1122">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1122">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1123">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1123">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1124"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1124"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1125">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1125">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1126">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1126">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1127">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1127">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1128">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1128">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1129">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1129">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1130">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1130">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1131">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1131">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1132">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1132">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref double address, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(float64&amp; address, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Double, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(double % address, double value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * double -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Double" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1133">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1133">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1134">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1134">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1135">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1135">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1136"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1136"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1137">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1137">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1138">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1138">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1139">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1139">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1140">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1140">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1141">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1141">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1142">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1142">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1143">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1143">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1144">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1144">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref short address, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int16&amp; address, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Short, value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(short % address, short value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int16 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int16" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1145">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1145">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1146">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1146">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1147">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1147">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1148"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1148"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1149">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1149">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1150">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1150">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1151">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1151">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1152">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1152">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1153">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1153">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1154">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1154">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1155">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1155">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1156">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1156">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref int address, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int32&amp; address, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Integer, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(int % address, int value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int32" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1157">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1157">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1158">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1158">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1159">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1159">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1160"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1160"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1161">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1161">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1162">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1162">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1163">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1163">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1164">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1164">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1165">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1165">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1166">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1166">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1167">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1167">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1168">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1168">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref long address, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int64&amp; address, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Long, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(long % address, long value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * int64 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1169">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1169">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1170">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1170">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1171">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1171">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1172"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1172"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1173">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1173">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1174">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1174">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1175">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1175">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1176">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1176">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1177">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1177">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1178">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1178">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1179">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1179">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1180">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1180">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref IntPtr address, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(native int&amp; address, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As IntPtr, value As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(IntPtr % address, IntPtr value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * nativeint -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.IntPtr" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.IntPtr" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1181">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1181">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1182">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1182">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1183">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1183">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1184"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1184"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1185">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1185">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1186">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1186">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1187">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1187">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1188">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1188">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1189">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1189">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1190">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1190">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1191">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1191">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1192">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1192">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref object address, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(object&amp; address, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::Object ^ % address, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * obj -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Object" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1193">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1193">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1194">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1194">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1195">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1195">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1196"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1196"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1197">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1197">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1198">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1198">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1199">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1199">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1200">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1200">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1201">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1201">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1202">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1202">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1203">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1203">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1204">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1204">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref sbyte address, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(int8&amp; address, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As SByte, value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::SByte % address, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * sbyte -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.SByte" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1205">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1205">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1206">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1206">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1207">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1207">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1208"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1208"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1209">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1209">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1210">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1210">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1211">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1211">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1212">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1212">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1213">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1213">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1214">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1214">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1215">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1215">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1216">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1216">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref float address, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(float32&amp; address, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As Single, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(float % address, float value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * single -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Single" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1217">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1217">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1218">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1218">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1219">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1219">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1220"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1220"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1221">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1221">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1222">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1222">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1223">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1223">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1224">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1224">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1225">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1225">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1226">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1226">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1227">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1227">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1228">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1228">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref ushort address, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int16&amp; address, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UShort, value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt16 % address, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint16 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt16" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1229">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1229">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1230">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1230">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1231">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1231">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1232"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1232"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1233">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1233">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1234">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1234">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1235">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1235">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1236">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1236">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1237">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1237">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1238">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1238">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1239">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1239">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1240">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1240">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref uint address, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int32&amp; address, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UInteger, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt32 % address, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint32 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt32" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1241">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1241">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1242">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1242">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1243">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1243">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1244"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1244"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1245">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1245">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1246">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1246">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1247">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1247">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1248">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1248">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1249">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1249">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1250">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1250">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1251">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1251">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1252">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1252">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref ulong address, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(unsigned int64&amp; address, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As ULong, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(System::UInt64 % address, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * uint64 -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UInt64" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1253">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1253">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1254">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1254">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1255">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1255">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1256"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1256"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1257">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1257">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1258">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1258">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1259">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1259">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1260">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1260">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1261">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1261">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1262">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1262">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1263">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1263">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1264">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1264">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolatileWrite">
      <MemberSignature Language="C#" Value="public static void VolatileWrite (ref UIntPtr address, UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VolatileWrite(native unsigned int&amp; address, native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VolatileWrite (ByRef address As UIntPtr, value As UIntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VolatileWrite(UIntPtr % address, UIntPtr value);" />
      <MemberSignature Language="F#" Value="static member VolatileWrite :  * unativeint -&gt; unit" Usage="System.Threading.Thread.VolatileWrite (address, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.UIntPtr" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UIntPtr" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="d19b6-1265">Pole, do którego ma zostać zapisywana wartość.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1265">The field to which the value is to be written.</span></span></param>
        <param name="value"><span data-ttu-id="d19b6-1266">Wartość, która ma zostać zapisywana.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1266">The value to be written.</span></span></param>
        <summary><span data-ttu-id="d19b6-1267">Natychmiast zapisuje wartość w polu, tak aby wartość była widoczna dla wszystkich procesorów w komputerze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1267">Writes a value to a field immediately, so that the value is visible to all processors in the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1268"><xref:System.Threading.Thread.VolatileRead%2A>i <xref:System.Threading.Thread.VolatileWrite%2A> są przeznaczone dla specjalnych przypadków synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1268"><xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> are for special cases of synchronization.</span></span> <span data-ttu-id="d19b6-1269">W C# `lock` normalnych warunkach instrukcja, instrukcja Visual Basic `SyncLock` i <xref:System.Threading.Monitor> Klasa zapewniają łatwiejsze alternatywy.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1269">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide easier alternatives.</span></span>  
  
 <span data-ttu-id="d19b6-1270">W systemie wieloprocesorowym program <xref:System.Threading.Thread.VolatileWrite%2A> gwarantuje, że wartość zapisywana w lokalizacji w pamięci jest natychmiast widoczna dla wszystkich procesorów.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1270">On a multiprocessor system, <xref:System.Threading.Thread.VolatileWrite%2A> ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="d19b6-1271">Może to wymagać opróżniania pamięci podręcznych procesora.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1271">This might require flushing processor caches.</span></span>  
  
 <span data-ttu-id="d19b6-1272">Nawet w systemie <xref:System.Threading.Thread.VolatileRead%2A> jednoprocesorowym i <xref:System.Threading.Thread.VolatileWrite%2A> upewnij się, że wartość jest odczytywana lub zapisywana w pamięci, a nie w pamięci podręcznej (na przykład w rejestrze procesora).</span><span class="sxs-lookup"><span data-stu-id="d19b6-1272">Even on a uniprocessor system, <xref:System.Threading.Thread.VolatileRead%2A> and <xref:System.Threading.Thread.VolatileWrite%2A> ensure that a value is read or written to memory, and not cached (for example, in a processor register).</span></span> <span data-ttu-id="d19b6-1273">Z tego względu można użyć ich do synchronizowania dostępu do pola, które może być aktualizowane przez inny wątek lub przez sprzęt.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1273">Thus, you can use them to synchronize access to a field that can be updated by another thread, or by hardware.</span></span>  
  
 <span data-ttu-id="d19b6-1274">Wywołanie tej metody dotyczy tylko pojedynczego dostępu do pamięci.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1274">Calling this method affects only a single memory access.</span></span> <span data-ttu-id="d19b6-1275">Aby zapewnić skuteczną synchronizację dla pola, wszystkie prawa dostępu do pola muszą używać <xref:System.Threading.Thread.VolatileRead%2A> lub <xref:System.Threading.Thread.VolatileWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1275">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d19b6-1276">W C#programie użycie `volatile` modyfikatora w polu gwarantuje, że cały dostęp do tego pola korzysta <xref:System.Threading.Thread.VolatileRead%2A> z <xref:System.Threading.Thread.VolatileWrite%2A>lub.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1276">In C#, using the `volatile` modifier on a field guarantees that all access to that field uses <xref:System.Threading.Thread.VolatileRead%2A> or <xref:System.Threading.Thread.VolatileWrite%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public static bool Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Thread.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Yield () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Yield();" />
      <MemberSignature Language="F#" Value="static member Yield : unit -&gt; bool" Usage="System.Threading.Thread.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d19b6-1277">Powoduje, że wątek wywołujący przekazuje wykonywanie do innego wątku, który jest gotowy do uruchomienia na bieżącym procesorze.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1277">Causes the calling thread to yield execution to another thread that is ready to run on the current processor.</span></span> <span data-ttu-id="d19b6-1278">System operacyjny wybiera wątek do przeprowadzenia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1278">The operating system selects the thread to yield to.</span></span></summary>
        <returns><span data-ttu-id="d19b6-1279"><see langword="true" />Jeśli system operacyjny przełączył wykonywanie do innego wątku; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d19b6-1279"><see langword="true" /> if the operating system switched execution to another thread; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d19b6-1280">Jeśli ta metoda zakończy się pomyślnie, zostanie nadana reszta bieżącego wycinka czasu wątku.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1280">If this method succeeds, the rest of the thread's current time slice is yielded.</span></span> <span data-ttu-id="d19b6-1281">System operacyjny planuje wątek wywołujący dla innego wycinka czasu, zgodnie z jego priorytetem i stanem innych wątków, które są dostępne do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1281">The operating system schedules the calling thread for another time slice, according to its priority and the status of other threads that are available to run.</span></span>  
  
 <span data-ttu-id="d19b6-1282">Trwa ograniczenie do procesora, który wykonuje wątek wywołujący.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1282">Yielding is limited to the processor that is executing the calling thread.</span></span> <span data-ttu-id="d19b6-1283">System operacyjny nie przełączy wykonania na inny procesor, nawet jeśli ten procesor jest w stanie bezczynności lub działa wątek o niższym priorytecie.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1283">The operating system will not switch execution to another processor, even if that processor is idle or is running a thread of lower priority.</span></span> <span data-ttu-id="d19b6-1284">Jeśli nie ma innych wątków gotowych do wykonania na bieżącym procesorze, system operacyjny nie jest w stanie wykonać operacji, a ta metoda zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1284">If there are no other threads that are ready to execute on the current processor, the operating system does not yield execution, and this method returns `false`.</span></span>  
  
 <span data-ttu-id="d19b6-1285">Ta metoda jest równoważna użyciu wywołania platformy w celu wywołania natywnej `SwitchToThread` funkcji Win32.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1285">This method is equivalent to using platform invoke to call the native Win32 `SwitchToThread` function.</span></span> <span data-ttu-id="d19b6-1286">Należy wywołać <xref:System.Threading.Thread.Yield%2A> metodę zamiast używać wywołania platformy, ponieważ wywołanie platformy pomija wszelkie niestandardowe zachowanie wątku, którego żądał host.</span><span class="sxs-lookup"><span data-stu-id="d19b6-1286">You should call the <xref:System.Threading.Thread.Yield%2A> method instead of using platform invoke, because platform invoke bypasses any custom threading behavior the host has requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
