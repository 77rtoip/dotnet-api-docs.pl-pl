<Type Name="ExecutionContext" FullName="System.Threading.ExecutionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d11eb2e08ac5047a81064d0fe34fde568252e1d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExecutionContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ExecutionContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="56801-101">Zarządza kontekstu wykonywania bieżącego wątku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56801-101">Manages the execution context for the current thread.</span>
      </span>
      <span data-ttu-id="56801-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56801-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-103"><xref:System.Threading.ExecutionContext> Klasa udostępnia jeden kontener dla wszystkich informacji dotyczących logicznego wątku wykonywania.</span><span class="sxs-lookup"><span data-stu-id="56801-103">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="56801-104">W tym kontekście zabezpieczeń, kontekst wywołania i kontekst synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="56801-104">This includes security context, call context, and synchronization context.</span></span>  
  
 <span data-ttu-id="56801-105"><xref:System.Threading.ExecutionContext> Klasa udostępnia funkcje kodu użytkownika do przechwytywania i transferu tego kontekstu za pośrednictwem punktów asynchroniczne zdefiniowane przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="56801-105">The <xref:System.Threading.ExecutionContext> class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points.</span></span> <span data-ttu-id="56801-106">Środowisko uruchomieniowe języka wspólnego upewnia się, że <xref:System.Threading.ExecutionContext> jest stale transferowane za pośrednictwem zdefiniowane przez środowisko uruchomieniowe asynchroniczne punktów, w ramach procesu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="56801-106">The common language runtime ensures that the <xref:System.Threading.ExecutionContext> is consistently transferred across runtime-defined asynchronous points within the managed process.</span></span>  
  
 <span data-ttu-id="56801-107">Kontekst wykonywania jest odpowiednikiem zarządzanych apartamentu COM.</span><span class="sxs-lookup"><span data-stu-id="56801-107">An execution context is the managed equivalent of a COM apartment.</span></span> <span data-ttu-id="56801-108">W domenie aplikacji muszą zostać przeniesione kontekstu wykonywania całego zawsze, gdy wątek jest przenoszona.</span><span class="sxs-lookup"><span data-stu-id="56801-108">Within an application domain, the entire execution context must be transferred whenever a thread is transferred.</span></span> <span data-ttu-id="56801-109">Ta sytuacja występuje podczas transferów wprowadzone przez <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> metodę, większość operacji puli wątków i formularze systemu Windows wątku przekazywanie przez przekazywanie komunikatów systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="56801-109">This situation occurs during transfers made by the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump.</span></span> <span data-ttu-id="56801-110">Nie występuje w operacjach puli wątków niebezpieczny (takich jak <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> metody), nie są przenoszone skompresowany stosu.</span><span class="sxs-lookup"><span data-stu-id="56801-110">It does not occur in unsafe thread pool operations (such as the <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> method), which do not transfer the compressed stack.</span></span> <span data-ttu-id="56801-111">Wszędzie tam, gdzie przepływa skompresowany stosu, zarządzane podmiot zabezpieczeń, synchronizacji, ustawienia regionalne i kontekstu użytkownika również przepływu.</span><span class="sxs-lookup"><span data-stu-id="56801-111">Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow.</span></span> <span data-ttu-id="56801-112"><xref:System.Threading.ExecutionContext> Klasa udostępnia <xref:System.Threading.ExecutionContext.Capture%2A> i <xref:System.Threading.ExecutionContext.CreateCopy%2A> metody w celu uzyskania kontekstu wykonywania i <xref:System.Threading.ExecutionContext.Run%2A> metodę, aby ustawić kontekstu wykonywania bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="56801-112">The <xref:System.Threading.ExecutionContext> class provides the <xref:System.Threading.ExecutionContext.Capture%2A> and <xref:System.Threading.ExecutionContext.CreateCopy%2A> methods to get the execution context and the <xref:System.Threading.ExecutionContext.Run%2A> method to set the execution context for the current thread.</span></span>  
  
 <span data-ttu-id="56801-113"><xref:System.Threading.ExecutionContext> , Który jest powiązany z wątkiem nie można ustawić w innym wątku.</span><span class="sxs-lookup"><span data-stu-id="56801-113">An <xref:System.Threading.ExecutionContext> that is associated with a thread cannot be set on another thread.</span></span> <span data-ttu-id="56801-114">Takie próby spowodują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="56801-114">Attempting to do so will result in an exception being thrown.</span></span> <span data-ttu-id="56801-115">Propagacja <xref:System.Threading.ExecutionContext> z jednego wątku do innego, wykonaj kopię <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="56801-115">To propagate the <xref:System.Threading.ExecutionContext> from one thread to another, make a copy of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="56801-116">Wewnętrznie <xref:System.Threading.ExecutionContext> przechowuje wszystkie dane, które jest skojarzone z <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span><span class="sxs-lookup"><span data-stu-id="56801-116">Internally, the <xref:System.Threading.ExecutionContext> stores all data that is associated with the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span></span> <span data-ttu-id="56801-117">Dzięki temu <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> danych, jeśli propagację <xref:System.Threading.ExecutionContext> jest kopiowany i przeniesienia uprawnień.</span><span class="sxs-lookup"><span data-stu-id="56801-117">This allows the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> data to be propagated when the <xref:System.Threading.ExecutionContext> is copied and transferred.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Threading.ExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ExecutionContext ^ Capture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-118">Przechwytuje kontekstu wykonywania z bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-118">Captures the execution context from the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56801-119">
            <see cref="T:System.Threading.ExecutionContext" /> Obiekt reprezentujący kontekstu wykonywania bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-119">An <see cref="T:System.Threading.ExecutionContext" /> object representing the execution context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-120">Kontekst wykonywania przechwyconych mogą być używane jako `executionContext` parametr <xref:System.Threading.ExecutionContext.Run%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="56801-120">The captured execution context can be used as the `executionContext` parameter for the <xref:System.Threading.ExecutionContext.Run%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.ExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ExecutionContext ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-121">Tworzy kopię bieżącego kontekstu wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-121">Creates a copy of the current execution context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56801-122">
            <see cref="T:System.Threading.ExecutionContext" /> Obiekt reprezentujący bieżącego kontekstu wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-122">An <see cref="T:System.Threading.ExecutionContext" /> object representing the current execution context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-123">Ta metoda jest przydatna do propagowanie kontekstu wykonywania z jednego wątku na inny.</span><span class="sxs-lookup"><span data-stu-id="56801-123">This method is useful for propagating an execution context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="56801-124">Nie można skopiować tego kontekstu, ponieważ jest on używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-124">This context cannot be copied because it is used.</span>
          </span>
          <span data-ttu-id="56801-125">Mogą zostać skopiowane tylko nowo przechwycone konteksty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-125">Only newly captured contexts can be copied.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-126">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Threading.ExecutionContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-126">Releases all resources used by the current instance of the <see cref="T:System.Threading.ExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-127">Wywołanie `Dispose` po zakończeniu przy użyciu <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="56801-127">Call `Dispose` when you are finished using the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="56801-128">`Dispose` Pozostawia metody <xref:System.Threading.ExecutionContext> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="56801-128">The `Dispose` method leaves the <xref:System.Threading.ExecutionContext> in an unusable state.</span></span> <span data-ttu-id="56801-129">Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Threading.ExecutionContext> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Threading.ExecutionContext> klasy.</span><span class="sxs-lookup"><span data-stu-id="56801-129">After calling `Dispose`, you must release all references to the <xref:System.Threading.ExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.ExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="56801-130">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="56801-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56801-131">Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="56801-131">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="56801-132">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Threading.ExecutionContext> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="56801-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="56801-133">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiektu wypełniana informacje o serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="56801-134">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> Strukturę przedstawiającą docelowy kontekst serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure representing the destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56801-135">Ustawia określony <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu o informacje o kontekście logiczne, konieczne jest ponowne utworzenie wystąpienia bieżącego kontekstu wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-135">Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of the current execution context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> Ustawia <xref:System.Runtime.Serialization.SerializationInfo> o logicznym wywołań informacje o kontekście.</span><span class="sxs-lookup"><span data-stu-id="56801-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="56801-137">Podczas deserializacji, obiekt kontekstu wykonywania jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo> przesyłane przez strumień.</span><span class="sxs-lookup"><span data-stu-id="56801-137">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="56801-138">Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.SerializationInfo>.</span><span class="sxs-lookup"><span data-stu-id="56801-138">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="56801-139">
            <paramref name="info" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-139">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="56801-140">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-140">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="56801-141">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-141">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-142">Wskazuje, czy przepływ kontekstu wykonywania jest obecnie pominięta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-142">Indicates whether the flow of the execution context is currently suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56801-143">
            <see langword="true" /> Jeśli pomijane jest przepływ; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-143">
              <see langword="true" /> if the flow is suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-144"><xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> Przez składniki infrastruktury metodę, aby określić, czy należy przesłać <xref:System.Threading.ExecutionContext> podczas operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="56801-144">The <xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Threading.ExecutionContext> during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-145">Przywraca przepływ kontekstu wykonywania pomiędzy wątkami asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-145">Restores the flow of the execution context across asynchronous threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> Odwraca efekt wcześniej <xref:System.Threading.ExecutionContext.SuppressFlow%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="56801-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> reverses the effect of a prior <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method call.</span></span>  
  
 <span data-ttu-id="56801-147">Ta metoda jest wywoływana przez <xref:System.Threading.AsyncFlowControl.Undo%2A> metody <xref:System.Threading.AsyncFlowControl> zwrócony przez strukturę <xref:System.Threading.ExecutionContext.SuppressFlow%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="56801-147">This method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the <xref:System.Threading.AsyncFlowControl> structure returned by the <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  <span data-ttu-id="56801-148">Należy używać <xref:System.Threading.AsyncFlowControl.Undo%2A> metodę, aby przywrócić przepływu kontekstu wykonywania nie <xref:System.Threading.ExecutionContext.RestoreFlow%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="56801-148">You should use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method to restore the flow of the execution context, not the <xref:System.Threading.ExecutionContext.RestoreFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="56801-149">Nie można przywrócić przepływu kontekstu, ponieważ nie są pomijane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-149">The context flow cannot be restored because it is not being suppressed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Threading::ExecutionContext ^ executionContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Threading.ExecutionContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="56801-150">
            <see cref="T:System.Threading.ExecutionContext" /> Można ustawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-150">The <see cref="T:System.Threading.ExecutionContext" /> to set.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="56801-151">A <see cref="T:System.Threading.ContextCallback" /> delegata, który reprezentuje metodę, aby działać w kontekście udostępnionego wykonywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-151">A <see cref="T:System.Threading.ContextCallback" /> delegate that represents the method to be run in the provided execution context.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="56801-152">Obiekt do przekazania do metody wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-152">The object to pass to the callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56801-153">Uruchamia metody w kontekście wykonanie określonego w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-153">Runs a method in a specified execution context on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-154">Kontekst wykonywania jest zwracana do jego poprzedniego stanu po zakończeniu metody.</span><span class="sxs-lookup"><span data-stu-id="56801-154">The execution context is returned to its previous state when the method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="56801-155">
            <paramref name="executionContext" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-155">
              <paramref name="executionContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="56801-156">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-156">-or-</span>
          </span>
          <span data-ttu-id="56801-157">
            <paramref name="executionContext" /> nie uzyskano za pomocą operacji przechwytywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-157">
              <paramref name="executionContext" /> was not acquired through a capture operation.</span>
          </span>
          <span data-ttu-id="56801-158">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-158">-or-</span>
          </span>
          <span data-ttu-id="56801-159">
            <paramref name="executionContext" /> jest już używany jako argument <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-159">
              <paramref name="executionContext" /> has already been used as the argument to a <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> call.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="56801-160">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-160">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="56801-161">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56801-162">Pomija przepływ kontekstu wykonywania pomiędzy wątkami asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-162">Suppresses the flow of the execution context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56801-163">
            <see cref="T:System.Threading.AsyncFlowControl" /> Struktury do przywrócenia przepływu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-163">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56801-164">Ta metoda służy do pomijania przepływ <xref:System.Threading.ExecutionContext> w bieżącym wątku.</span><span class="sxs-lookup"><span data-stu-id="56801-164">Use this method to suppress the flow of the <xref:System.Threading.ExecutionContext> on the current thread.</span></span>  
  
 <span data-ttu-id="56801-165">Należy użyć <xref:System.Threading.AsyncFlowControl.Undo%2A> metody w zwróconym <xref:System.Threading.AsyncFlowControl> struktury do przywrócenia przepływu <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="56801-165">You must use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to restore the flow of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="56801-166">Ta metoda jest chroniony za pomocą <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> dla <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="56801-166">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="56801-167">Składnik pełni zaufany można wywołać tę metodę, aby pominąć przepływu <xref:System.Threading.ExecutionContext> podczas wywołania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="56801-167">A fully trusted component can call this method to suppress the flow of the <xref:System.Threading.ExecutionContext> during asynchronous calls.</span></span> <span data-ttu-id="56801-168">Gdy strumień jest pominięty, <xref:System.Security.SecurityContext.Capture%2A> metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="56801-168">While the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="56801-169">Przepływ kontekstu jest już wstrzymany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-169">The context flow is already suppressed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="56801-170">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-170">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="56801-171">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56801-171">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.AsyncFlowControl" />
      </Docs>
    </Member>
  </Members>
</Type>