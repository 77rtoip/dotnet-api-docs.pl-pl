<Type Name="CountdownEvent" FullName="System.Threading.CountdownEvent">
  <TypeSignature Language="C#" Value="public class CountdownEvent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CountdownEvent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CountdownEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CountdownEvent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CountdownEvent : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Initial Count={InitialCount}, Current Count={CurrentCount}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="520a6-101">Reprezentuje podstawowy synchronizacji sygnalizowane po jego licznik osiągnie wartość zero.</span><span class="sxs-lookup"><span data-stu-id="520a6-101">Represents a synchronization primitive that is signaled when its count reaches zero.</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="520a6-102">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.CountdownEvent" /> są wątkowo i może używać jednocześnie przez wiele wątków, z wyjątkiem usuwania, która musi być używane podczas wszystkich operacji na <see cref="T:System.Threading.CountdownEvent" /> zostały ukończone i zresetować, które będą można użyć tylko, gdy nie ma innych wątków uzyskują dostęp do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="520a6-102">All public and protected members of <see cref="T:System.Threading.CountdownEvent" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CountdownEvent" /> have completed, and Reset, which should only be used when no other threads are accessing the event.</span></span>  
  
 <span data-ttu-id="520a6-103">Przykład</span><span class="sxs-lookup"><span data-stu-id="520a6-103">Example</span></span>  
  
 <span data-ttu-id="520a6-104">Poniższy przykład przedstawia użycie <see cref="T:System.Threading.CountdownEvent" />:</span><span class="sxs-lookup"><span data-stu-id="520a6-104">The following example shows how to use a <see cref="T:System.Threading.CountdownEvent" />:</span></span>  
  
 [!code-csharp[System.Threading.CountdownEvent#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.countdownevent/cs/countdownevent.cs#01)]
 [!code-vb[System.Threading.CountdownEvent#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.countdownevent/vb/countdownevent.vb#01)]</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountdownEvent (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CountdownEvent(int initialCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="520a6-105">Liczba sygnałów początkowo musi ustawić <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-105">The number of signals initially required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="520a6-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.CountdownEvent" /> klasy z określonej liczby.</span><span class="sxs-lookup"><span data-stu-id="520a6-106">Initializes a new instance of <see cref="T:System.Threading.CountdownEvent" /> class with the specified count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-107">iI `initialCount` wynosi 0, zdarzenie zostało utworzone w stanie sygnalizacji.</span><span class="sxs-lookup"><span data-stu-id="520a6-107">iI `initialCount` is 0, the event is created in a signaled state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-108"><paramref name="initialCount" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="520a6-108"><paramref name="initialCount" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-109">Zwiększa <see cref="T:System.Threading.CountdownEvent" />przez bieżącą liczbę.</span><span class="sxs-lookup"><span data-stu-id="520a6-109">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-110">Zwiększa <see cref="T:System.Threading.CountdownEvent" />przez bieżącą liczbę o jeden.</span><span class="sxs-lookup"><span data-stu-id="520a6-110">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-111">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-111">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="520a6-112">Bieżące wystąpienie jest już ustawiony.</span><span class="sxs-lookup"><span data-stu-id="520a6-112">The current instance is already set.</span></span>  
  
 <span data-ttu-id="520a6-113">—lub—</span><span class="sxs-lookup"><span data-stu-id="520a6-113">-or-</span></span>  
  
 <span data-ttu-id="520a6-114"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> jest równa lub większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-114"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount (signalCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="520a6-115">Wartość, o którą należy zwiększyć <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-115">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="520a6-116">Zwiększa <see cref="T:System.Threading.CountdownEvent" />przez bieżącą liczbę przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="520a6-116">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by a specified value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-117">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-117">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-118"><paramref name="signalCount" /> jest mniejsze niż lub równa 0.</span><span class="sxs-lookup"><span data-stu-id="520a6-118"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="520a6-119">Bieżące wystąpienie jest już ustawiony.</span><span class="sxs-lookup"><span data-stu-id="520a6-119">The current instance is already set.</span></span>  
  
 <span data-ttu-id="520a6-120">—lub—</span><span class="sxs-lookup"><span data-stu-id="520a6-120">-or-</span></span>  
  
 <span data-ttu-id="520a6-121"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> jest równa lub większa niż <see cref="F:System.Int32.MaxValue" /> po licznik jest zwiększany o <paramref name="signalCount." /></span><span class="sxs-lookup"><span data-stu-id="520a6-121"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" /> after count is incremented by <paramref name="signalCount." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="520a6-122">Pobiera liczbę pozostałych sygnały musi ustawić zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="520a6-122">Gets the number of remaining signals required to set the event.</span></span></summary>
        <value><span data-ttu-id="520a6-123">Liczba pozostałych sygnały musi ustawić zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="520a6-123">The number of remaining signals required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-124">Zwalnia zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Threading.CountdownEvent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="520a6-124">Releases resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-125">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Threading.CountdownEvent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="520a6-125">Releases all resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-126">Wywołanie `Dispose` po zakończeniu przy użyciu <xref:System.Threading.CountdownEvent>.</span><span class="sxs-lookup"><span data-stu-id="520a6-126">Call `Dispose` when you are finished using the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="520a6-127">`Dispose` Pozostawia metody <xref:System.Threading.CountdownEvent> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="520a6-127">The `Dispose` method leaves the <xref:System.Threading.CountdownEvent> in an unusable state.</span></span> <span data-ttu-id="520a6-128">Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Threading.CountdownEvent> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Threading.CountdownEvent> klasy.</span><span class="sxs-lookup"><span data-stu-id="520a6-128">After calling `Dispose`, you must release all references to the <xref:System.Threading.CountdownEvent> so the garbage collector can reclaim the memory that the <xref:System.Threading.CountdownEvent> was occupying.</span></span>  
  
 <span data-ttu-id="520a6-129">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="520a6-129">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="520a6-130">Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Threading.CountdownEvent>.</span><span class="sxs-lookup"><span data-stu-id="520a6-130">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="520a6-131">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Threading.CountdownEvent> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="520a6-131">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CountdownEvent> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="520a6-132">Wartość true zwalnia zasoby zarządzane i niezarządzane; wartość false zwalnia tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="520a6-132">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="520a6-133">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.CountdownEvent" />i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="520a6-133">Releases the unmanaged resources used by the <see cref="T:System.Threading.CountdownEvent" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-134">W przeciwieństwie do większości członków <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-134">Unlike most of the members of <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCount">
      <MemberSignature Language="C#" Value="public int InitialCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.InitialCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InitialCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="520a6-135">Pobiera liczby sygnały początkowo musi ustawić zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="520a6-135">Gets the numbers of signals initially required to set the event.</span></span></summary>
        <value><span data-ttu-id="520a6-136">Liczba sygnałów początkowo musi ustawić zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="520a6-136">The number of signals initially required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="520a6-137">Wskazuje, czy <see cref="T:System.Threading.CountdownEvent" /> obiektu bieżąca liczba osiągnęła wartość zero.</span><span class="sxs-lookup"><span data-stu-id="520a6-137">Indicates whether the <see cref="T:System.Threading.CountdownEvent" /> object's current count has reached zero..</span></span></summary>
        <value>
          <span data-ttu-id="520a6-138"><see langword="true" /> Jeśli bieżąca liczba wynosi zero; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-138"><see langword="true" /> if the current count is zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-139"><xref:System.Threading.CountdownEvent> Nie wygenerował zdarzenie, gdy odliczania osiągnęła wartość zero.</span><span class="sxs-lookup"><span data-stu-id="520a6-139">The <xref:System.Threading.CountdownEvent> does not raise an event when the countdown has reached zero.</span></span> <span data-ttu-id="520a6-140">Zamiast tego <xref:System.Threading.CountdownEvent.CurrentCount%2A> właściwości jest równa zero i <xref:System.Threading.CountdownEvent.IsSet%2A> równa właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="520a6-140">Instead, the <xref:System.Threading.CountdownEvent.CurrentCount%2A> property equals zero, and the <xref:System.Threading.CountdownEvent.IsSet%2A> property equals `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reset">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-141">Resetuje <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="520a6-141">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-142">Resetuje <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> wartość <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-142">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> to the value of <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-143">W przeciwieństwie do większości członków <xref:System.Threading.CountdownEvent>, resetowanie nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-143">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-144">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-144">The current instance has already been disposed..</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="520a6-145">Liczba sygnałów musi ustawić <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-145">The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="520a6-146">Resetuje <see cref="P:System.Threading.CountdownEvent.InitialCount" /> właściwości na podaną wartość.</span><span class="sxs-lookup"><span data-stu-id="520a6-146">Resets the <see cref="P:System.Threading.CountdownEvent.InitialCount" /> property to a specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-147">Ta metoda powoduje zresetowanie <xref:System.Threading.CountdownEvent.InitialCount%2A> dla wszystkich kolejnych uzyskuje dostęp do właściwości bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-147">This method resets <xref:System.Threading.CountdownEvent.InitialCount%2A> for all subsequent accesses of the property on the current instance.</span></span> <span data-ttu-id="520a6-148">W przeciwieństwie do większości członków <xref:System.Threading.CountdownEvent>, resetowanie nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-148">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-149">Bieżące wystąpienie ma dotychczasowe został usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-149">The current instance has alread been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-150"><paramref name="count" /> jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="520a6-150"><paramref name="count" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Signal">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-151">Rejestruje sygnał o <see cref="T:System.Threading.CountdownEvent" />, zmniejszanie wartości z <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-151">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-152">Rejestruje sygnał o <see cref="T:System.Threading.CountdownEvent" />, zmniejszanie wartości z <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-152">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <returns><span data-ttu-id="520a6-153">ustawiono wartość true, jeśli sygnał spowodował liczbę, aby osiągnąć zero i zdarzenia; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-153">true if the signal caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-154">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-154">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="520a6-155">Bieżące wystąpienie jest już ustawiony.</span><span class="sxs-lookup"><span data-stu-id="520a6-155">The current instance is already set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="520a6-156">Liczba sygnałów do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="520a6-156">The number of signals to register.</span></span></param>
        <summary><span data-ttu-id="520a6-157">Rejestruje wiele sygnały z <see cref="T:System.Threading.CountdownEvent" />, zmniejszanie wartości z <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> o określonej szerokości.</span><span class="sxs-lookup"><span data-stu-id="520a6-157">Registers multiple signals with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by the specified amount.</span></span></summary>
        <returns><span data-ttu-id="520a6-158">ustawiono wartość true, jeśli sygnały spowodował liczbę, aby osiągnąć zero i zdarzenia; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-158">true if the signals caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-159">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-159">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-160"><paramref name="signalCount" /> jest mniejsza niż 1.</span><span class="sxs-lookup"><span data-stu-id="520a6-160"><paramref name="signalCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="520a6-161">Bieżące wystąpienie jest już ustawiony.</span><span class="sxs-lookup"><span data-stu-id="520a6-161">The current instance is already set.</span></span> <span data-ttu-id="520a6-162">- lub - lub <paramref name="signalCount" /> jest większa niż <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-162">-or- Or <paramref name="signalCount" /> is greater than <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-163">Próbuje zwiększyć <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-163">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-164">Próbuje zwiększyć <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> o jeden.</span><span class="sxs-lookup"><span data-stu-id="520a6-164">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by one.</span></span></summary>
        <returns><span data-ttu-id="520a6-165">wartość true, jeśli wartość przyrostu zakończyło się pomyślnie; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-165">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="520a6-166">Jeśli <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> jest już na wartość 0, ta metoda zwróci wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-166">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero, this method will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-167">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-167">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="520a6-168"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> jest równa <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-168"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="520a6-169">Wartość, o którą należy zwiększyć <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-169">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="520a6-170">Próbuje zwiększyć <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="520a6-170">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by a specified value.</span></span></summary>
        <returns><span data-ttu-id="520a6-171">wartość true, jeśli wartość przyrostu zakończyło się pomyślnie; w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-171">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="520a6-172">Jeśli <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> jest już na zero, to zwróci wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-172">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero this will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-173">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-173">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-174"><paramref name="signalCount" /> jest mniejsze niż lub równa 0.</span><span class="sxs-lookup"><span data-stu-id="520a6-174"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="520a6-175">Bieżące wystąpienie jest już ustawiony.</span><span class="sxs-lookup"><span data-stu-id="520a6-175">The current instance is already set.</span></span>  
  
 <span data-ttu-id="520a6-176">—lub—</span><span class="sxs-lookup"><span data-stu-id="520a6-176">-or-</span></span>  
  
 <span data-ttu-id="520a6-177"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> jest równa lub większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-177"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="520a6-178">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="520a6-178">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="520a6-179">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="520a6-179">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-180">Element wywołujący tego bloki — metoda, dopóki nie ustawiono bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-180">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="520a6-181">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</span><span class="sxs-lookup"><span data-stu-id="520a6-181">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-182">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-182">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="520a6-183">Wyrażony w milisekundach czas oczekiwania, lub <see cref="F:System.Threading.Timeout.Infinite" />(-1) będzie czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="520a6-183">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="520a6-184">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona, przy użyciu całkowita 32-bitowej do mierzenia limit czasu.</span><span class="sxs-lookup"><span data-stu-id="520a6-184">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="520a6-185">wartość true, jeśli <see cref="T:System.Threading.CountdownEvent" /> została ustawiona, w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-185">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-186">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-187"><paramref name="millisecondsTimeout" /> jest to liczba ujemna niż -1, która reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="520a6-187"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="520a6-188"><see cref="T:System.Threading.CancellationToken" /> Aby przyjrzeć się.</span><span class="sxs-lookup"><span data-stu-id="520a6-188">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="520a6-189">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona, obserwując <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-189">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-190">Element wywołujący tego bloki — metoda, dopóki nie ustawiono bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="520a6-190">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="520a6-191">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</span><span class="sxs-lookup"><span data-stu-id="520a6-191">The caller will return immediately if the event is currently in a set state.</span></span> <span data-ttu-id="520a6-192">Jeśli <xref:System.Threading.CancellationToken> obserwowana zostało anulowane podczas operacji oczekiwania <xref:System.OperationCanceledException> zostanie wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="520a6-192">If the <xref:System.Threading.CancellationToken> being observed is canceled during the wait operation, an <xref:System.OperationCanceledException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="520a6-193"><paramref name="cancellationToken" /> zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="520a6-193"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-194">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-194">The current instance has already been disposed.</span></span> <span data-ttu-id="520a6-195">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-195">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="520a6-196">A <see cref="T:System.TimeSpan" /> reprezentujący wyrażony w milisekundach czas oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący wartość-1 milisekund oczekiwania przez czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="520a6-196">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="520a6-197">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona, za pomocą <see cref="T:System.TimeSpan" /> do pomiaru wartości limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="520a6-197">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="520a6-198">wartość true, jeśli <see cref="T:System.Threading.CountdownEvent" /> została ustawiona, w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-198">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-199">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-200"><paramref name="timeout" /> jest to liczba ujemna niż-1 milisekund, która reprezentuje nieskończonego limitu czasu - lub - limitu czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-200"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="520a6-201">Wyrażony w milisekundach czas oczekiwania, lub <see cref="F:System.Threading.Timeout.Infinite" />(-1) będzie czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="520a6-201">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="520a6-202"><see cref="T:System.Threading.CancellationToken" /> Aby przyjrzeć się.</span><span class="sxs-lookup"><span data-stu-id="520a6-202">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="520a6-203">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona, przy użyciu całkowita 32-bitowej do mierzenia limit czasu podczas obserwowania <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-203">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="520a6-204">wartość true, jeśli <see cref="T:System.Threading.CountdownEvent" /> została ustawiona, w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-204">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="520a6-205"><paramref name="cancellationToken" /> zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="520a6-205"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-206">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-206">The current instance has already been disposed.</span></span> <span data-ttu-id="520a6-207">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-207">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-208"><paramref name="millisecondsTimeout" /> jest to liczba ujemna niż -1, która reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="520a6-208"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="520a6-209">A <see cref="T:System.TimeSpan" /> reprezentujący wyrażony w milisekundach czas oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący wartość-1 milisekund oczekiwania przez czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="520a6-209">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="520a6-210"><see cref="T:System.Threading.CancellationToken" /> Aby przyjrzeć się.</span><span class="sxs-lookup"><span data-stu-id="520a6-210">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="520a6-211">Blokuje bieżącego wątku do <see cref="T:System.Threading.CountdownEvent" /> jest ustawiona, za pomocą <see cref="T:System.TimeSpan" /> do mierzenia limit czasu podczas obserwowania <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-211">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="520a6-212">wartość true, jeśli <see cref="T:System.Threading.CountdownEvent" /> została ustawiona, w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="520a6-212">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="520a6-213"><paramref name="cancellationToken" /> zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="520a6-213"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-214">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-214">The current instance has already been disposed.</span></span> <span data-ttu-id="520a6-215">- lub - <see cref="T:System.Threading.CancellationTokenSource" /> utworzony <paramref name="cancellationToken" /> został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-215">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="520a6-216"><paramref name="timeout" /> jest to liczba ujemna niż-1 milisekund, która reprezentuje nieskończonego limitu czasu - lub - limitu czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="520a6-216"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="520a6-217">Pobiera <see cref="T:System.Threading.WaitHandle" /> używany oczekiwania na zdarzenie ma zostać ustawiona.</span><span class="sxs-lookup"><span data-stu-id="520a6-217">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></summary>
        <value><span data-ttu-id="520a6-218">A <see cref="T:System.Threading.WaitHandle" /> używany oczekiwania na zdarzenie ma zostać ustawiona.</span><span class="sxs-lookup"><span data-stu-id="520a6-218">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="520a6-219"><xref:System.Threading.CountdownEvent.WaitHandle%2A> należy używać tylko jeśli jest potrzebny do integracji z baz kodu, które zależą od elementu WaitHandle o.</span><span class="sxs-lookup"><span data-stu-id="520a6-219"><xref:System.Threading.CountdownEvent.WaitHandle%2A> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</span></span> <span data-ttu-id="520a6-220">Jeśli potrzebne jest oczekiwania <xref:System.Threading.CountdownEvent> należy ustawić <xref:System.Threading.CountdownEvent.Wait%2A> należy preferowaną metodę.</span><span class="sxs-lookup"><span data-stu-id="520a6-220">If all that's needed is to wait for the <xref:System.Threading.CountdownEvent> to be set, the <xref:System.Threading.CountdownEvent.Wait%2A> method should be preferred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="520a6-221">Bieżące wystąpienie został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="520a6-221">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>