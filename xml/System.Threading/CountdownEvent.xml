<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CountdownEvent.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c62bb348d097da0e8426221c1f746b2e651b6518.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c62bb348d097da0e8426221c1f746b2e651b6518</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Represents a synchronization primitive that is signaled when its count reaches zero.</source>
          <target state="translated">Reprezentuje podstawowy synchronizacji sygnalizowane po jego licznik osiągnie wartość zero.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <ph id="ph2">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> have completed, and Reset, which should only be used when no other threads are accessing the event.</source>
          <target state="translated">Wszystkie publiczne i chronione elementy członkowskie <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> są wątkowo i może używać jednocześnie przez wiele wątków, z wyjątkiem usuwania, która musi być używane podczas wszystkich operacji na <ph id="ph2">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> zostały ukończone i zresetować, które będą można użyć tylko, gdy nie ma innych wątków uzyskują dostęp do zdarzenia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>Example</source>
          <target state="translated">Przykład</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.CountdownEvent">
          <source>The following example shows how to use a <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>:</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>The number of signals initially required to set the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</source>
          <target state="translated">Liczba sygnałów początkowo musi ustawić <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class with the specified count.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> klasy z określonej liczby.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source>iI <ph id="ph1">`initialCount`</ph> is 0, the event is created in a signaled state.</source>
          <target state="translated">iI <ph id="ph1">`initialCount`</ph> wynosi 0, zdarzenie zostało utworzone w stanie sygnalizacji.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCount" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCount" /&gt;</ph> jest mniejsza niż 0.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count.</source>
          <target state="translated">Zwiększa <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>przez bieżącą liczbę.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count by one.</source>
          <target state="translated">Zwiększa <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>przez bieżącą liczbę o jeden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>The current instance is already set.</source>
          <target state="translated">Bieżące wystąpienie jest już ustawiony.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> jest równa lub większa niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The value by which to increase <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Wartość, o którą należy zwiększyć <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>'s current count by a specified value.</source>
          <target state="translated">Zwiększa <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>przez bieżącą liczbę przez określoną wartość.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> jest mniejsze niż lub równa 0.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">Bieżące wystąpienie jest już ustawiony.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> after count is incremented by <ph id="ph3">&lt;paramref name="signalCount." /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> jest równa lub większa niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> po licznik jest zwiększany o <ph id="ph3">&lt;paramref name="signalCount." /&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.CurrentCount">
          <source>Gets the number of remaining signals required to set the event.</source>
          <target state="translated">Pobiera liczbę pozostałych sygnały musi ustawić zdarzenia.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.CurrentCount">
          <source>The number of remaining signals required to set the event.</source>
          <target state="translated">Liczba pozostałych sygnały musi ustawić zdarzenia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Releases resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class.</source>
          <target state="translated">Zwalnia zasoby używane przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> class.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</source>
          <target state="translated">Wywołanie <ph id="ph1">`Dispose`</ph> po zakończeniu przy użyciu <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> Pozostawia metody <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> w stanie uniemożliwiającym jego używanie.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> was occupying.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">`Dispose`</ph>, konieczne jest zwolnienie wszystkich odwołań do <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <ph id="ph3">&lt;xref:System.Threading.CountdownEvent&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> i <bpt id="p2">[</bpt>implementacja metody Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</source>
          <target state="translated">Wywoływanie zawsze <ph id="ph1">`Dispose`</ph> przed zwolnieniem ostatniego odwołania do <ph id="ph2">&lt;xref:System.Threading.CountdownEvent&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> obiektu <ph id="ph2">`Finalize`</ph> metody.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>true to release both managed and unmanaged resources; false to release only unmanaged resources.</source>
          <target state="translated">Wartość true zwalnia zasoby zarządzane i niezarządzane; wartość false zwalnia tylko niezarządzane zasoby.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Dispose%2A&gt;</ph> is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">W przeciwieństwie do większości członków <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Dispose%2A&gt;</ph> nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.InitialCount">
          <source>Gets the numbers of signals initially required to set the event.</source>
          <target state="translated">Pobiera liczby sygnały początkowo musi ustawić zdarzenia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.InitialCount">
          <source>The number of signals initially required to set the event.</source>
          <target state="translated">Liczba sygnałów początkowo musi ustawić zdarzenia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> object's current count has reached zero..</source>
          <target state="translated">Wskazuje, czy <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> obiektu bieżąca liczba osiągnęła wartość zero.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current count is zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżąca liczba wynosi zero; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>The <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> does not raise an event when the countdown has reached zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> Nie wygenerował zdarzenie, gdy odliczania osiągnęła wartość zero.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.IsSet">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.CurrentCount%2A&gt;</ph> property equals zero, and the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.IsSet%2A&gt;</ph> property equals <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Zamiast tego <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.CurrentCount%2A&gt;</ph> właściwości jest równa zero i <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.IsSet%2A&gt;</ph> równa właściwości <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> value.</source>
          <target state="translated">Resetuje <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> to the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph>.</source>
          <target state="translated">Resetuje <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> wartość <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">W przeciwieństwie do większości członków <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, resetowanie nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset">
          <source>The current instance has already been disposed..</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>The number of signals required to set the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</source>
          <target state="translated">Liczba sygnałów musi ustawić <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph> property to a specified value.</source>
          <target state="translated">Resetuje <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.InitialCount" /&gt;</ph> właściwości na podaną wartość.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>This method resets <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.InitialCount%2A&gt;</ph> for all subsequent accesses of the property on the current instance.</source>
          <target state="translated">Ta metoda powoduje zresetowanie <ph id="ph1">&lt;xref:System.Threading.CountdownEvent.InitialCount%2A&gt;</ph> dla wszystkich kolejnych uzyskuje dostęp do właściwości bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</source>
          <target state="translated">W przeciwieństwie do większości członków <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph>, resetowanie nie jest bezpieczne wątkowo i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source>The current instance has alread been disposed.</source>
          <target state="translated">Bieżące wystąpienie ma dotychczasowe został usunięty.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Reset(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> jest mniejsza niż 0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Registers a signal with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Rejestruje sygnał o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, zmniejszanie wartości z <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>Registers a signal with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Rejestruje sygnał o <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, zmniejszanie wartości z <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>true if the signal caused the count to reach zero and the event was set; otherwise, false.</source>
          <target state="translated">ustawiono wartość true, jeśli sygnał spowodował liczbę, aby osiągnąć zero i zdarzenia; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal">
          <source>The current instance is already set.</source>
          <target state="translated">Bieżące wystąpienie jest już ustawiony.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The number of signals to register.</source>
          <target state="translated">Liczba sygnałów do zarejestrowania.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>Registers multiple signals with the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, decrementing the value of <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by the specified amount.</source>
          <target state="translated">Rejestruje wiele sygnały z <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph>, zmniejszanie wartości z <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> o określonej szerokości.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>true if the signals caused the count to reach zero and the event was set; otherwise, false.</source>
          <target state="translated">ustawiono wartość true, jeśli sygnały spowodował liczbę, aby osiągnąć zero i zdarzenia; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> jest mniejsza niż 1.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">Bieżące wystąpienie jest już ustawiony.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Signal(System.Int32)">
          <source>-or- Or <ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">- lub - lub <ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Próbuje zwiększyć <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by one.</source>
          <target state="translated">Próbuje zwiększyć <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> o jeden.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>true if the increment succeeded; otherwise, false.</source>
          <target state="translated">wartość true, jeśli wartość przyrostu zakończyło się pomyślnie; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>If <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is already at zero, this method will return false.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> jest już na wartość 0, ta metoda zwróci wartość false.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> jest równa <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The value by which to increase <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</source>
          <target state="translated">Wartość, o którą należy zwiększyć <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>Attempts to increment <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> by a specified value.</source>
          <target state="translated">Próbuje zwiększyć <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> przez określoną wartość.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>true if the increment succeeded; otherwise, false.</source>
          <target state="translated">wartość true, jeśli wartość przyrostu zakończyło się pomyślnie; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> is already at zero this will return false.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph> jest już na zero, to zwróci wartość false.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signalCount" /&gt;</ph> jest mniejsze niż lub równa 0.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>The current instance is already set.</source>
          <target state="translated">Bieżące wystąpienie jest już ustawiony.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="signalCount" /&gt;</ph> is equal to or greater than <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.CountdownEvent.CurrentCount" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="signalCount" /&gt;</ph> jest równa lub większa niż <ph id="ph4">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Threading.CountdownEvent">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The caller of this method blocks indefinitely until the current instance is set.</source>
          <target state="translated">Element wywołujący tego bloki — metoda, dopóki nie ustawiono bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The caller will return immediately if the event is currently in a set state.</source>
          <target state="translated">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Wyrażony w milisekundach czas oczekiwania, lub <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) będzie czekać w nieskończoność.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a 32-bit signed integer to measure the timeout.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona, przy użyciu całkowita 32-bitowej do mierzenia limit czasu.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">wartość true, jeśli <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> została ustawiona, w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> jest to liczba ujemna niż -1, która reprezentuje nieskończony limit czasu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> Aby przyjrzeć się.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, while observing a <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona, obserwując <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The caller of this method blocks indefinitely until the current instance is set.</source>
          <target state="translated">Element wywołujący tego bloki — metoda, dopóki nie ustawiono bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The caller will return immediately if the event is currently in a set state.</source>
          <target state="translated">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> being observed is canceled during the wait operation, an <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> will be thrown.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> obserwowana zostało anulowane podczas operacji oczekiwania <ph id="ph2">&lt;xref:System.OperationCanceledException&gt;</ph> zostanie wygenerowany.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> zostało anulowane.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">- lub - <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> utworzony <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> został już usunięty.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> reprezentujący wyrażony w milisekundach czas oczekiwania, lub <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> reprezentujący wartość-1 milisekund oczekiwania przez czas nieokreślony.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to measure the timeout.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona, za pomocą <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> do pomiaru wartości limitu czasu.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">wartość true, jeśli <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> została ustawiona, w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> jest to liczba ujemna niż-1 milisekund, która reprezentuje nieskończonego limitu czasu - lub - limitu czasu jest większy niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) to wait indefinitely.</source>
          <target state="translated">Wyrażony w milisekundach czas oczekiwania, lub <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph>(-1) będzie czekać w nieskończoność.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> Aby przyjrzeć się.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a 32-bit signed integer to measure the timeout, while observing a <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona, przy użyciu całkowita 32-bitowej do mierzenia limit czasu podczas obserwowania <ph id="ph2">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">wartość true, jeśli <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> została ustawiona, w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> zostało anulowane.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">- lub - <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> utworzony <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> został już usunięty.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> jest to liczba ujemna niż -1, która reprezentuje nieskończony limit czasu.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> reprezentujący wyrażony w milisekundach czas oczekiwania, lub <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> reprezentujący wartość-1 milisekund oczekiwania przez czas nieokreślony.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> to observe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> Aby przyjrzeć się.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>Blocks the current thread until the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> is set, using a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> to measure the timeout, while observing a <ph id="ph3">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</source>
          <target state="translated">Blokuje bieżącego wątku do <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> jest ustawiona, za pomocą <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> do mierzenia limit czasu podczas obserwowania <ph id="ph3">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> was set; otherwise, false.</source>
          <target state="translated">wartość true, jeśli <ph id="ph1">&lt;see cref="T:System.Threading.CountdownEvent" /&gt;</ph> została ustawiona, w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cancellationToken" /&gt;</ph> zostało anulowane.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source>-or- The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> has already been disposed.</source>
          <target state="translated">- lub - <ph id="ph1">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> utworzony <ph id="ph2">&lt;paramref name="cancellationToken" /&gt;</ph> został już usunięty.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> jest to liczba ujemna niż-1 milisekund, która reprezentuje nieskończonego limitu czasu - lub - limitu czasu jest większy niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for the event to be set.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> używany oczekiwania na zdarzenie ma zostać ustawiona.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for the event to be set.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> używany oczekiwania na zdarzenie ma zostać ustawiona.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source><ph id="ph1">&lt;xref:System.Threading.CountdownEvent.WaitHandle%2A&gt;</ph> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.CountdownEvent.WaitHandle%2A&gt;</ph> należy używać tylko jeśli jest potrzebny do integracji z baz kodu, które zależą od elementu WaitHandle o.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>If all that's needed is to wait for the <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> to be set, the <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Wait%2A&gt;</ph> method should be preferred.</source>
          <target state="translated">Jeśli potrzebne jest oczekiwania <ph id="ph1">&lt;xref:System.Threading.CountdownEvent&gt;</ph> należy ustawić <ph id="ph2">&lt;xref:System.Threading.CountdownEvent.Wait%2A&gt;</ph> należy preferowaną metodę.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Threading.CountdownEvent.WaitHandle">
          <source>The current instance has already been disposed.</source>
          <target state="translated">Bieżące wystąpienie został już usunięty.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>