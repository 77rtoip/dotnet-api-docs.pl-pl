<Type Name="SpinWait" FullName="System.Threading.SpinWait">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d75911f8a25cbffce1ea7b3ad951cc390fcac2b" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68541140" /></Metadata><TypeSignature Language="C#" Value="public struct SpinWait" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpinWait extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SpinWait" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpinWait" />
  <TypeSignature Language="C++ CLI" Value="public value class SpinWait" />
  <TypeSignature Language="F#" Value="type SpinWait = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="37820-101">Zapewnia obsługę czekania na wirowanie.</span><span class="sxs-lookup"><span data-stu-id="37820-101">Provides support for spin-based waiting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37820-102"><xref:System.Threading.SpinWait>hermetyzuje wspólną, obracającą się logiką.</span><span class="sxs-lookup"><span data-stu-id="37820-102"><xref:System.Threading.SpinWait> encapsulates common spinning logic.</span></span> <span data-ttu-id="37820-103">Na maszynach z jednym procesorem wartości są zawsze używane zamiast zajętego oczekiwania, a na komputerach z procesorami Intel wykorzystujących technologię wielowątkowości można zapobiegać zastępowaniu wątku sprzętowego.</span><span class="sxs-lookup"><span data-stu-id="37820-103">On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</span></span> <span data-ttu-id="37820-104">Metody SpinWait hermetyzuje dobrą kombinację wirowania i wartości true.</span><span class="sxs-lookup"><span data-stu-id="37820-104">SpinWait encapsulates a good mixture of spinning and true yielding.</span></span>  
  
 <span data-ttu-id="37820-105"><xref:System.Threading.SpinWait>jest typem wartości, co oznacza, że kod niskiego poziomu może korzystać z Metody SpinWait bez obaw o niepotrzebne koszty alokacji.</span><span class="sxs-lookup"><span data-stu-id="37820-105"><xref:System.Threading.SpinWait> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</span></span> <span data-ttu-id="37820-106">Metody SpinWait nie jest ogólnie przydatna w przypadku zwykłych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="37820-106">SpinWait is not generally useful for ordinary applications.</span></span> <span data-ttu-id="37820-107">W większości przypadków należy używać klas synchronizacji dostarczonych przez .NET Framework, takich jak <xref:System.Threading.Monitor>.</span><span class="sxs-lookup"><span data-stu-id="37820-107">In most cases, you should use the synchronization classes provided by the .NET Framework, such as <xref:System.Threading.Monitor>.</span></span> <span data-ttu-id="37820-108">W większości przypadków, gdy wymagane jest oczekiwanie, <xref:System.Threading.SpinWait> typ powinien być preferowany <xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="37820-108">For most purposes where spin waiting is required, however, the <xref:System.Threading.SpinWait> type should be preferred over the <xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37820-109">Poniższy przykład pokazuje, <xref:System.Threading.SpinWait>jak używać:</span><span class="sxs-lookup"><span data-stu-id="37820-109">The following example shows how to use a <xref:System.Threading.SpinWait>:</span></span>  
  
 [!code-csharp[System.Threading.SpinWait#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/spinwait.cs#01)]
 [!code-vb[System.Threading.SpinWait#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/spinwait.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="37820-110">Program <see cref="T:System.Threading.SpinWait" /> jest przeznaczony do użycia w współbieżnych aplikacjach, ale nie jest przeznaczony do użycia z wielu wątków jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="37820-110">While <see cref="T:System.Threading.SpinWait" /> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</span></span> <span data-ttu-id="37820-111"><see cref="T:System.Threading.SpinWait" />elementy członkowskie nie są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="37820-111"><see cref="T:System.Threading.SpinWait" /> members are not thread-safe.</span></span> <span data-ttu-id="37820-112">Jeśli wiele wątków musi się obracać, każdy powinien używać własnego wystąpienia <see cref="T:System.Threading.SpinWait" />.</span><span class="sxs-lookup"><span data-stu-id="37820-112">If multiple threads must spin, each should use its own instance of <see cref="T:System.Threading.SpinWait" />.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/spinwait.md"><span data-ttu-id="37820-113">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-113">SpinWait</span></span></related>
    <related type="Article" href="~/docs/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation.md"><span data-ttu-id="37820-114">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-114">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Threading.SpinWait.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37820-115">Pobiera liczbę przypadków <see cref="M:System.Threading.SpinWait.SpinOnce" /> wywołania dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="37820-115">Gets the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></summary>
        <value><span data-ttu-id="37820-116">Zwraca liczbę całkowitą reprezentującą liczbę przypadków <see cref="M:System.Threading.SpinWait.SpinOnce" /> , która została wywołana dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="37820-116">Returns an integer that represents the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-117">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-117">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-118">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-118">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextSpinWillYield">
      <MemberSignature Language="C#" Value="public bool NextSpinWillYield { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NextSpinWillYield" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.NextSpinWillYield" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSpinWillYield As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NextSpinWillYield { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSpinWillYield : bool" Usage="System.Threading.SpinWait.NextSpinWillYield" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37820-119">Pobiera, czy następne wywołanie <see cref="M:System.Threading.SpinWait.SpinOnce" /> spowoduje przekazanie procesora, wyzwalając wymuszony przełącznik kontekstu.</span><span class="sxs-lookup"><span data-stu-id="37820-119">Gets whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></summary>
        <value><span data-ttu-id="37820-120">Czy następne wywołanie <see cref="M:System.Threading.SpinWait.SpinOnce" /> spowoduje przekazanie procesora, wyzwalając wymuszony przełącznik kontekstu.</span><span class="sxs-lookup"><span data-stu-id="37820-120">Whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37820-121">Na komputerze z pojedynczym procesorem <xref:System.Threading.SpinWait.SpinOnce%2A> CPU program zawsze przekazuje procesor.</span><span class="sxs-lookup"><span data-stu-id="37820-121">On a single-CPU machine, <xref:System.Threading.SpinWait.SpinOnce%2A> always yields the processor.</span></span> <span data-ttu-id="37820-122">Na maszynach z wieloma procesorami CPU <xref:System.Threading.SpinWait.SpinOnce%2A> może wystąpić po nieokreślonej liczbie wywołań.</span><span class="sxs-lookup"><span data-stu-id="37820-122">On machines with multiple CPUs, <xref:System.Threading.SpinWait.SpinOnce%2A> may yield after an unspecified number of calls.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-123">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-123">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-124">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-124">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="spinWait.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37820-125">Resetuje licznik pokrętła.</span><span class="sxs-lookup"><span data-stu-id="37820-125">Resets the spin counter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37820-126">To sprawia <xref:System.Threading.SpinWait.SpinOnce%2A> i <xref:System.Threading.SpinWait.NextSpinWillYield%2A> zachowuje się <xref:System.Threading.SpinWait.SpinOnce%2A> tak, jakby nie wydano żadnych wywołań dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="37820-126">This makes <xref:System.Threading.SpinWait.SpinOnce%2A> and <xref:System.Threading.SpinWait.NextSpinWillYield%2A> behave as though no calls to <xref:System.Threading.SpinWait.SpinOnce%2A> had been issued on this instance.</span></span> <span data-ttu-id="37820-127"><xref:System.Threading.SpinWait> Jeśli wystąpienie jest wielokrotnie używane, może być przydatne do zresetowania go, aby uniknąć zbyt szybko.</span><span class="sxs-lookup"><span data-stu-id="37820-127">If a <xref:System.Threading.SpinWait> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37820-128">Poniżej przedstawiono przykład użycia metody SpinWait w prostej implementacji stosu bez blokady.</span><span class="sxs-lookup"><span data-stu-id="37820-128">The following is an example of using SpinWait in a simple lock-free stack implementation.</span></span> <span data-ttu-id="37820-129">(To jest tylko przykład.</span><span class="sxs-lookup"><span data-stu-id="37820-129">(This is just an example.</span></span> <span data-ttu-id="37820-130">Jeśli jest wymagany wydajny, bezpieczny dla wątków stos, rozważ użycie ConcurrentStack.)</span><span class="sxs-lookup"><span data-stu-id="37820-130">If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</span></span>  
  
 [!code-csharp[System.Threading.SpinWait.Reset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/reset.cs#01)]
 [!code-vb[System.Threading.SpinWait.Reset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/reset.vb#01)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-131">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-131">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-132">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-132">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce();" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : unit -&gt; unit" Usage="spinWait.SpinOnce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37820-133">Wykonuje pojedynczy pokrętło.</span><span class="sxs-lookup"><span data-stu-id="37820-133">Performs a single spin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37820-134">Ta metoda jest zazwyczaj wywoływana w pętli i może ulec zmianie w zależności od liczby przypadków <xref:System.Threading.SpinWait.SpinOnce%2A> , w których została wywołana dotąd dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="37820-134">This method is typically called in a loop and may change in behavior based on the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> has been called so far on this instance.</span></span> <span data-ttu-id="37820-135">Każdy efekt jest wywoływany <xref:System.Threading.Thread.SpinWait%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="37820-135">Each spin results in the <xref:System.Threading.Thread.SpinWait%2A> method being called.</span></span> <span data-ttu-id="37820-136">Liczba jest zachowywana w czasie <xref:System.Threading.SpinWait.SpinOnce%2A> wywołania i po osiągnięciu <xref:System.Threading.Thread.Yield%2A> progu zostanie wywołana metoda.</span><span class="sxs-lookup"><span data-stu-id="37820-136">A count is kept of the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> is called, and after a threshold count is reached, the <xref:System.Threading.Thread.Yield%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-137">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-137">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-138">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-138">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce (int sleep1Threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce(int32 sleep1Threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce (sleep1Threshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce(int sleep1Threshold);" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : int -&gt; unit" Usage="spinWait.SpinOnce sleep1Threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sleep1Threshold" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="sleep1Threshold"><span data-ttu-id="37820-139">Minimalna liczba obrotów po tym <see langword="Thread.Sleep(1)" /> , które mogą być używane.</span><span class="sxs-lookup"><span data-stu-id="37820-139">A minimum spin count after which <see langword="Thread.Sleep(1)" /> may be used.</span></span> <span data-ttu-id="37820-140">Wartość-1 wyłącza użycie <see langword="Thread.Sleep(1)" />.</span><span class="sxs-lookup"><span data-stu-id="37820-140">A value of -1 disables the use of <see langword="Thread.Sleep(1)" />.</span></span></param>
        <summary><span data-ttu-id="37820-141">Wykonuje pojedyncze wirowanie i wywołuje <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> po minimalnej liczbie obrotów.</span><span class="sxs-lookup"><span data-stu-id="37820-141">Performs a single spin and calls <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> after a minimum spin count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="37820-142">Ta metoda jest zazwyczaj wywoływana w pętli i może ulec zmianie w zależności od liczby przypadków <xref:System.Threading.SpinWait.SpinOnce> , w których została wywołana dotąd dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="37820-142">This method is typically called in a loop and may change in behavior based on the number of times <xref:System.Threading.SpinWait.SpinOnce> has been called so far on this instance.</span></span>

        ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37820-143"><paramref name="sleep1Threshold" />jest mniejsza niż-1.</span><span class="sxs-lookup"><span data-stu-id="37820-143"><paramref name="sleep1Threshold" /> is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpinUntil">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37820-144">Obraca do momentu spełnienia określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="37820-144">Spins until the specified condition is satisfied.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-145">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-145">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-146">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-146">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static void SpinUntil (Func&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinUntil(class System.Func`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinUntil (condition As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinUntil(Func&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; -&gt; unit" Usage="System.Threading.SpinWait.SpinUntil condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="37820-147">Delegat do wykonania do momentu, aż zwróci wartość true.</span><span class="sxs-lookup"><span data-stu-id="37820-147">A delegate to be executed over and over until it returns true.</span></span></param>
        <summary><span data-ttu-id="37820-148">Obraca do momentu spełnienia określonego warunku.</span><span class="sxs-lookup"><span data-stu-id="37820-148">Spins until the specified condition is satisfied.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37820-149"><paramref name="condition" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="37820-149">The <paramref name="condition" /> argument is null.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-150">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-150">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-151">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-151">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * int -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="37820-152">Delegat do wykonania do momentu, aż zwróci wartość true.</span><span class="sxs-lookup"><span data-stu-id="37820-152">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="37820-153">Liczba milisekund oczekiwania lub <see cref="F:System.Threading.Timeout.Infinite" /> (-1) oczekiwania na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="37820-153">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="37820-154">Obraca do momentu spełnienia określonego warunku lub do czasu wygaśnięcia określonego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="37820-154">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="37820-155">Ma wartość true, jeśli warunek jest spełniony w ramach limitu czasu; w przeciwnym razie, FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="37820-155">True if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37820-156"><paramref name="condition" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="37820-156">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37820-157"><paramref name="millisecondsTimeout" />jest liczbą ujemną inną niż-1, co oznacza nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="37820-157"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-158">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-158">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-159">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-159">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * TimeSpan -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="37820-160">Delegat do wykonania do momentu, aż zwróci wartość true.</span><span class="sxs-lookup"><span data-stu-id="37820-160">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="timeout"><span data-ttu-id="37820-161"><see cref="T:System.TimeSpan" /> Reprezentuje liczbę milisekund oczekiwania lub przedział czasu, który reprezentuje-1 milisekund, czeka na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="37820-161">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="37820-162">Obraca do momentu spełnienia określonego warunku lub do czasu wygaśnięcia określonego limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="37820-162">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="37820-163">Ma wartość true, jeśli warunek jest spełniony w ramach limitu czasu; w przeciwnym razie, FAŁSZ</span><span class="sxs-lookup"><span data-stu-id="37820-163">True if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37820-164"><paramref name="condition" /> Argument ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="37820-164">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="37820-165"><paramref name="timeout" />jest liczbą ujemną inną niż-1 milisekund, która reprezentuje nieskończony limit czasu lub limit czasu jest większy niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="37820-165"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="37820-166">SpinWait</span><span class="sxs-lookup"><span data-stu-id="37820-166">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="37820-167">Instrukcje: Korzystanie z Metody SpinWait w celu zaimplementowania dwufazowej operacji oczekiwania</span><span class="sxs-lookup"><span data-stu-id="37820-167">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>