<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SpinWait.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e2e5425f7055155507fb2973f9eabdf58f17784c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2e5425f7055155507fb2973f9eabdf58f17784c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SpinWait">
          <source>Provides support for spin-based waiting.</source>
          <target state="translated">Zapewnia obsługę oczekiwania na podstawie pokrętła.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> encapsulates common spinning logic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> hermetyzuje wspólnej Obracająca logiki.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</source>
          <target state="translated">Na komputerach z jednym procesorem wydajności są zawsze używane zamiast zajęty czeka, i na komputerach z procesorami Intel wykorzystujące technologię Hyper-Threading, pomaga uniknąć zablokowania wątku sprzętu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>SpinWait encapsulates a good mixture of spinning and true yielding.</source>
          <target state="translated">Metody SpinWait hermetyzuje dobrej kombinacja Obracająca i reaguje na wartość true.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> jest to typ wartości, co oznacza kod niższego poziomu mogą wykorzystywać metody SpinWait bez obawy alokacji niepotrzebnych kosztów ogólnych.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>SpinWait is not generally useful for ordinary applications.</source>
          <target state="translated">Metody SpinWait nie jest zazwyczaj przydatne w przypadku zwykłej aplikacji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>In most cases, you should use the synchronization classes provided by the .NET Framework, such as <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph>.</source>
          <target state="translated">W większości przypadków należy używać klas synchronizacji podał programu .NET Framework, takich jak <ph id="ph1">&lt;xref:System.Threading.Monitor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>For most purposes where spin waiting is required, however, the <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> type should be preferred over the <ph id="ph2">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> method.</source>
          <target state="translated">W większości przypadków, w których oczekiwania pokrętła jest wymagane, jednak <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> typu powinny mieć pierwszeństwo nad <ph id="ph2">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph>:</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>While <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> jest przeznaczone do użycia w aplikacjach jednoczesnych, nie ma być używane przez wiele wątków jednocześnie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source><ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> members are not thread-safe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph> elementy członkowskie nie są wątkowo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SpinWait">
          <source>If multiple threads must spin, each should use its own instance of <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph>.</source>
          <target state="translated">Jeśli wiele wątków musi pokrętła, należy używać każdego własne wystąpienie <ph id="ph1">&lt;see cref="T:System.Threading.SpinWait" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Threading.SpinWait.Count">
          <source>Gets the number of times <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> has been called on this instance.</source>
          <target state="translated">Pobiera liczbę razy <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> została wywołana dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.Count">
          <source>Returns an integer that represents the number of times <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> has been called on this instance.</source>
          <target state="translated">Zwraca liczbę całkowitą reprezentującą liczbę <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> została wywołana dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>Gets whether the next call to <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> will yield the processor, triggering a forced context switch.</source>
          <target state="translated">Pobiera czy następne wywołanie <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> umożliwia uzyskanie procesora, wyzwalania przełączanie kontekstu wymuszone.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>Whether the next call to <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> will yield the processor, triggering a forced context switch.</source>
          <target state="translated">Czy następne wywołanie <ph id="ph1">&lt;see cref="M:System.Threading.SpinWait.SpinOnce" /&gt;</ph> umożliwia uzyskanie procesora, wyzwalania przełączanie kontekstu wymuszone.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>On a single-CPU machine, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> always yields the processor.</source>
          <target state="translated">Na komputerze pojedynczego Procesora <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> zawsze daje procesora.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.SpinWait.NextSpinWillYield">
          <source>On machines with multiple CPUs, <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> may yield after an unspecified number of calls.</source>
          <target state="translated">Na komputerach wieloprocesorowych <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> może spowodować po nieokreślony liczby wywołań.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.Reset">
          <source>Resets the spin counter.</source>
          <target state="translated">Resetuje licznik pokrętła.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>This makes <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.SpinWait.NextSpinWillYield%2A&gt;</ph> behave as though no calls to <ph id="ph3">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> had been issued on this instance.</source>
          <target state="translated">Dzięki temu <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Threading.SpinWait.NextSpinWillYield%2A&gt;</ph> działają jako nie wywołania <ph id="ph3">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> wydany dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Threading.SpinWait&gt;</ph> wystąpienie zostanie ponownie użyty wiele razy, może być przydatne do zresetowania go, aby uniknąć reaguje zbyt szybko.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>The following is an example of using SpinWait in a simple lock-free stack implementation.</source>
          <target state="translated">Oto przykład przy użyciu metody SpinWait w implementacji proste stosu bez blokady.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>(This is just an example.</source>
          <target state="translated">(Dotyczy tylko przykładowe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.Reset">
          <source>If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</source>
          <target state="translated">W razie potrzeby stosu wydajne, bezpieczne wątkowo Rozważ użycie obiektu concurrentstack została następującą.)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>Performs a single spin.</source>
          <target state="translated">Wykonuje jeden pokrętła.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>This is typically called in a loop, and may change in behavior based on the number of times a <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> has been called thus far on this instance.</source>
          <target state="translated">To jest zwykle nazywany w pętli i może ulec zmianie w zachowaniu na podstawie liczby razy <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> została wywołana dotychczasowych dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>Each spin results in the <ph id="ph1">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> method being called.</source>
          <target state="translated">Wynikiem każdego pokrętła <ph id="ph1">&lt;xref:System.Threading.Thread.SpinWait%2A&gt;</ph> wywołania metody.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SpinWait.SpinOnce">
          <source>A count is kept of the number of times <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> is called, and after a threshold count is reached, the <ph id="ph2">&lt;xref:System.Threading.Thread.Yield%2A&gt;</ph> method is called.</source>
          <target state="translated">Licznik jest przechowywana liczby razy <ph id="ph1">&lt;xref:System.Threading.SpinWait.SpinOnce%2A&gt;</ph> jest wywoływana, i po osiągnięciu progu liczby <ph id="ph2">&lt;xref:System.Threading.Thread.Yield%2A&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Threading.SpinWait">
          <source>Spins until the specified condition is satisfied.</source>
          <target state="translated">Obraca aż określony warunek jest spełniony.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegat ma być wykonywana samodzielnego aż zwraca wartość true.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>Spins until the specified condition is satisfied.</source>
          <target state="translated">Obraca aż określony warunek jest spełniony.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> Argument ma wartość null.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegat ma być wykonywana samodzielnego aż zwraca wartość true.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Wyrażony w milisekundach czas oczekiwania, lub <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) będzie czekać w nieskończoność.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>Spins until the specified condition is satisfied or until the specified timeout is expired.</source>
          <target state="translated">Obraca do momentu określony warunek jest spełniony lub wygasł określony limit czasu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>True if the condition is satisfied within the timeout; otherwise, false</source>
          <target state="translated">Wartość true, jeśli spełniony jest warunek przed upływem limitu czasu; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> Argument ma wartość null.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> jest to liczba ujemna niż -1, która reprezentuje nieskończony limit czasu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>A delegate to be executed over and over until it returns true.</source>
          <target state="translated">Delegat ma być wykonywana samodzielnego aż zwraca wartość true.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> reprezentujący wyrażony w milisekundach czas oczekiwania, lub element TimeSpan reprezentujący wartość-1 milisekund oczekiwania przez czas nieokreślony.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>Spins until the specified condition is satisfied or until the specified timeout is expired.</source>
          <target state="translated">Obraca do momentu określony warunek jest spełniony lub wygasł określony limit czasu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>True if the condition is satisfied within the timeout; otherwise, false</source>
          <target state="translated">Wartość true, jeśli spełniony jest warunek przed upływem limitu czasu; w przeciwnym razie wartość false.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="condition" /&gt;</ph> argument is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="condition" /&gt;</ph> Argument ma wartość null.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> jest to liczba ujemna niż-1 milisekund, która reprezentuje nieskończonego limitu czasu - lub - limitu czasu jest większy niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>