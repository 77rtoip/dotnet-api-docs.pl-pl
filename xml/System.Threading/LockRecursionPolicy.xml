<Type Name="LockRecursionPolicy" FullName="System.Threading.LockRecursionPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95b114e85c2b87b1b63dfc17d45647b87dc6c714" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37548750" /></Metadata><TypeSignature Language="C#" Value="public enum LockRecursionPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LockRecursionPolicy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.LockRecursionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LockRecursionPolicy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LockRecursionPolicy" />
  <TypeSignature Language="F#" Value="type LockRecursionPolicy = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="77c1e-101">Określa, czy blokada można wprowadzić wiele razy przy tym samym wątku.</span><span class="sxs-lookup"><span data-stu-id="77c1e-101">Specifies whether a lock can be entered multiple times by the same thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77c1e-102">Domyślne zasady rekursji, zależy od typu blokady.</span><span class="sxs-lookup"><span data-stu-id="77c1e-102">The default recursion policy depends on the type of lock.</span></span> <span data-ttu-id="77c1e-103">Domyślne zasady i dokładne zachowanie blokady rekursji dla dowolnego typu danej blokady Zobacz dokumentację dla typu.</span><span class="sxs-lookup"><span data-stu-id="77c1e-103">For the default policy and the precise behavior of lock recursion for any given lock type, see the documentation for the type.</span></span> <span data-ttu-id="77c1e-104">Na przykład <xref:System.Threading.ReaderWriterLockSlim> klasy nie zezwala na wątku w celu wprowadź blokada w trybie zapisu, jeśli jest on już wprowadzone blokada w trybie do odczytu, bez względu na ustawienie zasad blokady, aby zmniejszyć ryzyko zakleszczenia.</span><span class="sxs-lookup"><span data-stu-id="77c1e-104">For example, the <xref:System.Threading.ReaderWriterLockSlim> class does not allow a thread to enter the lock in write mode if it already entered the lock in read mode, regardless of the lock policy setting, in order to reduce the chance of deadlocks.</span></span>  
  
 <span data-ttu-id="77c1e-105">Obecnie, tylko jedną blokadę używa tego wyliczenia:</span><span class="sxs-lookup"><span data-stu-id="77c1e-105">Currently only one lock uses this enumeration:</span></span>  
  
-   <span data-ttu-id="77c1e-106"><xref:System.Threading.ReaderWriterLockSlim>.</span><span class="sxs-lookup"><span data-stu-id="77c1e-106"><xref:System.Threading.ReaderWriterLockSlim>.</span></span> <span data-ttu-id="77c1e-107">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="77c1e-107">For more information, see the <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77c1e-108">W poniższym przykładzie pokazano dwa scenariusze wyjątek, który jest zależny od <xref:System.Threading.LockRecursionPolicy> ustawienie i jedną, która nie ma.</span><span class="sxs-lookup"><span data-stu-id="77c1e-108">The following example shows two exception scenarios, one that depends on the <xref:System.Threading.LockRecursionPolicy> setting and one that does not.</span></span>  
  
 <span data-ttu-id="77c1e-109">W pierwszego scenariusza wątek wprowadza blokada w trybie do odczytu, a następnie próbuje wprowadzić cyklicznie w trybie do odczytu.</span><span class="sxs-lookup"><span data-stu-id="77c1e-109">In the first scenario, the thread enters the lock in read mode and then tries to enter read mode recursively.</span></span> <span data-ttu-id="77c1e-110">Jeśli <xref:System.Threading.ReaderWriterLockSlim> jest tworzony przy użyciu konstruktora domyślnego, który ustawia zasady rekursji NoRecursion, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="77c1e-110">If the <xref:System.Threading.ReaderWriterLockSlim> is created by using the default constructor, which sets recursion policy to NoRecursion, an exception is thrown.</span></span> <span data-ttu-id="77c1e-111">Jeśli SupportsRecursion służy do tworzenia <xref:System.Threading.ReaderWriterLockSlim>, jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="77c1e-111">If SupportsRecursion is used to create the <xref:System.Threading.ReaderWriterLockSlim>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="77c1e-112">W drugim scenariuszu wątku wprowadza blokada w trybie do odczytu, a następnie próbuje wprowadzić blokada w trybie zapisu.</span><span class="sxs-lookup"><span data-stu-id="77c1e-112">In the second scenario, the thread enters the lock in read mode and then tries to enter the lock in write mode.</span></span> <span data-ttu-id="77c1e-113"><xref:System.Threading.LockRecursionException> jest generowany, niezależnie od tego, zasady rekursji blokady.</span><span class="sxs-lookup"><span data-stu-id="77c1e-113"><xref:System.Threading.LockRecursionException> is thrown regardless of the lock recursion policy.</span></span>  
  
 [!code-csharp[System.Threading.LockRecursionPolicy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/cs/example1.cs#1)]
 [!code-vb[System.Threading.LockRecursionPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoRecursion">
      <MemberSignature Language="C#" Value="NoRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy NoRecursion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberSignature Language="VB.NET" Value="NoRecursion" />
      <MemberSignature Language="C++ CLI" Value="NoRecursion" />
      <MemberSignature Language="F#" Value="NoRecursion = 0" Usage="System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="77c1e-114">Jeśli wątek próbuje wprowadzić rekursywnie blokady, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="77c1e-114">If a thread tries to enter a lock recursively, an exception is thrown.</span></span> <span data-ttu-id="77c1e-115">Niektóre klasy może umożliwić niektórych rekursje, gdy to ustawienie jest aktywna.</span><span class="sxs-lookup"><span data-stu-id="77c1e-115">Some classes may allow certain recursions when this setting is in effect.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsRecursion">
      <MemberSignature Language="C#" Value="SupportsRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy SupportsRecursion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberSignature Language="VB.NET" Value="SupportsRecursion" />
      <MemberSignature Language="C++ CLI" Value="SupportsRecursion" />
      <MemberSignature Language="F#" Value="SupportsRecursion = 1" Usage="System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="77c1e-116">Wątek można wprowadzić rekursywnie blokady.</span><span class="sxs-lookup"><span data-stu-id="77c1e-116">A thread can enter a lock recursively.</span></span> <span data-ttu-id="77c1e-117">Ta funkcja może ograniczyć dostęp niektórych klas.</span><span class="sxs-lookup"><span data-stu-id="77c1e-117">Some classes may restrict this capability.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>