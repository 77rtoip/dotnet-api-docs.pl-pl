<Type Name="LockRecursionPolicy" FullName="System.Threading.LockRecursionPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe9e72b040cba4c878667a21d3545bbb03d217fc" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68393504" /></Metadata><TypeSignature Language="C#" Value="public enum LockRecursionPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LockRecursionPolicy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.LockRecursionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LockRecursionPolicy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LockRecursionPolicy" />
  <TypeSignature Language="F#" Value="type LockRecursionPolicy = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b7ec2-101">Określa, czy blokadę można wprowadzać wiele razy przez ten sam wątek.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-101">Specifies whether a lock can be entered multiple times by the same thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7ec2-102">Domyślne zasady rekursji zależą od typu blokady.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-102">The default recursion policy depends on the type of lock.</span></span> <span data-ttu-id="b7ec2-103">W przypadku zasad domyślnych i precyzyjnego zachowania rekursji blokady dla dowolnego typu blokady zapoznaj się z dokumentacją dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-103">For the default policy and the precise behavior of lock recursion for any given lock type, see the documentation for the type.</span></span> <span data-ttu-id="b7ec2-104">Na przykład <xref:System.Threading.ReaderWriterLockSlim> Klasa nie zezwala wątku na wprowadzanie blokady w trybie zapisu, jeśli już wprowadzono blokadę w trybie odczytu, niezależnie od ustawienia zasad blokowania, aby zmniejszyć prawdopodobieństwo zakleszczenia.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-104">For example, the <xref:System.Threading.ReaderWriterLockSlim> class does not allow a thread to enter the lock in write mode if it already entered the lock in read mode, regardless of the lock policy setting, in order to reduce the chance of deadlocks.</span></span>  
  
 <span data-ttu-id="b7ec2-105">Obecnie tylko jedna blokada używa tego wyliczenia:</span><span class="sxs-lookup"><span data-stu-id="b7ec2-105">Currently only one lock uses this enumeration:</span></span>  
  
-   <span data-ttu-id="b7ec2-106"><xref:System.Threading.ReaderWriterLockSlim>.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-106"><xref:System.Threading.ReaderWriterLockSlim>.</span></span> <span data-ttu-id="b7ec2-107">Aby uzyskać więcej informacji, zobacz <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-107">For more information, see the <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7ec2-108">W poniższym przykładzie przedstawiono dwa scenariusze wyjątków, które są zależne od <xref:System.Threading.LockRecursionPolicy> ustawienia i jeden z nich.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-108">The following example shows two exception scenarios, one that depends on the <xref:System.Threading.LockRecursionPolicy> setting and one that does not.</span></span>  
  
 <span data-ttu-id="b7ec2-109">W pierwszym scenariuszu wątek przechodzi do blokady w trybie odczytu, a następnie próbuje przejść w tryb odczytu cyklicznie.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-109">In the first scenario, the thread enters the lock in read mode and then tries to enter read mode recursively.</span></span> <span data-ttu-id="b7ec2-110"><xref:System.Threading.ReaderWriterLockSlim> Jeśli jest tworzony przy użyciu konstruktora bez parametrów, który ustawia zasady rekursji na norekursję, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-110">If the <xref:System.Threading.ReaderWriterLockSlim> is created by using the parameterless constructor, which sets recursion policy to NoRecursion, an exception is thrown.</span></span> <span data-ttu-id="b7ec2-111">Jeśli SupportsRecursion jest używany do tworzenia <xref:System.Threading.ReaderWriterLockSlim>, nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-111">If SupportsRecursion is used to create the <xref:System.Threading.ReaderWriterLockSlim>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="b7ec2-112">W drugim scenariuszu wątek przechodzi do blokady w trybie odczytu, a następnie próbuje wprowadzić blokadę w trybie zapisu.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-112">In the second scenario, the thread enters the lock in read mode and then tries to enter the lock in write mode.</span></span> <span data-ttu-id="b7ec2-113"><xref:System.Threading.LockRecursionException>jest zgłaszany niezależnie od zasad rekursji blokady.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-113"><xref:System.Threading.LockRecursionException> is thrown regardless of the lock recursion policy.</span></span>  
  
 [!code-csharp[System.Threading.LockRecursionPolicy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/cs/example1.cs#1)]
 [!code-vb[System.Threading.LockRecursionPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoRecursion">
      <MemberSignature Language="C#" Value="NoRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy NoRecursion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberSignature Language="VB.NET" Value="NoRecursion" />
      <MemberSignature Language="C++ CLI" Value="NoRecursion" />
      <MemberSignature Language="F#" Value="NoRecursion = 0" Usage="System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b7ec2-114">Jeśli wątek próbuje wprowadzić blokadę cyklicznie, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-114">If a thread tries to enter a lock recursively, an exception is thrown.</span></span> <span data-ttu-id="b7ec2-115">Niektóre klasy mogą zezwalać na niektóre rekursywnie, gdy to ustawienie jest włączone.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-115">Some classes may allow certain recursions when this setting is in effect.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsRecursion">
      <MemberSignature Language="C#" Value="SupportsRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy SupportsRecursion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberSignature Language="VB.NET" Value="SupportsRecursion" />
      <MemberSignature Language="C++ CLI" Value="SupportsRecursion" />
      <MemberSignature Language="F#" Value="SupportsRecursion = 1" Usage="System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b7ec2-116">Wątek można cyklicznie wprowadzić blokadę.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-116">A thread can enter a lock recursively.</span></span> <span data-ttu-id="b7ec2-117">Niektóre klasy mogą ograniczać tę możliwość.</span><span class="sxs-lookup"><span data-stu-id="b7ec2-117">Some classes may restrict this capability.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>