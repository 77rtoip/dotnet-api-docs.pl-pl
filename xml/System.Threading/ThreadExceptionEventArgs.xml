<Type Name="ThreadExceptionEventArgs" FullName="System.Threading.ThreadExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a54cf75e4e0c0ef07c0b66ac63e218532b41785d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadExceptionEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cc67a-101">Udostępnia dane dla <see cref="E:System.Windows.Forms.Application.ThreadException" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc67a-101">Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc67a-102">A <xref:System.Threading.ThreadExceptionEventArgs> jest tworzony przez wątek, gdy wystąpi nieobsługiwany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc67a-102">A <xref:System.Threading.ThreadExceptionEventArgs> is created by a thread when an unhandled exception occurs.</span></span> <span data-ttu-id="cc67a-103"><xref:System.Threading.ThreadExceptionEventArgs> zawiera <xref:System.Exception> który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="cc67a-103"><xref:System.Threading.ThreadExceptionEventArgs> contains the <xref:System.Exception> that occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc67a-104">Poniższy przykład umożliwia wywoływanie <xref:System.Windows.Forms.Application.ThreadException> zdarzeń, klikając `button1` w formularzu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-104">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="cc67a-105">W przykładzie jest tworzony dwóch klas.</span><span class="sxs-lookup"><span data-stu-id="cc67a-105">The example creates two classes.</span></span> <span data-ttu-id="cc67a-106">`ErrorHandler` Klasy tworzy formularz i przycisku, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="cc67a-106">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="cc67a-107">`CustomExceptionHandler` Klasa dostarcza metody do obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cc67a-107">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="cc67a-108">W `Main` w `ErrorHandler` klasy, kod tworzy nowe wystąpienie klasy, czyli obsługi wyjątków wystąpienia `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="cc67a-108">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="cc67a-109">Wystąpienie jest dodawane do zdarzenia, a aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="cc67a-109">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="cc67a-110">W `OnThreadException` metody w `CustomExceptionHandler` klasy, w przykładzie użyto `try...catch...finally` instrukcji przetwarzania wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc67a-110">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="cc67a-111">`ShowThreadExceptionDialog` Metoda tworzy komunikat do wyświetlenia i wyświetla je w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-111">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.ThreadExceptionEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadExceptionEventArgs (Exception t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadExceptionEventArgs(Exception ^ t);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="cc67a-112">
            <see cref="T:System.Exception" /> Który wystąpił.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc67a-112">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cc67a-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.ThreadExceptionEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc67a-113">Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc67a-114">Poniższy przykład umożliwia wywoływanie <xref:System.Windows.Forms.Application.ThreadException> zdarzeń, klikając `button1` w formularzu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-114">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="cc67a-115">W przykładzie jest tworzony dwóch klas.</span><span class="sxs-lookup"><span data-stu-id="cc67a-115">The example creates two classes.</span></span> <span data-ttu-id="cc67a-116">`ErrorHandler` Klasy tworzy formularz i przycisku, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="cc67a-116">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="cc67a-117">`CustomExceptionHandler` Klasa dostarcza metody do obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cc67a-117">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="cc67a-118">W `Main` w `ErrorHandler` klasy, kod tworzy nowe wystąpienie klasy, czyli obsługi wyjątków wystąpienia `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="cc67a-118">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="cc67a-119">Wystąpienie jest dodawane do zdarzenia, a aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="cc67a-119">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="cc67a-120">W `OnThreadException` metody w `CustomExceptionHandler` klasy, w przykładzie użyto `try...catch...finally` instrukcji przetwarzania wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc67a-120">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="cc67a-121">`ShowThreadExceptionDialog` Metoda tworzy komunikat do wyświetlenia i wyświetla je w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-121">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="T:System.Threading.ThreadStart" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc67a-122">Pobiera <see cref="T:System.Exception" /> który wystąpił.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc67a-122">Gets the <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc67a-123">
            <see cref="T:System.Exception" /> Który wystąpił.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc67a-123">The <see cref="T:System.Exception" /> that occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cc67a-124">Poniższy przykład umożliwia wywoływanie <xref:System.Windows.Forms.Application.ThreadException> zdarzeń, klikając `button1` w formularzu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-124">The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form.</span></span> <span data-ttu-id="cc67a-125">W przykładzie jest tworzony dwóch klas.</span><span class="sxs-lookup"><span data-stu-id="cc67a-125">The example creates two classes.</span></span> <span data-ttu-id="cc67a-126">`ErrorHandler` Klasy tworzy formularz i przycisku, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="cc67a-126">The `ErrorHandler` class creates the form and the button that raises the event.</span></span> <span data-ttu-id="cc67a-127">`CustomExceptionHandler` Klasa dostarcza metody do obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cc67a-127">The `CustomExceptionHandler` class provides the methods to handle the exception.</span></span>  
  
 <span data-ttu-id="cc67a-128">W `Main` w `ErrorHandler` klasy, kod tworzy nowe wystąpienie klasy, czyli obsługi wyjątków wystąpienia `CustomExceptionHandler`.</span><span class="sxs-lookup"><span data-stu-id="cc67a-128">In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`.</span></span> <span data-ttu-id="cc67a-129">Wystąpienie jest dodawane do zdarzenia, a aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="cc67a-129">Then the instance is added to the event, and the application is run.</span></span>  
  
 <span data-ttu-id="cc67a-130">W `OnThreadException` metody w `CustomExceptionHandler` klasy, w przykładzie użyto `try...catch...finally` instrukcji przetwarzania wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cc67a-130">In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception.</span></span> <span data-ttu-id="cc67a-131">`ShowThreadExceptionDialog` Metoda tworzy komunikat do wyświetlenia i wyświetla je w oknie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="cc67a-131">The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.</span></span>  
  
 [!code-csharp[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ThreadExceptionEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>