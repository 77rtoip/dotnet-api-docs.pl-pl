<Type Name="ManualResetEventSlim" FullName="System.Threading.ManualResetEventSlim">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5248c3c063a15c2bc461ce02f6e57a727c1eff7" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58874634" /></Metadata><TypeSignature Language="C#" Value="public class ManualResetEventSlim : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManualResetEventSlim extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ManualResetEventSlim" />
  <TypeSignature Language="VB.NET" Value="Public Class ManualResetEventSlim&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManualResetEventSlim : IDisposable" />
  <TypeSignature Language="F#" Value="type ManualResetEventSlim = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Set = {IsSet}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13220-101">Reprezentuje zdarzenie synchronizacji wątków, gdy sygnalizowane, można ręcznie zresetować.</span><span class="sxs-lookup"><span data-stu-id="13220-101">Represents a thread synchronization event that, when signaled, must be reset manually.</span></span> <span data-ttu-id="13220-102">Ta klasa jest uproszczone zamiast <see cref="T:System.Threading.ManualResetEvent" />.</span><span class="sxs-lookup"><span data-stu-id="13220-102">This class is a lightweight alternative to <see cref="T:System.Threading.ManualResetEvent" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-103">Można użyć tej klasy, aby uzyskać lepszą wydajność niż <xref:System.Threading.ManualResetEvent> spodziewane czasy oczekiwania będą bardzo krótkie, a zdarzenia przechodzą granica procesu.</span><span class="sxs-lookup"><span data-stu-id="13220-103">You can use this class for better performance than <xref:System.Threading.ManualResetEvent> when wait times are expected to be very short, and when the event does not cross a process boundary.</span></span> <xref:System.Threading.ManualResetEventSlim> <span data-ttu-id="13220-104">używa zajęty, obracanie przez krótki czas podczas oczekiwania na zdarzenie zostało zasygnalizowane.</span><span class="sxs-lookup"><span data-stu-id="13220-104">uses busy spinning for a short time while it waits for the event to become signaled.</span></span> <span data-ttu-id="13220-105">W przypadku krótkie czasy oczekiwania rotowania może być znacznie mniej kosztowne niż za pomocą uchwytów oczekiwania.</span><span class="sxs-lookup"><span data-stu-id="13220-105">When wait times are short, spinning can be much less expensive than waiting by using wait handles.</span></span> <span data-ttu-id="13220-106">Jednakże, jeśli zdarzenie nie zasygnalizowane w przedziale czasu, <xref:System.Threading.ManualResetEventSlim> sortuje ponownie do oczekiwania uchwyt wydarzeń.</span><span class="sxs-lookup"><span data-stu-id="13220-106">However, if the event does not become signaled within a certain period of time, <xref:System.Threading.ManualResetEventSlim> resorts to a regular event handle wait.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13220-107">Poniższy przykład pokazuje, jak używać <xref:System.Threading.ManualResetEventSlim>.</span><span class="sxs-lookup"><span data-stu-id="13220-107">The following example shows how to use a <xref:System.Threading.ManualResetEventSlim>.</span></span>
  
 [!code-csharp[System.Threading.ManualResetEventSlim#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.manualreseteventslim/cs/mres.cs#01)]
 [!code-vb[System.Threading.ManualResetEventSlim#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.manualreseteventslim/vb/mres.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="13220-108">Wszystkie publiczne i chronione elementy członkowskie <see cref="T:System.Threading.ManualResetEventSlim" /> są odporne na wątki i mogą być używane jednocześnie z wielu wątków, z wyjątkiem usuwania, który musi składać się wyłącznie używane podczas wszystkich operacji na <see cref="T:System.Threading.ManualResetEventSlim" /> ukończone, a zresetować, dlaczego warto można używać tylko gdy nie ma innych wątków uzyskują dostęp do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13220-108">All public and protected members of <see cref="T:System.Threading.ManualResetEventSlim" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.ManualResetEventSlim" /> have completed, and Reset, which should only be used when no other threads are accessing the event.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-109">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-109">Overview of synchronization primitives</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13220-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.ManualResetEventSlim" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="13220-110">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span></span></summary>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-111">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-111">Overview of synchronization primitives</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13220-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.ManualResetEventSlim" /> klasie z atrybutem początkowy stan nonsignaled.</span><span class="sxs-lookup"><span data-stu-id="13220-112">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with an initial state of nonsignaled.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-113">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-113">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim (bool initialState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim(bool initialState);" />
      <MemberSignature Language="F#" Value="new System.Threading.ManualResetEventSlim : bool -&gt; System.Threading.ManualResetEventSlim" Usage="new System.Threading.ManualResetEventSlim initialState" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="13220-114">wartość true, aby ustawić stan początkowy sygnalizowane; wartość false, aby ustawić stan początkowy nonsignaled.</span><span class="sxs-lookup"><span data-stu-id="13220-114">true to set the initial state signaled; false to set the initial state to nonsignaled.</span></span></param>
        <summary><span data-ttu-id="13220-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.ManualResetEventSlim" /> klasie z atrybutem wartość logiczną wskazującą, czy należy ustawić stan początkowy sygnalizowanego.</span><span class="sxs-lookup"><span data-stu-id="13220-115">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with a Boolean value indicating whether to set the initial state to signaled.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-116">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-116">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim (bool initialState, int spinCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, int32 spinCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, spinCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim(bool initialState, int spinCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.ManualResetEventSlim : bool * int -&gt; System.Threading.ManualResetEventSlim" Usage="new System.Threading.ManualResetEventSlim (initialState, spinCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="spinCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialState"><span data-ttu-id="13220-117">wartość true, ustaw początkowy stan do sygnalizowane; wartość false, aby ustawić stan początkowy nonsignaled.</span><span class="sxs-lookup"><span data-stu-id="13220-117">true to set the initial state to signaled; false to set the initial state to nonsignaled.</span></span></param>
        <param name="spinCount"><span data-ttu-id="13220-118">Liczba czeka pokrętła, występujących przed powrotem do operacji oczekiwania na podstawie jądra.</span><span class="sxs-lookup"><span data-stu-id="13220-118">The number of spin waits that will occur before falling back to a kernel-based wait operation.</span></span></param>
        <summary><span data-ttu-id="13220-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Threading.ManualResetEventSlim" /> klasie z atrybutem wartość logiczną wskazującą, czy należy ustawić stan początkowy sygnalizowanego oraz liczność określona pokrętła.</span><span class="sxs-lookup"><span data-stu-id="13220-119">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with a Boolean value indicating whether to set the initial state to signaled and a specified spin count.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="spinCount" /> <span data-ttu-id="13220-120">jest mniejszy niż 0 lub większa niż maksymalna dozwolona wartość.</span><span class="sxs-lookup"><span data-stu-id="13220-120">is less than 0 or greater than the maximum allowed value.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-121">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-121">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13220-122">Zwalnia zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.ManualResetEventSlim" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="13220-122">Releases resources used by the current instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span></span></summary>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-123">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-123">Overview of synchronization primitives</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="manualResetEventSlim.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13220-124">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Threading.ManualResetEventSlim" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="13220-124">Releases all resources used by the current instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-125">Wywołaj `Dispose` po zakończeniu przy użyciu <xref:System.Threading.ManualResetEventSlim>.</span><span class="sxs-lookup"><span data-stu-id="13220-125">Call `Dispose` when you are finished using the <xref:System.Threading.ManualResetEventSlim>.</span></span> <span data-ttu-id="13220-126">`Dispose` Pozostawia metoda <xref:System.Threading.ManualResetEventSlim> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="13220-126">The `Dispose` method leaves the <xref:System.Threading.ManualResetEventSlim> in an unusable state.</span></span> <span data-ttu-id="13220-127">Po wywołaniu `Dispose`, trzeba zwolnić wszystkie odwołania do <xref:System.Threading.ManualResetEventSlim> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Threading.ManualResetEventSlim> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="13220-127">After calling `Dispose`, you must release all references to the <xref:System.Threading.ManualResetEventSlim> so the garbage collector can reclaim the memory that the <xref:System.Threading.ManualResetEventSlim> was occupying.</span></span>  
  
 <span data-ttu-id="13220-128">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="13220-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13220-129">Zawsze wywołuj `Dispose` przed publikacją swoje ostatnie odwołanie do <xref:System.Threading.ManualResetEventSlim>.</span><span class="sxs-lookup"><span data-stu-id="13220-129">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ManualResetEventSlim>.</span></span> <span data-ttu-id="13220-130">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Threading.ManualResetEventSlim> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="13220-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ManualResetEventSlim> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-131">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-131">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="manualResetEventSlim.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="13220-132">Wartość true zwalnia zasoby zarządzane i niezarządzane; wartość false zwalnia tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="13220-132">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="13220-133">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Threading.ManualResetEventSlim" />i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="13220-133">Releases the unmanaged resources used by the <see cref="T:System.Threading.ManualResetEventSlim" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-134">W przeciwieństwie do większości elementów członkowskich <xref:System.Threading.ManualResetEventSlim>, <xref:System.Threading.ManualResetEventSlim.Dispose%2A> nie jest metodą o bezpiecznych wątkach i nie mogą być używane równocześnie z innymi członkami tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="13220-134">Unlike most of the members of <xref:System.Threading.ManualResetEventSlim>, <xref:System.Threading.ManualResetEventSlim.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-135">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-135">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSet : bool" Usage="System.Threading.ManualResetEventSlim.IsSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13220-136">Pobiera informacje, czy zdarzenie jest ustawione.</span><span class="sxs-lookup"><span data-stu-id="13220-136">Gets whether the event is set.</span></span></summary>
        <value><span data-ttu-id="13220-137">wartość true, jeśli zdarzenie jest ustawiony. w przeciwnym razie wartość false.</span><span class="sxs-lookup"><span data-stu-id="13220-137">true if the event is set; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-138">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-138">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="manualResetEventSlim.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13220-139">Ustawia stan zdarzenia w celu nonsignaled, co powoduje, że wątki w celu blokowania.</span><span class="sxs-lookup"><span data-stu-id="13220-139">Sets the state of the event to nonsignaled, which causes threads to block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.ManualResetEventSlim.Reset%2A> <span data-ttu-id="13220-140">może być wywoływana wątkom wszystkie elementy członkowskie z wyjątkiem <xref:System.Threading.ManualResetEventSlim.WaitHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="13220-140">can be called concurrently with all members except <xref:System.Threading.ManualResetEventSlim.WaitHandle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-141">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-141">The object has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-142">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-142">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Set" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set();" />
      <MemberSignature Language="F#" Value="member this.Set : unit -&gt; unit" Usage="manualResetEventSlim.Set " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13220-143">Ustawia stan zdarzenia, które ma być zasygnalizowany, co pozwala jeden lub więcej wątków oczekujących aż zdarzenie, aby kontynuować.</span><span class="sxs-lookup"><span data-stu-id="13220-143">Sets the state of the event to signaled, which allows one or more threads waiting on the event to proceed.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-144">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-144">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinCount">
      <MemberSignature Language="C#" Value="public int SpinCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SpinCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.SpinCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpinCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SpinCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SpinCount : int" Usage="System.Threading.ManualResetEventSlim.SpinCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13220-145">Pobiera liczbę czeka pokrętła, występujących przed powrotem do operacji oczekiwania na podstawie jądra.</span><span class="sxs-lookup"><span data-stu-id="13220-145">Gets the number of spin waits that will occur before falling back to a kernel-based wait operation.</span></span></summary>
        <value><span data-ttu-id="13220-146">Zwraca liczbę czeka pokrętła, występujących przed powrotem do operacji oczekiwania na podstawie jądra.</span><span class="sxs-lookup"><span data-stu-id="13220-146">Returns the number of spin waits that will occur before falling back to a kernel-based wait operation.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-147">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-147">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13220-148">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="13220-148">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set.</span></span></summary>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-149">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-149">Overview of synchronization primitives</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; unit" Usage="manualResetEventSlim.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13220-150">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="13220-150">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-151">Obiekt wywołujący bloków tej metody na czas nieokreślony, dopóki nie zostanie ustawiony bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="13220-151">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="13220-152">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</span><span class="sxs-lookup"><span data-stu-id="13220-152">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-153">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-153">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-154">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-154">The object has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-155">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-155">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : int -&gt; bool" Usage="manualResetEventSlim.Wait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="13220-156">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" />(-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="13220-156">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="13220-157">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> została ustawiona. całkowita 32-bitowego do mierzenia przedział czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-157">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a 32-bit signed integer to measure the time interval.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="13220-158">Jeśli <see cref="T:System.Threading.ManualResetEventSlim" /> został ustawiony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13220-158">if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="millisecondsTimeout" /> <span data-ttu-id="13220-159">jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-159">is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-160">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-160">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-161">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-161">The object has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-162">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-162">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : System.Threading.CancellationToken -&gt; unit" Usage="manualResetEventSlim.Wait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="13220-163"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="13220-163">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="13220-164">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> odbiera sygnał, obserwując <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="13220-164">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> receives a signal, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-165">Obiekt wywołujący bloków tej metody na czas nieokreślony, dopóki nie zostanie ustawiony bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="13220-165">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="13220-166">Obiekt wywołujący zwróci natychmiast, jeśli zdarzenie jest obecnie w stanie zestawu.</span><span class="sxs-lookup"><span data-stu-id="13220-166">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-167">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-167">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><paramref name="cancellationToken" /> <span data-ttu-id="13220-168">zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="13220-168">was canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-169">Obiekt został już usunięty lub <see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-169">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-170">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-170">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; bool" Usage="manualResetEventSlim.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="13220-171">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="13220-171">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="13220-172">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> jest ustawiony, za pomocą <see cref="T:System.TimeSpan" /> do mierzenia przedział czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-172">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="13220-173">Jeśli <see cref="T:System.Threading.ManualResetEventSlim" /> został ustawiony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13220-173">if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> <span data-ttu-id="13220-174">jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-174">is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="13220-175">—lub—</span><span class="sxs-lookup"><span data-stu-id="13220-175">-or-</span></span> 
<span data-ttu-id="13220-176">Liczba milisekund w <paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13220-176">The number of milliseconds in <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-177">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-177">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-178">Obiekt został już usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-178">The object has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-179">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-179">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : int * System.Threading.CancellationToken -&gt; bool" Usage="manualResetEventSlim.Wait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="13220-180">Liczba milisekund, lub <see cref="F:System.Threading.Timeout.Infinite" />(-1), aby czekać w nieskończoność.</span><span class="sxs-lookup"><span data-stu-id="13220-180">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="13220-181"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="13220-181">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="13220-182">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> została ustawiona. całkowita 32-bitowego do mierzenia przedział czasu, obserwując <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="13220-182">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="13220-183">Jeśli <see cref="T:System.Threading.ManualResetEventSlim" /> został ustawiony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13220-183">if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><paramref name="cancellationToken" /> <span data-ttu-id="13220-184">zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="13220-184">was canceled.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="millisecondsTimeout" /> <span data-ttu-id="13220-185">jest liczbą ujemną od-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-185">is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-186">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-186">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-187">Obiekt został już usunięty lub <see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-187">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-188">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-188">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="manualResetEventSlim.Wait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="13220-189">A <see cref="T:System.TimeSpan" /> reprezentujący liczbę milisekund oczekiwania, lub <see cref="T:System.TimeSpan" /> reprezentujący milisekund czekać w nieskończoność,-1.</span><span class="sxs-lookup"><span data-stu-id="13220-189">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="13220-190"><see cref="T:System.Threading.CancellationToken" /> Do obserwowania.</span><span class="sxs-lookup"><span data-stu-id="13220-190">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="13220-191">Blokuje bieżący wątek do bieżącego <see cref="T:System.Threading.ManualResetEventSlim" /> jest ustawiony, za pomocą <see cref="T:System.TimeSpan" /> do mierzenia przedział czasu, obserwując <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="13220-191">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><see langword="true" /> <span data-ttu-id="13220-192">Jeśli <see cref="T:System.Threading.ManualResetEventSlim" /> został ustawiony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13220-192">if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><paramref name="cancellationToken" /> <span data-ttu-id="13220-193">zostało anulowane.</span><span class="sxs-lookup"><span data-stu-id="13220-193">was canceled.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> <span data-ttu-id="13220-194">jest to liczba ujemna innych niż milisekund wartości-1, który reprezentuje nieskończony limit czasu.</span><span class="sxs-lookup"><span data-stu-id="13220-194">is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span> 
<span data-ttu-id="13220-195">—lub—</span><span class="sxs-lookup"><span data-stu-id="13220-195">-or-</span></span> 
<span data-ttu-id="13220-196">Liczba milisekund w <paramref name="timeout" /> jest większa niż <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="13220-196">The number of milliseconds in <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13220-197">Przekroczono maksymalną liczbę obiekty.</span><span class="sxs-lookup"><span data-stu-id="13220-197">The maximum number of waiters has been exceeded.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="13220-198">Obiekt został już usunięty lub <see cref="T:System.Threading.CancellationTokenSource" /> utworzonego <paramref name="cancellationToken" /> został usunięty.</span><span class="sxs-lookup"><span data-stu-id="13220-198">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-199">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-199">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WaitHandle : System.Threading.WaitHandle" Usage="System.Threading.ManualResetEventSlim.WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13220-200">Pobiera podstawowe <see cref="T:System.Threading.WaitHandle" /> obiektu dla tej <see cref="T:System.Threading.ManualResetEventSlim" />.</span><span class="sxs-lookup"><span data-stu-id="13220-200">Gets the underlying <see cref="T:System.Threading.WaitHandle" /> object for this <see cref="T:System.Threading.ManualResetEventSlim" />.</span></span></summary>
        <value><span data-ttu-id="13220-201">Podstawowe <see cref="T:System.Threading.WaitHandle" /> obiektu zdarzenia fore to <see cref="T:System.Threading.ManualResetEventSlim" />.</span><span class="sxs-lookup"><span data-stu-id="13220-201">The underlying <see cref="T:System.Threading.WaitHandle" /> event object fore this <see cref="T:System.Threading.ManualResetEventSlim" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13220-202">Dostęp do tej właściwości wymusza inicjowania obiektu bazowego zdarzenia, jeśli jeden nie zostało już utworzone.</span><span class="sxs-lookup"><span data-stu-id="13220-202">Accessing this property forces initialization of an underlying event object if one hasn't already been created.</span></span> <span data-ttu-id="13220-203">Po prostu oczekiwania na tym <xref:System.Threading.ManualResetEventSlim>, metody publiczne oczekiwania powinny być preferowane.</span><span class="sxs-lookup"><span data-stu-id="13220-203">To simply wait on this <xref:System.Threading.ManualResetEventSlim>, the public Wait methods should be preferred.</span></span> <span data-ttu-id="13220-204">Zaleca się usuwania <xref:System.Threading.ManualResetEventSlim> wystąpienie po uzyskaniu dostępu do tej właściwości, aby uniknąć przecieku zasobów.</span><span class="sxs-lookup"><span data-stu-id="13220-204">It is recommended to dispose the <xref:System.Threading.ManualResetEventSlim> instance after accessing this property, in order to prevent a resource leak.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md"><span data-ttu-id="13220-205">Przegląd elementów podstawowych synchronizacji</span><span class="sxs-lookup"><span data-stu-id="13220-205">Overview of synchronization primitives</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>