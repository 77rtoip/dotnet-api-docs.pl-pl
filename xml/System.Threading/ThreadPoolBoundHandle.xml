<Type Name="ThreadPoolBoundHandle" FullName="System.Threading.ThreadPoolBoundHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="961a8fb7abc8eaeeddeeea04c397e2f12cf020dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThreadPoolBoundHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThreadPoolBoundHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadPoolBoundHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadPoolBoundHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadPoolBoundHandle sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadPoolBoundHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7b6d5-101">Reprezentuje dojścia we/wy, który jest powiązany z puli wątków systemu i umożliwia składniki niskiego poziomu otrzymywać powiadomienia dla asynchronicznych operacji We/Wy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b6d5-101">Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AllocateNativeOverlapped">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7b6d5-102">Zwraca niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-102">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped preAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.PreAllocatedOverlapped preAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::PreAllocatedOverlapped ^ preAllocated);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.PreAllocatedOverlapped -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped preAllocated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preAllocated" Type="System.Threading.PreAllocatedOverlapped" />
      </Parameters>
      <Docs>
        <param name="preAllocated">
          <span data-ttu-id="7b6d5-103">Obiekt, z którym ma zostać utworzony <see cref="T:System.Threading.NativeOverlapped" /> wskaźnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-103">An object from which to create the <see cref="T:System.Threading.NativeOverlapped" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b6d5-104">Zwraca niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury przy użyciu stan wywołania zwrotnego i buforów skojarzonego z określonym <see cref="T:System.Threading.PreAllocatedOverlapped" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-104">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure using the callback state and buffers associated with the specified <see cref="T:System.Threading.PreAllocatedOverlapped" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b6d5-105">Niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-105">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d5-106">Niezarządzany wskaźnik zwracane przez tę metodę mogą być przekazywane do systemu operacyjnego w pokrywającej się z inną operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-106">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="7b6d5-107"><xref:System.Threading.NativeOverlapped> Struktury jest ustalone w pamięci fizycznej do <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-107">The  <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b6d5-108">
            <paramref name="preAllocated" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-108">
              <paramref name="preAllocated" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b6d5-109">
            <paramref name="preAllocated" /> jest obecnie używany przez inną operacji We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-109">
              <paramref name="preAllocated" /> is currently in use for another I/O operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7b6d5-110">Ta metoda została wywołana po <see cref="T:System.Threading.ThreadPoolBoundHandle" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-110">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> was disposed.</span>
          </span>
          <span data-ttu-id="7b6d5-111">Ta metoda została wywołana po - lub - <paramref name="preAllocated" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-111">-or-  This method was called after <paramref name="preAllocated" /> was disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.PreAllocatedOverlapped" />
      </Docs>
    </Member>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.IOCompletionCallback callback, object state, object pinData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.IOCompletionCallback callback, object state, object pinData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::IOCompletionCallback ^ callback, System::Object ^ state, System::Object ^ pinData);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.IOCompletionCallback * obj * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped (callback, state, pinData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="pinData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="7b6d5-112">Delegat, który reprezentuje metodę wywołania zwrotnego do wywołania po zakończeniu asynchronicznej operacji We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-112">A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7b6d5-113">Obiekt użytkownika, która odróżnia to <see cref="T:System.Threading.NativeOverlapped" /> wystąpienia z innych <see cref="T:System.Threading.NativeOverlapped" /> wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-113">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances.</span>
          </span>
        </param>
        <param name="pinData">
          <span data-ttu-id="7b6d5-114">Tablica obiektów, które reprezentują bufor wejściowy lub wyjściowy dla tej operacji lub obiektu lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-114">An object or array of objects that represent the input or output buffer for the operation, or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7b6d5-115">Każdy obiekt reprezentuje buforu, tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-115">Each object represents a buffer, such an array of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b6d5-116">Zwraca niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury, określając delegata, który jest wywoływany po zakończeniu asynchronicznej operacji We/Wy, obiekt dostarczane przez użytkownika, który dostarcza kontekst i służyć jako buforów obiektów zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-116">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b6d5-117">Niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-117">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b6d5-118">
            <paramref name="callback" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-118">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7b6d5-119">Ta metoda została wywołana po <see cref="T:System.Threading.ThreadPoolBoundHandle" /> obiekt został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-119">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindHandle">
      <MemberSignature Language="C#" Value="public static System.Threading.ThreadPoolBoundHandle BindHandle (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ThreadPoolBoundHandle BindHandle(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindHandle (handle As SafeHandle) As ThreadPoolBoundHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ThreadPoolBoundHandle ^ BindHandle(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member BindHandle : System.Runtime.InteropServices.SafeHandle -&gt; System.Threading.ThreadPoolBoundHandle" Usage="System.Threading.ThreadPoolBoundHandle.BindHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPoolBoundHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="7b6d5-120">Obiekt, który przechowuje dojście systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-120">An object that holds the operating system handle.</span>
          </span>
          <span data-ttu-id="7b6d5-121">Dojście musi otwarte dla pokrywającej się z inną operacji We/Wy za pomocą kodu niezarządzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-121">The handle must have been opened for overlapped I/O in unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b6d5-122">Zwraca <see cref="T:System.Threading.ThreadPoolBoundHandle" /> dla określonego dojścia, która jest powiązana Pula wątków systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-122">Returns a <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for the specified handle, which is bound to the system thread pool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b6d5-123">A <see cref="T:System.Threading.ThreadPoolBoundHandle" /> dla <paramref name="handle" />, który jest powiązany z puli wątków systemu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-123">A <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for <paramref name="handle" />, which is bound to the system thread pool.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b6d5-124">Ta metoda powinna być wywoływana raz na dojście.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-124">This method should be called once per handle.</span></span>  
  
 <span data-ttu-id="7b6d5-125"><xref:System.Threading.ThreadPoolBoundHandle> Obiektu nie przejąć na własność `handle`; pozostaje odpowiedzialność obiekt wywołujący, aby wywołać <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-125">The <xref:System.Threading.ThreadPoolBoundHandle> object does not take ownership of `handle`; it remains the responsibility of the caller to call <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b6d5-126">
            <paramref name="handle" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-126">
              <paramref name="handle" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b6d5-127">
            <paramref name="handle" /> został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-127">
              <paramref name="handle" /> has been disposed.</span>
          </span>
          <span data-ttu-id="7b6d5-128">- lub - <paramref name="handle" /> nie odwołuje się do prawidłowego dojścia we/wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-128">-or-  <paramref name="handle" /> does not refer to a valid I/O handle.</span>
          </span>
          <span data-ttu-id="7b6d5-129">- lub - <paramref name="handle" /> odwołuje się do uchwytu, które nie zostało otwarte dla pokrywającej się z inną operacji We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-129">-or-  <paramref name="handle" /> refers to a handle that has not been opened for overlapped I/O.</span>
          </span>
          <span data-ttu-id="7b6d5-130">- lub - <paramref name="handle" /> odwołuje się do uchwytu, które jest już powiązane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-130">-or-  <paramref name="handle" /> refers to a handle that has already been bound.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadPoolBoundHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b6d5-131">Zwalnia wszystkie zasoby niezarządzane używane przez <see cref="T:System.Threading.ThreadPoolBoundHandle" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-131">Releases all unmanaged resources used by the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNativeOverlapped">
      <MemberSignature Language="C#" Value="public void FreeNativeOverlapped (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeNativeOverlapped(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FreeNativeOverlapped(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="member this.FreeNativeOverlapped : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="threadPoolBoundHandle.FreeNativeOverlapped overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped">
          <span data-ttu-id="7b6d5-132">Niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury struktury ma zostać zwolniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-132">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure structure to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b6d5-133">Zwalnia pamięć skojarzone z <see cref="T:System.Threading.NativeOverlapped" /> struktury przydzielonej przez <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-133">Frees the memory associated with a <see cref="T:System.Threading.NativeOverlapped" /> structure allocated by the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="7b6d5-134">Należy wywołać <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metody dokładnie raz w każdej <xref:System.Threading.NativeOverlapped> niezarządzanego wskaźnika przydzielony przy użyciu <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-134">You must call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> unmanaged pointer allocated by using the <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> method.</span></span> <span data-ttu-id="7b6d5-135">Jeśli nie zostanie wywołana <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metody, będzie wyciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-135">If you do not call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method, you will leak memory.</span></span> <span data-ttu-id="7b6d5-136">Wywołanie <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> metody metody więcej niż raz w tym samym <xref:System.Threading.NativeOverlapped> niezarządzany wskaźnik pamięci zostanie uszkodzony.</span><span class="sxs-lookup"><span data-stu-id="7b6d5-136">If you call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method method more than once on the same <xref:System.Threading.NativeOverlapped> unmanaged pointer, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b6d5-137">
            <paramref name="overlapped" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-137">
              <paramref name="overlapped" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7b6d5-138">Ta metoda została wywołana po <see cref="T:System.Threading.ThreadPoolBoundHandle" /> obiekt został usunięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-138">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeOverlappedState">
      <MemberSignature Language="C#" Value="public static object GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNativeOverlappedState(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNativeOverlappedState(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="static member GetNativeOverlappedState : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; obj" Usage="System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped">
          <span data-ttu-id="7b6d5-139">Niezarządzany wskaźnik do <see cref="T:System.Threading.NativeOverlapped" /> struktury, od którego ma zostać zwrócona skojarzonego obiektu określonego przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-139">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure from which to return the associated user-provided object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b6d5-140">Zwraca obiekt użytkownika, który został określony podczas <see cref="T:System.Threading.NativeOverlapped" /> wystąpienie zostało przydzielone przez wywołanie metody <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-140">Returns the user-provided object that was specified when the <see cref="T:System.Threading.NativeOverlapped" /> instance was allocated by calling the <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b6d5-141">Obiekt użytkownika, która odróżnia to <see cref="T:System.Threading.NativeOverlapped" /> wystąpienia z innych <see cref="T:System.Threading.NativeOverlapped" /> wystąpień, lub <see langword="null" /> Jeśli nie został określony podczas intstance została przydzielona przez wywołanie metody <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> — metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-141">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances, or <see langword="null" /> if one was not specified when the intstance was allocated by calling the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b6d5-142">
            <paramref name="overlapped" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-142">
              <paramref name="overlapped" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ Handle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : System.Runtime.InteropServices.SafeHandle" Usage="System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b6d5-143">Pobiera dojście powiązanej systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-143">Gets the bound operating system handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b6d5-144">Obiekt, który przechowuje dojście powiązanej systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b6d5-144">An object that holds the bound operating system handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>