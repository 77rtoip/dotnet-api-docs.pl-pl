<Type Name="ParameterizedThreadStart" FullName="System.Threading.ParameterizedThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f89ab27a5d48225389ff0ad41c3bbc265121c09" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30578956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ParameterizedThreadStart(object obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterizedThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ParameterizedThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ParameterizedThreadStart(obj As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ParameterizedThreadStart(System::Object ^ obj);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="obj" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="obj">Obiekt, który zawiera dane dla procedury wątku.</param>
    <summary>Reprezentuje metodę, która wykonuje na <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wątku zarządzanego metodę, która wykonuje w wątku jest reprezentowana przez:  
  
-   A <xref:System.Threading.ThreadStart> delegata, który jest przekazywany do <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=nameWithType> konstruktora.  Każda metoda, która nie ma parametrów i zwracającą `void` w języku C# lub jest `Sub` procedury w Visual Basic może reprezentować delegata.  
  
-   A <xref:System.Threading.ParameterizedThreadStart> delegata, który jest przekazywany do <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29?displayProperty=nameWithType> konstruktora. Wszystkie metody, która ma jeden parametr typu <xref:System.Object> i który zwraca typ void w języku C# lub procedurę Sub w języku Visual Basic może reprezentować delegata.  
  
 Wątek nie rozpocznie się wykonywanie do momentu <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> metoda jest wywoływana. <xref:System.Threading.ThreadStart> Lub <xref:System.Threading.ParameterizedThreadStart> delegata jest wywoływane w wątku i wykonywania zaczyna się od pierwszego wiersza metodę reprezentowaną przez delegata. W przypadku liczby <xref:System.Threading.ParameterizedThreadStart> delegować, obiekt, który jest przekazywany do <xref:System.Threading.Thread.Start%28System.Object%29> metody jest przekazywany do delegata.  
  
> [!NOTE]
>  Visual Basic i C# użytkowników można pominąć <xref:System.Threading.ThreadStart> lub <xref:System.Threading.ParameterizedThreadStart> konstruktora delegata podczas tworzenia wątku. W języku Visual Basic, użyj `AddressOf` operator podczas przekazywania metodę do <xref:System.Threading.Thread.%23ctor%2A> konstruktora, na przykład `Dim t As New Thread(AddressOf ThreadProc)`. W języku C# wystarczy określić nazwę procedury wątku. Kompilator wybiera konstruktora delegata poprawne.  
  
> [!NOTE]
>  Po utworzeniu <xref:System.Threading.ParameterizedThreadStart> delegować metody wystąpienia w języku C++ pierwszego parametru konstruktora jest zmienna wystąpienia. W przypadku statycznej metody pierwszego parametru konstruktora wynosi zero. Dla metody statycznej, konstruktora delegata wymaga tylko jeden parametr: adres metody wywołania zwrotnego kwalifikowana przez nazwę klasy.  
  
 <xref:System.Threading.ParameterizedThreadStart> Delegować i <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> przeciążenie metody ułatwiają przekazywanie danych do procedury wątku, ale ta metoda nie jest typem bezpieczne, ponieważ każdy obiekt mogą zostać przekazane do <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>. Bardziej niezawodna sposobem przekazywania danych do procedury wątku jest poddane zarówno procedury wątku i pola danych z obiektu procesu roboczego. Aby uzyskać więcej informacji, zobacz [Tworzenie wątków i przekazywanie danych w chwili uruchomienia](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 <xref:System.Threading.ParameterizedThreadStart> Delegat obsługuje tylko jeden parametr. Można przekazać wielu elementów danych do <xref:System.Threading.ParameterizedThreadStart> dokonując parametru jedną z następujących czynności:  
  
-   Tablica.  
  
-   Typ kolekcji, jeśli wszystkie elementy danych są tego samego typu.  
  
-   Typ krotki, takich jak <xref:System.Tuple%602> lub <xref:System.Tuple%604>.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Threading.ParameterizedThreadStart> delegat do realizacji metody statycznej i metody wystąpienia. Pierwszy <xref:System.Threading.ParameterizedThreadStart> delegata jest reprezentowana przez statycznych `DoWork` metody, a druga jest reprezentowany przez wystąpienie `DoMoreWork` metody. Obie metody odpowiada <xref:System.Threading.ParameterizedThreadStart> podpisu delegata; oznacza to, że mają jeden parametr typu <xref:System.Object> i nie zwraca wartości.  
  
> [!NOTE]
>  Kompilatory języka Visual Basic i C# wnioskować <xref:System.Threading.ParameterizedThreadStart> delegatem sygnatur `DoWork` i `DoMoreWork` metody i wywołanie konstruktora poprawne. W związku z tym nie ma żadnych wywołania jawny Konstruktor w kodzie.  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>