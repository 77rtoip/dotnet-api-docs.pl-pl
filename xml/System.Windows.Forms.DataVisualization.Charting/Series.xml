<Type Name="Series" FullName="System.Windows.Forms.DataVisualization.Charting.Series">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba168831b15f3a96c74375f7003c8f6f4b6ed759" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69204335" /></Metadata><TypeSignature Language="C#" Value="public class Series : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Series" />
  <TypeSignature Language="VB.NET" Value="Public Class Series&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class Series : System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type Series = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje atrybuty punktów danych i serii do przechowywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt reprezentuje serię danych i jest przechowywany <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> w klasie. <xref:System.Windows.Forms.DataVisualization.Charting.Series>  
  
 Zapisuje obiekty przy użyciu<xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>klasy. <xref:System.Windows.Forms.DataVisualization.Charting.Series> <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> Przechowuje również atrybuty serii danych. Na przykład seria danych ma atrybut Color, atrybut tła obrazu, atrybut gradientu tła i tak dalej.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> Obiekty, które należą do serii, również mają własne atrybuty. Normalnie, jeśli ten sam atrybut jest ustawiony dla punktu danych i serii, do których należy, atrybut punktu danych ma pierwszeństwo.  
  
 Seria nie musi być kreślone na wykresie; może przechowywać wartości punktów danych, które są używane do wykonywania obliczeń, z których tworzona jest inna seria, a następnie kreślone. Na przykład seria A, która jest kreślone, może być wynikiem dodawania punktów danych serii B i serii C, chociaż żadna z tych serii nie zostanie wykreślona. Aby narysować <xref:System.Windows.Forms.DataVisualization.Charting.Series> obiekt <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> , właściwość musi być ustawiona <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> na nazwę obiektu używanego do wykreślania serii.  
  
 Po utworzeniu serii zostanie ona automatycznie przypisana do <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> obiektu o nazwie "default" lub do pierwszego dostępnego obszaru wykresu w kolekcji obszarów wykresu, jeśli obiekt "default" nie istnieje.  
  
 Aby wyłączyć wyświetlanie serii, ustaw jej <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> właściwość na ciąg o zerowej długości.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartType%2A> Właściwość określa typ wykresu, który będzie używany do wykreślania tej serii, jeśli jest rysowany.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Series : string -&gt; System.Windows.Forms.DataVisualization.Charting.Series" Usage="new System.Windows.Forms.DataVisualization.Charting.Series name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiektu, który zostanie utworzony. Musi to być unikatowa nazwa; w przeciwnym razie zostanie zgłoszony wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> klasy z określoną nazwą serii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tego konstruktora można utworzyć nowe wystąpienie <xref:System.Windows.Forms.DataVisualization.Charting.Series> klasy.  
  
> [!NOTE]
>  Ta seria umożliwia tylko przechowywanie <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> obiektów, które mają jedną wartość Y. Jeśli do tej serii zostanie dodany punkt danych z wieloma wartościami Y, zostanie zgłoszony wyjątek.  
  
 Aby utworzyć serię w czasie wykonywania, użyj <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection.Add%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, yValues As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name, int yValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Series : string * int -&gt; System.Windows.Forms.DataVisualization.Charting.Series" Usage="new System.Windows.Forms.DataVisualization.Charting.Series (name, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiektu, który zostanie utworzony.</param>
        <param name="yValues">Maksymalna liczba wartości Y dozwolonych dla <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> obiektów, które należą do tej serii.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> klasy z określoną nazwą i maksymalną liczbą wartości Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć i zainicjować nowe wystąpienie <xref:System.Windows.Forms.DataVisualization.Charting.Series> klasy.  
  
> [!IMPORTANT]
>  Ta seria będzie mogła przechowywać <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> tylko te obiekty, które nie mają więcej wartości Y niż wartość maksymalna ustawiona `yValues` przez parametr. Jeśli dodasz punkt danych zawierający więcej wartości Y niż ustawiona wartość maksymalna, zostanie zgłoszony wyjątek.  
  
 Aby utworzyć <xref:System.Windows.Forms.DataVisualization.Charting.Series> obiekt w czasie wykonywania `Add` , można również `Insert` użyć metod i właściwości kolekcji serii.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AxisLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisLabel : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst etykiety osi dla serii.</summary>
        <value>Tekst etykiety osi dla serii. Wartość domyślna to ciąg o zerowej długości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> obiektu używanego do wykreślania serii danych, o ile istnieje.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> Obiekt, który jest używany do wykreślania serii.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy seria jest dodawana zarówno w czasie projektowania, jak i w czasie wykonywania, jest automatycznie przypisywana do obiektu <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> "default" lub w pierwszym dostępnym obszarze wykresu <xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection> w przypadku "default" nie istnieje.  
  
 Ustaw tę właściwość na ciąg o zerowej długości, jeśli nie chcesz, aby serie były kreślone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As SeriesChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SeriesChartType ChartType { System::Windows::Forms::DataVisualization::Charting::SeriesChartType get(); void set(System::Windows::Forms::DataVisualization::Charting::SeriesChartType value); };" />
      <MemberSignature Language="F#" Value="member this.ChartType : System.Windows.Forms.DataVisualization.Charting.SeriesChartType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ wykresu serii.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesChartType" /> wyliczenia wskazująca typ wykresu, który będzie używany do reprezentowania serii. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Column" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa typ <xref:System.Windows.Forms.DataVisualization.Charting.Series> wykresu, w którym jest uwzględniana wielkość liter. Zobacz Wyliczenie <xref:System.Windows.Forms.DataVisualization.Charting.SeriesChartType> , aby uzyskać listę wszystkich możliwych typów wykresów dla serii.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChartTypeName : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę typu wykresu używanego do rysowania serii.</summary>
        <value>Nazwa typu wykresu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="series.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> program i opcjonalnie zwalnia zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyPointStyle As DataPointCustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties ^ EmptyPointStyle { System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPointStyle : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl rysowania punktów oznaczonych jako puste.</summary>
        <value>Styl rysowania punktów oznaczonych jako puste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A> Właściwość określa styl rysowania punktów oznaczonych jako puste, na przykład w kolorze obramowania, w obrazach znacznika, kolorze lub obrazach tła itd.  
  
 Niektóre właściwości mają zastosowanie tylko do określonych typów wykresów. Na przykład właściwość nie <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A> ma zastosowania do wykresów liniowych, ale stosuje się do wykresu warstwowego.  
  
 Aby wyświetlić obraz wskazujący pusty punkt, użyj <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.MarkerImage%2A> <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A> właściwości i <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> , a nie właściwości.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel%2A> Właściwość określa etykietę osi dla pustych punktów. Należy pamiętać, że w przypadku skumulowanych typów wykresów Etykieta osi jest określana <xref:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel%2A> na podstawie właściwości pierwszej z rysowanych serii, która ma ten zestaw właściwości.  
  
 Punkty danych można ręcznie oznaczyć jako puste przez ustawienie <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty%2A> właściwości na. `true` Alternatywnie, jedna z `InsertEmptyPoints` metod <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> w klasie może służyć do sprawdzania brakujących danych i wstawiania punktów pustych, jeśli brakuje punktu danych.  
  
> [!NOTE]
>  W przypadku wykresów liniowych, kolor linii dla linii łączących się z pustym punktem jest określany przez <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Color%2A> ustawienie właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy seria będzie widoczna na renderowanym wykresie.</summary>
        <value><see langword="true" />Jeśli seria będzie widoczna na renderowanym wykresie; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera lub ustawia wartość określającą, czy seria będzie widoczna w renderowanym <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsXValueIndexed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXValueIndexed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsXValueIndexed : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy indeksy punktów danych będą używane dla wartości X.</summary>
        <value><see langword="true" />Jeśli indeksy punktów danych, które należą do serii, będą używane dla wartości X. w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie punkty danych w serii używają indeksów sekwencyjnych, a jeśli ta właściwość jest `true` , punkty danych będą kreślone sekwencyjnie, niezależnie od ich skojarzonych wartości X. Oznacza to, że nie będzie żadnych punktów danych "Brak".  
  
 Załóżmy na przykład, że istnieją trzy (3) punkty danych w serii, które mają wartości X 1, 2 i 4. Jeśli ta właściwość była `false`, brak punktu danych w lokalizacji osi X o nazwie "3". Jeśli jednak ta właściwość zostanie ustawiona na `true`, trzy punkty danych zostaną wykreślone w punktach 1, 2 i 4, sekwencyjnie i nie będzie żadnych punktów danych. Na wykresie nie będzie wyświetlana lokalizacja osi X o nazwie "3".  
  
 Jest to przydatne, gdy nie chcesz mieć brakujących punktów danych dla interwałów, dla których wiadomo, że nie masz danych, na przykład weekendy.  
  
> [!IMPORTANT]
>  Jeśli wyświetlasz wiele serii, a co najmniej jedna seria używa indeksowanych wartości X, wówczas wszystkie serie muszą być wyrównane — to oznacza, że mają tę samą liczbę punktów danych — a odpowiadające im punkty muszą mieć te same wartości X.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Legend" />
      <MemberSignature Language="VB.NET" Value="Public Property Legend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Legend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Legend : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę serii skojarzonej z <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> obiektem.</summary>
        <value>Nazwa <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy seria jest dodawana zarówno w czasie projektowania, jak i w czasie wykonywania, jest automatycznie przypisywana <xref:System.Windows.Forms.DataVisualization.Charting.Legend> do obiektu domyślnego.  
  
 Jeśli nie chcesz, aby serie były wyświetlane w legendzie, ustaw dla tej właściwości ciąg o zerowej długości lub ustaw <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> właściwość na. `false`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.MarkerStep" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStep As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerStep { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MarkerStep : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.MarkerStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, jak często mają być wyświetlane znaczniki punktów danych.</summary>
        <value><see langword="integer" /> Wartość, która określa, jak często mają być wyświetlane znaczniki punktów danych. Wartość domyślna to jeden (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.MarkerStep%2A> Właściwość określa częstotliwość wyświetlania znaczników. Na przykład, jeśli ustawisz tę właściwość na dwa (2), każdy inny punkt danych będzie używał znacznika.  
  
 Ta właściwość jest używana tylko wtedy, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> gdy znaczniki są włączone przy użyciu właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia unikatową nazwę <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiektu.</summary>
        <value>Unikatowa nazwa serii danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa serii danych musi być unikatowa; w przeciwnym razie zostanie zgłoszony wyjątek.  
  
 Ta właściwość może służyć jako indeksator, gdy pobierany jest <xref:System.Windows.Forms.DataVisualization.Charting.Series> obiekt <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> z obiektu.  
  
 Jeśli ta właściwość jest ustawiona na ciąg o zerowej długości, zostanie zgłoszony wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartColorPalette Palette { System::Windows::Forms::DataVisualization::Charting::ChartColorPalette get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Windows.Forms.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia paletę <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> kolorów obiektu.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette" /> wyliczenia, która określa paletę dla serii danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paleta służy do automatycznego przypisywania kolorów do elementów danych, jeśli same punkty danych nie mają przypisanych kolorów, a jeśli obiekt danych <xref:System.Windows.Forms.DataVisualization.Charting.Series> , do którego należą punkty danych, również nie ma przypisanego koloru.  
  
 Jeśli żadne kolory serii lub punktów danych nie są jawnie określone, używane kolory są zależne od typu wykresu i palety formantów wykresu lub palety serii, jeśli taka została określona. Aby uzyskać więcej informacji, zobacz poniższą tabelę:  
  
|Typ wykresu|Użyta paleta serii?|Kolory wyświetlane przez punkty danych|  
|----------------|--------------------------|-------------------------------------|  
|Dowolny wykres kształtu (na przykład wykresy kołowe i pierścieniowe)|Nie|Pierwsze dostępne kolory używane z <xref:System.Windows.Forms.DataVisualization.Charting.Chart> palety kontroli. Jeden kolor na punkt danych.|  
|Wszystkie wykresy z wyjątkiem wykresów Shapes.|Nie|Pierwsze dostępne kolory z <xref:System.Windows.Forms.DataVisualization.Charting.Chart> palety kontroli. Jeden kolor na serię danych.|  
|Dowolny wykres kształtu (na przykład wykresy kołowe i pierścieniowe)|Tak|Pierwsze dostępne kolory używane z <xref:System.Windows.Forms.DataVisualization.Charting.Series> palety. Jeden kolor na punkt danych.|  
|Wszystkie wykresy z wyjątkiem wykresów Shapes.|Tak|Pierwsze dostępne kolory używane z <xref:System.Windows.Forms.DataVisualization.Charting.Series> palety. Jeden kolor na serię danych.|  
  
 Ta <xref:System.Windows.Forms.DataVisualization.Charting.Series.Palette%2A> właściwość ma pierwszeństwo przed <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A> właściwością obiektu głównego <xref:System.Windows.Forms.DataVisualization.Charting.Chart> , w odniesieniu do wyświetlania danych.  
  
 KORYGUJĄC Jeśli właściwość dla <xref:System.Windows.Forms.DataVisualization.Charting.Chart> obiektów i <xref:System.Windows.Forms.DataVisualization.Charting.Series> ma ustawioną wartość None, a żaden kolor nie zostanie przypisany do odpowiednich serii danych/punktów danych, zostanie użyta domyślna paleta "BrightPastel" <xref:System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors%2A> lub ". `Palette`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Points" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Points As DataPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DataPointCollection ^ Points { System::Windows::Forms::DataVisualization::Charting::DataPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Points : System.Windows.Forms.DataVisualization.Charting.DataPointCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Series.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję punktów danych.</summary>
        <value>Kolekcja punktów danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> kolekcji pozwala dodawać i usuwać punkty danych w serii. Ta właściwość udostępnia również metody i właściwości, których można użyć do manipulowania tą kolekcją, na przykład wyszukiwanie punktów danych, wykonywanie powiązań danych i tak dalej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor cienia serii.</summary>
        <value>Kolor cienia serii. Kolor domyślny to <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobiera lub ustawia kolor cienia serii, która może być dowolną prawidłową wartością ARGB (alfa, czerwony, zielony, niebieski).  
  
 Wartość alfa może służyć do osiągnięcia realistycznego efektu cienia; Spróbuj użyć wartości Color równej "128, 0, 0, 0" dla cieni.  
  
 Aby zaimplementować cień, ustaw <xref:System.Windows.Forms.DataVisualization.Charting.Series.ShadowOffset%2A> właściwość na wartość inną niż zero (0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie cienia (w pikselach) serii.</summary>
        <value>Przesunięcie cienia serii (w pikselach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować obserwowanie, użyj wartości innej niż zero (0). Wartość dodatnia spowoduje, że cień przesunie się w dół i w prawo. Wartość ujemna spowoduje, że cień przesuwa się w górę i w lewo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As SmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SmartLabelStyle ^ SmartLabelStyle { System::Windows::Forms::DataVisualization::Charting::SmartLabelStyle ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::SmartLabelStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmartLabelStyle : System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl inteligentnych etykiet.</summary>
        <value>Styl inteligentnych etykiet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje sortowanie w <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />. Należy zauważyć, <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> że Klasa zawiera metody sortowania, które mają większą elastyczność niż te metody sortowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; -&gt; unit" Usage="series.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><see cref="T:System.Collections.IComparer" /> Interfejs.</param>
        <summary>Sortuje punkty w serii przy użyciu <see cref="T:System.Collections.IComparer" /> interfejsu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="series.Sort pointSortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Porządek sortowania.</param>
        <summary>Sortuje punkty danych w serii z uwzględnieniem określonej kolejności sortowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="series.Sort (pointSortOrder, sortBy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">Porządek sortowania.</param>
        <param name="sortBy">Wartość używana do sortowania (X, Y, Y2...).</param>
        <summary>Sortuje punkty w serii, z uwzględnieniem określonej kolejności sortowania i wartości do użycia podczas sortowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property XAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType XAxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.XAxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.XAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ osi X serii.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> wyliczenia, która określa, czy seria używa podstawowej lub pomocniczej osi X.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla wszystkich typów wykresów, z wyjątkiem wykresów zorientowanych poziomo, takich jak wykresy słupkowe i skumulowane słupkowe, a także wykresów kształtów, takich jak wykresy kołowe, pierścieniowe, lejkowe i ostrosłupowe, oś podstawowa X jest zawsze Dolna, a oś pomocnicza jest górną osią. Na wykres słupkowy i skumulowany słupkowy podstawowa oś X jest lewą osią, a pomocnicza oś X jest prawą osią.  
  
 Gdy dane są kreślone przy użyciu pomocniczej osi X, należy użyć <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX2%2A> właściwości, aby ustawić właściwości osi, a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX%2A> nie właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XValueMember : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.XValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesDataSourceMemberConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element członkowski źródła danych wykresu służący do tworzenia powiązań danych z wartością X serii.</summary>
        <value>Element członkowski źródła danych wykresu służący do tworzenia powiązań danych z wartością X serii.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość akceptuje nazwę kolumny elementu członkowskiego lub wartość porządkową kolumny elementu członkowskiego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartValueType XValueType { System::Windows::Forms::DataVisualization::Charting::ChartValueType get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.XValueType : System.Windows.Forms.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.XValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typy wartości kreślone wzdłuż osi X.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartValueType" /> wyliczenia, która określa typ danych wartości X przechowywanych przez serię. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> Właściwość określa typ danych przechowywanych przez serię.  
  
 Ustaw tę właściwość na <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime> , aby zezwolić na wprowadzanie wartości X <xref:System.DateTime> jako wartości <xref:System.Double>, a nie jako. Wartości daty i godziny są wewnętrznie przechowywane przez .NET Framework jako <xref:System.Double> wartości. Te same wartości mają wartość true <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel.ToPosition%2A> dla <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel.FromPosition%2A> właściwości <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel> i obiektów.  
  
 `IntervalType` Właściwość znaleziona w etykiecie osi, znaczniku i klasach siatki określa typ interwału.  
  
> [!NOTE]
>  Aby prawidłowo zastosować <xref:System.DateTime> format do etykiet osi, które są generowane na podstawie wartości X punktu danych, <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Format%2A> przy użyciu właściwości, ta właściwość musi być ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>.  
  
 Ta właściwość może również służyć do określania typu danych, do którego są powiązane wartości X.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property YAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType YAxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.YAxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.YAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ osi Y serii.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> wyliczenia określająca, czy seria używa podstawowej lub pomocniczej osi Y.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType%2A> Właściwość określa, czy seria jest wykreślana przy użyciu podstawowej lub pomocniczej osi Y.  
  
 Dla wszystkich typów wykresów, z wyjątkiem wykresu kołowego, pierścieniowego, paska zakresu, słupkowy i skumulowany wykres słupkowy, podstawowa oś Y jest lewą osią pionową, a pomocnicza oś jest prawą osią pionową. Na wykres słupkowy i skumulowany słupkowy oś podstawowa jest niższą osią poziomą, a pomocnicza oś Y jest górną warstwą poziomą.  
  
 Gdy dane są kreślone przy użyciu pomocniczej osi Y, należy użyć <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY2%2A> właściwości, aby ustawić właściwości osi, a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY%2A> nie właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValueMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueMembers As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YValueMembers { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValueMembers : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.YValueMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesDataSourceMemberValueAxisUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesDataSourceMemberConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesDataSourceMemberValueAxisUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolumny elementów członkowskich źródła danych wykresu służące do wiązania danych z wartościami Y serii.</summary>
        <value>Kolumny elementów członkowskich źródła danych wykresu służące do wiązania danych z wartościami Y serii.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość akceptuje ciąg rozdzielony przecinkami, który zawiera nazwy lub wartości porządkowe kolumn.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property YValuesPerPoint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int YValuesPerPoint { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.YValuesPerPoint : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę wartości Y, które <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> mają być dozwolone <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> w obiektach.</summary>
        <value>Maksymalna liczba wartości Y, które mogą mieć punkty danych w serii. Wartość domyślna to jeden (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dodasz <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> obiekt, który ma więcej wartości Y niż ta właściwość określa, nadmiarowe wartości Y zostaną zignorowane.  
  
 Liczba wartości Y, które są wymagane do prawidłowego wyświetlenia wykresu, zależy od wybranego typu wykresu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartValueType YValueType { System::Windows::Forms::DataVisualization::Charting::ChartValueType get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartValueType value); };" />
      <MemberSignature Language="F#" Value="member this.YValueType : System.Windows.Forms.DataVisualization.Charting.ChartValueType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Series.YValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych wartości Y w punktach danych przechowywanych przez serię.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartValueType" /> wyliczenia, która określa typ danych wartości Y przechowywanych przez serię. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> Właściwość określa typ danych przechowywanych przez serię. Wartość tej właściwości jest zwykle ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> lub. <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>  
  
 `IntervalType` Właściwość znaleziona w etykiecie osi, znaczniku i klasach siatki określa typ interwału.  
  
 Ta właściwość może również służyć do określania typu danych, do którego są powiązane wartości Y.  
  
 Wyrażenia daty można wykreślić jako wartości punktów danych, chociaż jest to rzadko wykonywane. Jeśli ustawisz tę właściwość na <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>, wartość Y można następnie wprowadzić <xref:System.DateTime> jako wartość <xref:System.Double>, a nie jako. Wartości daty i godziny są wewnętrznie przechowywane przez .NET Framework jako <xref:System.Double> wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
