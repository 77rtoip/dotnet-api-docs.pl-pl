<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9aff87fa739b7dd86ab5600b3fbb95541d5671b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69205983" /></Metadata><TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje linię poziomą lub pionową, która definiuje położenie wzdłuż osi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kursor jest linią poziomą lub pionową, która definiuje położenie wzdłuż osi. Wybór zakresu jest zakresem wzdłuż osi, która jest definiowana przez początkową i końcową pozycję i jest wyświetlana przy użyciu koloru z półprzezroczystym kolorem.  
  
 Zaznaczenia kursorów i zakresów są implementowane przez <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> klasę, która jest udostępniana <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> jako właściwości <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> i obiektu. Obiekt jest dla osi X obszaru wykresu, <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> a obiekt jest dla osi Y. <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> Właściwość tych obiektów określa, czy skojarzona oś jest podstawowa czy pomocnicza.  
  
 Jedyną funkcją wyboru kursora i zakresu znaleziono poza <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> klasą są zdarzenia związane z wyborem kursora i zakresu, które znajdują się w obiekcie głównym. <xref:System.Windows.Forms.DataVisualization.Charting.Chart>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę określającą, czy przewijanie zostanie wykonane, jeśli operacja wyboru zakresu wykracza poza granicę obszaru wykresu.</summary>
        <value><see langword="true" />Jeśli widok danych może być przewijany automatycznie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli w widoku danych nie są wyświetlane wszystkie punkty danych w wykreślonej serii, a zakres jest wybierany przez użytkownika, automatyczne przewijanie widoku będzie miało miejsce, jeśli ta `true` właściwość jest i myszą, a w związku z tym kursor — jest przenoszony poza granicę obszaru wykresu.  
  
 Przewijanie będzie odbywać się tylko na osi, jeśli dostępne są więcej danych do wyświetlenia.  
  
 W widoku danych, w którym nie są wyświetlane wszystkie dane, zazwyczaj powstaje, gdy użytkownik końcowy powiększy się do podzbioru danych. Widoki i powiększania są implementowane <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> przez klasę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.AxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ osi, do której jest dołączony kursor.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> wyliczenia, która reprezentuje, czy oś jest dołączona do osi podstawowej lub pomocniczej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa zestawy osi: podstawowe i pomocnicze. Osie podstawowe dla wszystkich wykresów, z wyjątkiem wykresów słupkowych, znajdują się u dołu (podstawową oś X) i lewej strony (podstawowa oś Y) obszaru wykresu.  
  
 Pomocnicze osie znajdują się po prawej stronie (pomocnicza oś X) i górnej krawędzi (pomocnicza oś Y) obszaru wykresu.  
  
> [!NOTE]
>  Jeśli wszystkie serie wykreślone w obszarze wykresu używają tylko jednego typu osi (na przykład podstawowej osi X), a następnie ustawienie tej właściwości na typ osi nieużywanej przez serię (w tym przypadku pomocnicza oś X) nie będzie miało żadnego efektu. kursor zostanie automatycznie dołączony do samej osi używanej do wykreślania serii.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> klasę.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje zadania zdefiniowane przez aplikację, które zwalniają, zwalniają lub resetują niezarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cursor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby niezarządzane i zarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane i, opcjonalnie, zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia interwał kursora.</summary>
        <value>Interwał kursora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> Właściwość określa, jak często i gdzie kursor może być rysowany przez użytkownika końcowego, a także miejsce rozpoczęcia i zakończenia wyboru zakresu. Wartość zero, która jest wartością domyślną, oznacza, że wybór kursora lub zakresu może być rysowany w dowolnym miejscu obszaru wykresu. Wartość różna od zera oznacza, że kursor lub początek i/lub punkty końcowe wybranego zakresu będą rysowane tylko w określonym interwale w przypadku ustawienia przez interakcję z użytkownikiem.  
  
 Jednostka miary jest określana przez <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> właściwość.  
  
 Tej właściwości można również użyć w połączeniu z <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> właściwością, która umożliwia określenie przesunięcia z określonego interwału. Na przykład, aby zezwolić, aby kursor był wyświetlany w każdej soboty, należy określić interwał o wartości 1 tydzień wraz z przesunięciem interwału wynoszącym 6 dni. W .NET Framework niedziela jest traktowana jako pierwszy dzień tygodnia.  
  
 Jeśli interfejs użytkownika kursora jest włączony przez ustawienie <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> właściwości, a mysz zostanie kliknięta wewnątrz obszaru wykresu, pozycja kursora zostanie ustawiona na najbliższą dopuszczalną lokalizację.  
  
> [!IMPORTANT]
>  Właściwość <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> nie ma wpływu, jeśli ustawisz programowo pozycję zaznaczenia kursora lub zakresu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Przesunięcie interwału, które ma wpływ na to, gdzie wybór kursora i zakresu może być rysowany, gdy są one ustawiane przez użytkownika.</summary>
        <value>Przesunięcie od interwału. Wartością domyślną jest zero, co oznacza brak ograniczeń, a wartości ujemne są dozwolone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> Właściwość określa Przesunięcie interwału kursora i początku i/lub punkty końcowe wyboru zakresu. W połączeniu z <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> właściwością ta właściwość określa, gdzie kursor i zakres mogą być wyświetlane w obszarze wykresu. Wartość zerowa, która jest wartością domyślną, oznacza, że nie ma przesunięcia.  
  
 Jednostka miary jest określana przez <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> właściwość.  
  
 Przesunięcie ma wpływ na lokalizacje, w których można narysować kursor i początek i/lub punkty końcowe zaznaczenia zakresu. Na przykład, aby zezwolić, aby kursor był wyświetlany w każdej soboty, należy określić interwał o wartości 1 tydzień wraz z przesunięciem interwału wynoszącym 6 dni. W .NET Framework niedziela jest traktowana jako pierwszy dzień tygodnia.  
  
 Jeśli interfejs użytkownika kursora jest włączony przez ustawienie <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> właściwości, a mysz zostanie kliknięta wewnątrz obszaru wykresu, pozycja kursora zostanie ustawiona na najbliższą dopuszczalną lokalizację.  
  
> [!IMPORTANT]
>  Właściwości powiązane z interwałem nie mają wpływu, gdy ustawienie wyboru zakresu lub kursora są ustawiane programowo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ przesunięcia interwału kursora i wybranego zakresu dla osi.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> wyliczenia, która określa jednostkę miary dla przesunięcia interwału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa typ przesunięcia interwału, który jest określany <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> za pomocą właściwości. <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>  
  
 Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> zostanie użyte ustawienie właściwości. <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>  
  
> [!NOTE]
>  Właściwości powiązane z interwałem nie mają wpływu, gdy ustawienie wyboru zakresu lub kursora są ustawiane programowo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ interwału dla kursora i wybranego zakresu osi.</summary>
        <value>Typ interwału dla kursora i wybranego zakresu osi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa typ interwału, który jest określany <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> za pomocą właściwości. <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>  
  
 Jeśli typ interwału to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, jednostka miary dla interwału jest traktowana `double`jako, która jest równoznaczna z jednym dniem, gdy <xref:System.DateTime> wartości są określone.  
  
> [!NOTE]
>  Właściwości powiązane z interwałem nie mają wpływu, gdy ustawienie wyboru zakresu lub kursora jest ustawione programowo.  
  
 Jeśli typ interwału osi reprezentuje czas — na przykład godziny, minuty i tak dalej — następnie w celu poprawnego włączenia funkcji powiększania, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> należy również ustawić wartość czasu. Na przykład jeśli ChartArea1. AxisX. IntervalType jest wyrażona w godzinach, a wartość ChartArea1. CursorX. IntervalType może być ustawiona na minuty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę, która włącza lub wyłącza interfejs użytkownika kursora.</summary>
        <value><see langword="true" />Jeśli interfejs użytkownika kursora jest włączony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserSelectionEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę, która włącza lub wyłącza interfejs użytkownika wyboru zakresu.</summary>
        <value><see langword="true" />Jeśli interfejs użytkownika wyboru zakresu jest włączony; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor linii kursora.</summary>
        <value>Kolor linii kursora. Wartość domyślna to <see cref="P:System.Drawing.Color.Red" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii kursora.</summary>
        <value>Styl linii kursora.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość linii (w pikselach) kursora</summary>
        <value>Szerokość linii (w pikselach). Wartość domyślna to jeden (1).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby określić szerokość linii (w pikselach) kursora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Position : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję kursora.</summary>
        <value>Pozycja kursora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może służyć do uzyskania pozycji kursora, a także do programistycznego ustawiania położenia kursora.  
  
 Pozycja jest mierzona jako wartość osi, do której należy kursor, który jest określany przez <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> właściwość. Na przykład, jeśli kursor należy do podstawowej osi X, a następnie ustawienie tej właściwości na wartość 1 stycznia 2000 spowoduje narysowanie kursora osi X od 1 stycznia 2000 pozycji wzdłuż osi. Jeśli ta wartość osi nie istnieje, kursor nie zostanie wyświetlony.  
  
 Należy pamiętać, że jeśli ustawisz tę właściwość <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> , <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> właściwości i nie będą miały wpływu, czyli kursor będzie wyświetlany w tej lokalizacji.  
  
 Ustawienie tej właściwości nie <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> spowoduje zgłoszenia zdarzeń lub. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>  
  
 Alternatywnie, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> metody i <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> mogą służyć do ustawiania kursora.  
  
 Aby programowo usunąć kursor, Użyj tej właściwości, aby ustawić położenie kursora <xref:System.Double.NaN>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor częściowo przezroczysty, który wyróżnia zakres danych.</summary>
        <value>Kolor wyróżnionego zakresu. Wartość domyślna to <see cref="P:System.Drawing.Color.LightGray" />, z wartością alfa 120.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa kolor wyboru zakresu i może być ustawiona na dowolną prawidłową wartość ARGB (alfa, czerwony, zielony, niebieski). Jeśli wartość alfa, która określa poziom przezroczystości, nie jest określona, zostanie użyta domyślna wartość alfa 120.  
  
 Wybrany kolor można ustawić zarówno dla kursorów osi X, jak <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> i Y, który jest implementowany przy użyciu właściwości <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> i <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> obiektu. Jeśli zakres jest wybierany tylko wzdłuż osi x, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> używana jest wartość kursora osi x. Jeśli zakres jest wybierany tylko wzdłuż osi y <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> , używana jest wartość kursora osi y. Jeśli wybrano zakres wzdłuż obu osi, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> wartość dla kursora osi Y również jest używana dla wybranego koloru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionEnd : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję końcową zaznaczenia zakresu.</summary>
        <value>Pozycja końcowa wybranego zakresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownik może wybrać zakres w obszarze wykresu, klikając lewym przyciskiem myszy, a następnie przeciągając myszą. Należy pamiętać, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> że właściwość musi również mieć `true`ustawioną wartość. Ponadto wybór zakresu można ustawić programowo <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> przy użyciu <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> właściwości <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> i <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> lub metod.  
  
 Pozycja końcowa wyboru zakresu jest obliczana jako wartość osi, do której należy kursor. Na przykład, jeśli kursor należy do podstawowej osi X i ustawisz <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> właściwość na wartość 31 grudnia 2000, koniec wybranego obszaru będzie miał 31 grudnia 2000 wzdłuż podstawowej osi X.  
  
 Aby programowo usunąć wybór zakresu, ustaw punkty początkowe i <xref:System.Double.NaN> końcowe zakresu w celu <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> użycia właściwości i <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> lub Użyj <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pozycję początkową wybranego zakresu kursora.</summary>
        <value>Pozycja początkowa wybranego zakresu kursora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownik może wybrać zakres, klikając lewym przyciskiem myszy, a następnie przesuwając kursor myszą. Należy pamiętać, <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> że właściwość musi również mieć `true`ustawioną wartość. Ponadto wybór zakresu można ustawić programowo <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> przy użyciu <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> właściwości <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> i <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> lub metod.  
  
 Pozycja początkowa wyboru zakresu jest obliczana jako wartość osi, do której należy kursor. Na przykład, jeśli kursor należy do podstawowej osi X, a <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> właściwość zostanie ustawiona na wartość 1 stycznia 2000, początek wybranego obszaru będzie miał 1 stycznia 2000 wzdłuż podstawowej osi X.  
  
 Aby programowo usunąć wybór zakresu, ustaw punkty początkowe i <xref:System.Double.NaN> końcowe zakresu w celu <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> użycia właściwości i <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> lub Użyj <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPixelPosition : System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetCursorPixelPosition (point, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Drawing.PointF" /> Struktura, która określa miejsce rysowania kursora.</param>
        <param name="roundToBoundary">Jeśli <see langword="true" />kursor zostanie narysowany wzdłuż najbliższej granicy obszaru wykresu, jeśli określona pozycja nie znajduje się <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> w obiekcie.</param>
        <summary>Wyświetla kursor na określonej pozycji. Wartość mierzona w pikselach.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPosition : double -&gt; unit" Usage="cursor.SetCursorPosition newPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition">Nowa pozycja kursora. Mierzona jako wartość wzdłuż odpowiedniej osi.</param>
        <summary>Ustawia pozycję kursora w obszarze wykresu na określonej wartości osi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPixelPosition : System.Drawing.PointF * System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetSelectionPixelPosition (startPoint, endPoint, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><see cref="T:System.Drawing.PointF" /> Struktura, która określa, gdzie rozpoczyna się wybór zakresu.</param>
        <param name="endPoint"><see cref="T:System.Drawing.PointF" /> Struktura, która określa, gdzie następuje wybór zakresu.</param>
        <param name="roundToBoundary">Jeśli <see langword="true" />punkt początkowy i końcowy zostaną zaokrąglone do najbliższej granicy obszaru wykresu, jeśli określone położenia nie mieszczą się <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> w obiekcie.</param>
        <summary>Ustawia pozycję początkową i końcową wybranego zakresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPosition : double * double -&gt; unit" Usage="cursor.SetSelectionPosition (newStart, newEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart">Nowa pozycja początkowa wybranego zakresu. Mierzona jako wartość wzdłuż odpowiedniej osi.</param>
        <param name="newEnd">Nowa pozycja końcowa wybranego zakresu. Mierzona jako wartość wzdłuż odpowiedniej osi.</param>
        <summary>Ustawia pozycję wybranego zakresu w obszarze wykresu na określonych wartości osi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
