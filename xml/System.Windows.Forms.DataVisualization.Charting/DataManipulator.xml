<Type Name="DataManipulator" FullName="System.Windows.Forms.DataVisualization.Charting.DataManipulator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c378c774225e3c884f027f37dbda3d4ad8df13a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30700784" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataManipulator extends System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Class DataManipulator&#xA;Inherits DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataManipulator : System::Windows::Forms::DataVisualization::Charting::DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataFormula</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody, która wykonuje operacje manipulacji danych w czasie wykonywania. Ta klasa jest udostępniany przez <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" /> właściwości katalogu głównego <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> obiektu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataManipulator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataManipulator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportSeriesValues">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Eksportowanie danych serii lub kolekcji serii z <see cref="T:System.Data.DataSet" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues () As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eksportuje dane dla każdej serii przechowywanego w <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> do <see cref="T:System.Data.DataSet" /> obiektu.</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> obiekt, który zawiera wyeksportowane serii danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (string seriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(string seriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues (seriesNames As String) As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::String ^ seriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="seriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> do wyeksportowania.</param>
        <summary>Eksportuje dane z co najmniej jedna seria do <see cref="T:System.Data.DataSet" /> obiektu.</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> obiekt, który zawiera wyeksportowane serii danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">Seria do wyeksportowania.</param>
        <summary>Eksportuje dane z określonego serii do <see cref="T:System.Data.DataSet" /> obiektu.</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> obiekt, który zawiera wyeksportowane serii danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Co najmniej jedna seria filtry lub filtry punktu danych w serii lub kolekcji serii, stosując standard filtrowania reguły lub niestandardowych reguł filtrowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">Obiekt, który implementuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interfejsu.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <summary>Wykonuje niestandardowe filtrowanie w co najmniej jedna seria oparte na punktach pierwszej serii punktów danych. Filtrowane <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiektów przechowywanie modyfikacji danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">Obiekt, który implementuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interfejsu.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana.</param>
        <summary>Wykonuje niestandardowe filtrowanie punktów danych w serii. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana przechowuje także modyfikacji danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <summary>Stosując reguły filtrowania pierwszą wartość Y punktu danych w pierwszej serii, filtry co najmniej jedna seria. Filtrowane <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekty służą do przechowywania danych zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana.</param>
        <summary>Filtruje punktów danych w serii, stosując reguły filtrowania do pierwszej wartości Y dla każdego punktu danych. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana przechowuje także modyfikacji danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> wartości wyliczenia, reprezentujący Interwał daty/godziny, na przykład dni tygodnia, dni miesiąca i tak dalej. Określa zakres, w którym będą filtrowane danego elementów.</param>
        <param name="rangeElements">Określa elementy w zakresie daty/godziny wskazywany przez <c>dateRange</c> parametr, który będzie można filtrować. Może być pojedynczą wartość, na przykład "7;" wartości rozdzielanych przecinkami, na przykład "5,6;" zakres wartości, takich jak "9-11"; lub wszelkie zmiany jego, takie jak "5,6,9-11".</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <summary>Filtruje punktów danych serii co najmniej jeden przez usunięcie z podanych punktów lub oznaczysz je jako pusta dla zakresów danego daty/godziny. Filtrowane <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekty służą do przechowywania danych zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> wartości wyliczenia, reprezentujący Interwał daty/godziny, na przykład dni tygodnia, dni miesiąca i tak dalej. Określa zakres, w którym będą filtrowane danego elementów.</param>
        <param name="rangeElements">Określa elementy w zakresie daty/godziny wskazywany przez <c>dateRange</c> parametr, który będzie można filtrować. Może być pojedynczą wartość, na przykład "7;" wartości rozdzielanych przecinkami, na przykład "5,6;" zakres wartości, takich jak "9-11"; lub wszelkie zmiany jego, takie jak "5,6,9-11".</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <summary>Filtruje punktów danych w serii, usuwając określone punkty lub oznaczysz je jako pusta dla zakresów określonej daty/godziny. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana służy do przechowywania danych zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">Obiekt, który implementuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interfejsu.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Upewnij się, że liczba serii wyjściowych jest zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <summary>Wykonuje niestandardowe filtrowanie w co najmniej jedna seria oparte na punktach pierwszej serii punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">Obiekt, który implementuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interfejsu.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Wykonuje niestandardowe filtrowanie punktów danych w serii.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Liczba serii wyjściowych musi być zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <summary>Filtruje co najmniej jedna seria stosując reguły filtrowania do pierwszej wartości Y każdego pierwszej serii punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Filtruje punktów danych w serii, stosując reguły filtrowania do pierwszej wartości Y dla każdego z punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> wartości wyliczenia, reprezentujący Interwał daty/godziny, na przykład dni tygodnia, dni miesiąca i tak dalej. Określa zakres, w którym będą filtrowane danego elementów.</param>
        <param name="rangeElements">Określa elementy w zakresie daty/godziny wskazywany przez <c>dateRange</c> parametr, który będzie można filtrować. Może być pojedynczą wartość, na przykład "7;" wartości rozdzielanych przecinkami, na przykład "5,6;" zakres wartości, takich jak "9-11"; lub wszelkie zmiany jego, takie jak "5,6,9-11".</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Upewnij się, że liczba serii wyjściowych jest zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <summary>Filtruje punktów danych serii co najmniej jeden przez usunięcie z podanych punktów lub oznaczysz je jako pusta dla zakresów danego daty/godziny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> wartości wyliczenia, reprezentujący Interwał daty/godziny, na przykład dni tygodnia, dni miesiąca i tak dalej. Określa zakres, w którym będą filtrowane danego elementów.</param>
        <param name="rangeElements">Określa elementy w zakresie daty/godziny wskazywany przez <c>dateRange</c> parametr, który będzie można filtrować. Może być pojedynczą wartość, na przykład "7;" wartości rozdzielanych przecinkami, na przykład "5,6;" zakres wartości, takich jak "9-11"; lub wszelkie zmiany jego, takie jak "5,6,9-11".</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Filtruje punktów danych w serii, usuwając określone punkty lub oznaczysz je jako pusta dla zakresów określonej daty/godziny.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Liczba serii wyjściowych musi być równa liczbie serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <summary>Stosując reguły filtrowania wartości punktu danych określonej w pierwszej serii, filtry co najmniej jedna seria.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> wartości wyliczenia, która określa metodę porównywania reguły filtrowania. Może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, itd.</param>
        <param name="compareValue">Wartość część reguły filtrowania, która jest stosowana do pierwszej wartości Y punktu danych. Na przykład w reguły filtrowania "&lt;6", 6 jest wartość.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <summary>Filtry punktów danych w serii, stosując reguły filtrowania określonych danych punktu wartości do porównania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMatchedPoints">
      <MemberSignature Language="C#" Value="public bool FilterMatchedPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMatchedPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterMatchedPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMatchedPoints { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy punkty są filtrowane spełniające kryteria określone w argumentach w <c>filtru</c> metody tej klasy.</summary>
        <value>
          <see langword="true" /> Jeśli punkty spełniających określone kryteria są filtrowane; <see langword="false" /> Jeśli punkty, które nie są zgodne z kryteriami są filtrowane. Wartość domyślna to <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSetEmptyPoints">
      <MemberSignature Language="C#" Value="public bool FilterSetEmptyPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterSetEmptyPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterSetEmptyPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterSetEmptyPoints { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy punkty filtrowane przez <c>filtru</c> lub <c>FilterTopN</c> metody zostaną usunięte lub oznaczone jako pusta.</summary>
        <value>
          <see langword="true" /> Jeśli punkty filtrowane zostaną oznaczone jako pusta; <see langword="false" /> Jeśli zostaną one usunięte. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterTopN">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Filtry wszystkich punktów danych w co najmniej jedna seria z wyjątkiem określoną liczbę punktów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <summary>Filtry wszystkich punktów danych w co najmniej jedna seria z wyjątkiem określoną liczbę punktów. Punkty, które nie są filtrowane odpowiadają punktów w pierwszym serii, która ma największy pierwszej wartości Y. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektów, które zostały przefiltrowane są używane do przechowywania danych zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <summary>Filtry wszystkich punktów danych w serii, z wyjątkiem określoną liczbę punktów największej pierwszej wartości Y. <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest filtrowana służy do przechowywania danych zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Upewnij się, że liczba serii wyjściowych jest zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <summary>Filtry wszystkich punktów danych w co najmniej jedna seria z wyjątkiem określoną liczbę punktów. Punkty, które nie są filtrowane odpowiadają punktów w pierwszym serii, która ma największy pierwszej wartości Y.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Filtry wszystkich punktów danych w serii, z wyjątkiem określoną liczbę punktów największej pierwszej wartości Y.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Upewnij się, że liczba serii wyjściowych jest zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <summary>Filtry wszystkich punktów danych w co najmniej jedna seria z wyjątkiem określoną liczbę punktów. Punkty, które nie są filtrowane odpowiadają punktów w pierwszym serii, która ma największych wartości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <summary>Filtry wszystkich punktów danych w serii, z wyjątkiem określoną liczbę punktów o największej wartości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue, bool getTopValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać przefiltrowana.</param>
        <param name="outputSeriesNames">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> który przechowywania to odfiltrowane dane. Upewnij się, że liczba serii wyjściowych jest zgodna z liczbą serii wejściowych, w przeciwnym razie zwracany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <param name="getTopValues">
          <see langword="true" /> Jeśli największych wartości są przechowywane; <see langword="false" /> Jeśli najmniejszych wartości są przechowywane.</param>
        <summary>Filtry wszystkich punktów danych w co najmniej jedna seria z wyjątkiem określoną liczbę punktów. Punkty, które nie są filtrowane odpowiadają punktów w pierwszym wejściowych serii, która ma największy lub najmniejszej wartości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue, bool getTopValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">Liczba punktów danych, które nie spowoduje usunięcia operacja filtrowania.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać przefiltrowana.</param>
        <param name="outputSeries">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekt, który przechowuje to odfiltrowane dane. Jeśli serii nie istnieje, zostanie wygenerowany wyjątek.</param>
        <param name="usingValue">Wartość, która dotyczy reguła filtrowania punktu danych. Może być X, Y "," Y2 "," Y3 "i" itd.</param>
        <param name="getTopValues">
          <see langword="true" /> Jeśli największych wartości są przechowywane; <see langword="false" /> Jeśli najmniejszych wartości są przechowywane.</param>
        <summary>Filtry wszystkich punktów danych w serii, z wyjątkiem określoną liczbę punktów o najmniejszej lub największej wartości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Group">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Punkty danych grupy dla co najmniej jedna seria przy użyciu co najmniej jedna formuła.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> grupowanie.</param>
        <summary>Punkty danych grupy dla co najmniej jedna seria przy użyciu co najmniej jedna formuła. Serie są wyczyszczone z ich oryginalnych danych i używany do przechowywania nowych punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektu grupowanie.</param>
        <summary>Grupuje punktów danych w serii przy użyciu co najmniej jedna formuła. Serii, która jest grupowana jest wyczyszczone oryginalne dane, a używany do przechowywania nowych punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> grupowanie.</param>
        <param name="outputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> którym będzie przechowywany punktów zgrupowanych danych. Serii nie istnieje, zostanie utworzona; Jeśli istnieje, jej zostanie najpierw wyczyszczone wszystkie dane przed przekazaniem punktów grupowanych danych. Liczba serii wyjściowych musi być równa liczbie serii wejściowych lub zostanie wygenerowany wyjątek.</param>
        <summary>Punkty danych grupy dla co najmniej jedna seria przy użyciu co najmniej jedna formuła. Serii wyjściowych są używane do przechowywania punktów zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektu grupowanie.</param>
        <param name="outputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Która zapisze nowe punkty danych utworzone przez operację grupowania. Jeśli nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Grupuje punktów danych w serii przy użyciu co najmniej jedna formuła. Serii wyjściowych jest używany do przechowywania punktów zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> grupowanie.</param>
        <summary>Punkty danych grupy dla co najmniej jedna seria przy użyciu co najmniej jedna formuła. Serie są wyczyszczone z ich oryginalnych danych i używany do przechowywania nowych punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektu grupowanie.</param>
        <summary>Grupuje punktów danych w serii przy użyciu co najmniej jedna formuła. Serii, która jest grupowana jest wyczyszczone oryginalne dane, a używany do przechowywania nowych punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> grupowanie.</param>
        <param name="outputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> którym będzie przechowywany punktów zgrupowanych danych. Serii nie istnieje, zostanie utworzona; Jeśli istnieje, jej zostanie najpierw wyczyszczone wszystkie dane przed przekazaniem punktów grupowanych danych. Liczba serii wyjściowych musi być równa liczbie serii wejściowych lub zostanie wygenerowany wyjątek.</param>
        <summary>Punkty danych grupy dla co najmniej jedna seria przy użyciu co najmniej jedna formuła. Serii wyjściowych są używane do przechowywania punktów danych grupowanych i Przesunięcie może służyć do odstępach czasu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="inputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektu grupowanie.</param>
        <param name="outputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Która zapisze nowe punkty danych utworzone przez operację grupowania. Jeśli nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Grupuje punktów danych w serii przy użyciu co najmniej jedna formuła. Serii wyjściowych jest używany do przechowywania punktów danych grupowanych i Przesunięcie może służyć do odstępach czasu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Grupy punktów danych w co najmniej jedna seria przez etykiety osi, przy użyciu co najmniej jedna formuła.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw wejścia <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</param>
        <summary>Grupy punktów danych w co najmniej jedna seria przez etykiety osi, przy użyciu co najmniej jedna formuła. Oryginalne wartości punktów danych są wyczyszczone, a następnie przechowuje każdej serii jego nowych punktów zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="inputSeries">Dane wejściowe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</param>
        <summary>Grupy punktów danych w serii przez etykiety osi, przy użyciu co najmniej jedna formuła. Oryginalne wartości punktów danych są wyczyszczone, a serii następnie przechowuje nowe punkty zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String, outputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="inputSeriesName">Rozdzielana przecinkami lista nazw wejścia <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</param>
        <param name="outputSeriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> którym będzie przechowywany punktów zgrupowanych danych. Serii nie istnieje, zostanie utworzona; Jeśli istnieje, jej zostanie najpierw wyczyszczone wszystkie dane przed przekazaniem punktów grupowanych danych. Liczba serii wyjściowych musi być równa liczbie serii wejściowych lub zostanie wygenerowany wyjątek.</param>
        <summary>Grupy punktów danych w co najmniej jedna seria przez etykiety osi, przy użyciu co najmniej jedna formuła. Serii wyjściowych są używane do przechowywania punktów zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">Rozdzielana przecinkami lista co najmniej jedna formuła służący do obliczania zgrupowanych danych punktu wartości.</param>
        <param name="inputSeries">Dane wejściowe <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> grupowanie.</param>
        <param name="outputSeries">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Która zapisze nowe punkty danych utworzone przez operację grupowania. Jeśli nie istnieje, zostanie wygenerowany wyjątek.</param>
        <summary>Grupy punktów danych w serii przez etykiety osi, przy użyciu co najmniej jedna formuła. Serii wyjściowych jest używany do przechowywania punktów zgrupowanych danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEmptyPoints">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zamienia brakujących punktów danych w serii lub kolekcji serii punktów puste.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ewidencjonowania.</param>
        <summary>Zamienia brakujących punktów danych w co najmniej jedna seria puste punkty. Zaznaczono poszczególnych serii dla danego interwału, który jest określany przez <paramref name="interval" /> i <paramref name="intervalType" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt, który jest zaznaczony.</param>
        <summary>Zamienia brakujących punktów danych w serii punktów puste. Serii zaznaczono dla danego interwału, który jest określany przez <paramref name="interval" /> i <paramref name="intervalType" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ewidencjonowania.</param>
        <summary>Zamienia brakujących punktów danych w co najmniej jedna seria puste punkty. Zaznaczono poszczególnych serii dla danego interwału, który jest określany przez <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> i <paramref name="intervalType" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiektu, w której mają zostać wstawione puste punkty.</param>
        <summary>Zamienia brakujących punktów danych w serii punktów puste. Serii zaznaczono dla danego interwału, który jest określany przez <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> i <paramref name="intervalType" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="fromXValue">Punkt początkowy zakresu serii mają być sprawdzane. Używa wartości X punktów danych.</param>
        <param name="toXValue">Punkt końcowy dla zakresu serii mają być sprawdzane. Używa wartości X punktów danych.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ewidencjonowania.</param>
        <summary>Zamienia brakujących punktów danych w co najmniej jedna seria puste punkty. Zaznaczono poszczególnych serii dla danego interwału, który jest określany przez <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> i <paramref name="intervalType" /> argumentów. Zakres serii, która jest sprawdzana jest określany przez <paramref name="toXValue" /> i <paramref name="fromXValue" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">Rozmiar interwału sprawdzane pod kątem brakujących punktów danych.</param>
        <param name="intervalType">Jednostki miary <c>interwał</c> parametru.</param>
        <param name="intervalOffset">Wielkość przesunięcia interwału.</param>
        <param name="intervalOffsetType">Jednostki miary przesunięcia interwału.</param>
        <param name="fromXValue">Punkt początkowy zakresu serii mają być sprawdzane. Używa wartości X punktów danych.</param>
        <param name="toXValue">Punkt końcowy dla zakresu serii mają być sprawdzane. Używa wartości X punktów danych.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> w celu wstawienia puste punkty.</param>
        <summary>Zamienia brakujących punktów danych w serii punktów puste. Serii zaznaczono dla danego interwału, który jest określany przez <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> i <paramref name="intervalType" /> argumentów. Zakres serii, która jest sprawdzana jest określany przez <paramref name="toXValue" /> i <paramref name="fromXValue" /> argumentów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dokonuje niestandardowych sortowania punktów danych w co najmniej jedna seria.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint), seriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comparer">Obiekt, który implementuje <see cref="T:System.Collections.IComparer" /> interfejsu i udostępnia niestandardowej logiki sortowania.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać posortowana.</param>
        <summary>Dokonuje niestandardowych sortowania punktów danych w co najmniej jedna seria.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje sortowanie niestandardowe na punktów danych w co najmniej jedna seria; Logika sortowania jest definiowana za pomocą `comparer` parametru. Zastąpienie i wdrożenie <xref:System.Collections.IComparer.Compare%2A> metody <xref:System.Collections.IComparer> interfejsu, wykonaj comparison(s), a następnie wróć `true` lub `false`. Kolejność sortowania jest określana przez wartość zwracaną.  
  
 Należy pamiętać, że jeśli są posortowane wielu serii, serie muszą być wyrównane, w przeciwnym razie zostanie wygenerowany wyjątek.  
  
 Obiekt dwa parametry <xref:System.Collections.IComparer.Compare%2A> metoda zawsze musi być typu <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.  
  
> [!IMPORTANT]
>  Wszystkie punkty danych, niezależnie od serii, do których one należą, są sortowane według pierwszej serii; Zmienia położenie punktu danych w serii pierwszy, wszystkich odpowiednich punktów w innych serii zostanie również zmienić.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="comparer">Obiekt, który implementuje <see cref="T:System.Collections.IComparer" /> interfejsu i udostępnia niestandardowej logiki sortowania.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać posortowana.</param>
        <summary>Dokonuje niestandardowych sortowania punktów danych w serii.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje sortowanie niestandardowe na punktów danych w serii; Logika sortowania jest definiowana za pomocą `comparer` parametru. Zastąpienie i wdrożenie <xref:System.Collections.IComparer.Compare%2A> metody <xref:System.Collections.IComparer> interfejsu, wykonaj comparison(s), a następnie wróć `true` lub `false`. Kolejność sortowania jest określana przez wartość zwracaną.  
  
 Obiekt dwa parametry <xref:System.Collections.IComparer.Compare%2A> metoda zawsze musi być typu <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.  
  
 Aby wykonać sortowanie niestandardowe dla więcej niż jedna seria na wywołanie funkcji, należy użyć <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> wartości wyliczenia, który określa, czy sortowanie ma rosnącej lub malejącej.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać posortowana.</param>
        <summary>Sortuje punktów danych w co najmniej jedna seria przy użyciu określonej kolejności. Sortowanie jest oparta na pierwszą wartość Y każdego z punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> wartości wyliczenia, który określa, czy sortowanie ma rosnącej lub malejącej.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać posortowana.</param>
        <summary>Sortuje punktów danych w serii za pomocą określonej kolejności. Sortowanie jest oparta na pierwszą wartość Y każdego z punktów danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::String ^ seriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> wartości wyliczenia, który określa, czy sortowanie ma rosnącej lub malejącej.</param>
        <param name="sortBy">A <see langword="string" /> wartość, która reprezentuje wartości punktów danych, który ma zostać posortowana. Możliwe wartości to: "X", "Y", "Y2", "Y3", "AxisLabel" i tak dalej.</param>
        <param name="seriesName">Rozdzielana przecinkami lista nazw <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> ma zostać posortowana.</param>
        <summary>Sortuje punktów danych w co najmniej jedna seria przy użyciu określonej kolejności. Sortowanie może bazować na dowolną wartość punktu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje rosnącym lub malejącym danych punktów serii i jest oparta na wartości, które są ustawione w `sortBy` parametrów, takich jak "X", "AxisLabel", "Y", "Y1" i tak dalej.  
  
 Należy pamiętać, że jeśli są posortowane wielu serii, serie muszą być wyrównane, w przeciwnym razie zostanie wygenerowany wyjątek.  
  
> [!IMPORTANT]
>  Wszystkie sortowania serii za pomocą podanych wartości Y od pierwszego wymienione serii; oznacza to, że wszystkie punkty danych, niezależnie od serii, do których one należą, są sortowane według pierwszej serii.  
  
 Aby posortować punktów przy użyciu procedury sortowania niestandardowego, użyj innej definicji tej przeciążonej metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> wartość wyliczenia, która określa, czy sortowanie jest rosnąco lub malejąco</param>
        <param name="sortBy">A <see langword="string" /> wartość, która reprezentuje wartości punktów danych, który ma zostać posortowana. Możliwe wartości to: "X", "Y", "Y2", "Y3", "AxisLabel" i tak dalej.</param>
        <param name="series">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> Obiekt ma zostać posortowana.</param>
        <summary>Sortuje punktów danych w serii za pomocą określonej kolejności. Sortowanie może bazować na dowolną wartość punktu danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>