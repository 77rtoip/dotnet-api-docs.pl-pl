<Type Name="Chart" FullName="System.Windows.Forms.DataVisualization.Charting.Chart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="692259b5f82bbf4e89ff8eb320714f8ddad64407" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69206538" /></Metadata><TypeSignature Language="C#" Value="public class Chart : System.Windows.Forms.Control, IDisposable, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Chart" />
  <TypeSignature Language="VB.NET" Value="Public Class Chart&#xA;Inherits Control&#xA;Implements IDisposable, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Chart : System::Windows::Forms::Control, IDisposable, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Chart = class&#xA;    inherit Control&#xA;    interface ISupportInitialize&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesignerSerializer, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesigner, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Służy jako Klasa <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> główna formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa uwidacznia wszystkie właściwości, metody i zdarzenia formantu okna wykresu.  
  
 Dwie ważne właściwości <xref:System.Windows.Forms.DataVisualization.Charting.Chart> klasy <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A> to właściwości i <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A> , które są właściwościami kolekcji. Właściwość kolekcji przechowuje <xref:System.Windows.Forms.DataVisualization.Charting.Series> obiekty, które są używane do przechowywania danych, które mają być wyświetlane, wraz z atrybutami tych danych. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A> Właściwość kolekcji przechowuje <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> obiekty, które są głównie używane do rysowania jednego lub kilku wykresów przy użyciu jednego zestawu osi. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Chart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tego konstruktora można utworzyć nowe wystąpienie <xref:System.Windows.Forms.DataVisualization.Charting.Chart> klasy w czasie wykonywania.  
  
 Jednak dla uproszczenia zaleca się utworzenie <xref:System.Windows.Forms.DataVisualization.Charting.Chart> wystąpienia w czasie projektowania.  
  
 Jest to obiekt <xref:System.Windows.Forms.DataVisualization.Charting.Chart> główny formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AlignDataPointsByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyrównuje punkty danych przy użyciu ich etykiet osi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel();" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : unit -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyrównuje punkty danych wzdłuż osi X przy użyciu ich etykiet osi. Zastosowanie w przypadku indeksowania wielu serii, a ich wartości X są ciągami.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : string -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">Rozdzielana przecinkami lista serii, która będzie miała wyrównane punkty danych do osi X przy użyciu etykiet osi punktu danych.</param>
        <summary>Wyrównuje punkty danych z różnych serii wzdłuż osi X przy użyciu ich etykiet osi. Określona seria na wykresie jest wyrównana przy użyciu rosnącej kolejności sortowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do wyrównywania punktów danych z różnych serii wzdłuż osi X przy użyciu ich etykiet osi i ma zastosowanie w przypadku:  
  
-   Zostanie wyświetlona wiele serii i są indeksowane; oznacza to, że wszystkie punkty danych mają <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> 0 <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> lub właściwość `true`.  
  
-   Wszystkie punkty danych mają niepuste etykiety osi, które są unikatowe dla ich <xref:System.Windows.Forms.DataVisualization.Charting.Series>. Jeśli nie są unikatowe, zostanie zgłoszony wyjątek.  
  
 Ta sytuacja jest bardzo powszechna, gdy powstaje powiązania danych w tworzeniu wielu serii, a `string` wartości są używane na potrzeby wartości na osi X.  
  
 Dwa problemy powstają, gdy zostanie wykreślona wiele zindeksowanych serii, a wartości X są ustawiane `string` przy użyciu wartości:  
  
-   Nie można zagwarantować, że punkty danych z różnych serii z tym samym ciągiem X-wartości będą kreślone w tym samym indeksie wzdłuż osi X.  
  
-   Zostanie wyświetlona tylko etykieta osi dla punktów danych w pierwszej serii, mimo że punkty danych z innej serii z tym samym indeksem mają również etykiety osi.  
  
 Domyślnie punkty są kreślone w kolejności, w jakiej są przechowywane w ich serii. Aby określić kolejność sortowania, należy użyć `AlignDataPointsByAxisLabel` przeciążenia metody z `sortingOrder` parametrem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel sortingOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder"><see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> Obiekt, który wskazuje, czy porządek sortowania w porządku rosnącym lub malejącym jest używany na etykietach osi, co z kolei określa kolejność, w jakiej są wyświetlane punkty, które wcześniej zajmowały ten sam obszar osi.</param>
        <summary>Wyrównuje punkty danych przy użyciu ich etykiet osi. Wszystkie serie na wykresie są wyrównane przy użyciu podanej kolejności sortowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlignDataPointsByAxisLabel (series As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AlignDataPointsByAxisLabel(System::String ^ series, System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.AlignDataPointsByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.AlignDataPointsByAxisLabel (series, sortingOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">Rozdzielana przecinkami lista serii, która powinna być wyrównana według etykiety osi.</param>
        <param name="sortingOrder">Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> wyliczenia określająca, czy porządek sortowania rosnący lub malejący jest używany na etykietach osi, co z kolei określa kolejność, w jakiej są wyświetlane punkty, które wcześniej zajmowały tę samą przestrzeń osi.</param>
        <summary>Wyrównuje punkty danych przy użyciu ich etykiet osi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do wyrównywania punktów danych z różnych serii wzdłuż osi X przy użyciu ich etykiet osi i ma zastosowanie w przypadku:  
  
-   Zostanie wyświetlona wiele serii i są indeksowane; oznacza to, że wszystkie punkty danych mają <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> 0 <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> lub właściwość `true`.  
  
-   Wszystkie punkty danych mają niepuste etykiety osi, które są unikatowe dla ich <xref:System.Windows.Forms.DataVisualization.Charting.Series>. Jeśli nie są unikatowe, zostanie zgłoszony wyjątek.  
  
 Ta sytuacja jest bardzo powszechna, gdy powstaje powiązania danych w tworzeniu wielu serii, a `string` wartości są używane na potrzeby wartości na osi X.  
  
 Dwa problemy powstają, gdy zostanie wykreślona wiele zindeksowanych serii, a wartości X są ustawiane `string` przy użyciu wartości:  
  
-   Nie można zagwarantować, że punkty danych z różnych serii z tym samym ciągiem X-wartości będą kreślone w tym samym indeksie wzdłuż osi X.  
  
-   Zostanie wyświetlona tylko etykieta osi dla punktów danych w pierwszej serii, mimo że punkty danych z innej serii z tym samym indeksem mają również etykiety osi.  
  
 Domyślnie punkty są kreślone w kolejności, w jakiej są przechowywane w ich serii. Aby określić kolejność sortowania, należy użyć `AlignDataPointsByAxisLabel` przeciążenia metody z `sortingOrder` parametrem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPlaced">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPlaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPlaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPlaced" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPlaced As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationPlaced;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPlaced : EventHandler " Usage="member this.AnnotationPlaced : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik końcowy umieści adnotację na wykresie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationPositionChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPositionChanged : EventHandler " Usage="member this.AnnotationPositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationPositionChanging As EventHandler(Of AnnotationPositionChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::AnnotationPositionChangingEventArgs ^&gt; ^ AnnotationPositionChanging;" />
      <MemberSignature Language="F#" Value="member this.AnnotationPositionChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; " Usage="member this.AnnotationPositionChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Annotations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Annotations As AnnotationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AnnotationCollection ^ Annotations { System::Windows::Forms::DataVisualization::Charting::AnnotationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Annotations : System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Annotations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję, w której są przechowywane adnotacje wykresu.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" /> Obiekt, który jest używany do przechowywania adnotacji wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie adnotacje wykresu są przechowywane we właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationSelectionChanged : EventHandler " Usage="member this.AnnotationSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona wybrana adnotacja.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnnotationTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AnnotationTextChanged;" />
      <MemberSignature Language="F#" Value="member this.AnnotationTextChanged : EventHandler " Usage="member this.AnnotationTextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie tekstu adnotacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberSignature Language="VB.NET" Value="Public Property AntiAliasing As AntiAliasingStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles AntiAliasing { System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles get(); void set(System::Windows::Forms::DataVisualization::Charting::AntiAliasingStyles value); };" />
      <MemberSignature Language="F#" Value="member this.AntiAliasing : System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy wygładzanie jest używane podczas rysowania tekstu i grafiki.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles" /> wyliczenia, która określa, czy wygładzanie jest używane podczas rysowania tekstu i grafiki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antyaliasowanie smoothens "postrzępionych krawędzi" przez dopełnienie pikseli przy użyciu kolorów pośrednich i jest szczególnie skuteczne dla wygładzania krawędzi dla wykresów, które nie są rysowane jako prostokąty. Na przykład wygładzanie jest bardzo skuteczne w przypadku wykresów liniowych i wykresów kołowych, ale nie jest to efektywne dla wykresów słupkowych i kolumnowych.  
  
 Wygładzanie może być stosowane do tekstu i/lub elementów pierwotnych, takich jak prostokąty, okręgi i tak dalej.  
  
 Należy zauważyć, że wygładzanie będzie miało wpływ na wydajność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyPaletteColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyPaletteColors();" />
      <MemberSignature Language="F#" Value="member this.ApplyPaletteColors : unit -&gt; unit" Usage="chart.ApplyPaletteColors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia automatycznie przypisane kolory serii i punktu danych, aby zezwolić na dostęp programistyczny w czasie wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy kolory są automatycznie przypisywane w czasie wykonywania, nie ma możliwości, aby wiedzieć, jakie kolory będą przed czasem, gdy wykres zostanie renderowany `Color` ; Właściwość <xref:System.Drawing.Color.Empty> automatycznie przypisanej wartości zwróci w tym momencie. <xref:System.Windows.Forms.DataVisualization.Charting.Chart>  
  
 Jeśli wywołasz <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors%2A> metodę, kolory dla serii i punkty danych zostaną ustawione, co pozwala na dostęp programistyczny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisScrollBarClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisScrollBarClicked" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisScrollBarClicked As EventHandler(Of ScrollBarEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ScrollBarEventArgs ^&gt; ^ AxisScrollBarClicked;" />
      <MemberSignature Language="F#" Value="member this.AxisScrollBarClicked : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; " Usage="member this.AxisScrollBarClicked : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kliknięciu paska przewijania osi przez użytkownika końcowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisViewChanged As EventHandler(Of ViewEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ViewEventArgs ^&gt; ^ AxisViewChanged;" />
      <MemberSignature Language="F#" Value="member this.AxisViewChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " Usage="member this.AxisViewChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja lub rozmiar widoku skali osi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event AxisViewChanging As EventHandler(Of ViewEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ViewEventArgs ^&gt; ^ AxisViewChanging;" />
      <MemberSignature Language="F#" Value="member this.AxisViewChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " Usage="member this.AxisViewChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja lub rozmiar widoku skali osi.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> tła obiektu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość służąca do rysowania koloru tła wykresu. Kolor domyślny to <see cref="System.Drawing.Color.White" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić na dowolną prawidłową wartość ARGB (alfa, czerwonego, zielonego, niebieski). Należy pamiętać, że <xref:System.Windows.Forms.DataVisualization.Charting.Chart> dla obiektu składnik alfa nie może być ustawiony na wartość inną niż 255. Oznacza to również, że tylko <xref:System.Windows.Forms.DataVisualization.Charting.Chart> <xref:System.Drawing.Color.Transparent%2A> dla obiektu nie można użyć wartości.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> Wartość będzie pierwszym używanym kolorem, jeśli są używane kolory gradientu tła.  
  
 Wartość alfa steruje nieprzezroczystością koloru. W przypadku ustawienia tego koloru na "przezroczysty" — to oznacza, że jeśli używasz wartości Alfa równej 0 — żaden kolor nie zostanie przypisany do tła tytułu. W związku z tym tło będzie przezroczyste.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia orientację gradientu <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> tła formantu. Określa również, czy gradient jest używany.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> Wyliczenie, które określa orientację gradientu tła wykresu i wskazuje, czy gradient jest używany. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> , aby określić, <xref:System.Windows.Forms.DataVisualization.Charting.Chart> czy kontrolka będzie wyświetlać gradient, i określić orientację gradientu, jeśli jest używany.  
  
 Aby uzyskać listę dostępnych wzorców, zapoznaj <xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> się z wyliczeniem.  
  
 Aby użyć kolorów gradientu:  
  
 Ustaw kolor podstawowy tła wykresu z <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> właściwością.  
  
 Ustaw pomocniczy kolor tła wykresu z <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> właściwością.  
  
 Ustaw tę <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> właściwość na żądany styl gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" /> Właściwość nie jest używana. Zamiast tego użyj właściwości. <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" /></summary>
        <value><see cref="T:System.Drawing.Image" /> Obiekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kreskowania kontrolki.</summary>
        <value>Wyliczenie określające styl kreskowania <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" />kontrolki. <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyliczenie określa wzorzec kreskowania używany przez pędzel typu <xref:System.Drawing.Drawing2D.HatchBrush>. <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> Wzorzec kreskowania składa się z pełnego koloru tła i linii rysowanych w tle.  
  
 Aby uzyskać listę dostępnych stylów kreskowania, zapoznaj się z <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> wyliczeniem.  
  
 **Uwaga** Kolor linii kreskowania jest określany przez <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> tła formantu.</summary>
        <value><see langword="string" /> Wartość, która reprezentuje adres URL pliku obrazu. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość definiuje ścieżkę do obrazu <xref:System.Windows.Forms.DataVisualization.Charting.Chart> tła legendy i może być bezwzględnym lub względnym adresem URL.  
  
 Aby ustawić położenie obrazu, użyj <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A> właściwości i. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A>  
  
 Możesz również określić jeden z kolorów wyświetlanych na obrazie jako "przezroczyste" przez ustawienie <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor%2A> właściwości.  
  
 Obraz może pochodzić z dowolnego prawidłowego pliku graficznego obsługiwanego przez .NET Framework, w tym ikon.  
  
 Obrazy tła mają pierwszeństwo przed innymi właściwościami tła, takimi jak kolor gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie obrazu tła używane w <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> trybie rysowania.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> wyliczenia, która określa wyrównanie obrazu tła wykresu. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa wyrównanie obrazu tła dla <xref:System.Windows.Forms.DataVisualization.Charting.Chart> kontrolki. jest ona stosowana tylko wtedy, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A> gdy właściwość jest ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formantu, który będzie wyświetlany jako przezroczysty.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość, która będzie wyświetlana jako przezroczysty podczas rysowania obrazu wykresu. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb rysowania obrazu <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> tła formantu.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> wyliczenia, która określa tryb rysowania obrazu tła wykresu. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa sposób wyświetlania obrazu, na przykład z podziałem na fragmenty, skalowane i tak dalej.  
  
 Jeśli obraz jest skalowany, będzie rozciągany w celu dopasowania go do granic wykresu. Jeśli obraz jest sąsiadujący, jest wielokrotnie rysowany, zaczynając od lewego górnego rogu wykresu.  
  
 Aby uzyskać więcej informacji na temat dostępnych trybów zawijania, <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> Zobacz temat Wyliczenie.  
  
 Jeśli właściwość jest ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode>, lokalizacja, w której jest <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A> rysowany obraz, zależy od ustawienia właściwości. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pomocniczy kolor tła wykresu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość, która reprezentuje kolor pomocniczy tła wykresu. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa pomocniczy kolor tła wielu <xref:System.Windows.Forms.DataVisualization.Charting.Chart> obiektów i jest używany, gdy stosowane są kolory gradientu. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A>  
  
 Można ustawić <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> wszystkie prawidłowe wartości ARGB (alfa, czerwone, zielone, niebieskie).  
  
 Jeśli jest używane Kreskowanie, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> Właściwość określa kolor linii kreskowych wykresu.  
  
 Aby użyć kolorów gradientu dla tła wykresu:  
  
-   Ustaw kolor podstawowy z <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> właściwością.  
  
-   Ustaw kolor pomocniczy za pomocą <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> właściwości.  
  
-   <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> Ustaw właściwość na żądany styl gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="chart.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje obiektowi, który jest inicjowany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor obramowania wykresu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość służąca do rysowania obramowania wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać lub ustawić kolor obramowania, użyj <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor%2A> zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> wyliczenia, która określa styl obramowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderlineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor linii obramowania.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość służąca do rysowania linii obramowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderlineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl linii obramowania.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> wyliczenia, która określa styl linii obramowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderlineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderlineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderlineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość linii obramowania.</summary>
        <value><see langword="integer" /> Wartość określająca szerokość linii obramowania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderSkin As BorderSkin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ BorderSkin { System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::BorderSkin ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderSkin : System.Windows.Forms.DataVisualization.Charting.BorderSkin with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" /> obiekt, który zapewnia funkcję <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> skórki obramowania formantu.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" /> Obiekt, który zapewnia funkcję skórki obramowania wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie skórki obramowania wykresu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość obramowania wykresu.</summary>
        <value><see langword="integer" /> Wartość określająca szerokość obramowania wykresu (w pikselach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać lub ustawić szerokość obramowania, użyj <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth%2A> zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BuildNumber { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BuildNumber : string" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera numer <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kompilacji formantu.</summary>
        <value><see langword="string" /> Reprezentujący numer kompilacji kontrolki wykresu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartAreas As ChartAreaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartAreaCollection ^ ChartAreas { System::Windows::Forms::DataVisualization::Charting::ChartAreaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChartAreas : System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt tylko <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" /> do odczytu, który jest używany do przechowywania <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> obiektów.</summary>
        <value>Obiekt tylko <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" /> do odczytu, który zawiera <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> kolekcję obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość kolekcji pozwala uzyskać dostęp <xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection> do obiektu, który przechowuje <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> obiekty, a także udostępnia metody i właściwości używane do manipulowania kolekcją.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>obiekty są używane do kreślenia jednego lub kilku wykresów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="chart.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca niestandardową <see cref="T:System.Windows.Forms.AccessibleObject" /> dla całego wykresu.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> Dla wykresu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CursorPositionChanged As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ CursorPositionChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorPositionChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.CursorPositionChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie położenia kursora.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CursorPositionChanging As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ CursorPositionChanging;" />
      <MemberSignature Language="F#" Value="member this.CursorPositionChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.CursorPositionChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy położenie kursora ma zostać zmienione.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" />
      <MemberSignature Language="VB.NET" Value="Public Event Customize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Customize;" />
      <MemberSignature Language="F#" Value="member this.Customize : EventHandler " Usage="member this.Customize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje tuż przed narysowaniem obrazu wykresu. To zdarzenie służy do dostosowywania obrazu wykresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberSignature Language="VB.NET" Value="Public Event CustomizeLegend As EventHandler(Of CustomizeLegendEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CustomizeLegendEventArgs ^&gt; ^ CustomizeLegend;" />
      <MemberSignature Language="F#" Value="member this.CustomizeLegend : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; " Usage="member this.CustomizeLegend : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy legenda wykresu musi być dostosowana.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind();" />
      <MemberSignature Language="F#" Value="member this.DataBind : unit -&gt; unit" Usage="chart.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dane wiążą <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formant ze źródłem danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda będzie powiązać <xref:System.Windows.Forms.DataVisualization.Charting.Chart> formant z określonym źródłem danych.  
  
 W przypadkach, gdy źródło danych jest ustawione na wykres i nie są wymagane żadne inne operacje na <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A> danych, metoda nie musi być jawnie wywoływana. W takich przypadkach <xref:System.Windows.Forms.DataVisualization.Charting.Chart> przed renderowaniem dane zostaną powiązane ze źródłem danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindCrossTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dane wiążą wykres z tabelą z jedną serią utworzoną dla każdej unikatowej wartości w danej kolumnie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindCrossTable : System.Collections.IEnumerable * string * string * string * string -&gt; unit" Usage="chart.DataBindCrossTable (dataSource, seriesGroupByField, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, które jest powiązane z wykresem.</param>
        <param name="seriesGroupByField">Nazwa pola używanego do grupowania danych w serii.</param>
        <param name="xField">Nazwa pola dla wartości X.</param>
        <param name="yFields">Rozdzielana przecinkami lista nazw (y) pól dla wartości Y.</param>
        <param name="otherFields">Inne właściwości punktu danych, które można powiązać.</param>
        <summary>Dane wiążą wykres z tabelą z jedną serią utworzoną dla każdej unikatowej wartości w danej kolumnie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seria zostanie automatycznie dodana do wykresu, w zależności od liczby unikatowych wartości w danej `seriesGroupByField` kolumnie źródła danych; innymi słowy, tworzenie serii zależy od grupowania kolumny.  
  
 Źródło danych może być <xref:System.Data.OleDb.OleDbDataReader> <xref:System.Data.SqlClient.SqlDataReader> lub <xref:System.Data.DataView> obiektem. Należy pamiętać, że można użyć wszystkich <xref:System.Collections.IEnumerable> kolekcji implementujących interfejs.  
  
 Inne właściwości punktów danych oprócz wartości X i Y można powiązać. Format jest następujący: PointProperty = pole [{Format}] [, PointProperty = pole [{Format}]]. Na przykład: "etykietka narzędzia = cena {C1}, href = WebsiteName".  
  
Te właściwości punktów danych są następujące: 

- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType> 
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A?displayProperty=nameWithType>, które są nazwami właściwości niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindCrossTable (dataSource As IEnumerable, seriesGroupByField As String, xField As String, yFields As String, otherFields As String, sortingOrder As PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindCrossTable(System::Collections::IEnumerable ^ dataSource, System::String ^ seriesGroupByField, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields, System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortingOrder);" />
      <MemberSignature Language="F#" Value="member this.DataBindCrossTable : System.Collections.IEnumerable * string * string * string * string * System.Windows.Forms.DataVisualization.Charting.PointSortOrder -&gt; unit" Usage="chart.DataBindCrossTable (dataSource, seriesGroupByField, xField, yFields, otherFields, sortingOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, które jest powiązane z wykresem.</param>
        <param name="seriesGroupByField">Nazwa pola używanego do grupowania danych w serii.</param>
        <param name="xField">Nazwa pola dla wartości X.</param>
        <param name="yFields">Rozdzielana przecinkami lista nazw (y) pól dla wartości Y.</param>
        <param name="otherFields">Inne właściwości punktu danych, które można powiązać.</param>
        <param name="sortingOrder">Kolejność, w której seria będzie sortowana według wartości pól grup.</param>
        <summary>Dane wiążą wykres z tabelą z jedną serią utworzoną dla każdej unikatowej wartości w danej kolumnie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seria zostanie automatycznie dodana do wykresu, w zależności od liczby unikatowych wartości w danej `seriesGroupByField` kolumnie źródła danych; innymi słowy, tworzenie serii zależy od grupowania kolumny.  
  
 Źródło danych może być <xref:System.Data.OleDb.OleDbDataReader> <xref:System.Data.SqlClient.SqlDataReader> lub <xref:System.Data.DataView> obiektem.  
  
 Należy pamiętać, że można użyć wszystkich <xref:System.Collections.IEnumerable> kolekcji implementujących interfejs.  
  
 Inne właściwości punktów danych oprócz wartości X i Y można powiązać. Format jest następujący: PointProperty = pole [{Format}] [, PointProperty = pole [{Format}]]. Na przykład: "etykietka narzędzia = cena {C1}, href = WebsiteName".  
  
Te właściwości punktów danych są następujące: 

- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A?displayProperty=nameWithType>
- <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, które są nazwami właściwości niestandardowych  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Automatycznie tworzy i wiąże dane serii z określoną tabelą danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.DataBindTable : System.Collections.IEnumerable -&gt; unit" Usage="chart.DataBindTable dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, które jest powiązane z wykresem, które może być dowolnym <see cref="T:System.Collections.IEnumerable" /> obiektem.</param>
        <summary>Automatycznie tworzy i wiąże dane serii z określoną tabelą danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda kolumna tabeli przyjmuje wartość Y dla serii, z jedną serią na kolumnę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindTable (dataSource As IEnumerable, xField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindTable(System::Collections::IEnumerable ^ dataSource, System::String ^ xField);" />
      <MemberSignature Language="F#" Value="member this.DataBindTable : System.Collections.IEnumerable * string -&gt; unit" Usage="chart.DataBindTable (dataSource, xField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych, które jest powiązane z wykresem, które może być dowolnym <see cref="T:System.Collections.IEnumerable" /> obiektem.</param>
        <param name="xField">Nazwa pola używanego dla wartości serii X.</param>
        <summary>Program automatycznie tworzy i wiąże dane serii z określoną tabelą danych i opcjonalnie wypełnia wartości X.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda kolumna tabeli przyjmuje wartość Y dla serii, z jedną serią na kolumnę.  
  
 Można również podać pole wartości X serii.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataManipulator As DataManipulator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DataManipulator ^ DataManipulator { System::Windows::Forms::DataVisualization::Charting::DataManipulator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataManipulator" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> Pobiera obiekt, który dostarcza metody i właściwości, które obsługują dane.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> Obiekt, który dostarcza metody i właściwości, które obsługują dane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości w czasie wykonywania, aby:  
  
-   Kopiuj wartości Y.  
  
-   Filtrowanie danych.  
  
-   Grupuj dane.  
  
-   Zamień brakujące dane na puste punkty.  
  
-   Eksportuj dane do <xref:System.Data.DataSet> obiektu.  
  
-   Sortuj dane.  
  
-   Zastosuj formułę finansową do danych.  
  
 Więcej informacji można znaleźć w temacie Omówienie klasy.<xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia źródło danych dla <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> obiektu.</summary>
        <value>Reprezentuje źródło danych <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> dla obiektu. <see cref="T:System.Object" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Punkty danych w serii można powiązać ze źródłem danych w dowolnym momencie przy użyciu <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource%2A> właściwości.  
  
 Aby wymusić powiązanie wykresu ze źródłem danych, wywołaj <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A> metodę.  
  
 Poniżej znajduje się lista obiektów, których można użyć jako źródła danych:  
  
-   DataView  
  
-   Czytelnicy danych (SQL, OleDB)  
  
-   DataSet  
  
-   DataTable  
  
-   Źródło powiązania  
  
-   Element  
  
-   Tablice  
  
-   Listy  
  
-   Wszystkie wyliczalne obiekty  
  
-   SqlCommand/OleDbCommand (tylko wiązanie danych DataSource)  
  
-   SqlDataAdapter/elementu OleDbDataAdapter (tylko wiązanie danych DataSource)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domyślny rozmiar kontrolki.</summary>
        <value><see cref="T:System.Drawing.Size" /> Obiekt, który reprezentuje domyślny rozmiar kontrolki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="chart.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby niezarządzane i zarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane i, opcjonalnie, zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="chart.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> obiektowi, który zakończył inicjowanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera właściwości czcionki formantu.</summary>
        <value><see cref="T:System.Drawing.Font" /> Obiekt, który reprezentuje czcionkę tekstową formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> tekstu formantu.</summary>
        <value><see cref="T:System.Drawing.Color" /> Wartość określająca kolor tekstu wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie ma zastosowania do tej klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberSignature Language="VB.NET" Value="Public Event FormatNumber As EventHandler(Of FormatNumberEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::FormatNumberEventArgs ^&gt; ^ FormatNumber;" />
      <MemberSignature Language="F#" Value="member this.FormatNumber : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; " Usage="member this.FormatNumber : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość liczbowa musi być konwertowana na ciąg.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object element, System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object element, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChartElementOutline (element As Object, elementType As ChartElementType) As ChartElementOutline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ChartElementOutline ^ GetChartElementOutline(System::Object ^ element, System::Windows::Forms::DataVisualization::Charting::ChartElementType elementType);" />
      <MemberSignature Language="F#" Value="member this.GetChartElementOutline : obj * System.Windows.Forms.DataVisualization.Charting.ChartElementType -&gt; System.Windows.Forms.DataVisualization.Charting.ChartElementOutline" Usage="chart.GetChartElementOutline (element, elementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> Obiekt.</param>
        <param name="elementType">Typ elementu.</param>
        <summary>Zwraca kontur elementu wykresu.</summary>
        <returns><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementOutline" /> Obiekt, który zawiera: 
-Tablica punktów w absolutnych współrzędnych, które mogą być używane jako znaczniki konturu wokół tego elementu wykresu.  
  
<see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> -Obiekt do rysowania konspektu wokół tego elementu wykresu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie `elementType` `chartElement`jest częścią wykresu lub nie można łączyć z, wynik będzie zawierać pustą tablicę punktów znacznika. `chartElement` Punkty znacznika są sortowane w prawo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="override this.GetService : Type -&gt; obj" Usage="chart.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Typ żądanego usługi wykresu.</param>
        <summary>Zwraca żądaną usługę wykresu.</summary>
        <returns>Reprezentuje typ usługi lub <see langword="null" /> nie można znaleźć usługi. <see cref="T:System.Object" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToolTipText">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.GetToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Event GetToolTipText As EventHandler(Of ToolTipEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ToolTipEventArgs ^&gt; ^ GetToolTipText;" />
      <MemberSignature Language="F#" Value="member this.GetToolTipText : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; " Usage="member this.GetToolTipText : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed wyświetleniem etykietki narzędzia w celu pobrania tekstu etykietki narzędzia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa element wykresu (jeśli istnieje), który znajduje się w punkcie zdefiniowanym przez daną współrzędne X i Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić element wykresu (jeśli istnieje), który znajduje się w określonym punkcie.  
  
 Ta metoda jest często używana w pewnym zdarzeniu związanym z myszą — <xref:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown%2A> na przykład, aby określić, który element wykresu kliknięty przez użytkownika końcowego. Współrzędne myszy X i Y uzyskane z parametrów zdarzenia są następnie używane dla `x` `y` wartości parametrów tego wywołania metody.   
  
 Właściwości <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> zwracanego obiektu można następnie użyć do określenia, który element wykresu został kliknięty <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> ; obiekt zawiera również wystąpienie rzeczywistego obiektu wybranego, jeśli istnieje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Wartość współrzędnej X punktu klikniętego przez użytkownika.</param>
        <param name="y">Wartość współrzędnej Y punktu klikniętego przez użytkownika.</param>
        <summary>Określa element wykresu (jeśli istnieje), który znajduje się w punkcie zdefiniowanym przez daną współrzędne X i Y.</summary>
        <returns><see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> Obiekt, który zawiera informacje dotyczące elementu wykresu, jeśli istnieje, który znajduje się w określonej lokalizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić element wykresu (jeśli istnieje), który znajduje się w określonym punkcie.  
  
 Właściwości <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> zwracanego obiektu można następnie użyć do określenia, który element wykresu został kliknięty <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> ; obiekt zawiera również wystąpienie rzeczywistego obiektu wybranego, jeśli istnieje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * bool -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y, ignoreTransparent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">Wartość współrzędnej X punktu klikniętego przez użytkownika.</param>
        <param name="y">Wartość współrzędnej Y punktu klikniętego przez użytkownika.</param>
        <param name="ignoreTransparent"><see langword="true" />ignorowanie przezroczystych elementów; w przeciwnym razie. <see langword="false" /></param>
        <summary>Określa element wykresu (jeśli istnieje), który znajduje się w punkcie zdefiniowanym przez daną współrzędne X i Y. Elementy przezroczyste mogą być opcjonalnie ignorowane.</summary>
        <returns><see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> Obiekt, który zawiera informacje dotyczące elementu wykresu, jeśli istnieje, który znajduje się w określonej lokalizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić element wykresu (jeśli istnieje), który znajduje się w określonym punkcie.  
  
 Aby zignorować przezroczyste elementy, ustaw `ignoreTransparent` parametr na `true`.  
  
 Właściwości <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> zwracanego obiektu można następnie użyć do określenia, który element wykresu został kliknięty <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> ; obiekt zawiera również wystąpienie rzeczywistego obiektu wybranego, jeśli istnieje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, requestedElement As ChartElementType) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::HitTestResult ^ HitTest(int x, int y, System::Windows::Forms::DataVisualization::Charting::ChartElementType requestedElement);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * System.Windows.Forms.DataVisualization.Charting.ChartElementType -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult" Usage="chart.HitTest (x, y, requestedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">Wartość współrzędnej X punktu klikniętego przez użytkownika.</param>
        <param name="y">Wartość współrzędnej Y punktu klikniętego przez użytkownika.</param>
        <param name="requestedElement">Flaga określająca typ elementu wykresu do przetestowania.</param>
        <summary>Określa, czy element wykresu danego typu znajduje się w punkcie zdefiniowanym przez daną współrzędne X i Y.</summary>
        <returns><see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> Obiekt, który zawiera informacje dotyczące elementu wykresu, jeśli istnieje, który znajduje się w określonej lokalizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić, czy element wykresu danego typu znajduje się w określonym punkcie.  
  
 Właściwości <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> zwracanego obiektu można następnie użyć do określenia, który element wykresu został kliknięty <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> ; obiekt zawiera również wystąpienie rzeczywistego obiektu wybranego, jeśli istnieje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, params System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Windows.Forms.DataVisualization.Charting.ChartElementType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer, ignoreTransparent As Boolean, ParamArray requestedElement As ChartElementType()) As HitTestResult()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::DataVisualization::Charting::HitTestResult ^&gt; ^ HitTest(int x, int y, bool ignoreTransparent, ... cli::array &lt;System::Windows::Forms::DataVisualization::Charting::ChartElementType&gt; ^ requestedElement);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int * bool * System.Windows.Forms.DataVisualization.Charting.ChartElementType[] -&gt; System.Windows.Forms.DataVisualization.Charting.HitTestResult[]" Usage="chart.HitTest (x, y, ignoreTransparent, requestedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">Współrzędna X dla określonego punktu danych.</param>
        <param name="y">Współrzędna Y dla określonego punktu danych.</param>
        <param name="ignoreTransparent"><see langword="true" />ignorowanie przezroczystych elementów; w przeciwnym razie. <see langword="false" /></param>
        <param name="requestedElement">Tablica <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementType" /> obiektów, która określa typy do przetestowania, aby można było filtrować wyniki. W przypadku pominięcia sprawdzanie typów elementów zostanie zignorowane, a wszystkie typy elementów będą prawidłowe.</param>
        <summary>Określa, czy element wykresu, który jest jednym z określonych typów, znajduje się w punkcie zdefiniowanym przez daną współrzędne X i Y.</summary>
        <returns>Tablica <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> obiektów, która zawiera informacje o elemencie wykresu, jeśli istnieje, w określonej lokalizacji. Tablica zawiera co najmniej jeden element, który może być <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartElementType.Nothing" />. Obiekty w wyniku są sortowane od góry do dołu z różnych warstw formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby określić element miernika (jeśli istnieje), który znajduje się w określonym punkcie. Ta metoda jest często używana w pewnym zdarzeniu związanym z myszą, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown%2A>na przykład w celu określenia, który element miernika kliknął użytkownik końcowy. Współrzędne myszy X i Y uzyskane z parametrów zdarzenia są następnie używane dla wartości parametrów X i Y tego wywołania metody.   
  
 Właściwości zwracanego <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> obiektu można następnie użyć do określenia, który element wykresu został kliknięty <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> ; obiekt zawiera również wystąpienie rzeczywistego wybranego obiektu, jeśli istnieje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Images" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Images As NamedImagesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::NamedImagesCollection ^ Images { System::Windows::Forms::DataVisualization::Charting::NamedImagesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Images : System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Images" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który przechowuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" /> obiekty dla wykresu. <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" /></summary>
        <value>Obiekt, który zawiera <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" /> kolekcję obiektów. <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> dodać obiekty do i <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> usunąć obiekty <xref:System.Windows.Forms.DataVisualization.Charting.Chart>z <xref:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection> obiektu. Ta właściwość kolekcji jest dostępna tylko w czasie wykonywania.  
  
 Obraz, czyli obiekt <xref:System.Drawing.Image>pochodzący z typu, taki jak <xref:System.Drawing.Bitmap>, który jest tworzony dynamicznie — może być przechowywany w tej kolekcji, a następnie przypisywany w późniejszym czasie do dowolnej właściwości powiązanej z <xref:System.Windows.Forms.DataVisualization.Charting.Chart> obrazem, na przykład <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage%2A>.  
  
 Podczas przypisywania <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> obiektu do właściwości powiązanej z obrazem <xref:System.Windows.Forms.DataVisualization.Charting.Chart> w klasie należy <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> użyć nazwy obiektu dla `string` wartości właściwości powiązanej z obrazem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unieważnia całą powierzchnię <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> i powoduje, że <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolka zostanie narysowana ponownie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="override this.Invalidate : unit -&gt; unit" Usage="chart.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia całą powierzchnię <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> i powoduje, że <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolka zostanie narysowana ponownie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="override this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="chart.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><see cref="T:System.Drawing.Rectangle" /> Obiekt, który określa obszar do unieważnienia.</param>
        <summary>Unieważnia określony obszar <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje określony obszar do <xref:System.Windows.Forms.DataVisualization.Charting.Chart> obszaru aktualizacji kontrolki, który jest obszarem, który zostanie odmalowany podczas następnej operacji malowania. Ta metoda powoduje również wysłanie <xref:System.Windows.Forms.DataVisualization.Charting.Chart> komunikatu Paint do kontrolki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSoftShadows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSoftShadows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSoftShadows : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę określającą, czy podczas rysowania cieni jest stosowane wygładzanie gradientu.</summary>
        <value><see langword="true" />Jeśli cienie są rysowane przy użyciu wygładzania; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość `ShadowOffset` właściwości dla serii, punktu danych, obszaru wykresu lub legendy jest różna od zera, cień zostanie zastosowany przy użyciu koloru ustawionego według ich `ShadowColor` właściwości.  
  
 Jeśli wartość <xref:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows%2A> właściwości jest `true`, do cienia zostanie zastosowany gładki gradient.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Legends" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legends As LegendCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendCollection ^ Legends { System::Windows::Forms::DataVisualization::Charting::LegendCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Legends : System.Windows.Forms.DataVisualization.Charting.LegendCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Legends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia element <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" /> , który przechowuje <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> wszystkie obiekty używane przez <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formant.</summary>
        <value>Obiekt, który <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> zawiera obiekty używane przez wykres. <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość kolekcji przechowuje wszystkie <xref:System.Windows.Forms.DataVisualization.Charting.Legend> obiekty używane <xref:System.Windows.Forms.DataVisualization.Charting.Chart> przez formant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje szablon do <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formantu z określonego źródła.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.LoadTemplate : System.IO.Stream -&gt; unit" Usage="chart.LoadTemplate stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień do załadowania.</param>
        <summary>Ładuje szablon do <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolki ze strumienia obrazu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, jeśli chcesz załadować szablon ze strumienia, takiego jak strumień pamięci, strumień plików i tak dalej.  
  
 Upewnij się, że właściwość <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> jest ustawiona `true` na przed <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> zapisaniem szablonu przy użyciu metody.  
  
 Jeśli załadowany szablon ma dwie serie danych, właściwości wyglądu serii są stosowane sekwencyjnie na wykresie. Inaczej mówiąc, właściwości pierwszego wyglądu serii szablonów są przypisywane do pierwszej serii wykresu, a druga — do drugiej serii wykresu są stosowane wszystkie właściwości wyglądu z serii szablonów, a następnie zostanie użyta pierwsza seria szablonu w trzeciej Seria wykresu itd. Te same wartości mają wartość true w przypadku obszarów wykresu i inne kolekcje, które mają właściwości wyglądu.  
  
 Szablony mogą służyć do symulowania palet niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadTemplate (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadTemplate(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.LoadTemplate : string -&gt; unit" Usage="chart.LoadTemplate name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku szablonu do załadowania. Należy określić pełną ścieżkę szablonu, który ma zostać załadowany z dysku.</param>
        <summary>Ładuje szablon z określoną nazwą pliku z dysku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` Parametr musi używać pełnej ścieżki, na przykład C:\MyPic.jpg. Należy również określić rozszerzenie pliku.  
  
 Ta metoda ładuje szablon z dysku, który został zapisany przy użyciu <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> metody.  
  
 Upewnij się, że właściwość <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> jest ustawiona `true` na przed <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> zapisaniem szablonu przy użyciu metody.  
  
 Jeśli załadowany szablon ma dwie serie danych, właściwości wyglądu serii są stosowane sekwencyjnie na wykresie. Inaczej mówiąc, właściwości pierwszego wyglądu serii szablonów są przypisywane do pierwszej serii wykresu, a druga — do drugiej serii wykresu są stosowane wszystkie właściwości wyglądu z serii szablonów, a następnie zostanie użyta pierwsza seria szablonu w trzeciej Seria wykresu itd. Te same wartości mają wartość true w przypadku obszarów wykresu i inne kolekcje, które mają właściwości wyglądu.  
  
 Szablony mogą służyć do symulowania palet niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="chart.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Przesłania metodę i <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" /> wywołuje zdarzenia i <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" />. <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomize();" />
      <MemberSignature Language="F#" Value="abstract member OnCustomize : unit -&gt; unit&#xA;override this.OnCustomize : unit -&gt; unit" Usage="chart.OnCustomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomizeLegend (legendItems As LegendItemsCollection, legendName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomizeLegend(System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ legendItems, System::String ^ legendName);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomizeLegend : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection * string -&gt; unit&#xA;override this.OnCustomizeLegend : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection * string -&gt; unit" Usage="chart.OnCustomizeLegend (legendItems, legendName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="legendItems" Type="System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" />
        <Parameter Name="legendName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="legendItems">Element <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> obiektu.</param>
        <param name="legendName">Nazwa legendy.</param>
        <summary><see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="chart.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnFormatNumber(System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatNumber (e As FormatNumberEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatNumber(System::Windows::Forms::DataVisualization::Charting::FormatNumberEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormatNumber : System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs -&gt; unit&#xA;override this.OnFormatNumber : System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs -&gt; unit" Usage="chart.OnFormatNumber e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="chart.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.GotFocus" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Podnoszenie <xref:System.Windows.Forms.Control.GotFocus> poziomu zdarzenia wywołuje procedurę obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected override void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLocationChanged : EventArgs -&gt; unit" Usage="chart.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="chart.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.Control.LostFocus" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Podnoszenie <xref:System.Windows.Forms.Control.LostFocus> poziomu zdarzenia wywołuje procedurę obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="chart.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="chart.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.PaintEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="chart.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent"><see cref="T:System.Windows.Forms.PaintEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPostPaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostPaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostPaint(System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostPaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit&#xA;override this.OnPostPaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit" Usage="chart.OnPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPrePaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrePaint (e As ChartPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrePaint(System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrePaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit&#xA;override this.OnPrePaint : System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs -&gt; unit" Usage="chart.OnPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="chart.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="chart.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera argumenty zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="chart.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> Zastępuje metodę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartColorPalette Palette { System::Windows::Forms::DataVisualization::Charting::ChartColorPalette get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberSignature Language="F#" Value="member this.Palette : System.Windows.Forms.DataVisualization.Charting.ChartColorPalette with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia paletę dla <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolki.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette" /> wyliczenia, która określa paletę, która ma zostać użyta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paleta służy do automatycznego przypisywania kolorów do elementów danych w przypadku spełnienia obu następujących warunków:  
  
-   same punkty danych nie mają przypisanych kolorów.  
  
-   Seria danych, do których należą punkty danych, również nie ma przypisanego koloru.  
  
 Jeśli żadne kolory serii lub punktów danych nie są jawnie określone, używane kolory są zależne od typu wykresu i <xref:System.Windows.Forms.DataVisualization.Charting.Chart> palety obiektu lub palety skojarzonej serii, jeśli taka została określona.  
  
> [!NOTE]
>  Jeśli właściwość dla <xref:System.Windows.Forms.DataVisualization.Charting.Chart> obiektów i <xref:System.Windows.Forms.DataVisualization.Charting.Series> jest ustawiona na <xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette>, a żaden kolor nie zostanie przypisany do odpowiednich serii danych lub punktów danych, punkty danych nie będą rysowane i będą wyświetlane jako obszary puste. `Palette`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property PaletteCustomColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ PaletteCustomColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PaletteCustomColors : System.Drawing.Color[] with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę kolorów palety niestandardowej.</summary>
        <value>Tablica <see cref="T:System.Drawing.Color" /> obiektów, która reprezentuje zestaw kolorów używanych dla serii na wykresie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli potrzebujesz więcej niż 16 kolorów lub chcesz zastosować własne kolory do wykresu, musisz zdefiniować paletę niestandardową. Niestandardowa paleta pozwala dodawać własne kolory w kolejności, w jakiej mają być wyświetlane na wykresie. Ten typ palety jest szczególnie przydatny, jeśli liczba serii w wykresie jest nieznana w czasie projektowania.  
  
 Ta właściwość nie ma wpływu, <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A> gdy właściwość *nie* jest ustawiona na  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Event PostPaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PostPaint;" />
      <MemberSignature Language="F#" Value="member this.PostPaint : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " Usage="member this.PostPaint : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jest malowany element wykresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Event PrePaint As EventHandler(Of ChartPaintEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::ChartPaintEventArgs ^&gt; ^ PrePaint;" />
      <MemberSignature Language="F#" Value="member this.PrePaint : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " Usage="member this.PrePaint : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po narysowaniu tła elementu wykresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Printing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Printing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Printing As PrintingManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::PrintingManager ^ Printing { System::Windows::Forms::DataVisualization::Charting::PrintingManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Printing : System.Windows.Forms.DataVisualization.Charting.PrintingManager" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Printing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.PrintingManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt tylko <see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" /> do odczytu używany do drukowania wykresu.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" /> Obiekt używany do drukowania wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wydrukowaniu wykresu będą drukowane wszystkie elementy wykresu z wyjątkiem pasków przewijania.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager> Obiekt zawiera następujące metody, które są używane dla podstawowych operacji drukowania:  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PageSetup%2A>: Wyświetla okno dialogowe Ustawienia strony, które umożliwia użytkownikowi końcowemu wybranie rozmiaru papieru, źródła papieru, orientacji strony i tak dalej.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PrintPreview%2A>: Wyświetla okno dialogowe Podgląd wydruku, które umożliwia użytkownikowi końcowemu powiększanie, drukowanie wykresu i tak dalej.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.Print%2A>: Drukuje <xref:System.Windows.Forms.DataVisualization.Charting.Chart>; można opcjonalnie wyświetlić okno dialogowe drukowania przed drukowaniem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="chart.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wymusza, aby formant unieważnił swój obszar klienta i natychmiast ponownie narysować wszystkie formanty podrzędne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiX">
      <MemberSignature Language="C#" Value="public double RenderingDpiX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiX" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingDpiX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderingDpiX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingDpiX : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozdzielczość <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> w poziomie modułu renderowania.</summary>
        <value><see langword="double" /> Wartość, która reprezentuje rozdzielczość w poziomie modułu renderowania wykresu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiY">
      <MemberSignature Language="C#" Value="public double RenderingDpiY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiY" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingDpiY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderingDpiY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingDpiY : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozdzielczość <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> w pionie modułu renderowania.</summary>
        <value><see langword="double" /> Wartość, która reprezentuje rozdzielczość w pionie modułu renderowania wykresu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAutoValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAutoValues();" />
      <MemberSignature Language="F#" Value="member this.ResetAutoValues : unit -&gt; unit" Usage="chart.ResetAutoValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje automatycznie obliczone wartości właściwości wykresu na wartość "automatyczny".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kilka właściwości wykresu można ustawić na wartość "Auto" — na przykład <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>; te właściwości są obliczane przed renderowaniem wykresu. "Auto" zazwyczaj jest reprezentowane jako <xref:System.Double.NaN> wartość.  
  
 Wywołaj tę metodę, aby zresetować te właściwości z wartości obliczonej na wartość "<xref:System.Double.NaN>Auto" ().  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje obraz do określonego celu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="chart.SaveImage (imageStream, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">Strumień, w którym jest zapisywany obraz.</param>
        <param name="format">Format obrazu.</param>
        <summary>Zapisuje obraz do określonego strumienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageStream As Stream, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::IO::Stream ^ imageStream, System::Windows::Forms::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : System.IO.Stream * System.Windows.Forms.DataVisualization.Charting.ChartImageFormat -&gt; unit" Usage="chart.SaveImage (imageStream, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">Strumień, w którym jest zapisywany obraz.</param>
        <param name="format">Format obrazu wykresu.</param>
        <summary>Zapisuje obraz wykresu do określonego strumienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Drawing::Imaging::ImageFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="chart.SaveImage (imageFileName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">Nazwa pliku, w którym jest zapisywany obraz.</param>
        <param name="format">Format obrazu.</param>
        <summary>Zapisuje obraz do określonego pliku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveImage (imageFileName As String, format As ChartImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveImage(System::String ^ imageFileName, System::Windows::Forms::DataVisualization::Charting::ChartImageFormat format);" />
      <MemberSignature Language="F#" Value="member this.SaveImage : string * System.Windows.Forms.DataVisualization.Charting.ChartImageFormat -&gt; unit" Usage="chart.SaveImage (imageFileName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">Nazwa pliku, w którym jest zapisywany obraz.</param>
        <param name="format">Format obrazu wykresu.</param>
        <summary>Zapisuje obraz wykresu do określonego pliku.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionRangeChanged As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ SelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionRangeChanged : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.SelectionRangeChanged : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja początkowa lub Pozycja końcowa.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionRangeChanging As EventHandler(Of CursorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::DataVisualization::Charting::CursorEventArgs ^&gt; ^ SelectionRangeChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectionRangeChanging : EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " Usage="member this.SelectionRangeChanging : System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie zmieniona pozycja początku lub końca zaznaczenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Serializer As ChartSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartSerializer ^ Serializer { System::Windows::Forms::DataVisualization::Charting::ChartSerializer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Serializer : System.Windows.Forms.DataVisualization.Charting.ChartSerializer" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Serializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" /> Pobiera obiekt, który jest używany na potrzeby serializacji wykresu.</summary>
        <value><see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" /> Obiekt, który jest używany do serializacji wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości w czasie projektowania lub w czasie wykonywania, aby serializować wykres.  
  
 Aby zapoznać się ze szczegółową <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer> omówieniem klasy, zapoznaj się z omówieniem klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Series" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Series As SeriesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::SeriesCollection ^ Series { System::Windows::Forms::DataVisualization::Charting::SeriesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Series : System.Windows.Forms.DataVisualization.Charting.SeriesCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Series" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zawiera <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> obiekty. <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /></summary>
        <value>Obiekt, który zawiera <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />obiekty. <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość kolekcji pozwala uzyskać dostęp <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> do klasy, która przechowuje <xref:System.Windows.Forms.DataVisualization.Charting.Series> obiekty, a także udostępnia metody i właściwości używane do manipulowania tą kolekcją.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series>obiekty przechowują <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> obiekty, a także atrybuty danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "300, 300")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolki.</summary>
        <value><see cref="T:System.Drawing.Size" /> Obiekt, który reprezentuje rozmiar kontrolki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressExceptions : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę określającą, czy wyjątki niekrytyczne powinny być pomijane.</summary>
        <value><see langword="true" />Jeśli wyjątki niekrytyczne powinny być pomijane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę właściwość na `true`, wyjątki niekrytyczne będą pomijane.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> Gdy kontrolka nie może prawidłowo wykreślić wykresu przy użyciu danych i innych określonych ustawień, zostanie zgłoszony wyjątek. Chociaż Wyświetlanie wyjątków jest przydatne podczas testowania aplikacji, nie powinno być wyświetlane po wydaniu aplikacji.  
  
> [!NOTE]
>  Ustawienie tej właściwości na `true` może spowodować ukrycie poważnych problemów w kodzie źródłowym aplikacji użytkownika. To ustawienie może również spowodować wygenerowanie obrazu wykresu, który może celowe podawanie dane. Zdecydowanie zaleca się, aby ten tryb był używany tylko w kompilacjach wydań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAntiAliasingQuality As TextAntiAliasingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality TextAntiAliasingQuality { System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality get(); void set(System::Windows::Forms::DataVisualization::Charting::TextAntiAliasingQuality value); };" />
      <MemberSignature Language="F#" Value="member this.TextAntiAliasingQuality : System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" /> , który ma być używany podczas stosowania wygładzania do tekstu.</summary>
        <value>Wartość <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" /> wyliczenia służąca do stosowania wygładzania do tekstu. Wartość domyślna to <see cref="F:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality.High" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wygładzanie zostanie zastosowane do tekstu, <xref:System.Windows.Forms.DataVisualization.Charting.Chart> kontrolka użyje tej właściwości do określenia typu antyaliasów tekstowych, które mają zostać zastosowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Titles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Titles As TitleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::TitleCollection ^ Titles { System::Windows::Forms::DataVisualization::Charting::TitleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Titles : System.Windows.Forms.DataVisualization.Charting.TitleCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Chart.Titles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" /> obiekt, który jest używany do przechowywania wszystkich <see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" /> obiektów używanych przez <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> formant.</summary>
        <value>Obiekt, który jest używany do przechowywania wszystkich <see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" /> obiektów używanych przez formant wykresu. <see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość przechowuje wszystkie <xref:System.Windows.Forms.DataVisualization.Charting.Title> obiekty używane przez <xref:System.Windows.Forms.DataVisualization.Charting.Chart> formant. <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Titles%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAnnotations">
      <MemberSignature Language="C#" Value="public void UpdateAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAnnotations ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAnnotations();" />
      <MemberSignature Language="F#" Value="member this.UpdateAnnotations : unit -&gt; unit" Usage="chart.UpdateAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje adnotacje w <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolce.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberSignature Language="F#" Value="member this.UpdateCursor : unit -&gt; unit" Usage="chart.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizuje kursor w <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> kontrolce.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
