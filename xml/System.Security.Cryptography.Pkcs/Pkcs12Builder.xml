<Type Name="Pkcs12Builder" FullName="System.Security.Cryptography.Pkcs.Pkcs12Builder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="288621fbece59dec6b9b539309f0e22c5a2f6763" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69263726" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Builder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Builder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Builder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Builder sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Builder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Włącza tworzenie wartości danych PFX PKCS # 12. Klasa ta nie może być dziedziczona.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs12Builder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pkcs12Builder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nową wartość <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, byte[] passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, unsigned int8[] passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, cli::array &lt;System::Byte&gt; ^ passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * byte[] * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.Byte[]" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Zawartość, która ma zostać dodana do pliku PFX.</param>
        <param name="passwordBytes">Tablica bajtów, która ma być używana jako hasło podczas szyfrowania zawartości.</param>
        <param name="pbeParameters">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania zawartości.</param>
        <summary>Dodaj zawartość do pliku PFX w pakiecie zaszyfrowanym przy użyciu hasła opartego na bajtach z tablicy bajtowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bajty hasła są przesyłane bezpośrednio do funkcji wyprowadzania klucza (KDF) używanej przez algorytm wskazywany `pbeParameters`przez.
Dzięki temu można zapewnić zgodność z innymi systemami, które używają kodowania tekstu innego niż UTF-8 podczas przetwarzania haseł z PBKDF2 (klucz oparty na haśle funkcja 2).

 Zawartość `safeContents` jest odczytywana podczas wywołania tej metody, zaszyfrowana i przechowywana wewnętrznie jako zaszyfrowana zawartość.
Wszelkie zmiany w odniesieniu <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> do <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> lub wszelkie odwołania do niego wykonane po wywołaniu metody nie są uwzględniane w końcowym danych wyjściowych.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="safeContents" /> lub <paramref name="pbeParameters" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="safeContents" /> parametru jest już zaszyfrowana.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" />wskazuje, <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> że powinny być używane, które <see cref="T:System.Char" />wymaga haseł opartych na.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Zawartość, która ma zostać dodana do pliku PFX.</param>
        <param name="passwordBytes">Zakres bajtów używany jako hasło podczas szyfrowania zawartości.</param>
        <param name="pbeParameters">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania zawartości.</param>
        <summary>Dodaj zawartość do pliku PFX w pakiecie zaszyfrowanym przy użyciu hasła opartego na bajtach z zakresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bajty hasła są przesyłane bezpośrednio do funkcji wyprowadzania klucza (KDF) używanej przez algorytm wskazywany `pbeParameters`przez.
Dzięki temu można zapewnić zgodność z innymi systemami, które używają kodowania tekstu innego niż UTF-8 podczas przetwarzania haseł z PBKDF2 (klucz oparty na haśle funkcja 2).

 Zawartość `safeContents` jest odczytywana podczas wywołania tej metody, zaszyfrowana i przechowywana wewnętrznie jako zaszyfrowana zawartość.
Wszelkie zmiany w odniesieniu <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> do <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> lub wszelkie odwołania do niego wykonane po wywołaniu metody nie są uwzględniane w końcowym danych wyjściowych.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="safeContents" /> lub <paramref name="pbeParameters" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="safeContents" /> parametru jest już zaszyfrowana.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" />wskazuje, <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> że powinny być używane, które <see cref="T:System.Char" />wymaga haseł opartych na.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Zawartość, która ma zostać dodana do pliku PFX.</param>
        <param name="password">Zakres używany jako hasło podczas szyfrowania zawartości.</param>
        <param name="pbeParameters">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania zawartości.</param>
        <summary>Dodaj zawartość do pliku PFX w pakiecie zaszyfrowanym przy użyciu hasła opartego na znakach z zakresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `pbeParameters` wskazuje algorytm korzystający z PBKDF2 (klucz oparty na hasłach funkcja 2), hasło jest konwertowane na bajty przy użyciu kodowania UTF-8.

 Zawartość `safeContents` jest odczytywana podczas wywołania tej metody, zaszyfrowana i przechowywana wewnętrznie jako zaszyfrowana zawartość.
Wszelkie zmiany w odniesieniu <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> do <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> lub wszelkie odwołania do niego wykonane po wywołaniu metody nie są uwzględniane w końcowym danych wyjściowych.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="safeContents" /> lub <paramref name="pbeParameters" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="safeContents" /> parametru jest już zaszyfrowana.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, System::String ^ password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * string * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Zawartość, która ma zostać dodana do pliku PFX.</param>
        <param name="password">Ciąg używany jako hasło podczas szyfrowania zawartości.</param>
        <param name="pbeParameters">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania zawartości.</param>
        <summary>Dodaj zawartość do pliku PFX w pakiecie zaszyfrowanym przy użyciu hasła opartego na znakach z ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `pbeParameters` wskazuje algorytm korzystający z PBKDF2 (klucz oparty na hasłach funkcja 2), hasło jest konwertowane na bajty przy użyciu kodowania UTF-8.

 Zawartość `safeContents` jest odczytywana podczas wywołania tej metody, zaszyfrowana i przechowywana wewnętrznie jako zaszyfrowana zawartość.
Wszelkie zmiany w odniesieniu <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> do <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> lub wszelkie odwołania do niego wykonane po wywołaniu metody nie są uwzględniane w końcowym danych wyjściowych.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="safeContents" /> lub <paramref name="pbeParameters" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="safeContents" /> parametru jest już zaszyfrowana.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsUnencrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsUnencrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsUnencrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsUnencrypted (safeContents As Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsUnencrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsUnencrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents -&gt; unit" Usage="pkcs12Builder.AddSafeContentsUnencrypted safeContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
      </Parameters>
      <Docs>
        <param name="safeContents">Zawartość, która ma zostać dodana do pliku PFX.</param>
        <summary>Dodaj zawartość do PFX bez szyfrowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `safeContents` Jeśli wartość jest już zaszyfrowana, ta metoda dodaje ją do PFX jako-is.

 Zawartość `safeContents` jest odczytywana w trakcie wywołania tej metody i przechowywana wewnętrznie jako zakodowana forma ich zawartości.
Wszelkie zmiany w odniesieniu <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> do <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> lub wszelkie odwołania do niego wykonane po wywołaniu metody nie są uwzględniane w końcowym danych wyjściowych.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="safeContents" /></exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs12Builder.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Koduje zawartość zapieczętowanego pliku PFX i zwraca go jako tablicę bajtów.</summary>
        <returns>Tablica bajtów reprezentująca zakodowaną postać PFX.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
        <exception cref="T:System.InvalidOperationException">Plik PFX nie jest zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="false" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane PFX zostały zamknięte.</summary>
        <value>Wartość wskazująca, czy dane PFX zostały zamknięte.</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As ReadOnlySpan(Of Char), hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">Hasło, które ma być używane jako klucz do przetwarzania komputera MAC.</param>
        <param name="hashAlgorithm">Algorytm wyznaczania wartości skrótu, który ma być używany podczas obliczania komputera MAC.</param>
        <param name="iterationCount">Liczba iteracji dla funkcji wyprowadzania klucza (KDF) używanej w obliczeniach na komputerze MAC.</param>
        <summary>Powoduje zamknięcie PFX przed wprowadzeniem dalszych zmian przez zastosowanie kod uwierzytelniania wiadomości opartego na hasłach (MAC) przez zawartość z hasłem z zakresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Wszystkie algorytmy wyznaczania wartości skrótu, które ta metoda <xref:System.Security.Cryptography.Pkcs.Pkcs12Info> akceptuje, mogą być przetwarzane przez klasę.
Niektóre opcje algorytmu wyznaczania wartości skrótu mogą <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> spowodować <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> błędy w lub w niektórych systemach operacyjnych, ponieważ te metody zależą od bibliotek systemowych do obsługi.

 Algorytm wyznaczania wartości skrótu używany podczas nowej instalacji systemu Windows 7 podczas <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithtype> eksportowania za pomocą programu jako PKCS # <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> 12 PFX ma liczbę iteracji 2000.
Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszym; Jednak niektóre czytelnicy PFX mogą obsługiwać tylko algorytm SHA1.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="iterationCount" /> Parametr jest mniejszy lub równy 0.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (string password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(string password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As String, hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(System::String ^ password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : string * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">Hasło, które ma być używane jako klucz do przetwarzania komputera MAC.</param>
        <param name="hashAlgorithm">Algorytm wyznaczania wartości skrótu, który ma być używany podczas obliczania komputera MAC.</param>
        <param name="iterationCount">Liczba iteracji dla funkcji wyprowadzania klucza (KDF) używanej w obliczeniach na komputerze MAC.</param>
        <summary>Powoduje zamknięcie PFX przed wprowadzeniem dalszych zmian przez zastosowanie kod uwierzytelniania wiadomości opartego na hasłach (MAC) przez zawartość z hasłem z ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Wszystkie algorytmy wyznaczania wartości skrótu, które ta metoda <xref:System.Security.Cryptography.Pkcs.Pkcs12Info> akceptuje, mogą być przetwarzane przez klasę.
Niektóre opcje algorytmu wyznaczania wartości skrótu mogą <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> spowodować <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> błędy w lub w niektórych systemach operacyjnych, ponieważ te metody zależą od bibliotek systemowych do obsługi.

 Algorytm wyznaczania wartości skrótu używany podczas nowej instalacji systemu Windows 7 podczas <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithType> eksportowania za pomocą programu jako PKCS # <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> 12 PFX ma liczbę iteracji 2000.
Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszym; Jednak niektóre czytelnicy PFX mogą obsługiwać tylko algorytm SHA1.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="iterationCount" /> Parametr jest mniejszy lub równy 0.</exception>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithoutIntegrity">
      <MemberSignature Language="C#" Value="public void SealWithoutIntegrity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithoutIntegrity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithoutIntegrity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithoutIntegrity();" />
      <MemberSignature Language="F#" Value="member this.SealWithoutIntegrity : unit -&gt; unit" Usage="pkcs12Builder.SealWithoutIntegrity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje zamknięcie PFX z dalszych zmian bez stosowania ochrony przed naruszeniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Ta metoda istnieje ze względu na zgodność ze specyfikacją PKCS # 12, ale jej użycie nie jest zalecane do celów innych niż testowanie.
Podczas kompilowania pliku PFX, który może być używany przez przeciążenia <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> lub <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> które nie akceptują parametru <xref:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String, System.Security.Cryptography.HashAlgorithmName, System.Int32)> hasła, należy użyć metody z <xref:System.String.Empty?displayProperty=nameWithType> hasłem.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Plik PFX jest już zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs12Builder.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">Zakres bajtów do odbierania danych PFX PKCS # 12.</param>
        <param name="bytesWritten">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów, do <paramref name="destination" />których zapisano. Ten parametr jest traktowany jako niezainicjowany.</param>
        <summary>Próbuje zakodować zawartość zapieczętowanego pliku PFX do podanego buforu.</summary>
        <returns><see langword="true" />Jeśli <paramref name="destination" /> jest wystarczająco duży, <see langword="false" />Aby uzyskać dane wyjściowe; w przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Plik PFX nie jest zapieczętowany (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> is <see langword="false" />).</exception>
      </Docs>
    </Member>
  </Members>
</Type>
