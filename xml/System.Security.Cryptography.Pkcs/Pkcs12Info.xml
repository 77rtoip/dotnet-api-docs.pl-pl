<Type Name="Pkcs12Info" FullName="System.Security.Cryptography.Pkcs.Pkcs12Info">
  <Metadata><Meta Name="ms.openlocfilehash" Value="142e1065b17db8688e7ca7f780729db321d290d0" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68858524" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Info" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Info extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Info" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Info" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Info sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Info = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje dane z zawartości PFX PKCS # 12. Klasa ta nie może być dziedziczona.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticatedSafe">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticatedSafe As ReadOnlyCollection(Of Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ AuthenticatedSafe { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticatedSafe : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję tylko do odczytu wartości SafeContents znajdujących się w AuthenticatedSafe PFX.</summary>
        <value>Kolekcja tylko do odczytu wartości SafeContents znajdujących się w AuthenticatedSafe PFX.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs12Info Decode (ReadOnlyMemory&lt;byte&gt; encodedBytes, out int bytesConsumed, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs12Info Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encodedBytes, [out] int32&amp; bytesConsumed, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedBytes As ReadOnlyMemory(Of Byte), ByRef bytesConsumed As Integer, Optional skipCopy As Boolean = false) As Pkcs12Info" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; *  * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs12Info" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.Decode (encodedBytes, bytesConsumed, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12Info</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedBytes" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedBytes">Dane, które mają być interpretowane jako plik PFX PKCS # 12.</param>
        <param name="bytesConsumed">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów, z <paramref name="encodedBytes" /> których odczytano tę metodę. Ten parametr jest traktowany jako niezainicjowany.</param>
        <param name="skipCopy"><see langword="true" />do przechowywania <paramref name="encodedBytes" /> bez tworzenia kopii obronnej; <see langword="false" />w przeciwnym razie. Wartość domyślna to <see langword="false" />.</param>
        <summary>Odczytuje dostarczone dane jako plik PFX PKCS # 12 i zwraca widok obiektu zawartości.</summary>
        <returns>Widok obiektu pliku PFX PKCS # 12, który został zdekodowany z danych wejściowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

 Domyślnym zachowaniem tej metody jest skopiowanie obrony z pierwszego `bytesConsumed` bajtu z. `encodedBytes`
Gdy parametr ma wartość `true`, ta kopia obronna jest pomijana. `skipCopy`
Jeśli kopia obronna została pominięta i zawartość pierwszych `bytesConsumed` `encodedBytes` bajtów zmiany w okresie istnienia zwracanej wartości lub dowolnego obiektu utworzonego przez jego metody lub właściwości, metody i właściwości dotyczące tych obiektów mogą generować wyniki niewykrywające lub zgłoś wyjątki ze względu na uszkodzony stan.
W związku z tym zaleca się użycie `true` wartości `skipCopy` parametru tylko wtedy, gdy można mieć pewność, że dane pozostaną nienaruszone.
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Zawartość <paramref name="encodedBytes" /> parametru nie została pomyślnie zdekodowana jako plik PFX PKCS # 12.</exception>
      </Docs>
    </Member>
    <Member MemberName="IntegrityMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntegrityMode As Pkcs12IntegrityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode IntegrityMode { System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.IntegrityMode : System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą typ ochrony przed manipulacją dla <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości.</summary>
        <value>Jeden z elementów członkowskich wyliczenia wskazujący typ ochrony przed manipulacją dla <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości.</value>
        <remarks>To be added.</remarks>
      </Docs>
     </Member>
     <MemberGroup MemberName="VerifyMac">
        <AssemblyInfo>
          <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
          <AssemblyVersion>4.0.4.0</AssemblyVersion>
          <AssemblyVersion>4.1.0.0</AssemblyVersion>
        </AssemblyInfo>
        <Docs>
          <summary>Próbuje zweryfikować integralność <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości przy użyciu hasła.</summary> 
          <remarks>
            <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można odróżnić błędu z powodu niepoprawnego hasła z powodu błędu, ponieważ zawartość została zmieniona.
 
 Zwykle jest to przypadek, że chronione hasłem plik PFX używa tego samego hasła dla algorytmu MAC zapewniającego integralność i algorytm szyfrowania zapewniające poufność, ale format pliku nie powoduje, że wymaganie.
W związku z tym nie ma gwarancji, że hasło, które powoduje `true` powrót z tej metody, zakończy się pomyślnie w <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt%2A>wywołaniu.

       ]]></format>
        </remarks>
      </Docs>    
    </MemberGroup>    
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="password">Hasło, za pomocą którego ma zostać podjęta próba zweryfikowania integralności.</param>
        <summary>Próbuje zweryfikować integralność <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości przy użyciu hasła reprezentowanego <see cref="T:System.ReadOnlySpan{System.Char}" />przez.</summary>
        <returns><see langword="true" />Jeśli hasło pomyślnie sprawdzi integralność <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości, <see langword="false" /> Jeśli hasło jest niepoprawne lub zmieniono jego zawartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 W specyfikacji PKCS # 12 następuje rozróżnienie między `null` hasłem a hasłem pustym, a różnica ta jest odzwierciedlana w wartości zwracanej przez tę metodę.
 `ReadOnlySpan<Char>.Empty`reprezentuje hasło i `String.Empty.AsSpan()` reprezentuje hasło "Empty". `null` Jeśli jedna z tych dwóch wartości zwróci `true`wartość, druga nie.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> Wartość nie<see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />jest.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie można zidentyfikować opcji algorytmu wyznaczania wartości skrótu określonego przez zawartość PFX PKCS # 12 lub nie jest ona obsługiwana przez tę platformę.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : string -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Hasło, za pomocą którego ma zostać podjęta próba zweryfikowania integralności.</param>
        <summary>Próbuje zweryfikować integralność <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości przy użyciu hasła reprezentowanego <see cref="T:System.String" />przez.</summary>
        <returns><see langword="true" />Jeśli hasło pomyślnie sprawdzi integralność <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> zawartości, <see langword="false" /> Jeśli hasło jest niepoprawne lub zmieniono jego zawartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 W specyfikacji PKCS # 12 następuje rozróżnienie między `null` hasłem a hasłem pustym, a różnica ta jest odzwierciedlana w wartości zwracanej przez tę metodę.
Jeśli ciąg zwraca `true`, następnie <xref:System.String.Empty?displayProperty=nameWithType> zwraca `false`i na odwrót. `null`

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> Wartość nie<see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />jest.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Nie można zidentyfikować opcji algorytmu wyznaczania wartości skrótu określonego przez zawartość PFX PKCS # 12 lub nie jest ona obsługiwana przez tę platformę.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
