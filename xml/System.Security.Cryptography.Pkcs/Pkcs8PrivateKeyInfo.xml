<Type Name="Pkcs8PrivateKeyInfo" FullName="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27d1986daa682a444120b6629ebe3fb8a29b8081" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68858944" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs8PrivateKeyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs8PrivateKeyInfo sealed" />
  <TypeSignature Language="F#" Value="type Pkcs8PrivateKeyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ac4a6-101">Włącza inspekcję i tworzenie wartości PKCS # 8 PrivateKeyInfo i EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-101">Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values.</span></span> <span data-ttu-id="ac4a6-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid algorithmId, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid algorithmId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; algorithmParameters, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; privateKey, bool skipCopies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmId As Oid, algorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte)), privateKey As ReadOnlyMemory(Of Byte), Optional skipCopies As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo : System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo (algorithmId, algorithmParameters, privateKey, skipCopies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="algorithmParameters" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="privateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopies" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="ac4a6-103">Identyfikator obiektu (OID) identyfikujący algorytm asymetryczny, którego dotyczy ten klucz.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-103">The Object Identifier (OID) identifying the asymmetric algorithm this key is for.</span></span></param>
        <param name="algorithmParameters"><span data-ttu-id="ac4a6-104">Parametry algorytmu z kodowaniem i skojarzone z tym kluczem lub <see langword="null" /> do pomijania parametrów algorytmu podczas kodowania.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-104">The BER-encoded algorithm parameters associated with this key, or <see langword="null" /> to omit algorithm parameters when encoding.</span></span></param>
        <param name="privateKey"><span data-ttu-id="ac4a6-105">Zakodowany klucz prywatny związany z algorytmem.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-105">The algorithm-specific encoded private key.</span></span></param>
        <param name="skipCopies"><span data-ttu-id="ac4a6-106"><see langword="true" />do przechowywania <paramref name="algorithmParameters" /> i <paramref name="privateKey" /> bez tworzenia kopii <see langword="false" />obronnej; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-106"><see langword="true" /> to store <paramref name="algorithmParameters" /> and <paramref name="privateKey" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ac4a6-107">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-107">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ac4a6-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ac4a6-109">Nie wykonano walidacji w `privateKey` parametrze; nie wszystkie algorytmy wymagają wartości zakodowanej przez funkcję.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-109">No validation is done on the `privateKey` parameter; not all algorithms require a BER-encoded value.</span></span>

<span data-ttu-id="ac4a6-110">Domyślnym zachowaniem tego konstruktora jest, aby wykonać kopię obronną obu `algorithmParameters` `privateKey` parametrów i.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-110">The default behavior of this constructor is to make a defensive copy of both the `algorithmParameters` and the `privateKey` parameters.</span></span>
<span data-ttu-id="ac4a6-111">Gdy parametr ma wartość `true`, ta kopia obronna jest pomijana. `skipCopies`</span><span class="sxs-lookup"><span data-stu-id="ac4a6-111">When the `skipCopies` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="ac4a6-112">Jeśli kopia obronna jest pomijana i zawartość `algorithmParameters` lub `privateKey` zmienia się w okresie istnienia zwróconej wartości lub dowolnego obiektu utworzonego przez jego metody lub właściwości, metody i właściwości dotyczące tych obiektów mogą generować niesensy wyniki lub zgłoś wyjątki ze względu na uszkodzony stan.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-112">If the defensive copy is skipped and the contents of either `algorithmParameters` or `privateKey` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="ac4a6-113">W związku z tym zaleca się użycie `true` wartości `skipCopies` parametru tylko wtedy, gdy można mieć pewność, że dane pozostaną nienaruszone.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-113">Callers are therefore advised to only use a `true` value for the `skipCopies` parameter when they can be reasonably assured that the data will stay intact.</span></span>
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac4a6-114">Parametr ma wartość <see langword="null" />. <paramref name="algorithmId" /></span><span class="sxs-lookup"><span data-stu-id="ac4a6-114">The <paramref name="algorithmId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ac4a6-115"><paramref name="algorithmParameters" /> Parametr nie<see langword="null" />jest pusty lub ma jedną wartość zakodowaną przy użyciu wartości.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-115">The <paramref name="algorithmParameters" /> parameter is not <see langword="null" />, empty, or a single BER-encoded value.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid AlgorithmId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid AlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ AlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac4a6-116">Pobiera wartość identyfikatora obiektu (OID) identyfikującą algorytm tego klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-116">Gets the Object Identifier (OID) value identifying the algorithm this key is for.</span></span></summary>
        <value><span data-ttu-id="ac4a6-117">Wartość identyfikatora obiektu (OID) identyfikująca algorytm, dla którego jest używany ten klucz.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-117">The Object Identifier (OID) value identifying the algorithm this key is for.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmParameters">
      <MemberSignature Language="C#" Value="public Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; AlgorithmParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; AlgorithmParameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; AlgorithmParameters { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameters : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac4a6-118">Pobiera wartość pamięci zawierającą parametry algorytmu zakodowane za pomocą wartości z tego klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-118">Gets a memory value containing the BER-encoded algorithm parameters associated with this key.</span></span></summary>
        <value><span data-ttu-id="ac4a6-119">Wartość pamięci zawierająca parametry algorytmu zakodowane przy użyciu klucza, skojarzone z tym kluczem <see langword="null" /> lub parametry nie były obecne.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-119">A memory value containing the BER-encoded algorithm parameters associated with this key, or <see langword="null" /> if no parameters were present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac4a6-120">Pobiera modyfikowalną kolekcję atrybutów dla tego klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-120">Gets the modifiable collection of attributes for this private key.</span></span></summary>
        <value><span data-ttu-id="ac4a6-121">Modyfikowalna Kolekcja atrybutów do kodowania przy użyciu klucza prywatnego.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-121">The modifiable collection of attributes to encode with the private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create (System.Security.Cryptography.AsymmetricAlgorithm privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create(class System.Security.Cryptography.AsymmetricAlgorithm privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (privateKey As AsymmetricAlgorithm) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ Create(System::Security::Cryptography::AsymmetricAlgorithm ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create privateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="privateKey"><span data-ttu-id="ac4a6-122">Klucz prywatny do reprezentowania w PrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-122">The private key to represent in a PKCS#8 PrivateKeyInfo.</span></span></param>
        <summary><span data-ttu-id="ac4a6-123">Eksportuje określony klucz jako PrivateKeyInfo PKCS # 8 i zwraca zdekodowaną interpretację.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-123">Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-124">Dekodowane interpretacja wyeksportowanego pliku PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-124">The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ac4a6-125">Parametr ma wartość <see langword="null" />. <paramref name="privateKey" /></span><span class="sxs-lookup"><span data-stu-id="ac4a6-125">The <paramref name="privateKey" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer, Optional skipCopy As Boolean = false) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; *  * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode (source, bytesRead, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ac4a6-126">Dane, które mają być interpretowane jako wartość PrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-126">The data to interpret as a PKCS#8 PrivateKeyInfo value.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="ac4a6-127">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów odczytywanych z <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-127">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="ac4a6-128">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-128">This parameter is treated as uninitialized.</span></span></param>
        <param name="skipCopy"><span data-ttu-id="ac4a6-129"><see langword="true" />do przechowywania <paramref name="source" /> bez tworzenia kopii obronnej; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-129"><see langword="true" /> to store <paramref name="source" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ac4a6-130">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-130">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ac4a6-131">Odczytuje dostarczone dane jako PrivateKeyInfo PKCS # 8 i zwraca widok obiektu zawartości.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-131">Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-132">Widok obiektu zawartości zdekodowany jako PrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-132">An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 <span data-ttu-id="ac4a6-133">Domyślnym zachowaniem tej metody jest skopiowanie obrony z pierwszego `bytesConsumed` bajtu z. `source`</span><span class="sxs-lookup"><span data-stu-id="ac4a6-133">The default behavior of this method is to make a defensive copy of the first `bytesConsumed` bytes from `source`.</span></span>
<span data-ttu-id="ac4a6-134">Gdy parametr ma wartość `true`, ta kopia obronna jest pomijana. `skipCopy`</span><span class="sxs-lookup"><span data-stu-id="ac4a6-134">When the `skipCopy` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="ac4a6-135">Jeśli kopia obronna została pominięta i zawartość pierwszych `bytesConsumed` `source` bajtów zmiany w okresie istnienia zwracanej wartości lub dowolnego obiektu utworzonego przez jego metody lub właściwości, metody i właściwości dotyczące tych obiektów mogą generować wyniki niewykrywające lub zgłoś wyjątki ze względu na uszkodzony stan.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-135">If the defensive copy is skipped and the contents of the first `bytesConsumed` bytes of `source` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="ac4a6-136">W związku z tym zaleca się użycie `true` wartości `skipCopy` parametru tylko wtedy, gdy można mieć pewność, że dane pozostaną nienaruszone.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-136">Callers are therefore advised to only use a `true` value for the `skipCopy` parameter when they can be reasonably assured that the data will stay intact.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ac4a6-137">Zawartość <paramref name="source" /> parametru nie została pomyślnie zdekodowana jako PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-137">The contents of the <paramref name="source" /> parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; *  -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="ac4a6-138">Bajty, które mają być używane jako hasło podczas odszyfrowywania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-138">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="ac4a6-139">Dane, które mają zostać odczytane jako struktura EncryptedPrivateKeyInfo PKCS # 8 w kodowaniu ASN. 1-w.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-139">The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="ac4a6-140">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów odczytywanych z <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-140">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="ac4a6-141">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-141">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="ac4a6-142">Odszyfrowuje dostarczone dane przy użyciu podanego hasła opartego na bajtach i dekoduje dane wyjściowe w widoku obiektu PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-142">Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-143">Widok obiektu zawartości odszyfrowany zdekodowaną jako PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-143">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-144">Bajty hasła są przesyłane bezpośrednio do funkcji wyprowadzania klucza (KDF) używanej przez algorytm wskazywany `pbeParameters`przez.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-144">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="ac4a6-145">Dzięki temu można zapewnić zgodność z innymi systemami, które używają kodowania tekstu innego niż UTF-8 podczas przetwarzania haseł z PBKDF2 (klucz oparty na haśle funkcja 2).</span><span class="sxs-lookup"><span data-stu-id="ac4a6-145">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="ac4a6-146">Ta metoda obsługuje tylko kodowanie binarne (//CER/DER) EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-146">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="ac4a6-147">Jeśli wartość jest zakodowana algorytmem Base64 lub w formacie tekstowym PEM, wywołujący musi zdekodować zawartość przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-147">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ac4a6-148">Hasło jest niepoprawne.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-148">The password is incorrect.</span></span>

<span data-ttu-id="ac4a6-149">—lub—</span><span class="sxs-lookup"><span data-stu-id="ac4a6-149">-or-</span></span>

<span data-ttu-id="ac4a6-150">Zawartość <paramref name="source" /> wskaż funkcję wyprowadzania klucza (KDF), która ma zostać zastosowana, jest starszą wersją PKCS # 12 <see cref="T:System.Char" />KDF, która wymaga haseł opartych na plikach.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-150">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="ac4a6-151">—lub—</span><span class="sxs-lookup"><span data-stu-id="ac4a6-151">-or-</span></span>

<span data-ttu-id="ac4a6-152">Zawartość <paramref name="source" /> nie reprezentuje struktury EncryptedPrivateKeyInfo PKCS # 8 w formacie ASN. 1.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-152">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span></exception>
      </Docs>
      <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey" />
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (password As ReadOnlySpan(Of Char), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;char&gt; * ReadOnlyMemory&lt;byte&gt; *  -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="ac4a6-153">Hasło, które ma być używane podczas odszyfrowywania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-153">The password to use when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="ac4a6-154">Bajty struktury EncryptedPrivateKeyInfo PKCS # 8 w kodowaniu ASN. 1-w.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-154">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="ac4a6-155">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów odczytywanych z <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-155">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="ac4a6-156">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-156">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="ac4a6-157">Odszyfrowuje dostarczone dane przy użyciu podanego hasła opartego na znakach i dekoduje dane wyjściowe w widoku obiektu PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-157">Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-158">Widok obiektu zawartości odszyfrowany zdekodowaną jako PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-158">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-159">Gdy zawartość `source` wskazuje algorytm używający funkcji PBKDF1 (klucza opartego na hasłach) lub PBKDF2 (klucz oparty na hasłach, funkcja 2), hasło jest konwertowane na bajty przy użyciu kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-159">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="ac4a6-160">Ta metoda obsługuje tylko kodowanie binarne (//CER/DER) EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-160">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="ac4a6-161">Jeśli wartość jest zakodowana algorytmem Base64 lub w formacie tekstowym PEM, wywołujący musi zdekodować zawartość przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-161">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
      <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac4a6-162">Koduje dane właściwości tego wystąpienia jako PKCS # 8 PrivateKeyInfo i zwraca kodowanie jako tablicę bajtów.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-162">Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-163">Tablica bajtów reprezentująca zakodowaną postać PKCS # 8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-163">A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="ac4a6-164">Bajty, które mają być używane jako hasło podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-164">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="ac4a6-165">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-165">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="ac4a6-166">Tworzy EncryptedPrivateKeyInfo PKCS # 8 z zawartości właściwości tego obiektu po szyfrowaniu przy użyciu określonych parametrów hasła i szyfrowania opartych na bajtach.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-166">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-167">Tablica bajtowa zawierająca zakodowaną postać PKCS # 8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-167">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-168">Bajty hasła są przesyłane bezpośrednio do funkcji wyprowadzania klucza (KDF) używanej przez algorytm wskazywany `pbeParameters`przez.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-168">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="ac4a6-169">Dzięki temu można zapewnić zgodność z innymi systemami, które używają kodowania tekstu innego niż UTF-8 podczas przetwarzania haseł z PBKDF2 (klucz oparty na haśle funkcja 2).</span><span class="sxs-lookup"><span data-stu-id="ac4a6-169">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ac4a6-170"><paramref name="pbeParameters" />wskazuje, <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> że powinny być używane, które <see cref="T:System.Char" />wymaga haseł opartych na.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-170"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="ac4a6-171">Hasło, które ma być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-171">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="ac4a6-172">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-172">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="ac4a6-173">Tworzy EncryptedPrivateKeyInfo PKCS # 8 z zawartości właściwości tego obiektu po szyfrowaniu przy użyciu określonych parametrów na podstawie hasła i szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-173">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-174">Tablica bajtowa zawierająca zakodowaną postać PKCS # 8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-174">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-175">Gdy `pbeParameters` wskazuje algorytm korzystający z PBKDF2 (klucz oparty na hasłach funkcja 2), hasło jest konwertowane na bajty przy użyciu kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-175">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKeyBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; PrivateKeyBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; PrivateKeyBytes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateKeyBytes As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; PrivateKeyBytes { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKeyBytes : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac4a6-176">Pobiera wartość pamięci reprezentującą zakodowany klucz prywatny.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-176">Gets a memory value that represents the algorithm-specific encoded private key.</span></span></summary>
        <value><span data-ttu-id="ac4a6-177">Wartość pamięci reprezentująca zakodowany klucz prywatny.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-177">A memory value that represents the algorithm-specific encoded private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="ac4a6-178">Zakres bajtów do odbierania danych PrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-178">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac4a6-179">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów, do <paramref name="destination" />których zapisano.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-179">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="ac4a6-180">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-180">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="ac4a6-181">Próbuje zakodować dane właściwości tego wystąpienia jako PKCS # 8 PrivateKeyInfo, pisząc wyniki do podanego buforu.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-181">Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-182"><see langword="true" />Jeśli <paramref name="destination" /> jest wystarczająco duży, <see langword="false" />Aby uzyskać dane wyjściowe; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-182"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="ac4a6-183">Bajty, które mają być używane jako hasło podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-183">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="ac4a6-184">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-184">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="ac4a6-185">Zakres bajtów do odbierania danych EncryptedPrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-185">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac4a6-186">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów, do <paramref name="destination" />których zapisano.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-186">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="ac4a6-187">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-187">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="ac4a6-188">Program podejmuje próbę utworzenia EncryptedPrivateKeyInfo PKCS # 8 z zawartości właściwości tego obiektu po zaszyfrowaniu przy użyciu określonych parametrów hasła i szyfrowania, pisząc wyniki w określonym buforze.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-188">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-189"><see langword="true" />Jeśli <paramref name="destination" /> jest wystarczająco duży, <see langword="false" />Aby uzyskać dane wyjściowe; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-189"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-190">Bajty hasła są przesyłane bezpośrednio do funkcji wyprowadzania klucza (KDF) używanej przez algorytm wskazywany `pbeParameters`przez.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-190">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="ac4a6-191">Dzięki temu można zapewnić zgodność z innymi systemami, które używają kodowania tekstu innego niż UTF-8 podczas przetwarzania haseł z PBKDF2 (klucz oparty na haśle funkcja 2).</span><span class="sxs-lookup"><span data-stu-id="ac4a6-191">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="ac4a6-192">Hasło, które ma być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-192">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="ac4a6-193">Parametry szyfrowania opartego na hasłach (PBE), które mają być używane podczas szyfrowania materiału klucza.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-193">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="ac4a6-194">Zakres bajtów do odbierania danych EncryptedPrivateKeyInfo PKCS # 8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-194">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="ac4a6-195">Gdy ta metoda zwraca, zawiera wartość wskazującą liczbę bajtów, do <paramref name="destination" />których zapisano.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-195">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="ac4a6-196">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-196">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="ac4a6-197">Program podejmuje próbę utworzenia EncryptedPrivateKeyInfo PKCS # 8 z zawartości właściwości tego obiektu po zaszyfrowaniu przy użyciu określonych parametrów opartych na znakach i szyfrowania, pisząc wynik w określonym buforze.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-197">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="ac4a6-198"><see langword="true" />Jeśli <paramref name="destination" /> jest wystarczająco duży, <see langword="false" />Aby uzyskać dane wyjściowe; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-198"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac4a6-199">Gdy `pbeParameters` wskazuje algorytm korzystający z PBKDF2 (klucz oparty na hasłach funkcja 2), hasło jest konwertowane na bajty przy użyciu kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="ac4a6-199">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
  </Members>
</Type>
