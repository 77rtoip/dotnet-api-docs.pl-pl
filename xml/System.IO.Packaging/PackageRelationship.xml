<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef8139119f7088ba1318ff9812b98aa5e4bb189d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje skojarzenie między źródłem <see cref="T:System.IO.Packaging.Package" /> lub <see cref="T:System.IO.Packaging.PackagePart" />i obiekt docelowy, który może być <see cref="T:System.IO.Packaging.PackagePart" /> lub zewnętrznego zasobu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackageRelationship> definiuje skojarzenie między *źródła* <xref:System.IO.Packaging.Package> lub <xref:System.IO.Packaging.PackagePart> do *docelowej* <xref:System.IO.Packaging.PackagePart> lub zewnętrznego zasobu.  Obiekt źródłowy jest traktowana jako "właściciela" w relacji.  
  
 <xref:System.IO.Packaging.PackageRelationship> Klasa nie ma publicznego konstruktora; zamiast nich używane są dwie metody tworzenia:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|Tworzy relację "pakiet poziom" — z pakietu do określonej części lub zewnętrznego zasobu.|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|Tworzy relację "części poziom" — z jednej strony do innej części lub zewnętrznego zasobu.|  
  
 Źródłowy pakiet lub części jest identyfikowany przez <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> właściwości relacji.  Docelowy part lub zewnętrznego zasobu jest identyfikowany przez <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> właściwości relacji.  
  
 Tworzenie lub usuwanie relacji nie wpływa na obiekty źródłowa lub docelowa w dowolny sposób.  
  
 Usunięcie obiektu źródłowego są także usuwane wszystkie relacje należących do obiektu.  
  
 Relacje umożliwiają nawigowanie, zarówno w dokumencie, jak i między dokumentów.  Relacje obsługują także dokument usługi modelu obiektów, takich jak łączenie <xref:System.Printing.PrintTicket> do określonego dokumentu elementów podczas drukowania.  
  
 Aby uzyskać więcej informacji na temat <xref:System.IO.Packaging.PackageRelationship> elementów zobacz sekcja 1.3 "Relacji" w *otwartych Konwencji pakietów* specyfikacji pobrać [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg identyfikujący relacji.</summary>
        <value>Ciąg, który identyfikuje relacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Ciąg właściwości jest unikatowy dla wszystkich relacji własnością <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> pakietu lub części.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Jest określona w wywołaniu **pakietu**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> lub **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Metoda, który utworzył relację.  Po utworzeniu relacji <xref:System.IO.Packaging.PackageRelationship.Id%2A> nie można zmienić.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> Właściwości ciągu jest prawidłowy identyfikator XML. <xref:System.IO.Packaging.PackageRelationship.Id%2A> Typu jest xsd:ID i wykonaj konwencje nazewnictwa określonych w *XML schematu część 2: typy danych* specyfikacji (zobacz [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.IO.Packaging.Package" /> zawierający tę relację.</summary>
        <value>Pakiet, który zawiera tę relację.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat <xref:System.IO.Packaging.Package> elementów zobacz *otwartych Konwencji pakietów* specyfikacji pobrać [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kwalifikowaną nazwę typu relacji.</summary>
        <value>Kwalifikowana nazwa typu relacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> Jest określona w wywołaniu **pakietu**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> lub **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Metoda, który utworzył relację.  Po utworzeniu relacji <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> nie można zmienić.  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> jest zdefiniowany w składni identyfikatora URI i identyfikuje roli relacji. Na przykład "http://schemas.microsoft.com/xps/2005/06/required-resource" identyfikuje relacji z elementem docelowym, który jest "required-resource."  
  
 **Typy relacji całego pakietu**  
  
|Opis|Typ relacji|  
|-----------------|-----------------------|  
|Właściwości podstawowe|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|Podpis cyfrowy|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|Certyfikat podpisu|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|Podpis cyfrowy źródła|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|Miniatur|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 Aby uzyskać więcej informacji na temat relacji pakietu typy zobacz rozdział 3 i dodatku I *otwartych Konwencji pakietów* specyfikacji pobrać [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [! INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-URI-MD.MD)] pakietu lub części, który jest właścicielem relacji.</summary>
        <value>[! INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-URI-MD.MD)] z <see cref="T:System.IO.Packaging.Package" /> lub <see cref="T:System.IO.Packaging.PackagePart" /> , który jest właścicielem relacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli relacja jest własnością <xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> zwraca identyfikator URI "/".  
  
 Jeśli relacja jest własnością <xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> zwraca identyfikator URI części.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy element docelowy relacji jest <see cref="F:System.IO.Packaging.TargetMode.Internal" /> lub <see cref="F:System.IO.Packaging.TargetMode.External" /> do <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value>Wartość wyliczenia wskazująca czy <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> odwołuje się do zasobu <see cref="F:System.IO.Packaging.TargetMode.Internal" /> lub <see cref="F:System.IO.Packaging.TargetMode.External" /> do <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> Jest określona w wywołaniu **pakietu**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> lub **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Metoda, który utworzył relację. Po utworzeniu relacji <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> nie można zmienić.  
  
 Gdy <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> jest <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> musi być względna odwołania.  W przypadku relacji poziom pakietu względnej odniesienie do <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> został rozwiązany względem identyfikatora URI pack pakietu źródłowego, który jest właścicielem i zawiera relację.  (Przykład źródła pakietu pakiet identyfikatora URI: "pack://http:,, www.adatum.com, files,datapak.package/".)  Dla relacji części poziom <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> nie zostanie rozwiązany względem części źródłowego, który jest właścicielem relacji (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> jest interpretowany względem <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Gdy <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> jest <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> może być odwołaniem względnym lub pełni kwalifikowanego identyfikatora URI.  Jeśli <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> jest odwołanie względne odwołanie jest interpretowany jako względną wobec lokalizacji <xref:System.IO.Packaging.Package> zawierający tę relację.  
  
 Aby uzyskać więcej informacji na temat <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> w sekcji 1.3.3 "Znacznika relacji" z *otwartych Konwencji pakietów* specyfikacji pobrać [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [! INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-URI-MD.MD)] zasobu docelowego relacji.</summary>
        <value>[! INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-URI-MD.MD)] zasobu docelowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> Jest określona w wywołaniu **pakietu**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> lub **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Metoda, który utworzył relację. Po utworzeniu relacji <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> nie można zmienić.  
  
 Gdy <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> jest <xref:System.IO.Packaging.TargetMode.Internal>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> musi być względna odwołania.  W przypadku relacji poziom pakietu względnej odniesienie do <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> został rozwiązany względem identyfikatora URI pack pakietu źródłowego, który jest właścicielem i zawiera relację.  (Przykład źródła pakietu pakiet identyfikatora URI: "pack://http:,, www.adatum.com, files,datapak.package/".)  Dla relacji części poziom <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> nie zostanie rozwiązany względem części źródłowego, który jest właścicielem relacji (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> jest interpretowany względem <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Gdy <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> jest <xref:System.IO.Packaging.TargetMode.External>, <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> może być odwołaniem względnym lub pełni kwalifikowanego identyfikatora URI.  Jeśli <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> jest odwołanie względne odwołanie jest interpretowany jako względną wobec lokalizacji <xref:System.IO.Packaging.Package> zawierający tę relację.  
  
 Aby uzyskać więcej informacji na temat <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> w sekcji 1.3.3 "Znacznika relacji" z *otwartych Konwencji pakietów* specyfikacji pobrać [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>