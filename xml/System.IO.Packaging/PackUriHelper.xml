<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="959f8d7d67f7a11b5c5a667ffb28e8bfeebb3202" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69244837" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia metody narzędziowe do redagowania i analizowania obiektów URI pakietu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Pierwszy pakiet URI pakietu.</param>
        <param name="secondPackUri">Identyfikator URI drugiego pakietu.</param>
        <summary>Zwraca wartość wskazującą, czy dwa identyfikatory URI pakietu są równoważne.</summary>
        <returns>Liczba całkowita ze znakiem wskazująca <paramref name="firstPackUri" /> relację między i <paramref name="secondPackUri" />.  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniejsze niż 0 
 </term><description><paramref name="firstPackUri" />jest mniejsze niż <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" />jest odpowiednikiem <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Większe niż 0 
 </term><description><paramref name="firstPackUri" />jest większa niż <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli oba `firstPackUri` i `secondPackUri` są `null` ,<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> zwraca 0. Podczas porównywania identyfikatorów URI pakietów identyfikator URI o wartości null jest zawsze krótszy niż identyfikator URI o wartości innej niż null.    W przypadkach, `firstPackUri` gdy `secondPackUri` i są to bezwzględne <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> identyfikatory URI pakietów, wykonuje porównanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Albo nie jest bezwzględny [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]. <paramref name="firstPackUri" /> <paramref name="secondPackUri" />  
  
—lub— 
<paramref name="firstPackUri" /> Alboniezaczynasięod<paramref name="secondPackUri" /> schematu "Pack://".</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Pierwszy .<see cref="T:System.IO.Packaging.PackagePart" /></param>
        <param name="secondPartUri">W [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] drugim <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Zwraca wartość wskazującą, czy dwie części [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] pakietu są równoważne.</summary>
        <returns>Wartość wskazująca relację między <paramref name="firstPartUri" /> i. <paramref name="secondPartUri" />  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniejsze niż 0 
 </term><description><paramref name="firstPartUri" />jest mniejsze niż <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" />jest odpowiednikiem <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Większe niż 0 
 </term><description><paramref name="firstPartUri" />jest większa niż <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli oba `firstPartUri` i `secondPartUri` są `null` ,<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> zwraca 0. <xref:System.IO.Packaging.PackagePart> Podczas porównywania [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)]wartość null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] jest zawsze mniejsza niż wartość null. [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] W przypadkach, `firstPartUri` gdy `secondPartUri` i są względne <xref:System.IO.Packaging.PackagePart> identyfikatory <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> URI, wykonuje porównanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" />lub <paramref name="secondPartUri" /> nie jest prawidłową składnią [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] częściową.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy identyfikator URI pakietu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykładowe przypadki dla <xref:System.IO.Packaging.PackUriHelper.Create%2A> metody.  
  
|`packageUri`|`partUri`|`fragment`|Zwrócony identyfikator URI pakietu|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|pack://file:,,, d:, Packages, mypackage2. pkg/a/bar. XAML # linki XREF|  
  
 Tworzenie identyfikatora URI pakietu jest procesem wieloetapowym.  Na przykład jeden krok tworzenia identyfikatora URI pakietu polega na zastąpieniu znaków `packageUri` ukośnika (/) z przecinkami (,).  
  
 Aby uzyskać więcej informacji na temat konwersji ciągów i sposobu tworzenia identyfikatorów URI pakietów, zobacz dodatek A. 4 "Przykłady konwersji ciągów" i dodatek B. 3 "Tworzenie identyfikatora URI pakietu" w specyfikacji otwartych Konwencji pakietów, dostępne do pobrania w [specyfikacjach i licencji Pliki do pobrania](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">Identyfikator URI odwołania <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Tworzy nowy identyfikator URI pakietu, który wskazuje na pakiet.</summary>
        <returns>Identyfikator URI pakietu dla <see cref="T:System.IO.Packaging.Package" /> danego <paramref name="packageUri" />odwołania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`nie może być określony jako `null` lub pusty.  
  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|`packageUri`|Zwrócony identyfikator URI pakietu|  
|------------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|pack://file:,,, d:, Packages, mypackage2. pkg|  
  
 Tworzenie identyfikatora URI pakietu jest procesem wieloetapowym.  Na przykład jeden krok tworzenia identyfikatora URI pakietu polega na zastąpieniu znaków `packageUri` ukośnika (/) z przecinkami (,).  
  
 Aby uzyskać więcej informacji na temat konwersji ciągów i sposobu tworzenia identyfikatorów URI pakietów, zobacz dodatek A. 4 "Przykłady konwersji ciągów" i dodatek B. 3 "Tworzenie identyfikatora URI pakietu" w specyfikacji otwartych Konwencji pakietów, dostępne do pobrania w [specyfikacjach i licencji Pliki do pobrania](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackUriHelper.Create%2A> jak używać metody do definiowania identyfikatora URI pakietu, który odwołuje się do pakietu.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />nie jest bezwzględnym identyfikatorem URI.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] z <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] W pakiecie<see cref="T:System.IO.Packaging.PackagePart" /> .</param>
        <summary>Tworzy identyfikator URI pakietu przyznany <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] a i [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] części w pakiecie.</summary>
        <returns>Identyfikator URI pakietu danego <see cref="T:System.IO.Packaging.PackagePart" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`nie można określić wartości null lub pustej.  
  
 Jeśli `partUri` jest`null`, zwracany identyfikator URI pakietu wskazuje na pakiet.  
  
 W poniższej tabeli przedstawiono przykładowe przypadki dla <xref:System.IO.Packaging.PackUriHelper.Create%2A> metody.  
  
|`packageUri`|`partUri`|Zwrócony identyfikator URI pakietu|  
|------------------|---------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:,,, d:, Packages, mypackage2. pkg/a/bar. XAML|  
  
 Tworzenie identyfikatora URI pakietu jest procesem wieloetapowym.  Na przykład jeden krok tworzenia identyfikatora URI pakietu polega na zastąpieniu znaków `packageUri` ukośnika (/) z przecinkami (,).  
  
 Aby uzyskać więcej informacji na temat konwersji ciągów i sposobu tworzenia identyfikatorów URI pakietów, zobacz dodatek A. 4 "Przykłady konwersji ciągów" i dodatek B. 3 "Tworzenie identyfikatora URI pakietu" w specyfikacji otwartych Konwencji pakietów, dostępne do pobrania w [specyfikacjach i licencji Pliki do pobrania](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> jak używać metody do definiowania identyfikatora URI pakietu, który odwołuje się do pakietu.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />nie jest bezwzględnym identyfikatorem URI.  
  
—lub— 
 <paramref name="partUri" />nie jest prawidłową składnią identyfikatora URI części.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] z <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] W pakiecie<see cref="T:System.IO.Packaging.PackagePart" /> .</param>
        <param name="fragment">Odwołanie "#" identyfikujące element w części pakietu.</param>
        <summary>Tworzy identyfikator URI pakietu danego elementu <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] części w pakiecie i fragmentu "#" do dołączenia.</summary>
        <returns>Identyfikator URI pakietu, który identyfikuje określony pakiet, część pakietu i fragment.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`nie może być określony jako `null` lub pusty.  
  
 Jeśli `partUri` jest`null`, zwracany identyfikator URI pakietu wskazuje na pakiet.  
  
 `fragment`nie może być pustym ciągiem, ale może być `null`określony jako.  Gdy nie zostanie `fragment` określony `null`jako, ciąg musi rozpoczynać się znakiem "#".  Aby uzyskać więcej informacji na temat składni `fragment` odwołań, zobacz sekcję 3,5 "fragment" w [dokumencie RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 W poniższej tabeli przedstawiono przykładowe przypadki dla <xref:System.IO.Packaging.PackUriHelper.Create%2A> metody.  
  
|`packageUri`|`partUri`|`fragment`|Zwrócony identyfikator URI pakietu|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|pack://file:,,, d:, Packages, mypackage2. pkg/a/bar. XAML # linki XREF|  
  
 Tworzenie identyfikatora URI pakietu jest procesem wieloetapowym.  Na przykład jeden krok tworzenia identyfikatora URI pakietu polega na zastąpieniu znaków `packageUri` ukośnika (/) z przecinkami (,).  
  
 Aby uzyskać więcej informacji na temat konwersji ciągów i sposobu tworzenia identyfikatorów URI pakietów, zobacz dodatek A. 4 "Przykłady konwersji ciągów" i dodatek B. 3 "Tworzenie identyfikatora URI pakietu" w specyfikacji otwartych Konwencji pakietów, dostępne do pobrania w [specyfikacjach i licencji Pliki do pobrania](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> jak używać metody do definiowania identyfikatora URI pakietu, który odwołuje się do pakietu.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />nie jest bezwzględnym identyfikatorem URI.  
  
—lub— 
 <paramref name="partUri" />nie jest prawidłową składnią identyfikatora URI części.  
  
—lub— 
 <paramref name="fragment" />jest pusta lub zaczyna się od "#".</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Identyfikator URI <see cref="T:System.IO.Packaging.PackagePart" /> w pakiecie.</param>
        <summary>Tworzy sformatowany <see cref="T:System.IO.Packaging.PackagePart" /> identyfikator URI.</summary>
        <returns>Sformatowany <see cref="T:System.IO.Packaging.PackagePart" /> identyfikator URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Element a <xref:System.IO.Packaging.PackagePart> jest<xref:System.IO.Packaging.Package> zawsze przywoływany od elementu głównego.  
  
 Zwrócony <xref:System.IO.Packaging.PackagePart> identyfikator URI jest ścieżką bezwzględną, która zawsze zaczyna się od znaku "/" i jest zgodna z składnią zdefiniowaną w [specyfikacji otwartych Konwencji pakietów](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>.  
  
|`partUri`|Zwrócony identyfikator URI części|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> jak używać metody do definiowania względnych identyfikatorów URI dla <xref:System.IO.Packaging.PackagePart> elementów.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">Pisanie przykładowego pakietu</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" />nie jest bezwzględna <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="T:System.IO.Packaging.PackagePart" /> Identyfikator URI do normalizacji.</param>
        <summary>Zwraca znormalizowaną postać określonego <see cref="T:System.IO.Packaging.PackagePart" /> identyfikatora URI.</summary>
        <returns>Znormalizowana postać danego <paramref name="partUri" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A>normalizuje<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>w wyniku składania wielkości liter na wielkie litery () i zwracające wynik. `partUri`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" />nie ma prawidłowej <see cref="T:System.Uri" /> składni.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">Identyfikator URI pakietu, z którego ma zostać zwrócony identyfikator URI <see cref="T:System.IO.Packaging.Package" />.</param>
        <summary>Zwraca wewnętrzny identyfikator URI wskazujący cały pakiet określonego identyfikatora URI pakietu.</summary>
        <returns>Identyfikator URI <see cref="T:System.IO.Packaging.Package" /> z określonego <paramref name="packUri" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>.  
  
|`packUri`|Zwrócony identyfikator URI pakietu|  
|---------------|--------------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|`http://www.proseware.com/mypackage.xyz`|  
|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|`http://www.proseware.com/packages.aspx?mypackage`|  
|pack://http:,,www.proseware.com,mypackage.pkg|`http://www.proseware.com/mypackage.pkg`|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|`ftp://ftp.proseware.com/packages/mypackage1.abc`|  
|pack://file:,,, d:, Packages, mypackage2. pkg/a/bar. XAML|`file:///d:/packages/mypackage2.pkg`|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" />nie jest bezwzględna <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri">Identyfikator URI pakietu, z którego ma zostać <see cref="T:System.IO.Packaging.PackagePart" /> zwrócony identyfikator URI.</param>
        <summary>Zwraca identyfikator URI <see cref="T:System.IO.Packaging.PackagePart" /> w ramach określonego identyfikatora URI pakietu.</summary>
        <returns><see cref="T:System.IO.Packaging.PackagePart" /> Identyfikator URI <see cref="T:System.IO.Packaging.PackagePart" />w danym <paramref name="packUri" />, lub <see langword="null" /> Jeśli <paramref name="packUri" /> wskazuje na pakiet zamiast elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócony <xref:System.IO.Packaging.PackagePart> identyfikator URI jest względny dla katalogu głównego pakietu i jest ścieżką bezwzględną, która zawsze zaczyna się od znaku "/" i jest zgodna ze składnią zdefiniowaną w [specyfikacji Open](https://go.microsoft.com/fwlink/?LinkID=71255)Package Conventions.  
  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>.  
  
|`packUri`|Zwrócony identyfikator URI części|  
|---------------|-----------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  
|pack://http:,,www.proseware.com,mypackage.pkg|wartość null|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  
|pack://file:,,, d:, Packages, mypackage2. pkg/a/bar. XAML|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> Jeśli jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Uri" />Jeśli nie jest<paramref name="packUri" /> bezwzględna.

—lub—

<paramref name="packUri" />nie ma schematu "pack://".
          
—lub— 
PartUri wyodrębniony z <paramref name="packUri" /> nie jest zgodny z prawidłową składnią partUri.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">W <see cref="P:System.IO.Packaging.PackagePart.Uri" /> celu zwrócenia identyfikatora URI dla skojarzonego <see cref="T:System.IO.Packaging.PackageRelationship" />elementu. <see cref="T:System.IO.Packaging.PackagePart" /></param>
        <summary>Zwraca część relacji skojarzoną z określonym <see cref="T:System.IO.Packaging.PackagePart" />. [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</summary>
        <returns>Identyfikator URI <see cref="T:System.IO.Packaging.PackageRelationship" /> części skojarzonej <see cref="T:System.IO.Packaging.PackagePart" /> z określonym przez <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri`musi identyfikować <xref:System.IO.Packaging.Package> znak ("/") <xref:System.IO.Packaging.PackagePart> lub, który nie <xref:System.IO.Packaging.PackageRelationship> jest częścią.  
  
 Aby uzyskać więcej informacji <xref:System.IO.Packaging.PackageRelationship> na temat części, zobacz sekcję 9,3 "relacje" w specyfikacji Open pakowanie Conventions dostępne do pobrania przy użyciu [specyfikacji i pobierania licencji](https://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## Examples  
 [Pakowanie URI w WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Specyfikacja otwartych Konwencji pakietów](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" />Składnia nie jest prawidłowa dla identyfikatora URI części pakietu.  
  
—lub— 
 <paramref name="partUri" />jest bezwzględnym identyfikatorem URI.  
  
—lub— 
 <paramref name="partUri" />odwołuje się do części relacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Części źródłowej.</param>
        <param name="targetPartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Części docelowej.</param>
        <summary>Zwraca wartość względną [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] spośród dwóch <see cref="T:System.IO.Packaging.PackagePart" /> określonych [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)].</summary>
        <returns>Wartość [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] względna <paramref name="sourcePartUri" /> od <paramref name="targetPartUri" />do.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>.  
  
|`sourcePartUri`|`targetPartUri`|Zwrócony względny identyfikator URI|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|../picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" />lub <paramref name="targetPartUri" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
        <exception cref="T:System.ArgumentException">Albo nie ma prawidłowej <see cref="T:System.Uri" /> składni. <paramref name="sourcePartUri" /> <paramref name="targetPartUri" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">Część relacji, z której ma zostać zwrócona wartość <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />. [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</param>
        <summary><see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> Zwraca [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]z elementu <see cref="T:System.IO.Packaging.PackageRelationship" /> z określoną opcją.</summary>
        <returns>Z relacji z określonym<paramref name="relationshipPartUri" />. <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> <see cref="T:System.IO.Packaging.PackagePart" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość części relacji musi <xref:System.IO.Packaging.PackagePart.Package%2A> mieć wartość (" <xref:System.IO.Packaging.PackagePart> /") lub nie <xref:System.IO.Packaging.PackageRelationship>jest. <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>  
  
 Na przykład, jeśli część pakietu "/Files/Document.XAML" jest właścicielem źródła części relacji "/Files/_rels/Document.XAML.RELS", wywołanie <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> `relationshipPartUri` z parametrem "/Files/_rels/Document.XAML.RELS" zwróci wartość <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>"/Files/Document.XAML".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" />jest bezwzględny [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].  
  
—lub— 
 <paramref name="relationshipPartUri" />Składnia jest nieprawidłowa dla elementu <see cref="T:System.IO.Packaging.PackagePart" />.  
  
—lub— 
 <paramref name="relationshipPartUri" />nie odwołuje się do części relacji.  
  
—lub— 
Część <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> relacji odwołuje się do innej części relacji (nieprawidłowej).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Aby sprawdzić<see cref="T:System.IO.Packaging.PackageRelationship" /> część.</param>
        <summary>Zwraca wartość wskazującą, czy określony identyfikator URI jest identyfikatorem URI <see cref="T:System.IO.Packaging.PackageRelationship" /> części.</summary>
        <returns><see langword="true" />w <paramref name="partUri" /> przypadku <see cref="T:System.IO.Packaging.PackageRelationship" /> identyfikacji części; w przeciwnym <see langword="false" />razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
Ta metoda nie sprawdza zawartości części. jest ona oparta wyłącznie na nazwie.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" />jest bezwzględny [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].  
  
—lub— 
 <paramref name="partUri" />jest nieprawidłową <see cref="T:System.IO.Packaging.PackagePart" /> składnią.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">Identyfikator URI części źródłowej lub "/", aby wyznaczyć <see cref="T:System.IO.Packaging.Package" /> element główny.</param>
        <param name="targetUri">Względny identyfikator URI części docelowej.</param>
        <summary>Zwraca identyfikator URI części mającego identyfikator URI części źródłowej oraz identyfikator URI ze ścieżką względną do części docelowej.</summary>
        <returns>Identyfikator URI części docelowej został rozwiązany między określonym <paramref name="SourcePartUri" /> <paramref name="targetUri" /> i parametrem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono przykładowe przypadki <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>.  
  
|`sourcePartUri`|`targetUri`|Zwrócony identyfikator URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|../picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> jak używać metody.  Aby uzyskać pełny przykład, zobacz [odczytywanie przykładowego pakietu](https://go.microsoft.com/fwlink/?LinkID=160034).  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" />lub <paramref name="targetUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" />nie jest prawidłowym identyfikatorem URI części.  
  
—lub— 
 <paramref name="targetUri" />nie jest prawidłowym względnym identyfikatorem URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja otwartych Konwencji pakietów</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiuje nazwę schematu identyfikatora URI pakietu "Pack".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
