<Type Name="PackageDigitalSignature" FullName="System.IO.Packaging.PackageDigitalSignature">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4d0edb0cdd9341a8b4dd65de48fb4e6d372d7fd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageDigitalSignature" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageDigitalSignature extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignature" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageDigitalSignature" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignature" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje podpis cyfrowy jest stosowany do zestawu części pakietów i relacje.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackageDigitalSignature> obiektu jest niemodyfikowalna i nie można zmienić po jego utworzeniu.  
  
 Dla bezpieczeństwa <xref:System.IO.Packaging.PackageDigitalSignature> może być skojarzony z części <xref:System.IO.Packaging.Package>. A <xref:System.IO.Packaging.PackageDigitalSignature> zawiera certyfikat X.509, który zawiera dwie funkcje:  
  
-   Identyfikuje i uwierzytelnia inicjatorem części.  
  
-   Sprawdza, czy element nie został zmodyfikowany.  
  
 Podpis cyfrowy nie uniemożliwia części jest modyfikowany, ale sprawdzanie poprawności względem podpis zakończy się niepowodzeniem, jeśli element został zmieniony w dowolny sposób. Aplikację można następnie automatycznie podjąć odpowiednie działania — na przykład części może zablokować możliwość otwierania lub jego powiadamia użytkownika, że element został zmodyfikowany i nie jest bezpieczna.  
  
 Aby uzyskać więcej informacji na temat podpisów cyfrowych pakietu, zobacz artykuł w witrynie MSDN [cyfrowego podpisywania struktura otwartych Konwencji pakietów](http://go.microsoft.com/fwlink/?LinkId=74494).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignatureManager" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName="CertificateEmbeddingOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateEmbeddingOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CertificateEmbeddingOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateEmbeddingOption { System::IO::Packaging::CertificateEmbeddingOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera certyfikat X.509 osadzanie opcji.</summary>
        <value>Jeden z <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> wartości, które określa opcję dla podpisu cyfrowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certyfikaty X.509 używany do sprawdzania poprawności pakietu może być przechowywany w jednym z trzech miejscach:  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart>|W swoim własnym certyfikacie <xref:System.IO.Packaging.PackagePart> w pakiecie.<br /><br /> Certyfikat X.509 można uzyskać za pośrednictwem <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> właściwości.|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart>|W zawartości <xref:System.IO.Packaging.PackageDigitalSignature.SignaturePart%2A> w pakiecie.<br /><br /> Certyfikat X.509 można uzyskać za pośrednictwem <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> właściwości.|  
|<xref:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded>|Zewnętrzne do pakietu w lokalizacji rozpoznawany na podstawie zarówno aplikacja, która tworzy podpis, jak i aplikacji, która później używa do weryfikacji podpisu.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.Signer" />
      </Docs>
    </Member>
    <Member MemberName="GetPartTransformList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; GetPartTransformList (Uri partName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;string&gt; GetPartTransformList(class System.Uri partName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartTransformList (partName As Uri) As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::String ^&gt; ^ GetPartTransformList(Uri ^ partName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partName" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partName">
          <see cref="T:System.Uri" /> z <see cref="T:System.IO.Packaging.PackagePart" /> do zwrócenia na liście transformacji.</param>
        <summary>Zwraca uporządkowaną listę <see cref="T:System.Security.Cryptography.Xml.Transform" /> operacje stosowane do danej części.</summary>
        <returns>Ciągi uporządkowaną listę identyfikatora URI, takich jak <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> lub <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />, reprezentujący canonical transformacji XML stosowane do części o danym <paramref name="partName" /> identyfikatora URI.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="N:System.Security.Cryptography.Xml" />
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.Signature Signature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.Signature Signature" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.Signature" />
      <MemberSignature Language="VB.NET" Value="Public Property Signature As Signature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::Signature ^ Signature { System::Security::Cryptography::Xml::Signature ^ get(); void set(System::Security::Cryptography::Xml::Signature ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.Signature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podpis cyfrowy XML.</summary>
        <value>Podpis cyfrowy XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signature%2A> zapewnia dostęp do klasy foundation, który wykonuje funkcje kryptograficzne podpisu określonego typu i serializacja do i z <xref:System.IO.Packaging.PackagePart> obsługującego podpisu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignaturePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart SignaturePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackagePart SignaturePart" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignaturePart As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackagePart ^ SignaturePart { System::IO::Packaging::PackagePart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.IO.Packaging.PackagePart" /> zawiera podpis.</summary>
        <value>Części pakietu, który zawiera podpis.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Części pakietu z podpisem często jest dostępny, gdy są podpisane podpisem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureType">
      <MemberSignature Language="C#" Value="public string SignatureType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignatureType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ciąg identyfikujący typ podpisu.</summary>
        <value>A [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ciąg identyfikujący typ podpisu. Wartość domyślna to <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureValue">
      <MemberSignature Language="C#" Value="public byte[] SignatureValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SignatureValue" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SignatureValue { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość skrótu zaszyfrowanych <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</summary>
        <value>Tablicę bajtów zawierającą wartość skrótu zaszyfrowanych <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)" />
      </Docs>
    </Member>
    <Member MemberName="SignedParts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Uri&gt; SignedParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Uri&gt; SignedParts" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignedParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedParts As ReadOnlyCollection(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ SignedParts { System::Collections::ObjectModel::ReadOnlyCollection&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich <see cref="T:System.IO.Packaging.PackagePart" /> obiektów podpisane podpisem.</summary>
        <value>Kolekcja zawierająca wszystkie części pakietów podpisany z podpisem.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors" />
      </Docs>
    </Member>
    <Member MemberName="SignedRelationshipSelectors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageRelationshipSelector&gt; SignedRelationshipSelectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; SignedRelationshipSelectors" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedRelationshipSelectors As ReadOnlyCollection(Of PackageRelationshipSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ SignedRelationshipSelectors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageRelationshipSelector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę <see cref="T:System.IO.Packaging.PackageRelationship" /> części, które zostały podpisane podpisem.</summary>
        <value>Lista <see cref="T:System.IO.Packaging.PackageRelationship" /> części, które zostały podpisane podpisem.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Signer">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Signer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Signer" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.Signer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signer As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Signer { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera certyfikat X.509 osoby podpisującej.</summary>
        <value>Certyfikat cyfrowy osoby podpisującej, lub <see langword="null" /> Jeśli certyfikat nie jest przechowywany w <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> Zwraca certyfikat X.509 osoby podpisującej, gdy certyfikatu cyfrowego jest przechowywana w pakiecie (to znaczy gdy <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> jest <xref:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart> lub <xref:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart>).  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.Signer%2A> Zwraca `null` gdy certyfikat X.509 nie jest przechowywana w pakiecie (to znaczy gdy <xref:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption%2A> jest <xref:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SigningTime">
      <MemberSignature Language="C#" Value="public DateTime SigningTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SigningTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SigningTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę utworzenia podpisu.</summary>
        <value>Data i godzina utworzenia podpisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignature.TimeFormat%2A> Właściwość określa format daty.  Format <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> ciągu jest oparta na <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A?displayProperty=nameWithType> właściwości efekty, jeśli został utworzony podpis.  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> opiera się na czas systemowy komputera, na którym podpisania nastąpiło.  
  
 <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime%2A> nie jest "Bezpiecznego sygnaturę czasową" i nie pochodzi z zaufanego urzędu sygnatury czasu.  Bezpieczne sygnatura czasowa musi być uzyskane i stosowane przez zaufany urząd sygnatury czasu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera format daty i godziny zwrócony przez <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> właściwości.</summary>
        <value>Format daty i godziny zwrócony przez <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data i godzina formaty zgodne ze składnią W3C [formaty daty i godziny](http://go.microsoft.com/fwlink/?LinkId=84446) Uwaga.  Składniki pokazano w poniższej tabeli, należy użyć składni i znaki interpunkcyjne wyświetlane.  
  
|TimeFormat|Opis|Przykład|  
|----------------|-----------------|-------------|  
|YYYY|Rok|2005|  
|RRRR MM|Rok i miesiąc|2005-07|  
|RRRR MM-DD|Data ukończenia|2005-07-28|  
|RRRR-MM-DDThh:mmTZD|Daty i godziny i minuty|2005-07-28T19:20-01:00|  
|RRRR-MM-DDThh:mm:ssTZD|Daty i godziny, minuty i sekundy|2005-07-28T19:20:45-01:00|  
|RRRR MM-DDThh:mm:ss.sTZD|Daty i godziny, minuty i sekundy z ułamek dziesiętny|2005-07-28T19:20:45.75-01:00|  
  
 gdzie:  
  
|||  
|-|-|  
|YYYY|Czterocyfrowy rok (na przykład 2006)|  
|MM|miesiąc dwucyfrowe (01 stycznia =)|  
|DD|dwucyfrowe dzień miesiąca (01 do 31)|  
|Thh|Godzina dwucyfrowe (00 do 23, 24-godzinnym)|  
|mm|dwie cyfry minut (00 do 59)|  
|ss|dwie cyfry sekund (od 00 do 59)|  
|s|co najmniej jedną cyfrę reprezentujący ułamek dziesiętny sekundy|  
|TZD|oznaczeniem strefy czasowej (Z lub + GG: mm lub - hh: mm)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Verify">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Weryfikuje podpis cyfrowy względem certyfikatu X.509.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult Verify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Weryfikuje podpis cyfrowy względem certyfikatu X.509.</summary>
        <returns>
          <see cref="F:System.IO.Packaging.VerifyResult.Success" /> Jeśli weryfikacja zakończyła się pomyślnie; w przeciwnym razie wartość spośród <see cref="T:System.IO.Packaging.VerifyResult" /> wartości, które identyfikuje problem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza podpis przed osadzony certyfikat X.509 przechowywane w <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult Verify (System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult Verify(class System.Security.Cryptography.X509Certificates.X509Certificate signingCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify (signingCertificate As X509Certificate) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult Verify(System::Security::Cryptography::X509Certificates::X509Certificate ^ signingCertificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signingCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="signingCertificate">Certyfikat X.509 podpisującej można zweryfikować podpisu cyfrowego przed.</param>
        <summary>Weryfikuje podpis cyfrowy względem danego certyfikatu X.509.</summary>
        <returns>
          <see cref="F:System.IO.Packaging.VerifyResult.Success" /> Jeśli weryfikacja zakończyła się pomyślnie; w przeciwnym razie wartość spośród <see cref="T:System.IO.Packaging.VerifyResult" /> wartości, które identyfikuje problem.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Cyfrowego <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> został usunięty.</exception>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>