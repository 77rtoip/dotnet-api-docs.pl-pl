<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2747efe0c2441a2652318fa3187e234ee3be0fd" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68858964" /></Metadata><TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <TypeSignature Language="F#" Value="type PackageDigitalSignatureManager = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę narzędzi do tworzenia i weryfikowania podpisów cyfrowych w <see cref="T:System.IO.Packaging.Package" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager>wykorzystuje architekturę .NET Framework klas podpisu cyfrowego i udostępnia klasę narzędzi do wykonywania typowych zadań w przypadku używania podpisów cyfrowych z <xref:System.IO.Packaging.Package> elementami.  
  
 Aby uzyskać więcej informacji na temat podpisów cyfrowych pakietu, zobacz cyfrowe podpisywanie w artykule [dotyczącym otwartych Konwencji](https://go.microsoft.com/fwlink/?LinkId=74494) pakietów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackageDigitalSignatureManager>jak używać.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159966">Tworzenie pakietu z przykładem podpisu cyfrowego</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja Open pakowanie Conventions (OPC)</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackageDigitalSignatureManager : System.IO.Packaging.Package -&gt; System.IO.Packaging.PackageDigitalSignatureManager" Usage="new System.IO.Packaging.PackageDigitalSignatureManager package" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">Pakiet skojarzony z tym menedżerem sygnatur.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> klasy do użycia z określonym <see cref="T:System.IO.Packaging.Package" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pakiet docelowy skojarzony z menedżerem sygnatur jest ustawiany podczas inicjowania. Po jego ustawieniu nie można zmienić pakietu skojarzonego z menedżerem podpisu. Utwórz nowego menedżera podpisów dla każdego pakietu zgodnie z wymaganiami.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać tego konstruktora.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateOption : System.IO.Packaging.CertificateEmbeddingOption with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcję osadzania certyfikatu X. 509 używaną przez <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> metodę do cyfrowego podpisywania części pakietu.</summary>
        <value>Jedna z <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy certyfikat X. 509 osoby podpisującej będzie przechowywany podczas cyfrowego podpisywania części.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić tę właściwość podczas przygotowywania do cyfrowego podpisywania części w pakiecie.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podpisy w pakiecie przy użyciu określonego certyfikatu X. 509.</summary>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberSignature Language="F#" Value="member this.Countersign : unit -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Podpisuje wszystkie sygnatury w pakiecie przy użyciu wybranego przez użytkownika certyfikatu X. 509.</summary>
        <returns>Podpis, który został dodany jako a. lub <see langword="null" /> Jeśli nie można znaleźć żadnego certyfikatu lub użytkownik anulował okno dialogowe wyboru certyfikatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli w wywołaniu nie określono certyfikatu X. 509, ta metoda spowoduje otwarcie okna dialogowego wyboru certyfikatu, które wyświetla komunikat z prośbą o wybranie certyfikatu do użycia podczas podpisywania.  
  
 Ustaw uchwyt okna we <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> właściwości przed wywołaniem <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> okna dialogowego wyboru certyfikatu jako modalnego dla danego okna.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certyfikat X. 509 do dodania jako sygnatura z podpisem.</param>
        <summary>Podpisuje wszystkie sygnatury w pakiecie przy użyciu określonego certyfikatu X. 509.</summary>
        <returns>Podpis, który został dodany jako sygnatura typu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" />była<see langword="null" /></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign (certificate, signatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">Certyfikat X. 509 do każdej z określonych <paramref name="signatures" />.</param>
        <param name="signatures">Lista podpisów do sygnatury.</param>
        <summary>Podpisuje listę sygnatur z danym certyfikatem X. 509.</summary>
        <returns>Podpis cyfrowy używany do każdej z tych elementów <paramref name="signatures" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> Parametr lub <paramref name="signatures" /> ma wartość.<see langword="null" /></exception>
        <exception cref="T:System.InvalidOperationException">Pakiet nie zawiera podpisanych <see cref="T:System.IO.Packaging.PackagePart" /> obiektów.</exception>
        <exception cref="T:System.ArgumentException">Pakiet nie zawiera żadnych <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> elementów.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultHashAlgorithm : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Pobiera ciąg identyfikujący domyślny algorytm wyznaczania wartości skrótu używany do tworzenia i weryfikowania sygnatur.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Ciąg, który identyfikuje domyślny algorytm wyznaczania wartości skrótu używany do tworzenia i weryfikowania podpisów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny algorytm wyznaczania wartości skrótu <xref:System.IO.Packaging.PackageDigitalSignatureManager> dla standardowej <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> klasy[!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]to ().  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> Właściwość pobiera lub ustawia rzeczywisty algorytm wyznaczania wartości skrótu, który służy do tworzenia i weryfikowania podpisów.  
  
 Właściwość jest zazwyczaj używana do <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> resetowania właściwości z powrotem do domyślnych po tymczasowej zmianie. <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>  

 Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszy.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.GetSignature : Uri -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.GetSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Podpis cyfrowy, który ma zostać zwrócony.</param>
        <summary>Zwraca podpis cyfrowy dla danego podpisu [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</summary>
        <returns>Podpis cyfrowy dla określonego <paramref name="signatureUri" />lub <see langword="null" /> Jeśli nie można znaleźć podpisu dla danego <paramref name="signatureUri" /> elementu.</returns>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identyfikator <see cref="T:System.Security.Cryptography.HashAlgorithm" /> wystąpienia używanego do tworzenia i weryfikowania sygnatur.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.SignedXml" /> Identyfikatorwystąpieniasłużącegodotworzeniai<see cref="T:System.Security.Cryptography.HashAlgorithm" />weryfikowaniapodpisów. [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny identyfikator algorytmu wyznaczania wartości skrótu dla standardowego Menedżera podpisu <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> cyfrowego<xref:System.Security.Cryptography.SHA1> to (-Secure Hash Algorithm wersja 1,0).  
  
 O ile nie ustawi jawnie inaczej, ta właściwość pobiera taką samą <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>wartość jak.  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> Właściwość zwykle nie jest zmieniana z jej domyślnego. Tę właściwość należy zmienić tylko wtedy, gdy zostanie wykryty podpis używający różnych znanych <xref:System.Security.Cryptography.HashAlgorithm> i dostępnych elementów.  Po zakończeniu z podpisem, który używa innego algorytmu wyznaczania <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> wartości skrótu, <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> należy wywołać Resetowanie właściwości z powrotem do wartości domyślnej.  

 Ze względu na kolizje problemów z algorytmem SHA1 firma Microsoft zaleca model zabezpieczeń oparty na SHA256 lub lepszy.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ciąg dla elementu [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] do ustawienia to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ciąg dla elementu [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] do ustawienia jest pusty.</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberSignature Language="F#" Value="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " Usage="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje w <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> przypadku napotkania nieprawidłowej sygnatury.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy pakiet zawiera wszystkie podpisy.</summary>
        <value><see langword="true" />Jeśli pakiet zawiera podpisy; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> Właściwość nie wykonuje walidacji sygnatur. Jeśli istnieją podpisy i <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> są `true`, co najmniej jeden podpis może być nieprawidłowy.  Wywołaj <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> , aby potwierdzić, że podpisy są prawidłowe i nie zostały zmienione.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać właściwości, <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> aby określić, czy pakiet zawiera podpisy cyfrowe.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Specyfikacja Open pakowanie Conventions (OPC)</related>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia uchwyt okna nadrzędnego na potrzeby wyświetlania okna dialogowego wyboru certyfikatu.</summary>
        <value>Uchwyt okna nadrzędnego, który ma być używany do wyświetlania okna dialogowego wyboru certyfikatu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno dialogowe wyboru certyfikatu jest wyświetlane tylko wtedy, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> gdy wywołanie nie zawiera certyfikatów. Jeśli nie określono żadnych certyfikatów, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> program wyświetli okno dialogowe wyboru certyfikatu, które umożliwi użytkownikowi wybranie certyfikatu, który ma być używany do podpisywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllSignatures : unit -&gt; unit" Usage="packageDigitalSignatureManager.RemoveAllSignatures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie podpisy cyfrowe z pakietu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa także wszystkie certyfikaty X. 509 z pakietu.  Po usunięciu wszystkich sygnatur i certyfikatów Wywołaj <xref:System.IO.Packaging.Package.Flush%2A> polecenie, aby zachować wszystkie zmiany w sklepie.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveSignature : Uri -&gt; unit" Usage="packageDigitalSignatureManager.RemoveSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Z<see cref="T:System.IO.Packaging.PackageDigitalSignature" /> elementu do usunięcia.</param>
        <summary>Usuwa podpis cyfrowy z danym podpisem [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa również skojarzony certyfikat X. 509, jeśli nie odwołuje się do żadnego innego podpisu cyfrowego.  
  
 Po usunięciu podpisu Wywołaj <xref:System.IO.Packaging.Package.Flush%2A> polecenie, aby zachować zmianę w sklepie.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Podpisuje listę części pakietu z określonym certyfikatem X. 509.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono procedurę cyfrowego podpisywania listy części w ramach programu <xref:System.IO.Packaging.Package>.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign parts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] Lista<see cref="T:System.IO.Packaging.PackagePart" /> elementów do podpisania.</param>
        <summary>Wyświetla użytkownikowi komunikat dla certyfikatu X. 509, który jest następnie używany do cyfrowego podpisywania określonej listy części pakietu.</summary>
        <returns>Podpis cyfrowy używany do podpisywania listy <paramref name="parts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby okno dialogowe wyboru certyfikatu było modalne dla określonego okna, należy ustawić <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> właściwość przed wywołaniem. <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>nie monituje o certyfikaty, jeśli nie ma żadnego z domyślnych magazynów certyfikatów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak cyfrowo podpisać listę części pakietu.  Pełny przykład można znaleźć w sekcji [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] Lista<see cref="T:System.IO.Packaging.PackagePart" /> elementów do podpisania.</param>
        <param name="certificate">Certyfikat X. 509 używany do cyfrowego podpisywania każdego z określonych <paramref name="parts" />.</param>
        <summary>Podpisuje listę części pakietu z danym certyfikatem X. 509.</summary>
        <returns>Podpis cyfrowy używany do podpisywania danej listy <paramref name="parts" />lub <see langword="null" /> Jeśli nie można odnaleźć certyfikatu lub użytkownik kliknął "Anuluj" w oknie dialogowym wyboru certyfikatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak cyfrowo podpisać listę części w ramach <xref:System.IO.Packaging.Package>.  Pełny przykład można znaleźć w sekcji [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] Lista<see cref="T:System.IO.Packaging.PackagePart" /> dla obiektów do podpisania.</param>
        <param name="certificate">Certyfikat X. 509 używany do cyfrowego podpisywania każdej z określonych części i relacji.</param>
        <param name="relationshipSelectors">Lista <see cref="T:System.IO.Packaging.PackageRelationship" /> obiektów do podpisania.</param>
        <summary>Podpisuje listę części pakietu i relacji pakietów z danym certyfikatem X. 509.</summary>
        <returns>Podpis cyfrowy używany do podpisywania elementów określonych na <paramref name="parts" /> liście i. <paramref name="relationshipSelectors" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Między `parts` i`relationshipSelectors` musi istnieć co najmniej jeden element do podpisania.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak cyfrowo podpisać listę części pakietu.  Pełny przykład można znaleźć w sekcji [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parts" />Aninie określajżadnych<paramref name="relationshipSelectors" /> obiektów do podpisania.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] Lista<see cref="T:System.IO.Packaging.PackagePart" /> dla obiektów do podpisania.</param>
        <param name="certificate">Certyfikat X. 509 używany do cyfrowego podpisywania każdej z określonych części i relacji.</param>
        <param name="relationshipSelectors">Lista <see cref="T:System.IO.Packaging.PackageRelationship" /> obiektów do podpisania.</param>
        <param name="signatureId">Ciąg identyfikacyjny, który ma zostać skojarzony z sygnaturą.</param>
        <summary>Podpisuje listę części pakietu i relacji pakietów z danym certyfikatem X. 509 i [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</summary>
        <returns>Podpis cyfrowy używany do podpisywania elementów określonych na <paramref name="parts" /> liście i. <paramref name="relationshipSelectors" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista może być pusta lub `null` Jeśli `relationshipSelectors` zawiera co najmniej jeden wpis. `parts`  
  
 Lista może być pusta lub `null` Jeśli `parts` zawiera co najmniej jeden wpis. `relationshipSelectors`  
  
 Między listą a `relationshipSelectors` musi zawierać co najmniej jeden element do podpisania. `parts`  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak cyfrowo podpisać listę części pakietu.  Pełny przykład można znaleźć w sekcji [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="parts" />Aninie określajżadnych<paramref name="relationshipSelectors" /> elementów do podpisania.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string * seq&lt;System.Security.Cryptography.Xml.DataObject&gt; * seq&lt;System.Security.Cryptography.Xml.Reference&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId, signatureObjects, objectReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] Lista<see cref="T:System.IO.Packaging.PackagePart" /> dla obiektów do podpisania.</param>
        <param name="certificate">Certyfikat X. 509 używany do cyfrowego podpisywania każdej z określonych części i relacji.</param>
        <param name="relationshipSelectors">Lista <see cref="T:System.IO.Packaging.PackageRelationship" /> obiektów do podpisania.</param>
        <param name="signatureId">Ciąg identyfikacyjny, który ma zostać skojarzony z sygnaturą.</param>
        <param name="signatureObjects">Lista niestandardowych obiektów danych do podpisania.</param>
        <param name="objectReferences">Lista odwołań do obiektów niestandardowych do podpisania.</param>
        <summary>Podpisuje listę części pakietu, relacji pakietów lub obiektów niestandardowych z określonym certyfikatem X. 509 i podpisem [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</summary>
        <returns>Podpis cyfrowy używany do podpisywania elementów określonych na <paramref name="parts" /> liście i. <paramref name="relationshipSelectors" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musi istnieć co najmniej jeden `parts`element do zalogowania, `relationshipSelectors`, `signatureObjects`, lub `objectReferences`.  
  
> [!NOTE]
>  `Object`Warunki [https://www.w3.org/TR/xmldsig-core/](https://www.w3.org/TR/xmldsig-core/), `Manifest` ,,`Transform` , i w następujących dwóch uwagach odnoszą się do typów elementów i tagów zdefiniowanych przez składnię i specyfikacje przetwarzania w formacie XML, zobacz. `SignatureProperties` `Reference`  
  
 Te i inne <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> przeciążenia metod używają bieżącego <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> słownika, który definiuje `Transform` do zastosowania w zależności od części <xref:System.IO.Packaging.PackagePart.ContentType%2A>pakietu.  Specyfikacja Open pakowanie Conventions (OPC) firmy Microsoft obecnie zezwala tylko na `Transform` dwa poprawne algorytmy: C14 i C14N.  Składnia i Standard przetwarzania W3C XML podpisu nie zezwala na puste `Manifest` Tagi.  Ponadto Specyfikacja otwartych <xref:System.IO.Packaging.Package>Konwencji pakowania wymaga tagu określonego `Object` , który zawiera oba `Manifest` Tagi i `SignatureProperties` .  Każdy `Manifest` tag dodatkowo również zawiera co najmniej jeden `Reference` tag.  Tagi te wymagają, aby każdy podpis podpisywać co <xref:System.IO.Packaging.PackagePart> najmniej jeden (tag niepustych składników <xref:System.IO.Packaging.PackageRelationship> ) lub (niepusty `relationshipSelectors`), nawet jeśli podpis jest potrzebny tylko do `signatureObjects` podpisywania `objectReferences`lub.  
  
 Ta <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> Metoda <xref:System.Security.Cryptography.Xml.Reference> `objectReferences`ignoruje Właściwość skojarzoną z każdym zdefiniowanym w. <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>  
  
 To <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> Przeciążenie zapewnia obsługę [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] generowania podpisów, które wymagają tagów `Object` niestandardowych.  `Object` Dla dowolnego dostarczonego tagu, który ma być podpisany `Reference` , [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] należy podać odpowiedni tag, który określa `Object` tag w lokalnej składni fragmentu.  Na przykład jeśli `Object` tag ma identyfikator "MyObject", identyfikator URI `Reference` w tagu będzie miał wartość "#myObject".  W przypadku niepodpisanych obiektów nie `Reference` jest wymagane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie <paramref name="parts" /> ,<paramref name="relationshipSelectors" />, ani nie<paramref name="objectReferences" /> określaj żadnych elementów do podpisania. <paramref name="signatureObjects" /></exception>
        <exception cref="T:System.InvalidOperationException">Podpisana część odwołuje się do pustej, <see langword="null" />lub niezdefiniowanej <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />. <see cref="P:System.IO.Packaging.PackagePart.ContentType" /></exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="signatureId" />nie <see langword="null" /> jest i nie jest prawidłowym [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] identyfikatorem schematu (na przykład zaczyna się od wiodącej cyfry numerycznej).</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOrigin : Uri" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Pobiera część źródła podpisu.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] Część źródła podpisu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> się to [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] różnić w zależności od pakietu, ponieważ nazwa nie jest zdefiniowana w postaci niezdefiniowanej. Podczas gdy ta implementacja zazwyczaj będzie używać tej samej wartości domyślnej, wartość zwracana przez tę właściwość będzie odzwierciedlała wszystkie źródła, które znajdują się <xref:System.IO.Packaging.Package>już w bieżącym.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOriginRelationshipType : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ domyślnej relacji pierwotnego podpisu.</summary>
        <value>Typ domyślnej relacji pierwotnego podpisu.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signatures : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich podpisów zawartych w pakiecie.</summary>
        <value>Kolekcja wszystkich <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> obiektów.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeFormat : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format daty i godziny używany do tworzenia sygnatury <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
        <value>Format daty i godziny używany do tworzenia podpisu <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> to "RRRR-MM-DDTgg: mm: SS. sTZD".  
  
 Formaty daty i godziny są zgodne z składnią [specyfikacji formatów daty i godziny w formacie W3C](https://www.w3.org/TR/Note-datetime.html). Wymienione poniżej składniki muszą być obecne i używać składni i interpunkcji jako zdefiniowanej.  
  
|TimeFormat|Opis|Przykład|  
|----------------|-----------------|-------------|  
|YYYY|Rok|2005|  
|RRRR-MM|Rok i miesiąc|2005-07|  
|RRRR MM-DD|Data ukończenia|2005-07-28|  
|RRRR-MM-DDTgg: mmTZD|Data ukończenia Plus godziny i minuty|2005-07-28T19:20-01:00|  
|RRRR-MM-DDTgg: mm: ssTZD|Data ukończenia Plus godziny, minuty i sekundy|2005-07-28T19:20:45-01:00|  
|RRRR-MM-DDTgg: mm: SS. sTZD|Data ukończenia oraz godziny, minuty i sekundy z ułamkiem dziesiętnym|2005-07-28T19:20:45.75-01:00|  
  
 gdzie:  
  
|||  
|-|-|  
|YYYY|czterocyfrowy rok (na przykład 2005)|  
|MM|miesiąc dwucyfrowy (01 = styczeń)|  
|DD|dwucyfrowy dzień miesiąca (od 01 do 31)|  
|Thh|godzina dwucyfrowa (od 00 do 23, 24-godzinny)|  
|mm|dwie cyfry w minutach (od 00 do 59)|  
|ss|dwie cyfry sekund (od 00 do 59)|  
|s|co najmniej jedna cyfra reprezentująca fracion dziesiętną sekundy|  
|TZD|oznaczenie strefy czasowej (Z lub + hh: mm lub-hh: mm)|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformMapping : System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający każdy zdefiniowany <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> i skojarzony [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />z nim.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> identyfikatora.</summary>
        <value>Słownik zawierający każdy zdefiniowany <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> i skojarzony [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />z nim.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> identyfikatora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas operacji podpisywania skojarzony algorytm przekształcania dla każdego typu zawartości jest stosowany przed <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> wykonaniem.  
  
 Domyślne mapowania zawartości i transformacji obejmują:  
  
|Zawartość|ContentType|Identyfikator algorytmu transformacji|  
|-------------|-----------------|------------------------------------|  
|Relacja|"application/vnd.openxmlformats-package.relationships+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|Podpis cyfrowy|"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="static member VerifyCertificate : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" Usage="System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certyfikat X. 509 do zweryfikowania.</param>
        <summary>Weryfikuje dany certyfikat X. 509.</summary>
        <returns><see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" />(wartość 0) Jeśli certyfikat został zweryfikowany pomyślnie; w przeciwnym razie bitowe Wyliczenie flag błędów.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberSignature Language="F#" Value="member this.VerifySignatures : bool -&gt; System.IO.Packaging.VerifyResult" Usage="packageDigitalSignatureManager.VerifySignatures exitOnFailure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure"><see langword="true" />Aby wyjść z pierwszego błędu; w przeciwnym <see langword="false" /> razie, aby kontynuować i sprawdzić wszystkie podpisy.</param>
        <summary>Weryfikuje podpisy wszystkich podpisanych części w pakiecie.</summary>
        <returns><see cref="F:System.IO.Packaging.VerifyResult.Success" />(wartość 0) Jeśli wszystkie podpisy zostały zweryfikowane pomyślnie; w przeciwnym razie Wyliczenie, które identyfikuje błąd.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda weryfikuje tylko podpisy cyfrowe; nie weryfikuje pokrewnych certyfikatów X. 509.  <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> Metoda może służyć do weryfikowania certyfikatów X. 509.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać tej metody do sprawdzania poprawności wszystkich podpisanych części w ramach pakietu.  Aby zapoznać się z kompletnym przykładem, zobacz [Tworzenie pakietu przy użyciu podpisu cyfrowego](https://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Cyfrowe podpisywanie Konwencji Open pakowanie</related>
      </Docs>
    </Member>
  </Members>
</Type>