<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f117aee1e6d286b829d34db39cf69dc5cc5e4c9d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69244917" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b98b3-101">Reprezentuje plik złożony OLE zawierający zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-101">Represents an OLE compound file that contains an encrypted package.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope>nie ma konstruktorów publicznych.</span><span class="sxs-lookup"><span data-stu-id="b98b3-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="b98b3-103">Jest tworzony przy użyciu metod static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, lub <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A>. <xref:System.IO.Packaging.EncryptedPackageEnvelope></span><span class="sxs-lookup"><span data-stu-id="b98b3-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b98b3-104">Zamyka zaszyfrowany pakiet i plik złożony programu OLE.</span><span class="sxs-lookup"><span data-stu-id="b98b3-104">Closes the encrypted package and the OLE compound file that holds it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b98b3-105">Poniższy przykład pokazuje, jak używać tej metody do zamykania <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="b98b3-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b98b3-106">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="b98b3-107">Strumień, dla którego ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="b98b3-107">The stream on which to create the file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="b98b3-108">Licencja publikowania, która jest osadzona w pliku złożonym.</span><span class="sxs-lookup"><span data-stu-id="b98b3-108">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="b98b3-109">Obiekt, który określa, jakie operacje może wykonywać bieżący użytkownik na zaszyfrowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="b98b3-110">Tworzy i zwraca obiekt <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> dla określonego strumienia.</span><span class="sxs-lookup"><span data-stu-id="b98b3-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span></span></summary>
        <returns><span data-ttu-id="b98b3-111">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-112">Bieżący użytkownik ma dostęp do odczytu/zapisu do nowego pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-113"><paramref name="envelopeStream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-113"><paramref name="envelopeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b98b3-114"><paramref name="envelopeStream" />nie zapewnia dostępu do odczytu i zapisu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-114"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="b98b3-115">Nazwa pliku złożonego OLE.</span><span class="sxs-lookup"><span data-stu-id="b98b3-115">The name of the OLE compound file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="b98b3-116">Licencja publikowania, która jest osadzona w pliku złożonym.</span><span class="sxs-lookup"><span data-stu-id="b98b3-116">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="b98b3-117">Obiekt, który określa, jakie operacje może wykonywać bieżący użytkownik na zaszyfrowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="b98b3-118">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> i nadaje mu określoną nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="b98b3-119">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-120">Jeśli istnieje już plik o określonej nazwie, zostanie on zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="b98b3-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="b98b3-121">Bieżący użytkownik ma dostęp do odczytu/zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-122"><paramref name="envelopeFileName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-122"><paramref name="envelopeFileName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b98b3-123">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> , który używa istniejącego niezaszyfrowanego pakietu jako źródła zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b98b3-124">Poniższy przykład pokazuje, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> jak używać metody do tworzenia <xref:System.IO.Packaging.EncryptedPackageEnvelope>wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b98b3-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="b98b3-125">Strumień, dla którego ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="b98b3-125">The stream on which to create the file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="b98b3-126">Strumień reprezentujący istniejący niezaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-126">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="b98b3-127">Licencja publikowania, która jest osadzona w pliku złożonym.</span><span class="sxs-lookup"><span data-stu-id="b98b3-127">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="b98b3-128">Obiekt, który określa, jakie operacje może wykonywać bieżący użytkownik na zaszyfrowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="b98b3-129">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (w określonym strumieniu), który używa określonego niezaszyfrowanego pakietu jako jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span></span></summary>
        <returns><span data-ttu-id="b98b3-130">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-131">Bieżący użytkownik ma dostęp do odczytu/zapisu do nowego pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b98b3-132">Poniższy przykład pokazuje, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> jak używać metody do tworzenia <xref:System.IO.Packaging.EncryptedPackageEnvelope>wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b98b3-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-133"><paramref name="envelopeStream" />lub <paramref name="packageStream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-133"><paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b98b3-134"><paramref name="envelopeStream" />nie zapewnia dostępu do odczytu i zapisu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-134"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="b98b3-135">Nazwa pliku złożonego OLE.</span><span class="sxs-lookup"><span data-stu-id="b98b3-135">The name of the OLE compound file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="b98b3-136">Strumień reprezentujący istniejący niezaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-136">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="b98b3-137">Licencja publikowania, która jest osadzona w pliku złożonym.</span><span class="sxs-lookup"><span data-stu-id="b98b3-137">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="b98b3-138">Obiekt, który określa, jakie operacje może wykonywać bieżący użytkownik na zaszyfrowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="b98b3-139">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> , który używa określonego niezaszyfrowanego pakietu jako jego zawartości, i nadaje mu określoną nazwę pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="b98b3-140">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-141">Jeśli istnieje już plik o określonej nazwie, zostanie on zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="b98b3-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="b98b3-142">Bieżący użytkownik ma dostęp do odczytu/zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b98b3-143">Poniższy przykład pokazuje, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> jak używać metody do tworzenia <xref:System.IO.Packaging.EncryptedPackageEnvelope>wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b98b3-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-144"><paramref name="envelopeFileName" />lub <paramref name="packageStream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-144"><paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b98b3-145">Zwalnia zasoby używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />program.</span><span class="sxs-lookup"><span data-stu-id="b98b3-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b98b3-146">Zwalnia wszystkie zasoby używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />program.</span><span class="sxs-lookup"><span data-stu-id="b98b3-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-147">Wywołanie <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> po zakończeniu <xref:System.IO.Packaging.EncryptedPackageEnvelope>z.</span><span class="sxs-lookup"><span data-stu-id="b98b3-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="b98b3-148"><xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> Metoda<xref:System.IO.Packaging.EncryptedPackageEnvelope> pozostawia w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="b98b3-149">Po wywołaniu <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>należy wydać wszystkie odwołania <xref:System.IO.Packaging.EncryptedPackageEnvelope> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.IO.Packaging.EncryptedPackageEnvelope> , którą zajmował.</span><span class="sxs-lookup"><span data-stu-id="b98b3-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="b98b3-150">Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b98b3-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b98b3-151">Zawsze wywołuj <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.IO.Packaging.EncryptedPackageEnvelope>do.</span><span class="sxs-lookup"><span data-stu-id="b98b3-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="b98b3-152">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.IO.Packaging.EncryptedPackageEnvelope> <xref:System.Object.Finalize%2A> metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="b98b3-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b98b3-153"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="b98b3-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b98b3-154">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> program i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="b98b3-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-155">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` <xref:System.Object.Finalize%2A> i metodę.</span><span class="sxs-lookup"><span data-stu-id="b98b3-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b98b3-156">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` `disposing` z parametrem ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="b98b3-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b98b3-157"><xref:System.Object.Finalize%2A>wywołuje `Dispose` `false`z `disposing` ustawionym na.</span><span class="sxs-lookup"><span data-stu-id="b98b3-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b98b3-158">Gdy parametr ma wartość true, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do <xref:System.IO.Packaging.EncryptedPackageEnvelope> których odwołują się te odwołania. `disposing`</span><span class="sxs-lookup"><span data-stu-id="b98b3-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="b98b3-159">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b98b3-160">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="b98b3-160">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b98b3-161">W przypadku <see langword="Dispose(Boolean)" /> przesłaniania należy zachować ostrożność, aby nie odwoływać się do obiektów, które zostały <see langword="Dispose" />wcześniej usunięte w ramach wcześniejszego wywołania do.</span><span class="sxs-lookup"><span data-stu-id="b98b3-161">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b98b3-162">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b98b3-162">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b98b3-163">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see cref="M:System.Object.Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [Zastępowanie metody Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="b98b3-163">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b98b3-164">Pobiera wartość określającą, czy plik został otwarty z dostępem do odczytu, zapisu, czy obu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-164">Gets a value that specifies whether the file was opened with access to read, write, or both.</span></span></summary>
        <value><span data-ttu-id="b98b3-165"><see cref="T:System.IO.FileAccess" /> Wartość, która została użyta do otwarcia pliku.</span><span class="sxs-lookup"><span data-stu-id="b98b3-165">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b98b3-166">Opróżnianie strumienia dla <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> i zawartości pakietu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-166">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b98b3-167">Pobiera zaszyfrowany pakiet wewnątrz <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-167">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <returns><span data-ttu-id="b98b3-168"><see cref="T:System.IO.Packaging.Package" /> Na kopercie.</span><span class="sxs-lookup"><span data-stu-id="b98b3-168">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b98b3-169">Pobiera wartość określającą, czy plik jest plikiem złożonym OLE ze strumieniem zaszyfrowanego pakietu</span><span class="sxs-lookup"><span data-stu-id="b98b3-169">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b98b3-170">Testowany strumień.</span><span class="sxs-lookup"><span data-stu-id="b98b3-170">The stream that is tested.</span></span></param>
        <summary><span data-ttu-id="b98b3-171">Pobiera wartość określającą, czy określony strumień jest plikiem złożonym OLE z zaszyfrowanym strumieniem pakietu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-171">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="b98b3-172"><see langword="true" />Jeśli określony strumień jest plikiem złożonym OLE ze strumieniem zaszyfrowanego pakietu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b98b3-172"><see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-173"><paramref name="stream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-173"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b98b3-174">Testowany plik.</span><span class="sxs-lookup"><span data-stu-id="b98b3-174">The file that is tested.</span></span></param>
        <summary><span data-ttu-id="b98b3-175">Pobiera wartość określającą, czy określony plik jest plikiem złożonym OLE ze strumieniem zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-175">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="b98b3-176"><see langword="true" />Jeśli określony plik jest plikiem złożonym OLE ze strumieniem zaszyfrowanego pakietu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b98b3-176"><see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b98b3-177">Poniższy przykład pokazuje, jak używać tej metody do testowania szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="b98b3-177">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b98b3-178"><paramref name="fileName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b98b3-178"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b98b3-179">Otwiera zaszyfrowany pakiet w pliku złożonym OLE.</span><span class="sxs-lookup"><span data-stu-id="b98b3-179">Opens the encrypted package in an OLE compound file.</span></span></summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="b98b3-180">Strumień zawierający zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-180">The stream containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="b98b3-181">Otwórz zaszyfrowany pakiet w określonym strumieniu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-181">Open the encrypted package in the specified stream.</span></span></summary>
        <returns><span data-ttu-id="b98b3-182"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="b98b3-182">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-183">Strumień musi mieć zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-183">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="b98b3-184">Plik zawierający zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-184">The file containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="b98b3-185">Otwórz zaszyfrowany pakiet w określonym pliku jako tylko do odczytu i nieudostępniony.</span><span class="sxs-lookup"><span data-stu-id="b98b3-185">Open the encrypted package in the specified file as read only and unshared.</span></span></summary>
        <returns><span data-ttu-id="b98b3-186"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="b98b3-186">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-187">Plik musi mieć zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-187">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="b98b3-188">Otwarty plik jest tylko do odczytu i nie jest udostępniany.</span><span class="sxs-lookup"><span data-stu-id="b98b3-188">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="b98b3-189">Plik zawierający zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-189">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="b98b3-190">Typ dostępu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-190">The type of access.</span></span></param>
        <summary><span data-ttu-id="b98b3-191">Otwórz zaszyfrowany pakiet w określonym pliku jako nieudostępniony i z określonym dostępem.</span><span class="sxs-lookup"><span data-stu-id="b98b3-191">Open the encrypted package in the specified file as unshared and with the specified access.</span></span></summary>
        <returns><span data-ttu-id="b98b3-192"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="b98b3-192">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-193">Plik musi mieć zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-193">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="b98b3-194">Otwarty plik jest nieudostępniony.</span><span class="sxs-lookup"><span data-stu-id="b98b3-194">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="b98b3-195">Plik zawierający zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-195">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="b98b3-196">Typ dostępu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-196">The type of access.</span></span></param>
        <param name="sharing"><span data-ttu-id="b98b3-197">Typ udostępniania.</span><span class="sxs-lookup"><span data-stu-id="b98b3-197">The type of sharing.</span></span></param>
        <summary><span data-ttu-id="b98b3-198">Otwórz zaszyfrowany pakiet w określonym pliku i nadaje mu określony dostęp i udostępnianie.</span><span class="sxs-lookup"><span data-stu-id="b98b3-198">Open the encrypted package in the specified file and gives it the specified access and sharing.</span></span></summary>
        <returns><span data-ttu-id="b98b3-199"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Zostanie otwarty.</span><span class="sxs-lookup"><span data-stu-id="b98b3-199">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-200">Plik musi mieć zaszyfrowany pakiet.</span><span class="sxs-lookup"><span data-stu-id="b98b3-200">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b98b3-201">Pobiera podstawowe właściwości pakietu (takie jak tytuł i temat) dokumentu zarządzanego prawa.</span><span class="sxs-lookup"><span data-stu-id="b98b3-201">Gets the core package properties (such as Title and Subject) of the rights managed document.</span></span></summary>
        <value><span data-ttu-id="b98b3-202"><see cref="T:System.IO.Packaging.PackageProperties" /> Dla pakietu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-202">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b98b3-203">Te właściwości podstawowe są przechowywane w standardowych strumieniach właściwości OLE (\005SummaryInformation i \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="b98b3-203">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="b98b3-204">Właściwości podstawowe są również przechowywane w samym pakiecie.</span><span class="sxs-lookup"><span data-stu-id="b98b3-204">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="b98b3-205">Aplikacja jest odpowiedzialna za synchronizację dwóch zestawów właściwości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-205">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b98b3-206">Pobiera informacje o usłudze Rights Management przechowywane w <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />programie <see cref="T:System.Security.RightsManagement.PublishLicense" /> , w tym, a <see cref="T:System.Security.RightsManagement.UseLicense" />następnie s przechowywane w pliku złożonym OLE, który jest pakietem chronionym przez Zarządzanie prawami</span><span class="sxs-lookup"><span data-stu-id="b98b3-206">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span></span></summary>
        <value><span data-ttu-id="b98b3-207"><see cref="T:System.IO.Packaging.RightsManagementInformation" /> Dla pakietu.</span><span class="sxs-lookup"><span data-stu-id="b98b3-207">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b98b3-208">Poniższy przykład pokazuje, <xref:System.IO.Packaging.RightsManagementInformation> <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> jak uzyskać dla zaszyfrowanego pakietu przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="b98b3-208">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b98b3-209">Pobiera obiekt, który zapewnia dostęp do strumieni plików złożonych poza zaszyfrowanym pakietem.</span><span class="sxs-lookup"><span data-stu-id="b98b3-209">Gets an object that provides access to the compound file streams outside the encrypted package.</span></span></summary>
        <value><span data-ttu-id="b98b3-210"><see cref="T:System.IO.Packaging.StorageInfo" /> Reprezentuje strumienie w pliku złożonym OLE, który znajduje się poza zaszyfrowanym pakietem.</span><span class="sxs-lookup"><span data-stu-id="b98b3-210">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
