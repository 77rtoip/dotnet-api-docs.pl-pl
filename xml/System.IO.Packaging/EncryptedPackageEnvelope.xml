<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8f8f2-101">Reprezentuje plik OLE złożony, który zawiera zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-101">Represents an OLE compound file that contains an encrypted package.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> nie ma konstruktorów publicznych.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="8f8f2-103"><xref:System.IO.Packaging.EncryptedPackageEnvelope> Jest tworzony przy użyciu statycznych <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, lub <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f8f2-104">Zamyka zaszyfrowanego pakietu i plik złożone OLE, który go zawiera.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-104">Closes the encrypted package and the OLE compound file that holds it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f8f2-105">Poniższy przykład przedstawia do używania tej metody, aby zamknąć <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f8f2-106">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="8f8f2-107">Strumień, w którym ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-107">The stream on which to create the file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="8f8f2-108">Licencji publikowania, która jest osadzony w pliku złożonego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-108">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="8f8f2-109">Obiekt, który określa, jakie operacje bieżącego użytkownika mogą wykonywać na zaszyfrowaną zawartość.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="8f8f2-110">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> określonego strumienia.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-111">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-112">Bieżący użytkownik ma dostęp do odczytu/zapisu do nowego pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-113"><paramref name="envelopeStream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-113"><paramref name="envelopeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8f8f2-114"><paramref name="envelopeStream" /> nie zapewnia dostęp do odczytu/zapisu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-114"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="8f8f2-115">Nazwa pliku złożonego OLE.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-115">The name of the OLE compound file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="8f8f2-116">Licencji publikowania, która jest osadzony w pliku złożonego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-116">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="8f8f2-117">Obiekt, który określa, jakie operacje bieżącego użytkownika mogą wykonywać na zaszyfrowaną zawartość.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="8f8f2-118">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> i nadaje mu nazwę określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-119">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-120">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="8f8f2-121">Bieżący użytkownik ma dostęp do odczytu/zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-122"><paramref name="envelopeFileName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-122"><paramref name="envelopeFileName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f8f2-123">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> używającą istniejącego pakietu niezaszyfrowane źródłem jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f8f2-124">Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metody tworzenia wystąpienia <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="8f8f2-125">Strumień, w którym ma zostać utworzony plik.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-125">The stream on which to create the file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="8f8f2-126">Strumień reprezentujący istniejący pakiet niezaszyfrowane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-126">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="8f8f2-127">Licencji publikowania, która jest osadzony w pliku złożonego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-127">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="8f8f2-128">Obiekt, który określa, jakie operacje bieżącego użytkownika mogą wykonywać na zaszyfrowaną zawartość.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="8f8f2-129">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (na określony strumień) używającej jako jego zawartości określonego pakietu niezaszyfrowane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-130">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-131">Bieżący użytkownik ma dostęp do odczytu/zapisu do nowego pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f8f2-132">Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metody tworzenia wystąpienia <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-133"><paramref name="envelopeStream" /> lub <paramref name="packageStream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-133"><paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8f8f2-134"><paramref name="envelopeStream" /> nie zapewnia dostęp do odczytu/zapisu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-134"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="8f8f2-135">Nazwa pliku złożonego OLE.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-135">The name of the OLE compound file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="8f8f2-136">Strumień reprezentujący istniejący pakiet niezaszyfrowane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-136">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="8f8f2-137">Licencji publikowania, która jest osadzony w pliku złożonego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-137">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="8f8f2-138">Obiekt, który określa, jakie operacje bieżącego użytkownika mogą wykonywać na zaszyfrowaną zawartość.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="8f8f2-139">Tworzy i zwraca <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> korzysta z określonego pakietu niezaszyfrowane jako jej zawartości i nadaje mu nazwę określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-140">Nowo utworzony <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-141">Jeśli plik o określonej nazwie już istnieje, zostanie zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="8f8f2-142">Bieżący użytkownik ma dostęp do odczytu/zapisu do pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f8f2-143">Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> metody tworzenia wystąpienia <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-144"><paramref name="envelopeFileName" /> lub <paramref name="packageStream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-144"><paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f8f2-145">Zwalnia zasoby używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f8f2-146">Zwalnia wszelkie zasoby używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-147">Wywołanie <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> po zakończeniu <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="8f8f2-148"><xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> Pozostawia metody <xref:System.IO.Packaging.EncryptedPackageEnvelope> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="8f8f2-149">Po wywołaniu <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.IO.Packaging.EncryptedPackageEnvelope> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.IO.Packaging.EncryptedPackageEnvelope> klasy.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="8f8f2-150">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8f8f2-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f8f2-151">Wywoływanie zawsze <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="8f8f2-152">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.IO.Packaging.EncryptedPackageEnvelope> obiektu <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8f8f2-153"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8f8f2-154">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-155">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8f8f2-156">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8f8f2-157"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8f8f2-158">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.IO.Packaging.EncryptedPackageEnvelope> odwołania.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="8f8f2-159">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8f8f2-160"><see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-160"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8f8f2-161">W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-161">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8f8f2-162">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8f8f2-162">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="8f8f2-163">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="8f8f2-163">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f8f2-164">Pobiera wartość określającą, czy plik został otwarty z dostęp do odczytu, zapisu lub oba.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-164">Gets a value that specifies whether the file was opened with access to read, write, or both.</span></span></summary>
        <value><span data-ttu-id="8f8f2-165"><see cref="T:System.IO.FileAccess" /> Wartości, który został użyty do otwarcia pliku.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-165">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f8f2-166">Opróżnienia strumienia dla obu <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> i jego zawartości pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-166">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f8f2-167">Pobiera zaszyfrowanego pakietu wewnątrz <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-167">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-168"><see cref="T:System.IO.Packaging.Package" /> Koperty.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-168">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f8f2-169">Pobiera wartość określającą, czy plik jest plikiem złożone OLE z zaszyfrowanego pakietu strumienia</span><span class="sxs-lookup"><span data-stu-id="8f8f2-169">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8f8f2-170">Strumień, który jest testowany.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-170">The stream that is tested.</span></span></param>
        <summary><span data-ttu-id="8f8f2-171">Pobiera wartość określającą, czy określony strumień jest plikiem złożone OLE z zaszyfrowanego pakietu strumienia.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-171">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns>
          <span data-ttu-id="8f8f2-172"><see langword="true" /> w przypadku określonego strumienia pliku złożonego OLE z zaszyfrowanego pakietu strumienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-172"><see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-173"><paramref name="stream" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-173"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="8f8f2-174">Plik, który jest testowany.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-174">The file that is tested.</span></span></param>
        <summary><span data-ttu-id="8f8f2-175">Pobiera wartość określającą, czy określony plik jest plikiem złożone OLE z zaszyfrowanego pakietu strumienia.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-175">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns>
          <span data-ttu-id="8f8f2-176"><see langword="true" /> Jeśli określony plik jest plikiem złożone OLE z zaszyfrowanego pakietu strumienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-176"><see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f8f2-177">Poniższy przykład pokazuje, jak użyć tej metody do przetestowania szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-177">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f8f2-178"><paramref name="fileName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-178"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f8f2-179">Otwiera zaszyfrowanego pakietu w pliku złożonego OLE.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-179">Opens the encrypted package in an OLE compound file.</span></span></summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="8f8f2-180">Strumień, zawierający zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-180">The stream containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="8f8f2-181">Otwórz zaszyfrowanego pakietu w określonego strumienia.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-181">Open the encrypted package in the specified stream.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-182"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Otwieranego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-182">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-183">Strumień musi mieć zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-183">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="8f8f2-184">Plik zawierający zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-184">The file containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="8f8f2-185">Otwórz zaszyfrowanego pakietu w określonym pliku jako, a nieudostępnionych tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-185">Open the encrypted package in the specified file as read only and unshared.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-186"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Otwieranego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-186">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-187">Nazwa pliku musi mieć zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-187">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="8f8f2-188">Otwarty plik jest do odczytu tylko i nieudostępnionych.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-188">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="8f8f2-189">Plik zawierający zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-189">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="8f8f2-190">Typ dostępu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-190">The type of access.</span></span></param>
        <summary><span data-ttu-id="8f8f2-191">Otwórz zaszyfrowanego pakietu w określonym pliku jako nieudostępnionych i z określonym dostępu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-191">Open the encrypted package in the specified file as unshared and with the specified access.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-192"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Otwieranego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-192">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-193">Nazwa pliku musi mieć zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-193">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="8f8f2-194">Otwarty plik jest udostępniany.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-194">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="8f8f2-195">Plik zawierający zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-195">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="8f8f2-196">Typ dostępu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-196">The type of access.</span></span></param>
        <param name="sharing"><span data-ttu-id="8f8f2-197">Typ udostępniania.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-197">The type of sharing.</span></span></param>
        <summary><span data-ttu-id="8f8f2-198">Otwórz zaszyfrowanego pakietu w określonym pliku i zapewnia jej określony dostępu i udostępniania.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-198">Open the encrypted package in the specified file and gives it the specified access and sharing.</span></span></summary>
        <returns><span data-ttu-id="8f8f2-199"><see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> Otwieranego.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-199">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-200">Nazwa pliku musi mieć zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-200">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f8f2-201">Pobiera podstawowe właściwości pakietu (takie jak tytuł i temat) dokumentu zarządzanego praw.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-201">Gets the core package properties (such as Title and Subject) of the rights managed document.</span></span></summary>
        <value><span data-ttu-id="8f8f2-202"><see cref="T:System.IO.Packaging.PackageProperties" /> Pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-202">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f8f2-203">Te właściwości core są przechowywane w standardowych strumieni właściwości OLE (\005SummaryInformation i \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="8f8f2-203">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="8f8f2-204">Właściwości podstawowe są także przechowywane w pakiecie, do samej siebie.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-204">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="8f8f2-205">Jest odpowiedzialny za aplikacji, aby zachować dwa zestawy właściwości zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-205">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f8f2-206">Pobiera uprawnienia zarządzania informacji przechowywanych w <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; w szczególności <see cref="T:System.Security.RightsManagement.PublishLicense" /> i <see cref="T:System.Security.RightsManagement.UseLicense" />pakietu chronione s przechowywane w pliku złożonego OLE, który zawiera usługi rights management</span><span class="sxs-lookup"><span data-stu-id="8f8f2-206">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span></span></summary>
        <value><span data-ttu-id="8f8f2-207"><see cref="T:System.IO.Packaging.RightsManagementInformation" /> Pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-207">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f8f2-208">Poniższy przykład przedstawia sposób uzyskiwania <xref:System.IO.Packaging.RightsManagementInformation> zaszyfrowanego pakietu przy użyciu <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-208">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f8f2-209">Pobiera obiekt, który zapewnia dostęp do strumieni złożone pliku poza zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-209">Gets an object that provides access to the compound file streams outside the encrypted package.</span></span></summary>
        <value><span data-ttu-id="8f8f2-210">A <see cref="T:System.IO.Packaging.StorageInfo" /> reprezentujący strumieni w pliku złożonego OLE, które znajdują się poza zaszyfrowanego pakietu.</span><span class="sxs-lookup"><span data-stu-id="8f8f2-210">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>