<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09c25cbc0310ad976dc23dd14cc3caa0b864965f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30454893" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję specyficzne dla aplikacji <see cref="T:System.IO.Packaging.Package" /> wystąpień w połączeniu z <see cref="T:System.IO.Packaging.PackWebRequest" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore> Definiuje kolekcje odwołania pakietu, które są otwarte i aktywne w aplikacji.  Dodane do pakietów <xref:System.IO.Packaging.PackageStore> są dostępne za ich wartość klucza identyfikatora URI.  <xref:System.IO.Packaging.PackageStore> Obsługuje trzy typowe zastosowania:  
  
1.  Uzyskiwanie dostępu do <xref:System.IO.Packaging.PackagePart> danych za pośrednictwem <xref:System.IO.Packaging.PackWebRequest>.  
  
2.  Uzyskiwanie wystąpienia aplikacji <xref:System.IO.Packaging.Package> podany identyfikator URI pakietu.  
  
3.  Uzyskiwanie dostępu do pakietów, które są tworzone i przechowywane w <xref:System.IO.MemoryStream>.  
  
 Aby zwiększyć wydajność i zminimalizować koszty operacji na plikach powtarzane otwarcie i zamknięcie, <xref:System.IO.Packaging.PackageStore> służy do zarządzania wystąpień pakietów używane przez <xref:System.IO.Packaging.PackWebRequest> i bezpośrednio przez aplikację.  Podczas uzyskiwania dostępu do danych w pakiecie, <xref:System.IO.Packaging.Package> żądany adres <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> najpierw jest sprawdzane w celu sprawdzenia, czy pakiet jest już zdefiniowany i Otwórz w <xref:System.IO.Packaging.PackageStore>.  Jeśli pakiet został zdefiniowany jako otwarty w <xref:System.IO.Packaging.PackageStore>, żądanej części jest dostępny bezpośrednio, bez wielokrotnie otwierające i zamykające pakietu dla każdego żądania.  
  
 Jeśli aplikacja zostanie otwarty pakiet o <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> można wywołać, aby dodać pakiet do <xref:System.IO.Packaging.PackageStore>.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> powinna być wywoływana później usunąć pakiet z <xref:System.IO.Packaging.PackageStore> przed wywołaniem <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.  
  
 Pakiety XPS została otwarta z <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> konstruktora są automatycznie dodawane i usuwane z <xref:System.IO.Packaging.PackageStore> gdy dokument jest tworzony i usunięty.  (Nie należy wywołać <xref:System.IO.Packaging.PackageStore.AddPackage%2A> lub <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> oddzielnie dla pakietów XPS została otwarta z <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> konstruktorów.)  
  
 Uprawnienia we/wy pliku pakietu dostępne za pośrednictwem <xref:System.IO.Packaging.PackageStore> jest taka sama, jak ustawić pakietu po otwarciu uprawnienia we/wy.  <xref:System.IO.Packaging.PackageStore> Zapewnia tylko odwołania do pakietów, które zostały dodane do magazynu.  Jest poprawnie otworzyć, aktualizacji i zamknąć każdego pakietu aplikacji.  
  
 Dodane do pakietów <xref:System.IO.Packaging.PackageStore> jest dostępna w środowisku wielowątkowym, gdy są one używane w połączeniu z [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] analizatora, takich jak <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.  Podczas pracy w środowisku wielowątkowym, aplikacja musi zablokować pakietu przed dostępu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">Klucz [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] z <c>pakietu</c> do porównania w <see cref="T:System.IO.Packaging.PackWebRequest" />.</param>
        <param name="package">Pakiet można dodać do magazynu.</param>
        <summary>Dodaje <see cref="T:System.IO.Packaging.Package" /> w magazynie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` Określa klucz pakietu identyfikator URI, który jest porównywany podczas wywoływania <xref:System.IO.Packaging.PackWebRequest>.  
  
 Jeśli `packageUri` odpowiada <xref:System.IO.Packaging.PackagePart.Uri%2A> dla <xref:System.IO.Packaging.PackagePart> w <xref:System.IO.Packaging.PackWebRequest> wywołać, zdefiniowanego w pakietu <xref:System.IO.Packaging.PackageStore> umożliwia dostęp do żądanej części.  
  
 Jeśli `packageUri` niezgodny <xref:System.IO.Packaging.PackagePart.Uri%2A> dla <xref:System.IO.Packaging.PackagePart> w <xref:System.IO.Packaging.PackWebRequest> wywołania pakietu z określonego identyfikatora URI jest otwarty uzyskać dostępu do żądanej części.  
  
 **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich niestandardowych <xref:System.IO.Packaging.Package> (z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.PackageStore.AddPackage%2A> metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.InvalidOperationException">Pakiet o określonym <paramref name="packageUri" /> znajduje się już w magazynie.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Pakietu do zwrócenia.</param>
        <summary>Zwraca <see cref="T:System.IO.Packaging.Package" /> z określonym [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ze sklepu.</summary>
        <returns>Pakiet z określonym <paramref name="packageUri" />; lub <see langword="null" />, jeśli pakiet z określonym <paramref name="packageUri" /> nie znajduje się w magazynie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` pasuje do identyfikatory URI określony w <xref:System.IO.Packaging.PackageStore.AddPackage%2A> wywołania metody.  
  
 **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich niestandardowych <xref:System.IO.Packaging.Package> (z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.PackageStore.GetPackage%2A> metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Pakietu do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.IO.Packaging.Package" /> z określonym [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ze sklepu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` pasuje do identyfikatory URI określony w <xref:System.IO.Packaging.PackageStore.AddPackage%2A> wywołania metody.  
  
 **Uwaga dotycząca zabezpieczeń** tej metody wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich niestandardowych <xref:System.IO.Packaging.Package> (z systemem innym niż<xref:System.IO.Packaging.ZipPackage>) typów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> Nieprawidłowy pakiet jest [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>