<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2a7854c47de40669c9e31d893ee481c50b0e7d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69356271" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję wystąpień specyficznych <see cref="T:System.IO.Packaging.Package" /> dla aplikacji używanych w połączeniu z. <see cref="T:System.IO.Packaging.PackWebRequest" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageStore> Definiuje kolekcje odwołań pakietu, które są otwarte i aktywne w aplikacji.  Pakiety dodane do <xref:System.IO.Packaging.PackageStore> są dostępne za pomocą wartości identyfikatora URI klucza.  Program <xref:System.IO.Packaging.PackageStore> obsługuje trzy typowe zastosowania:  
  
1.  Uzyskiwanie dostępu <xref:System.IO.Packaging.PackWebRequest>do <xref:System.IO.Packaging.PackagePart> danych przez.  
  
2.  Aplikacja uzyskuje wystąpienie <xref:System.IO.Packaging.Package> danego identyfikatora URI pakietu.  
  
3.  Uzyskiwanie dostępu do pakietów, które są tworzone <xref:System.IO.MemoryStream>i przechowywane w.  
  
 Aby zwiększyć wydajność i zminimalizować obciążenie powtarzanych operacji otwierania/zamykania pliku, <xref:System.IO.Packaging.PackageStore> służy do zarządzania wystąpieniami pakietów, <xref:System.IO.Packaging.PackWebRequest> do których uzyskuje dostęp i bezpośrednio przez aplikację.  Podczas uzyskiwania dostępu do <xref:System.IO.Packaging.Package> danych w pakiecie adres żądanego <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> elementu jest najpierw sprawdzany w celu sprawdzenia, czy <xref:System.IO.Packaging.PackageStore>pakiet jest już zdefiniowany i otwarty w.  Jeśli pakiet jest zdefiniowany jako otwarty w programie <xref:System.IO.Packaging.PackageStore>, do żądanych części można uzyskać dostęp bezpośrednio bez wielokrotnego otwierania i zamykania pakietu dla każdego żądania.  
  
 Jeśli aplikacja otwiera pakiet z <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>, można go wywołać, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> aby dodać pakiet do programu <xref:System.IO.Packaging.PackageStore>.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>powinien być później wywoływany, aby usunąć pakiet z <xref:System.IO.Packaging.PackageStore> przed wywołaniem <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>.  
  
 Pakiety XPS otwierane za <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> pomocą konstruktora są automatycznie dodawane i usuwane <xref:System.IO.Packaging.PackageStore> z programu podczas tworzenia i usuwania dokumentu.  (Nie trzeba wywoływać <xref:System.IO.Packaging.PackageStore.AddPackage%2A> ani <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> oddzielnie dla pakietów XPS otwartych przy użyciu <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> konstruktorów).  
  
 Uprawnienia we/wy pliku pakietu dostępne za pomocą <xref:System.IO.Packaging.PackageStore> pozostają takie same, jak uprawnienia we/wy ustawione dla pakietu podczas jego otwierania.  <xref:System.IO.Packaging.PackageStore> Tylko zawiera odwołania do pakietów, które zostały dodane do sklepu.  Aplikacja umożliwia prawidłowe otwieranie, aktualizowanie i zamykanie każdego pakietu.  
  
 Pakiety dodane do programu <xref:System.IO.Packaging.PackageStore> mogą być dostępne w środowiskach wielowątkowych, gdy są używane w połączeniu [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] z analizatorem takich jak <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>.  Gdy działa w środowisku wielowątkowym, aplikacja musi zablokować pakiet przed uzyskaniem dostępu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">Klucz [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] <see cref="T:System.IO.Packaging.PackWebRequest" />, <paramref name="package" /> który ma zostać porównany w.</param>
        <param name="package">Pakiet, który ma zostać dodany do magazynu.</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> Dodaje do sklepu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`Określa identyfikator URI klucza pakietu, który jest porównywany podczas wywoływania <xref:System.IO.Packaging.PackWebRequest>.  
  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> <xref:System.IO.Packaging.PackagePart> Jeśli dopasowuje się do elementu w <xref:System.IO.Packaging.PackWebRequest> wywołaniu, pakiet zdefiniowany w <xref:System.IO.Packaging.PackageStore> jest używany do uzyskania dostępu do żądanej części. `packageUri`  
  
 Jeśli nie pasuje <xref:System.IO.Packaging.PackagePart.Uri%2A> do elementu <xref:System.IO.Packaging.PackWebRequest>wwywołaniu , zostanie otwarty pakiet o określonym identyfikatorze URI w celu uzyskania dostępu do wymaganej części. <xref:System.IO.Packaging.PackagePart> `packageUri`  
  
 **Uwaga dotycząca zabezpieczeń** Ta metoda wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich typów <xref:System.IO.Packaging.Package> niestandardowych (nienależących<xref:System.IO.Packaging.ZipPackage>do).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> jak używać metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />jest nieprawidłowym [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]pakietem.</exception>
        <exception cref="T:System.InvalidOperationException">Pakiet o określonej <paramref name="packageUri" /> już znajduje się w magazynie.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Pakiet, który ma zostać zwrócony.</param>
        <summary>Zwraca obiekt [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] z określonym ze sklepu. <see cref="T:System.IO.Packaging.Package" /></summary>
        <returns>Pakiet z określonym <paramref name="packageUri" />lub <see langword="null" />, jeśli pakiet z określonym <paramref name="packageUri" /> elementem nie znajduje się w sklepie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`jest dopasowywany do identyfikatorów URI określonych w <xref:System.IO.Packaging.PackageStore.AddPackage%2A> wywołaniu metody.  
  
 **Uwaga dotycząca zabezpieczeń** Ta metoda wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich typów <xref:System.IO.Packaging.Package> niestandardowych (nienależących<xref:System.IO.Packaging.ZipPackage>do).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackageStore.GetPackage%2A> jak używać metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />jest nieprawidłowym [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]pakietem.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Pakiet do usunięcia.</param>
        <summary>Usuwa obiekt [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] z określonym ze sklepu. <see cref="T:System.IO.Packaging.Package" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri`jest dopasowywany do identyfikatorów URI określonych w <xref:System.IO.Packaging.PackageStore.AddPackage%2A> wywołaniu metody.  
  
 **Uwaga dotycząca zabezpieczeń** Ta metoda wymaga <xref:System.Security.Permissions.EnvironmentPermission> dla wszystkich typów <xref:System.IO.Packaging.Package> niestandardowych (nienależących<xref:System.IO.Packaging.ZipPackage>do).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> jak używać metody.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />jest nieprawidłowym [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]pakietem.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>
