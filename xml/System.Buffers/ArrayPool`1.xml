<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArrayPool`1.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5924af3bcdfd42b06e9a7eaf3e33460653c01b53b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">924af3bcdfd42b06e9a7eaf3e33460653c01b53b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>The type of the objects that are in the resource pool.</source>
          <target state="translated">Typ obiektów, które znajdują się w puli zasobów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Buffers.ArrayPool`1">
          <source>Provides a resource pool that enables reusing instances of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</source>
          <target state="translated">Udostępnia puli zasobów, która umożliwia ponowne używanie wystąpienia typu <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>Using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class to rent and return buffers (using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</source>
          <target state="translated">Przy użyciu <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> klasy wynajmować i zwracać buforów (przy użyciu <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> metody) może poprawić wydajność w sytuacji, gdy tablice są tworzone i niszczone często, co wykorzystania pamięci znaczących w pamięci Moduł zbierający.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>This class is thread-safe.</source>
          <target state="translated">Ta klasa jest bezpieczne wątkowo.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>All members may be used by multiple threads concurrently.</source>
          <target state="translated">Wszystkie elementy Członkowskie mogą być używane przez wiele wątków jednocześnie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Note that this constructor is protected; it can only be called by classes derived from the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class.</source>
          <target state="translated">Należy pamiętać, że ten konstruktor jest chroniony; może być wywoływany tylko przez klasy pochodzące od <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum length of an array instance that may be stored in the pool.</source>
          <target state="translated">Maksymalna długość tablicy wystąpienia, które mogą być przechowywane w puli.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum number of array instances that may be stored in each bucket in the pool.</source>
          <target state="translated">Maksymalna liczba wystąpień tablicy, które mogą być przechowywane w każdym zasobniku w puli.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The pool groups arrays of similar lengths into buckets for faster access.</source>
          <target state="translated">Puli grupuje podobne długości tablic w zasobników szybszy dostęp.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class using the specifed configuration.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> przy użyciu określonej konfiguracji.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class with the specified configuration.</source>
          <target state="translated">Nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> klasy z określoną konfiguracją.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class created by this method will group arrays into buckets, with no more than <ph id="ph2">`maxArraysPerBucket`</ph> in each bucket, and with those arrays not exceeding <ph id="ph3">`maxArrayLength`</ph> in length.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> klasy utworzony przez tę metodę pozwala grupować tablic w pakiety, których nie więcej niż <ph id="ph2">`maxArraysPerBucket`</ph> w każdym zasobniku i z tymi tablicami nieprzekraczającej <ph id="ph3">`maxArrayLength`</ph> długości.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>The minimum length of the array.</source>
          <target state="translated">Minimalna długość tablicy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Retrieves a buffer that is at least the requested length.</source>
          <target state="translated">Pobiera buforu, który jest co najmniej żądanej długości.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> that is at least <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> in length.</source>
          <target state="translated">Tablica typu <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> jest co najmniej <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> długości.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>This buffer is loaned to the caller and should be returned to the same pool using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method, so that it can be reused in subsequent calls to the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method.</source>
          <target state="translated">Bufor jest pożyczki do obiektu wywołującego i powinny być zwrócone do tej samej puli przy użyciu <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> metodę, tak że mogą być ponownie używane w kolejnych wywołaniach <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Failure to return a rented buffer is not a fatal error.</source>
          <target state="translated">Nie można zwrócić Wydzierżawionym bufor nie jest to błąd krytyczny.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</source>
          <target state="translated">Jednak może dojść do aplikacji zmniejszyć wydajność, ponieważ pula może być konieczne utworzenie nowych buforu zastąpić utracone.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>A buffer to return to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Buforu, aby powrócić do puli, który został uzyskany wcześniej przy użyciu <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Indicates whether the contents of the buffer should be cleared before reuse.</source>
          <target state="translated">Wskazuje, czy zawartość buforów powinny zostać wyczyszczone przed ponownym użyciem.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and if the pool will store the buffer to enable subsequent reuse, the <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> method will clear the <ph id="ph4">&lt;paramref name="array" /&gt;</ph> of its contents so that a subsequent caller using the <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method will not see the content of the previous caller.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> ma ustawioną wartość <ph id="ph2">&lt;see langword="true" /&gt;</ph>, i jeśli puli zapisze bufor do włączenia kolejnych ponownemu <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> metody spowoduje wyczyszczenie <ph id="ph4">&lt;paramref name="array" /&gt;</ph> jego zawartość, aby kolejnych wywołującemu, korzystając z <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> — metoda nie będą widzieć zawartość poprzednie obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> or if the pool will release the buffer, the array's contents are left unchanged.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> ma ustawioną wartość <ph id="ph2">&lt;see langword="false" /&gt;</ph> lub jeśli pula zostanie zwolniony buforu, pozostaną zawartości tablicy bez zmian.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Returns an array to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method on the same <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Zwraca tablicę do puli, który wcześniej został uzyskany przy użyciu <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> metody w tym samym <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</source>
          <target state="translated">Po buforu został zwrócony do puli, wywołujący zrezygnuje własność wszystkich buforu i nie może używać.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The reference returned from a given call to the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method must only be returned using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method once.</source>
          <target state="translated">Odwołanie zwrócone przez wywołanie danego <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> metoda musi być zwracany wyłącznie, przy użyciu <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> metody raz.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The default <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</source>
          <target state="translated">Wartość domyślna <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> może utrzymywać na zwrócony buforu celu wynajmować go ponownie, lub może zwolnić buforu zwrócony, jeśli okaże się, że pula już ma za mało buforów przechowywane.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Gets a shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Pobiera udostępnionej <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Udostępnionej <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>The shared pool provides a default implementation of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class that's intended for general applicability.</source>
          <target state="translated">Współużytkowanej puli udostępnia domyślną implementację <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> klasy, która jest przeznaczony dla ogólnego zastosowania.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</source>
          <target state="translated">Udostępniony klasy przechowuje tablic o różnych rozmiarach i może ponownie przekazanie tablicą większych niż rzeczywiście zażądano, ale jego nigdy nie zwróci kopię tablicą mniejsza niż żądana.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Renting a buffer from a shared class using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</source>
          <target state="translated">Wynajem buforu używającego udostępnionych klasy <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> metody spowoduje istniejącemu buforowi przełączana z puli do odpowiedniego buforu jest dostępna lub w nowym buforze są przydzielone, jeśli nie jest dostępna.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>