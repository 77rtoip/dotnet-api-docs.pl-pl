<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cd4416c419b70f301ca33ef17107cf4f059b502" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63913739" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="a36f1-101">Typ obiektów, które znajdują się w puli zasobów.</span><span class="sxs-lookup"><span data-stu-id="a36f1-101">The type of the objects that are in the resource pool.</span></span></typeparam>
    <summary><span data-ttu-id="a36f1-102">Udostępnia puli zasobów, która umożliwia ponowne używanie wystąpienia typu <see cref="T:T[]" />.</span><span class="sxs-lookup"><span data-stu-id="a36f1-102">Provides a resource pool that enables reusing instances of type <see cref="T:T[]" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="a36f1-103">Za pomocą <xref:System.Buffers.ArrayPool%601> klasy wynajmować i zwrócenie buforów (przy użyciu <xref:System.Buffers.ArrayPool%601.Rent%2A> i <xref:System.Buffers.ArrayPool%601.Return%2A> metody) może poprawić wydajność w sytuacji, w którym tablice są tworzone i niszczone, często, i wykorzystanie pamięci znaczące w pamięci Moduł zbierający.</span><span class="sxs-lookup"><span data-stu-id="a36f1-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a36f1-104">Ta klasa jest metodą o bezpiecznych wątkach.</span><span class="sxs-lookup"><span data-stu-id="a36f1-104">This class is thread-safe.</span></span> <span data-ttu-id="a36f1-105">Wszystkie elementy Członkowskie mogą być używane przez wiele wątków jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="a36f1-105">All members may be used by multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a36f1-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a36f1-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="a36f1-107">Należy pamiętać, że ten konstruktor jest chronione. może być wywoływany tylko przez klasy pochodne <xref:System.Buffers.ArrayPool%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="a36f1-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a36f1-108">Tworzy nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a36f1-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <returns><span data-ttu-id="a36f1-109">Nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a36f1-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength"><span data-ttu-id="a36f1-110">Maksymalna długość wystąpienia tablicy, które mogą być przechowywane w puli.</span><span class="sxs-lookup"><span data-stu-id="a36f1-110">The maximum length of an array instance that may be stored in the pool.</span></span></param>
        <param name="maxArraysPerBucket"><span data-ttu-id="a36f1-111">Maksymalna liczba wystąpień tablicy, które mogą być przechowywane w każdego przedziału w puli.</span><span class="sxs-lookup"><span data-stu-id="a36f1-111">The maximum number of array instances that may be stored in each bucket in the pool.</span></span> <span data-ttu-id="a36f1-112">Puli grupuje tablice o długości podobne do zasobników szybszy dostęp.</span><span class="sxs-lookup"><span data-stu-id="a36f1-112">The pool groups arrays of similar lengths into buckets for faster access.</span></span></param>
        <summary><span data-ttu-id="a36f1-113">Tworzy nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> przy użyciu określonej konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="a36f1-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="a36f1-114">Nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> klas z określoną konfiguracją.</span><span class="sxs-lookup"><span data-stu-id="a36f1-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="a36f1-115">Wystąpienie <xref:System.Buffers.ArrayPool%601> klasy utworzone przez tę metodę pozwala grupować tablic w przedziały, na których nie więcej niż `maxArraysPerBucket` w każdego przedziału, z tymi macierzami nieprzekraczającej `maxArrayLength` długości.</span><span class="sxs-lookup"><span data-stu-id="a36f1-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength"><span data-ttu-id="a36f1-116">Minimalna długość tablicy.</span><span class="sxs-lookup"><span data-stu-id="a36f1-116">The minimum length of the array.</span></span></param>
        <summary><span data-ttu-id="a36f1-117">Pobiera buforu, który jest co najmniej żądanej długości.</span><span class="sxs-lookup"><span data-stu-id="a36f1-117">Retrieves a buffer that is at least the requested length.</span></span></summary>
        <returns><span data-ttu-id="a36f1-118">Tablica typu <see cref="T:T[]" /> to co najmniej <paramref name="minimumLength" /> długości.</span><span class="sxs-lookup"><span data-stu-id="a36f1-118">An array of type <see cref="T:T[]" /> that is at least <paramref name="minimumLength" /> in length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a36f1-119">Bufor jest pożyczki do obiektu wywołującego, a powinien nastąpić powrót do tej samej puli przy użyciu <xref:System.Buffers.ArrayPool%601.Return%2A> metodę, tak że mogą zostać ponownie użyte w kolejnych wywołaniach <xref:System.Buffers.ArrayPool%601.Rent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a36f1-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="a36f1-120">Nie można zwrócić Wydzierżawionym bufor nie jest to błąd krytyczny.</span><span class="sxs-lookup"><span data-stu-id="a36f1-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="a36f1-121">Jednak może prowadzić do aplikacji obniżenie wydajności, ponieważ pula może być konieczne utworzenie nowych buforu na zastąpienie utracone.</span><span class="sxs-lookup"><span data-stu-id="a36f1-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a36f1-122">Bufor, aby powrócić do puli które zostały wcześniej pobrane przy użyciu <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a36f1-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span></span></param>
        <param name="clearArray"><span data-ttu-id="a36f1-123">Wskazuje, czy zawartość buforu powinno być wyczyszczone przed ponownym użyciem.</span><span class="sxs-lookup"><span data-stu-id="a36f1-123">Indicates whether the contents of the buffer should be cleared before reuse.</span></span> <span data-ttu-id="a36f1-124">Jeśli <paramref name="clearArray" /> jest ustawiona na <see langword="true" />, i jeśli będą przechowywane w puli buforów, które umożliwia późniejsze ponowne użycie, <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> metoda spowoduje wyczyszczenie <paramref name="array" /> jego zawartość, aby kolejne wywołującemu, korzystając z <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> metody nie będą widzieć zawartości poprzedniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="a36f1-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span></span> <span data-ttu-id="a36f1-125">Jeśli <paramref name="clearArray" /> ustawiono <see langword="false" /> lub jeśli pula będzie zwolnić buforu, zawartość tablicy są pozostawiane bez zmian.</span><span class="sxs-lookup"><span data-stu-id="a36f1-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span></span></param>
        <summary><span data-ttu-id="a36f1-126">Zwraca tablicę do puli, które zostały wcześniej pobrane przy użyciu <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> metody na tym samym <see cref="T:System.Buffers.ArrayPool`1" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a36f1-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a36f1-127">Po bufor został zwrócony do puli, obiekt wywołujący rezygnuje ze własność wszystkich buforu, a nie może używać.</span><span class="sxs-lookup"><span data-stu-id="a36f1-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="a36f1-128">Odwołania zwrócone w wyniku podanego wywołania <xref:System.Buffers.ArrayPool%601.Rent%2A> — metoda musi być zwracany za pomocą <xref:System.Buffers.ArrayPool%601.Return%2A> metoda jeden raz.</span><span class="sxs-lookup"><span data-stu-id="a36f1-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="a36f1-129">Wartość domyślna <xref:System.Buffers.ArrayPool%601> mogą je utrzymywać na zwracany buforu celu wynajmować ją ponownie, lub może zwolnić buforu zwracany, jeśli okaże się, że puli już ma za mało buforów przechowywane.</span><span class="sxs-lookup"><span data-stu-id="a36f1-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a36f1-130">Pobiera wspólny <see cref="T:System.Buffers.ArrayPool`1" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a36f1-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="a36f1-131">Wspólny <see cref="T:System.Buffers.ArrayPool`1" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a36f1-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="a36f1-132">Udostępniona pula udostępnia domyślną implementację elementu <xref:System.Buffers.ArrayPool%601> klasy, która jest przeznaczona dla ogólnego zastosowania.</span><span class="sxs-lookup"><span data-stu-id="a36f1-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="a36f1-133">Udostępnione klasy obsługuje tablice o różnych rozmiarach i może ponownie przekazanie tablicę o większych niż rzeczywiście zażądano, ale jej nigdy nie zwróci kopię tablicy o mniejszych niż żądana.</span><span class="sxs-lookup"><span data-stu-id="a36f1-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="a36f1-134">Wynajem buforu z za pomocą klasy udostępnione <xref:System.Buffers.ArrayPool%601.Rent%2A> metoda spowoduje istniejących buforu są pobierane z puli, czy odpowiedniego buforu jest dostępna w nowym buforze są przydzielone, jeśli nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="a36f1-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>