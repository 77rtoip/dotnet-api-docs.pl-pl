<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fafd52a0ba343a68dd9b94796a3e5fb07dc81928" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69342436" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów, które znajdują się w puli zasobów.</typeparam>
    <summary>Udostępnia pulę zasobów, która umożliwia używanie wystąpień typu <see cref="T:T[]" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 Użycie klasy do wynajęcia i powrotu buforów ( <xref:System.Buffers.ArrayPool%601.Rent%2A> przy użyciu metod <xref:System.Buffers.ArrayPool%601.Return%2A> i) może poprawić wydajność w sytuacjach, w których tablice są tworzone i niszczone często, co spowodowało duże wykorzystanie pamięci na śmieci <xref:System.Buffers.ArrayPool%601> zdarzenia.
  
 ]]></format>
    </remarks>
    <threadsafe>Ta klasa jest bezpieczna wątkowo. Wszystkie elementy członkowskie mogą być używane jednocześnie przez wiele wątków.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
Należy zauważyć, że ten konstruktor jest chroniony; może być wywoływana tylko przez klasy pochodne od <xref:System.Buffers.ArrayPool%601> klasy. 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Buffers.ArrayPool`1" /> klasy.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength">Maksymalna długość wystąpienia tablicy, która może być przechowywana w puli.</param>
        <param name="maxArraysPerBucket">Maksymalna liczba wystąpień tablicy, które mogą być przechowywane w każdym zasobniku w puli. Pula grupuje tablice o podobnej długości do zasobników w celu przyspieszenia dostępu.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Buffers.ArrayPool`1" /> klasy przy użyciu określonej konfiguracji.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Buffers.ArrayPool`1" /> klasy z określoną konfiguracją.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
Wystąpienie <xref:System.Buffers.ArrayPool%601> klasy utworzonej przez tę metodę umożliwi grupowanie tablic w zasobnikach, nie więcej niż `maxArraysPerBucket` w każdym zasobniku i z tymi tablicami, które nie przekraczają `maxArrayLength` długości.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">Minimalna długość tablicy.</param>
        <summary>Pobiera bufor, który ma co najmniej żądaną długość.</summary>
        <returns>Tablica typu <see cref="T:T[]" /> o długości co najmniej <paramref name="minimumLength" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Ten bufor jest wypożyczany obiektowi wywołującemu i powinien być zwracany do tej samej puli przy <xref:System.Buffers.ArrayPool%601.Return%2A> użyciu metody, aby można go było ponownie użyć w kolejnych wywołaniach <xref:System.Buffers.ArrayPool%601.Rent%2A> metody. Niepowodzenie zwrócenia wydzierżawionego buforu nie jest krytycznym błędem. Może to jednak prowadzić do zmniejszonej wydajności aplikacji, ponieważ może być konieczne utworzenie nowego buforu w celu zamienienia utraconego przez pulę.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array">Bufor, który ma zostać zwrócony do puli, która została wcześniej uzyskana przy użyciu <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> metody.</param>
        <param name="clearArray">Wskazuje, czy zawartość bufora powinna zostać wyczyszczona przed ponownym użyciem. Jeśli <paramref name="clearArray" /> jest ustawiona na <see langword="true" />, a jeśli Pula będzie przechowywał bufor w celu <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> umożliwienia późniejszego ponownego użycia, metoda będzie czyścić <paramref name="array" /> zawartość, tak aby kolejny obiekt wywołujący używający <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> metody nie widział zawartości poprzedniego obiektu wywołującego. Jeśli <paramref name="clearArray" /> jest ustawiona na <see langword="false" /> lub jeśli Pula zwolni bufor, zawartość tablicy pozostaje niezmieniona.</param>
        <summary>Zwraca tablicę do puli, która została wcześniej uzyskana przy <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> użyciu metody w tym <see cref="T:System.Buffers.ArrayPool`1" /> samym wystąpieniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Gdy bufor został zwrócony do puli, obiekt wywołujący ma wszystkie własności buforu i nie może go używać. Odwołanie zwrócone z danego wywołania <xref:System.Buffers.ArrayPool%601.Rent%2A> metody musi być zwracane tylko raz <xref:System.Buffers.ArrayPool%601.Return%2A> przy użyciu metody. Wartość domyślna <xref:System.Buffers.ArrayPool%601> może być przechowywana w buforze zwróconym w celu ponownego zadzierżawienia lub zwolnienia zwróconego buforu, jeśli zostanie ustalona, że pula ma już wystarczającą ilość buforów.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wystąpienie udostępnione <see cref="T:System.Buffers.ArrayPool`1" /> .</summary>
        <value>Wystąpienie udostępnione <see cref="T:System.Buffers.ArrayPool`1" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Pula udostępniona udostępnia domyślną implementację <xref:System.Buffers.ArrayPool%601> klasy, która jest przeznaczona do ogólnego zastosowania. Klasa udostępniona obsługuje tablice o wielu rozmiarach i może odwracać większą tablicę niż w rzeczywistości, ale nie będzie nigdy odwracać mniejszej tablicy niż została zażądana. Wynajem buforu z klasy udostępnionej przy użyciu <xref:System.Buffers.ArrayPool%601.Rent%2A> metody spowoduje, że istniejący bufor zostanie pobrany z puli, jeśli odpowiedni bufor jest dostępny lub w nowym buforze, jeśli nie jest dostępny.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
