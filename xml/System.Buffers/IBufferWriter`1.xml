<Type Name="IBufferWriter&lt;T&gt;" FullName="System.Buffers.IBufferWriter&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d652e388e680187d6b3ba95ec73275e726e0cc2d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69342430" /></Metadata><TypeSignature Language="C#" Value="public interface IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBufferWriter`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IBufferWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBufferWriter(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IBufferWriter" />
  <TypeSignature Language="F#" Value="type IBufferWriter&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ elementów w <see cref="T:System.Buffers.IBufferWriter`1" />.</typeparam>
    <summary>Reprezentuje ujścia danych wyjściowych, <typeparamref name="T" /> w którym można pisać dane.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advance(int count);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit" Usage="iBufferWriter.Advance count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Liczba elementów danych zapisywana <see cref="T:System.Span`1" /> w lub. <see cref="T:System.Memory`1" /></param>
        <summary>Powiadamia, że <paramref name="count" /> elementy danych zostały zapisaną w danych wyjściowych <see cref="T:System.Memory`1" /> <see cref="T:System.Span`1" /> lub. <see cref="T:System.Buffers.IBufferWriter`1" /></summary>
        <remarks>Musisz zażądać nowego buforu po wywołaniu funkcji Advance, aby kontynuować zapisywanie większej ilości danych. nie można zapisywać w wcześniej pobranym buforze.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;!T&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;'T&gt;" Usage="iBufferWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">Minimalna długość zwracanych <see cref="T:System.Memory`1" />wartości. Jeśli wartość jest równa 0, zwracany jest pusty bufor.</param>
        <summary>Zwraca do zapisu, który ma co najmniej żądany rozmiar (określony przez <paramref name="sizeHint" />). <see cref="T:System.Memory`1" /></summary>
        <returns><see cref="T:System.Memory`1" /> O rozmiarze<paramref name="sizeHint" />co najmniej. Jeśli <paramref name="sizeHint" /> jest równa 0, zwraca bufor niepusty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

Nie ma gwarancji, że kolejne wywołania będą zwracać ten sam bufor lub bufor o takim samym rozmiarze.

Nigdy nie należy zwracać <xref:System.Span%601.Empty?displayProperty=nameWithType>, ale może zgłosić, czy żądany rozmiar buforu nie jest dostępny.

Musisz zażądać nowego buforu po wywołaniu `Advance` , aby kontynuować zapisywanie większej ilości danych. nie można zapisywać w wcześniej pobranym buforze.

         ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Żądany rozmiar buforu jest niedostępny.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public Span&lt;T&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;!T&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;'T&gt;" Usage="iBufferWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">Minimalna długość zwracanych <see cref="T:System.Span`1" />wartości. Jeśli wartość jest równa 0, zwracany jest pusty bufor.</param>
        <summary>Zwraca do zapisu, który ma co najmniej żądany rozmiar (określony przez <paramref name="sizeHint" />). <see cref="T:System.Span`1" /></summary>
        <returns><see cref="T:System.Span`1" /> O rozmiarze<paramref name="sizeHint" />co najmniej. Jeśli <paramref name="sizeHint" /> jest równa 0, zwraca bufor niepusty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
Nie ma gwarancji, że kolejne wywołania będą zwracać ten sam bufor lub bufor o takim samym rozmiarze.

Ta metoda nie musi nigdy <xref:System.Span%601.Empty?displayProperty=nameWithType>zwracać, ale może zgłosić, czy żądany rozmiar buforu jest niedostępny.

Musisz zażądać nowego buforu po wywołaniu `Advance` , aby kontynuować zapisywanie większej ilości danych. nie można zapisywać w wcześniej pobranym buforze.
         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
