<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a180b05db991abf95954dec907506a207deaa8d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69263946" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje podstawową implementację Menedżera uwierzytelniania oświadczeń. Menedżer uwierzytelniania oświadczeń udostępnia miejsce w potoku przetwarzania oświadczeń do stosowania logiki przetwarzania (filtrowanie, sprawdzanie poprawności, rozszerzenie) do kolekcji oświadczeń w podmiotu zabezpieczeń przychodzących przed wykonaniem osiągnie kod aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer uwierzytelniania oświadczeń udostępnia punkt rozszerzalności w potoku przetwarzania oświadczeń aplikacji, za pomocą którego można weryfikować, filtrować, modyfikować oświadczenia przychodzące lub dodawać nowe oświadczenia do zestawu oświadczeń przedstawionych przez <xref:System.Security.Claims.ClaimsPrincipal> przed RP kod aplikacji jest wykonywany. Można nawet zwrócić niestandardową implementację <xref:System.Security.Claims.ClaimsPrincipal> , jeśli wymaga ona aplikacji RP. Domyślna implementacja dostarczona przez <xref:System.Security.Claims.ClaimsAuthenticationManager> klasę zwraca oświadczenia <xref:System.Security.Claims.ClaimsPrincipal> w niezmodyfikowanym elemencie, jednak można utworzyć z <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> tej klasy i zastąpić metodę, aby zmodyfikować oświadczenia w <xref:System.Security.Claims.ClaimsPrincipal> (lub zwracając niestandardowe). <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 Typowym powodem tworzenia niestandardowego Menedżera uwierzytelniania oświadczeń jest dodanie, usunięcie lub przekształcenie oświadczeń na podstawie informacji, które są znane tylko przez lub są, być może lepiej obsługiwane przez aplikację RP. Na przykład Historia zakupów klientów w aplikacji koszyka zakupów może być przechowywana w bazie danych obsługiwanej przez aplikację RP, a następnie dodana do podmiotu zabezpieczeń oświadczeń zwróconego przez Menedżera uwierzytelniania oświadczeń na podstawie wartości oświadczenia nazwy znalezionego w Obiekt przychodzący.  
  
 Można skonfigurować aplikację do korzystania z programu `ClaimsAuthenticationManager` programowo przy <xref:System.IdentityModel.Configuration.IdentityConfiguration> użyciu klasy [ &lt;lub w konfiguracji za pomocą elementu claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) (który jest elementem podrzędnym element IdentityConfiguration). [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) Można zastąpić metodę, <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> aby zapewnić przetwarzanie niestandardowych elementów podrzędnych elementu, `<claimsAuthenticationManager>` za pomocą którego można skonfigurować Menedżera niestandardowego. Podstawowa implementacja programu <xref:System.Security.Claims.ClaimsAuthenticationManager> nie obsługuje żadnych elementów podrzędnych.  
  
 Skonfigurowanie aplikacji do korzystania z Menedżera uwierzytelniania oświadczeń zapewnia, że będzie on wywoływany przez Windows Identity Foundation (WIF) z potoku żądania.  
  
   
  
## Examples  
 Poniższy kod przedstawia prostego Menedżera uwierzytelniania oświadczeń, który dodaje oświadczenie roli do przychodzącego podmiotu zabezpieczeń bez sprawdzania oświadczeń przychodzących. 
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 Poniższy kod XML pokazuje `<claimsAuthenticationManager>` element.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">Adres żądanego zasobu.</param>
        <param name="incomingPrincipal">Podmiot zabezpieczeń oświadczeń reprezentujący uwierzytelnionego użytkownika próbującego uzyskać dostęp do zasobu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca <see cref="T:System.Security.Claims.ClaimsPrincipal" /> obiekt spójny z wymaganiami aplikacji RP. Domyślna implementacja nie modyfikuje przychodzącego <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</summary>
        <returns>Podmiot zabezpieczeń oświadczeń, który zawiera wszelkie modyfikacje niezbędne dla aplikacji RP. Domyślna implementacja zwraca niezmodyfikowaną nazwę podmiotu zabezpieczeń oświadczeń przychodzących.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> Metoda jest wywoływana z potoku przetwarzania żądań można zastąpić tę metodę w klasie pochodnej, aby filtrować, modyfikować lub wstrzyknąć oświadczenia do podmiotu zabezpieczeń oświadczeń zgodnie z zasadami aplikacji RP. W zależności od wymagań aplikacji RP można nawet zwrócić niestandardową implementację programu <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementy konfiguracji niestandardowej. Każdy węzeł na liście jest typu <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, ładuje konfigurację niestandardową z pliku XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> Metoda jest wywoływana przez infrastrukturę konfiguracji. Gdy ta metoda jest wywoływana, `nodelist` będzie zawierać elementy [ &lt;podrzędne najwyższego poziomu elementu claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) z pliku konfiguracyjnego. Każdy z tych elementów może z kolei zawierać atrybuty lub elementy podrzędne w zależności od schematu konfiguracji zdefiniowanego dla klasy pochodnej. Jeśli w pliku konfiguracji nie są wyświetlane `<claimsAuthenticationManager>` żadne elementy podrzędne, ta metoda nie jest wywoływana.  
  
 Domyślna implementacja zgłasza <xref:System.NotImplementedException>. Zastąp tę metodę w klasie pochodnej, aby włączyć inicjowanie Menedżera uwierzytelniania oświadczeń z pliku konfiguracji. Na przykład elementy konfiguracji mogą opisywać zasady, które mają być przestrzegane podczas uwierzytelniania podmiotu zabezpieczeń oświadczeń; lub mogą być używane do wskazywania magazynu atrybutów, z którego dodatkowe oświadczenia mają być dodawane do podmiotu zabezpieczeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
