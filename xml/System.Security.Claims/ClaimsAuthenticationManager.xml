<Type Name="ClaimsAuthenticationManager" FullName="System.Security.Claims.ClaimsAuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e9f67148b9346cb40b30cdbdf8b77922927a172" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52608096" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsAuthenticationManager : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsAuthenticationManager extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsAuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsAuthenticationManager&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsAuthenticationManager : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ClaimsAuthenticationManager = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje implementację podstawową dla Menedżera uwierzytelniania oświadczeń. Menedżer uwierzytelniania oświadczeń to miejsce w oświadczeniach przetwarzania potoku stosowania logiki przetwarzania (filtrowanie, weryfikacji i rozszerzenia) kolekcji oświadczeń w przychodzących podmiot zabezpieczeń, zanim wykonywanie osiągnie kod aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Roszczenia, w Menedżerze uwierzytelniania zapewnia rozszerzalność momentów aplikacji oświadczeń potok przetwarzania, który służy do sprawdzania poprawności, filtrowanie, modyfikowanie, oświadczeń przychodzących lub wstawić nowego oświadczenia do zestawu oświadczeń przedstawiony przez <xref:System.Security.Claims.ClaimsPrincipal> przed punktu przywracania Kod aplikacji jest wykonywany. Można nawet zwrócić niestandardową implementację <xref:System.Security.Claims.ClaimsPrincipal> jeśli wymaga aplikacji jednostki Uzależnionej. Domyślna implementacja dostarczone przez <xref:System.Security.Claims.ClaimsAuthenticationManager> Klasa zwraca oświadczenia w <xref:System.Security.Claims.ClaimsPrincipal> w niezmienionej postaci; jednak może pochodzić z tej klasy i zastąpienia <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> metodę do modyfikowania oświadczeń w <xref:System.Security.Claims.ClaimsPrincipal> (lub w celu zwrócenia niestandardowego <xref:System.Security.Claims.ClaimsPrincipal>).  
  
 Typową przyczyną tworzenia uwierzytelnienia oświadczenia niestandardowe manager jest dodać, usunąć lub przekształcania oświadczeń na podstawie informacji o tylko określane przez usługę lub być może, lepiej obsługiwany przez aplikację jednostki Uzależnionej. Na przykład, historii zakupów klientów w aplikacji koszyka zakupów może znajdować się w bazie danych, obsługiwane przez aplikację jednostki Uzależnionej, a następnie dodane do podmiot zabezpieczeń oświadczeń zwrócony przez Menedżera uwierzytelniania oświadczeń na podstawie wartości oświadczenia nazwy, znaleziono w przychodzące podmiot zabezpieczeń.  
  
 Można skonfigurować aplikację do `ClaimsAuthenticationManager` programowo przy użyciu <xref:System.IdentityModel.Configuration.IdentityConfiguration> klasy lub w konfiguracji za pomocą [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) () — element czyli element podrzędny [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) elementu). Można zastąpić <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> metody w celu zapewnienia przetwarzania dla elementów podrzędnych niestandardowych `<claimsAuthenticationManager>` elementu za pomocą którego można skonfigurować niestandardowe menedżera. Implementację podstawową <xref:System.Security.Claims.ClaimsAuthenticationManager> nie obsługuje żadnych elementów podrzędnych.  
  
 Konfigurowanie aplikacji przy użyciu Menedżera uwierzytelniania oświadczeń gwarantuje, że zostanie ono wywołane przez program Windows Identity Foundation (WIF) z Potok żądań.  
  
   
  
## Examples  
 Poniższy kod przedstawia uwierzytelniania oświadczeń proste menedżera, który dodaje oświadczenie roli do przychodzącego jednostkę bez sprawdzania oświadczeń przychodzących...  
  
 [!code-csharp[WifWebApplication1#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwebapplication1/cs/myclaimsauthenticationmanager/simpleclaimsauthenticatonmanager.cs#1)]  
  
 Pokazano w poniższym XML `<claimsAuthenticationManager>` elementu.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthenticationManager type="MyClaimsAuthenticationManager.SimpleClaimsAuthenticatonManager, MyClaimsAuthenticationManager" />  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsAuthenticationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsAuthenticationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Authenticate (string resourceName, System.Security.Claims.ClaimsPrincipal incomingPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Authenticate(string resourceName, class System.Security.Claims.ClaimsPrincipal incomingPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Authenticate (resourceName As String, incomingPrincipal As ClaimsPrincipal) As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Authenticate(System::String ^ resourceName, System::Security::Claims::ClaimsPrincipal ^ incomingPrincipal);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Authenticate : string * System.Security.Claims.ClaimsPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsAuthenticationManager.Authenticate (resourceName, incomingPrincipal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="incomingPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="resourceName">Adres zasobu, która jest wymagana.</param>
        <param name="incomingPrincipal">Podmiot zabezpieczeń oświadczeń, który reprezentuje uwierzytelnionego użytkownika, który próbuje uzyskać dostęp do zasobu.</param>
        <summary>Po przesłonięciu w klasie pochodnej zwraca <see cref="T:System.Security.Claims.ClaimsPrincipal" /> obiekt jest zgodny z wymaganiami aplikacji jednostki Uzależnionej. Domyślna implementacja nie powoduje modyfikacji przychodzącego <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</summary>
        <returns>Podmiot zabezpieczeń do oświadczeń, który zawiera wszelkie modyfikacje, które są niezbędne dla aplikacji jednostki Uzależnionej. Domyślna implementacja zwraca jednostki oświadczeń przychodzących w niezmienionej postaci.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> Metoda jest wywoływana z potoku przetwarzania żądań można przesłonić tę metodę w klasie pochodnej, aby filtrować, zmodyfikować lub wstawić oświadczenia do jednostki oświadczeń zgodnie z zasadami aplikacji jednostki Uzależnionej. W zależności od wymagań aplikacji jednostki Uzależnionej, nawet może zwrócić niestandardową implementację <xref:System.Security.Claims.ClaimsPrincipal>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="claimsAuthenticationManager.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementy konfiguracji niestandardowej. Każdy węzeł na liście jest typu <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ładuje niestandardowej konfiguracji z pliku XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A> Metoda jest wywoływana przez infrastrukturę konfiguracji. Gdy ta metoda jest wywoływana, `nodelist` będzie zawierać elementów podrzędnych najwyższego poziomu [ &lt;claimsAuthenticationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md) elementu z pliku konfiguracji. Każdy z tych elementów z kolei może zawierać, atrybutów lub elementów podrzędnych w zależności od schematu konfiguracji, jaką zdefiniujesz dla klasy pochodnej. Jeśli nie elementy podrzędne są wyświetlane w obszarze `<claimsAuthenticationManager>` elementu w pliku konfiguracji, ta metoda nie jest wywoływana.  
  
 Domyślna implementacja zwraca <xref:System.NotImplementedException>. Zastępuje tę metodę w pochodnej klasie umożliwiające inicjowanie Menedżera uwierzytelniania oświadczeń z pliku konfiguracji. Na przykład elementy konfiguracji może zawierać opis zasad, których należy przestrzegać podczas uwierzytelniania podmiot zabezpieczeń oświadczeń; lub może być używany wskaż magazyn atrybutów, z którego mają być dodawane do jednostki dodatkowe oświadczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>