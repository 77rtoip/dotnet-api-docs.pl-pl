<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f5253dae8b81cb529cf20f6bbac1384e74783ee" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53457216" /></Metadata><TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="789dd-101">Reprezentuje połączenie pełnego dupleksu w czasie rzeczywistym między serwerem sieci web i klientów w aplikacji ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="789dd-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="789dd-102">Anuluje wszystkie oczekujące operacje We/Wy na <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> obiektu i ustawia stan obiektu, tak aby nie można uruchomić dodatkowe operacje We/Wy.</span><span class="sxs-lookup"><span data-stu-id="789dd-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="789dd-103">Po <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> wywołaniu metody, można nadal dostęp do właściwości i metod, które nie obejmują operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="789dd-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-104">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="789dd-105">Kod stanu operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="789dd-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="789dd-106">Operacja zamykania komunikatu o stanie.</span><span class="sxs-lookup"><span data-stu-id="789dd-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="789dd-107">Obiekt, który anuluje operację oczekujące.</span><span class="sxs-lookup"><span data-stu-id="789dd-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="789dd-108">Wysyła komunikat asynchronicznych do klienta w celu zamknięcia połączenia.</span><span class="sxs-lookup"><span data-stu-id="789dd-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="789dd-109">Jeżeli serwer inicjuje żądanie w celu zamknięcia połączenia, metoda czeka na klienta potwierdzić żądanie przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="789dd-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="789dd-110">Odwołanie do operacji.</span><span class="sxs-lookup"><span data-stu-id="789dd-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="789dd-111">Możesz użyć <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> i <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metody zainicjowane przez klienta i inicjowanych przez serwer żądania zamknąć <xref:System.Web.WebSockets.AspNetWebSocket> połączenia.</span><span class="sxs-lookup"><span data-stu-id="789dd-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="789dd-112">Te dwie metody obsługi żądań zainicjowane przez klienta w taki sam sposób: Po klient wysyła wiadomość do serwera w celu zamknięcia połączenia, serwer wymaga jednej z następujących metod i wysyła potwierdzenie do klienta, a następnie zwraca metoda.</span><span class="sxs-lookup"><span data-stu-id="789dd-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="789dd-113">W przypadku żądań inicjowanych przez serwer te dwie metody działają inaczej.</span><span class="sxs-lookup"><span data-stu-id="789dd-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="789dd-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Metoda wysyła wiadomość do klienta w celu zamknięcia połączenia, czeka na odpowiedź, a następnie zwraca.</span><span class="sxs-lookup"><span data-stu-id="789dd-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="789dd-115">Serwer nie czeka na wszelkie dodatkowe dane wysyłane przez klienta.</span><span class="sxs-lookup"><span data-stu-id="789dd-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="789dd-116">Z kolei <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metoda wysyła wiadomość do klienta w celu zamknięcia połączenia i jest zwracane bez oczekiwania na odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="789dd-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="789dd-117">Po powrocie z metody można wywołać <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> metody i obsługiwać dodatkowe dane lub po potwierdzeniu, że klient wysyła.</span><span class="sxs-lookup"><span data-stu-id="789dd-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-118"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="789dd-119"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt jest w stanie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="789dd-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="789dd-120">—lub—</span><span class="sxs-lookup"><span data-stu-id="789dd-120">-or-</span></span> 
<span data-ttu-id="789dd-121">Operacje wysyłania są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="789dd-121">Sending operations are unavailable.</span></span>  
  
<span data-ttu-id="789dd-122">—lub—</span><span class="sxs-lookup"><span data-stu-id="789dd-122">-or-</span></span> 
<span data-ttu-id="789dd-123">Odbieranie operacje są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="789dd-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="789dd-124">Kod stanu operację zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="789dd-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="789dd-125">Operacja zamykania komunikatu o stanie.</span><span class="sxs-lookup"><span data-stu-id="789dd-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="789dd-126">Obiekt, który anuluje operację oczekujące.</span><span class="sxs-lookup"><span data-stu-id="789dd-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="789dd-127">Wysyła komunikat asynchronicznych do klienta w celu zamknięcia połączenia.</span><span class="sxs-lookup"><span data-stu-id="789dd-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="789dd-128">Jeżeli serwer inicjuje żądanie w celu zamknięcia połączenia, metoda zwraca bez oczekiwania na odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="789dd-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="789dd-129">Odwołanie do operacji.</span><span class="sxs-lookup"><span data-stu-id="789dd-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="789dd-130">Możesz użyć <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> i <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metody zainicjowane przez klienta i inicjowanych przez serwer żądania zamknąć <xref:System.Web.WebSockets.AspNetWebSocket> połączenia.</span><span class="sxs-lookup"><span data-stu-id="789dd-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="789dd-131">Te dwie metody obsługi żądań zainicjowane przez klienta w taki sam sposób: Po klient wysyła wiadomość do serwera w celu zamknięcia połączenia, serwer wymaga jednej z następujących metod i wysyła potwierdzenie do klienta, a następnie zwraca metoda.</span><span class="sxs-lookup"><span data-stu-id="789dd-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="789dd-132">W przypadku żądań inicjowanych przez serwer te dwie metody działają inaczej.</span><span class="sxs-lookup"><span data-stu-id="789dd-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="789dd-133"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Metoda wysyła wiadomość do klienta w celu zamknięcia połączenia, czeka na odpowiedź, a następnie zwraca.</span><span class="sxs-lookup"><span data-stu-id="789dd-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="789dd-134">Serwer nie czeka na wszelkie dodatkowe dane wysyłane przez klienta.</span><span class="sxs-lookup"><span data-stu-id="789dd-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="789dd-135">Z kolei <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> metoda wysyła wiadomość do klienta w celu zamknięcia połączenia i jest zwracane bez oczekiwania na odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="789dd-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="789dd-136">Po powrocie z metody można wywołać <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> metody i obsługiwać dodatkowe dane lub po potwierdzeniu, że klient wysyła.</span><span class="sxs-lookup"><span data-stu-id="789dd-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-137">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="789dd-138"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt jest w stanie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="789dd-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="789dd-139">—lub—</span><span class="sxs-lookup"><span data-stu-id="789dd-139">-or-</span></span> 
<span data-ttu-id="789dd-140">Operacje wysyłania są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="789dd-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="789dd-141">Pobiera kod stanu, która wskazuje, dlaczego <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> obiekt został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="789dd-142">Kod stanu.</span><span class="sxs-lookup"><span data-stu-id="789dd-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-143">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="789dd-144">Pobiera komunikat o stanie, który wyjaśnia, dlaczego <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> obiekt został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="789dd-145">Komunikat o stanie.</span><span class="sxs-lookup"><span data-stu-id="789dd-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-146">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="789dd-147">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="789dd-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="789dd-148">Program ASP.NET automatycznie wywołuje <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> metody <xref:System.Web.WebSockets.AspNetWebSocket> obiektu, aby zwolnić wszystkie zasoby, które pozostają po zakończeniu kodu wykonywanego.</span><span class="sxs-lookup"><span data-stu-id="789dd-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="789dd-149">Tablica, która zawiera dane komunikatów.</span><span class="sxs-lookup"><span data-stu-id="789dd-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="789dd-150">Obiekt, który anuluje operację oczekujące.</span><span class="sxs-lookup"><span data-stu-id="789dd-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="789dd-151">Odbiera fragmentu pojedynczy komunikat z klienta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="789dd-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="789dd-152">Odwołanie do zadania, odbierania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="789dd-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-153"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="789dd-154"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt jest w stanie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="789dd-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="789dd-155">—lub—</span><span class="sxs-lookup"><span data-stu-id="789dd-155">-or-</span></span> 
<span data-ttu-id="789dd-156">Odbieranie operacje są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="789dd-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="789dd-157">Tablica, która zawiera dane komunikatów.</span><span class="sxs-lookup"><span data-stu-id="789dd-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="789dd-158">Typ komunikatu.</span><span class="sxs-lookup"><span data-stu-id="789dd-158">The message type.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="789dd-159"><see langword="true" /> Aby wskazać, że fragment jest na końcu pełną wiadomości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="789dd-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="789dd-160">Obiekt, który anuluje operację oczekujące.</span><span class="sxs-lookup"><span data-stu-id="789dd-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="789dd-161">Wysyła fragmentu jedną wiadomość z klientem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="789dd-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="789dd-162">Odwołanie do zadania wysyłania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="789dd-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-163"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Dispose.</span><span class="sxs-lookup"><span data-stu-id="789dd-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="789dd-164"><see cref="T:System.Web.WebSockets.AspNetWebSocket" /> Obiekt jest w stanie zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="789dd-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="789dd-165">—lub—</span><span class="sxs-lookup"><span data-stu-id="789dd-165">-or-</span></span> 
<span data-ttu-id="789dd-166">Operacje wysyłania są niedostępne.</span><span class="sxs-lookup"><span data-stu-id="789dd-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="789dd-167">Pobiera wartość, która wskazuje stan otwarte lub zamknięte <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="789dd-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="789dd-168">Bieżący stan.</span><span class="sxs-lookup"><span data-stu-id="789dd-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-169">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="789dd-170">Pobiera nazwę protokołu specyficzne dla aplikacji, którą zdalnego klienta i serwera można użyć do wymiany danych za pośrednictwem <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> połączenia.</span><span class="sxs-lookup"><span data-stu-id="789dd-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="789dd-171">Nazwa protokołu.</span><span class="sxs-lookup"><span data-stu-id="789dd-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="789dd-172">Obiekt został wcześniej usunięty.</span><span class="sxs-lookup"><span data-stu-id="789dd-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>