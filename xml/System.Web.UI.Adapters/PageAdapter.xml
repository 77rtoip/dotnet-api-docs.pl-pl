<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d439034d4f4c3638f04bec5e14c074ac5e104b9d" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39867197" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostosowuje się strony określonej przeglądarki sieci Web i udostępnia klasę bazową, w którym wszystkie karty strony dziedziczą, bezpośrednio lub pośrednio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Klasa jest klasą abstrakcyjną, która dostosowuje się strony sieci Web dla określonej klasy przeglądarek, zdefiniowany przez język znaczników, który korzysta z przeglądarki (na przykład HTML lub XHTML). Większość przystosowanie w zachowaniu renderowania są umieszczane w klasach składnik zapisywania tekstu specjalistyczne, wyprowadzonych z <xref:System.Web.UI.HtmlTextWriter> klasy, dzięki czemu nie zawsze jest konieczne w celu zapewnienia karty strony.  
  
 Większość członków pochodnego strony karty są wywoływane z <xref:System.Web.UI.Page> klasy lub z adapterów kontrolek. Po pierwsze, <xref:System.Web.UI.Page> klasy lub kontrolki karty wykryć obecność karty pochodnej strony, a następnie wywołaj element członkowski lub udostępniania funkcji, jeśli nie ma karty strony.  
  
 Elementy członkowskie <xref:System.Web.UI.Adapters.PageAdapter> klasy oferują następujące funkcje:  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> i <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> właściwości definiują dodatkowych nagłówków HTTP i HTTP `GET` i `POST` parametry, których można użyć do zmiany pamięci podręcznej. Są one nazywane podczas inicjowania pamięci podręcznej z <xref:System.Web.UI.Page> klasy.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> Metoda zwraca obiekt, który może służyć do utrwalenia połączone stany przeglądania i kontrolowania strony. Jest wywoływany przez <xref:System.Web.UI.Page.PageStatePersister%2A> właściwość, jeśli karta strony pochodnej jest obecny.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Metoda zapewnia DHTML fragmentu kodu, który może służyć do odwołania formularzy w skryptach.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Metoda zwraca kolekcję zmiennych zwrotu, jeśli strona znajduje się w zwrotu. Jest wywoływana przez program .NET Framework zamiast <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> metody, jeśli karta strony pochodnej jest obecny.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> i <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> metody są używane przez formant karty do renderowania hiperłącza, jeśli karta strony pochodnej jest obecny.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda powoduje renderowanie, hiperłącze lub tag kliencki zwrotu, który można przesłać formularza.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> i <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> metody są używane przez adapterów kontrolek przycisku radiowego do odwoływać się do drugiego <xref:System.Web.UI.WebControls.RadioButton> formanty w grupie przycisków radiowych.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> Właściwości zapewnia dostęp do połączonych kontroli i widoku stanów <xref:System.Web.UI.Page> obiektu za pomocą wewnętrznego `ClientState` właściwość <xref:System.Web.UI.Page> klasy.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Metoda jest używana przez formant karty do wykonania przekształcenia tekstu specyficznych dla urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyprowadzić klasę o nazwie `CustomPageAdapter` z <xref:System.Web.UI.Adapters.PageAdapter> klasy, a także Przesłoń <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metody. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda dodaje atrybut o nazwie `src` do hiperłącza, który zawiera odwołanie do bieżącej strony. Wszystkie hiperlinki, renderowane przy użyciu strony, do którego `CustomPageAdapter` jest dołączony będzie miał `src` atrybutu.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework tworzy wewnętrznie tej karty, podczas tworzenia odpowiednich <xref:System.Web.UI.Page> klasy lub klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę dodatkowych nagłówków HTTP, według których są zróżnicowane buforowania strony sieci Web, do której jest dołączona ta karta pochodnej strony.</summary>
        <value>
          <see cref="T:System.Collections.IList" /> Zawierający listę nagłówków HTTP; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostki w sieci Web, które strony sieci Web w pamięci podręcznej w pamięci podręcznej wiele wersji, na podstawie nagłówków HTTP i innych czynników. Na przykład wersja dla każdego języka, w którym generowany jest stroną zwykle są buforowane, na podstawie `Accept-Language` nagłówka HTTP.  
  
 W przypadku określonych przeglądarek może być konieczne różnią się w pamięci podręcznej przez nagłówki HTTP, oprócz nagłówków tej buforowanie kontroli niezależne od docelowej. Na przykład może być konieczne w celu buforowania różnych wersji strony dla różnych rozmiarów ekranu.  
  
 Nazwy nagłówków zwrócony przez <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> właściwości są dodawane do listy nagłówków na `Vary` nagłówka HTTP wysyłane do przeglądarki klienta.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> właściwości, aby powrócić do listy dodatkowe nagłówki do kontrolowania, buforowanie specyficznych dla obiektu docelowego. <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> Podstawowa właściwość zwraca <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę dodatkowych parametrów z żądania HTTP GET i POST, według których są zróżnicowane buforowania strony sieci Web, do której jest dołączona ta karta pochodnej strony.</summary>
        <value>
          <see cref="T:System.Collections.IList" /> Zawierający listę parametrów GET i POST; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostki w sieci Web, że pamięć podręczna stron sieci Web buforować wiele wersji na podstawie, wśród innych czynników, parametry żądania. Na przykład wersja dla każdej lokalizacji magazynu w łańcuchu sprzedaży detalicznej, dla którego mogą być generowane, strona będzie zazwyczaj buforowana na podstawie nazwy parametru (na przykład `StoreID`).  
  
 W przypadku określonych przeglądarek może być konieczne różnią się w pamięci podręcznej przez GET lub POST parametry oprócz parametrów tej buforowanie kontroli niezależne od docelowej. Na przykład może być konieczne Buforuj różne wersje strony dla dostawców usług w różnych telefonu komórkowego.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> właściwości, aby powrócić do listy dodatkowych parametrów GET lub POST do kontrolowania, buforowanie specyficznych dla obiektu docelowego. <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> Podstawowa metoda zwraca <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zakodowany zawierającego dane stanów przeglądania i kontrolowania strony sieci Web, do której jest dołączona ta karta pochodnej strony.</summary>
        <value>Zakodowany <see cref="T:System.String" /> zawierających połączone przeglądania i kontrolowania stany formantów na skojarzonej <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> Właściwości zapewnia dostęp do wewnętrznego `ClientState` właściwość <xref:System.Web.UI.Page> klasy.  
  
 Wyświetlanie stanu — dane przechowywane przez <xref:System.Web.UI.PageStatePersister> obiektu wewnętrznego `ClientState` właściwość <xref:System.Web.UI.Page> będzie zawsze zapisywane w ukrytym polu, na stronie sieci Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, nie można zastąpić <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> właściwość, ponieważ nie jest <see langword="virtual" />. Aby zmodyfikować zachowanie <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> w klasie pochodnej, wdrożyć nowy <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> właściwość, która odwołuje się do <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> właściwości klasy bazowej.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy strony sieci Web jest odświeżenie strony i zwraca kolekcję nazw i wartości zmiennych zwrotu.</summary>
        <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> zwrotu zmiennych, jeśli występują; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Metoda zwraca jedną z następujących kolekcji:  
  
-   Zmiennych formularza, jeśli metoda transferu danych HTTP jest `POST`.  
  
-   Zmiennych ciągu zapytania, jeśli metoda HTTP jest `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> metody w celu zapewnienia obsługi specyficznej dla docelowych w kolekcji zmiennych zwrotu.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję nazwa wartość danych, które opublikowano na stronę korzystając z polecenia GET lub POST bez przeprowadzania weryfikacji żądania programu ASP.NET w żądaniu.</summary>
        <returns>Dane niezweryfikowanych formularza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UnvalidatedRequestValues> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Element <see cref="T:System.String" /> zawierający identyfikator klienta formularza, który został opublikowany.</param>
        <summary>Zwraca DHTML fragmentu kodu, używanego przez przeglądarki klienta k odkazu formularz na stronie, które zostało opublikowane.</summary>
        <returns>A <see cref="T:System.String" /> z odwołaniem do formularz na stronie, które zostało opublikowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Metoda zapewnia DHTML odwołanie do formularza zwrotu. Fragment kodu ma następujący format:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> metodę, jeśli kod znaczników dla przeglądarki obsługiwane przez kartę wymaga innego formatu dla odwołania do zwrotu formularza. Na przykład Standardowy HTML 3.2, używany przez przeglądarki PocketPC wymaga następującego formatu: <c>dokumentu.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">A <see cref="T:System.String" /> oznacza to nazwa <see cref="T:System.Web.UI.WebControls.RadioButton" /> grupy do pobrania.</param>
        <summary>Pobiera kolekcję kontrolek przycisków radiowych określone przez <paramref name="groupName" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> z <see cref="T:System.Web.UI.WebControls.RadioButton" /> kontrolkom, które tworzą <paramref name="groupName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj karty Kontrola przycisk radiowy <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> i <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> metody, aby odwoływać się do drugiego <xref:System.Web.UI.WebControls.RadioButton> formanty w grupie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt, który jest używany przez stronę sieci Web do obsługi formantu i wyświetlanie stanów.</summary>
        <returns>Obiekt pochodzi od <see cref="T:System.Web.UI.PageStatePersister" /> , która obsługuje tworzenia i wyodrębniania połączone kontrolka i widok stany <see cref="T:System.Web.UI.Page" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Page.PageStatePersister%2A> Używa właściwości <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> metodę, aby przywrócić obiektu, jest pochodną <xref:System.Web.UI.PageStatePersister> klasy, formularzy, która wyodrębnia połączone stany kontroli i widoku strony. Jeśli żadna karta pochodnej strony dołączonych do strony, <xref:System.Web.UI.HiddenFieldPageStatePersister> obiekt jest używany do zarządzania stanem w ukrytym polu na stronie.  
  
|Typ łącza|Powstałe łącze|  
|---------------|--------------------|  
|Odwołanie do jednostki kodu, cer|<xref:System.Char.ToString%2A>|  
|Kod jednostek dokumentacja kwalifikowaną cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Kod jednostki odwołanie do określonego, cers|<xref:System.Char.ToString%28System.Char%29>|  
|Kod jednostki odwołanie kwalifikowaną określonych, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wyświetlanie stanu — dane przechowywane przez <see cref="T:System.Web.UI.PageStatePersister" /> obiektu wewnętrznego <see langword="ClientState" /> właściwość <see cref="T:System.Web.UI.Page" /> będzie zawsze zapisywane w ukrytym polu, na stronie sieci Web.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> metodę, aby zwrócić inny pochodne persister stanu strony, jeśli nie jest to możliwe do zarządzania stanem połączone w ukrytym polu (na przykład z powodu ograniczonych zasobów).  <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> Podstawowa Klasa zwraca <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> obiektu. Możesz użyć <see cref="T:System.Web.UI.SessionPageStatePersister" /> klasy do zarządzania stanem strony w stanie sesji.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">
          <see cref="T:System.Web.UI.WebControls.RadioButton" /> Do dodania do kolekcji.</param>
        <summary>Dodaje kontrolkę przycisku radiowego do kolekcji dla Grupa przycisków radiowych określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Klasy używa <xref:System.Collections.Specialized.ListDictionary> obiekt, aby utrzymywać listę grup przycisków radiowych. Każdy element w <xref:System.Collections.Specialized.ListDictionary> to zbiór <xref:System.Web.UI.WebControls.RadioButton> formanty w grupie przycisków radiowych. <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> Metoda dodaje <xref:System.Web.UI.WebControls.RadioButton> formantu do odpowiedniej kolekcji, tworzenia kolekcji, jeśli jeszcze nie istnieje i tworzenia <xref:System.Collections.Specialized.ListDictionary> Jeśli istnieje nie wcześniej zarejestrowano <xref:System.Web.UI.WebControls.RadioButton> kontrolki.  
  
 Użyj karty Kontrola przycisk radiowy <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> i <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> metody, aby odwoływać się do drugiego <xref:System.Web.UI.WebControls.RadioButton> formanty w grupie przycisków radiowych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderuje hiperłącze otwierający tag w strumieniu odpowiedzi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania.</param>
        <param name="targetUrl">
          <see cref="T:System.String" /> Wartości zawierający docelowy adres URL łącza.</param>
        <param name="encodeUrl">
          <see langword="true" /> Aby użyć <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> do zakodowania w strumieniu danych wyjściowych; w przeciwnym razie <see langword="false" />.</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> Wartość do wykorzystania jako nietrwałe etykiety klucza.</param>
        <summary>Renderuje otwierający tag hiperłącze, który zawiera docelowy adres URL w strumieniu odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda zapisuje otwierający tag hiperłącze. Gdy `writer` jest <xref:System.Web.UI.HtmlTextWriter>, ten tag ma następujący format:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyprowadzić klasę o nazwie `CustomPageAdapter` z <xref:System.Web.UI.Adapters.PageAdapter> klasy, a także Przesłoń <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metody. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda dodaje atrybut o nazwie `src` do hiperłącza, który zawiera odwołanie do bieżącej strony. Wszystkie hiperlinki, renderowane przy użyciu strony, do którego `CustomPageAdapter` jest dołączony będzie miał `src` atrybutu.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> metodę, aby napisać inny format hiperłącze otwierający tag lub można zapisać tagu dodatkowe atrybuty. Na przykład <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> Metoda podstawowa nie zapisuje atrybut <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania.</param>
        <param name="targetUrl">
          <see cref="T:System.String" /> Wartości zawierający docelowy adres URL łącza.</param>
        <param name="encodeUrl">
          <see langword="true" /> Aby użyć <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> do zakodowania w strumieniu danych wyjściowych; w przeciwnym razie <see langword="false" />.</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> Wartość do wykorzystania jako nietrwałe etykiety klucza.</param>
        <param name="accessKey">
          <see cref="T:System.String" /> Wartość do przypisania do <see langword="accessKey" /> atrybut to link do tworzenia.</param>
        <summary>Renderuje otwierający tag hiperłącze, który zawiera docelowy adres URL i klucz dostępu w strumieniu odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda zapisuje otwierający tag hiperłącze. Gdy `writer` jest <xref:System.Web.UI.HtmlTextWriter> obiektu, ten tag ma następujący format:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyprowadzić klasę o nazwie `CustomPageAdapter` z <xref:System.Web.UI.Adapters.PageAdapter> klasy, a także Przesłoń <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metody. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> dodaje atrybut o nazwie `src` do hiperłącza, który zawiera odwołanie do bieżącej strony. Wszystkie hiperlinki, renderowane przy użyciu strony, do którego `CustomPageAdapter` jest dołączony będzie miał `src` atrybutu.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> ma więcej niż jeden znak.</exception>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> metodę, aby napisać inny format hiperłącze otwierający tag lub można zapisać tagu dodatkowe atrybuty. Na przykład <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> Metoda podstawowa nie zapisuje atrybut <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawiera metody służące do renderowania danych wyjściowych specyficznych dla obiektu docelowego.</param>
        <summary>Renderuje hiperłącze zamykający tag do strumienia odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> Metoda zapisuje zamykający tag hiperłącze. Jeśli moduł zapisujący tekstu jest <xref:System.Web.UI.HtmlTextWriter> obiektu, ten tag ma następujący format:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> i <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> metody, gdy inny format hyperlink musi być renderowany.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderuje zwrotu zdarzenia do strumienia odpowiedzi jako link w tym wszystkie wymagane argumenty.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania.</param>
        <param name="target">
          <see cref="T:System.String" /> Wartości zawierający nazwę docelowej zwrotu zdarzeń.</param>
        <param name="argument">
          <see cref="T:System.String" /> Wartości zawierający argument do przekazania do zdarzeń zwrotu docelowego.</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> Wartość do wykorzystania jako nietrwałe etykiety klucza.</param>
        <param name="text">
          <see cref="T:System.String" /> Wartość tekst do wyświetlenia jako łącza.</param>
        <summary>Renderuje zwrotu zdarzenia do strumienia odpowiedzi jako hiperłącze, w tym stan widoku zakodowane i zaszyfrowane prawdopodobnie i element docelowy zdarzenia argumentu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda zapisuje zwrotu zdarzeń jako bezskryptowe hiperłącze.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> metodę, jeśli inny format jest wymagany do hiperłącza zwrotu zdarzeń lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają niepustym, jeśli łącze do renderowania tekstu hiperłącze. Możesz również zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Jeśli ograniczone zasoby w tym stan widoku, jako parametr adresu URL. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Metoda podstawowa nie zapisuje atrybut <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania.</param>
        <param name="target">
          <see cref="T:System.String" /> Wartości zawierający nazwę docelowej zwrotu zdarzeń.</param>
        <param name="argument">
          <see cref="T:System.String" /> Wartości zawierający argument do przekazania do zdarzeń zwrotu docelowego.</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> Wartość do wykorzystania jako nietrwałe etykiety klucza.</param>
        <param name="text">
          <see cref="T:System.String" /> Wartość tekst do wyświetlenia jako łącza.</param>
        <param name="postUrl">
          <see cref="T:System.String" /> Wartości zawierający adres URL strony docelowej zwrotu.</param>
        <param name="accessKey">
          <see cref="T:System.String" /> Wartość używana do przypisywania do <see langword="accessKey" /> atrybut utworzone łącze.</param>
        <summary>Renderuje zwrotu zdarzenia do strumienia odpowiedzi jako hiperłącze, m.in. stan widoku zakodowane i zaszyfrowane prawdopodobnie celem zdarzenia i argument, parametr poprzedniej strony i klucza dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda zwrotu zdarzeń jako hiperłącze bezskryptowe, z uwzględnieniem prawdopodobnie fragmentaryczne <xref:System.Web.HttpUtility.UrlEncode%2A> wyświetlić stan, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parametrów i `accessKey="accessKey"` atrybutu.  
  
 Wyświetlanie stanu są szyfrowane, gdy `enableViewStateMac` atrybutu [strony — Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) element konfiguracji jest ustawiony na wartość `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodę, jeśli inny format jest wymagany do hiperłącza zwrotu zdarzeń lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają niepustym, jeśli łącze do renderowania tekstu hiperłącze. Możesz również zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Jeśli ograniczone zasoby w tym stan widoku, jako parametr adresu URL. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Metoda podstawowa nie zapisuje atrybut <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierający metody do danych wyjściowych specyficznych dla obiektu docelowego renderowania.</param>
        <param name="target">
          <see cref="T:System.String" /> Wartości zawierający nazwę docelowej zwrotu zdarzeń.</param>
        <param name="argument">
          <see cref="T:System.String" /> Wartości zawierający argument do przekazania do zdarzeń zwrotu docelowego.</param>
        <param name="softkeyLabel">
          <see cref="T:System.String" /> Wartość do wykorzystania jako nietrwałe etykiety klucza.</param>
        <param name="text">
          <see cref="T:System.String" /> Wartość tekst do wyświetlenia jako łącza.</param>
        <param name="postUrl">
          <see cref="T:System.String" /> Wartości zawierający adres URL strony docelowej zwrotu.</param>
        <param name="accessKey">
          <see cref="T:System.String" /> Wartość do przypisania do <see langword="accessKey" /> atrybut utworzone łącze.</param>
        <param name="encode">
          <see langword="true" /> Aby użyć <c> &amp;amp;</c> jako separator parametru adresu URL; <see langword="false" /> używać <c> &amp; </c>.</param>
        <summary>Renderuje zwrotu zdarzenia do strumienia odpowiedzi jako hiperłącze, m.in. stan widoku zakodowany celem zdarzenia i argument, parametr poprzedniej strony i klucza dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda zwrotu zdarzeń jako hiperłącze bezskryptowe, z uwzględnieniem prawdopodobnie fragmentaryczne <xref:System.Web.HttpUtility.UrlEncode%2A> wyświetlić stan, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` parametrów i `accessKey="accessKey"` atrybutu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> metodę, jeśli inny format jest wymagany do hiperłącza zwrotu zdarzeń lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają niepustym, jeśli łącze do renderowania tekstu hiperłącze. Możesz również zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Jeśli ograniczone zasoby w tym stan widoku, jako parametr adresu URL. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Metoda podstawowa nie zapisuje atrybut <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">A <see cref="T:System.String" /> czyli tekstu do przekształcania.</param>
        <summary>Przekształca tekst dla przeglądarki docelowej.</summary>
        <returns>A <see cref="T:System.String" /> zawierające tekst przekształcone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Metody może służyć, na przykład do przekształcania znaków tabulacji (`\t`) do podziały wierszy (`\n`).  
  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Podstawowa metoda zwraca `text` bez zmian.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Przy dziedziczeniu z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można zastąpić <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> Jeśli określonego znaczników konstrukcję przy użyciu różnych formularz za pomocą standardowego kodu HTML. Na przykład, jeśli w przeglądarce wymaga inny identyfikator dla tagu niż co będzie używana w języku HTML <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> metodę można przesłonić, aby znaleźć tagu i go zmienić.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>