<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13ec456e1bf4898d349788b75cd207cb9bdba07c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256691" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostosowuje stronę sieci Web dla określonej przeglądarki i dostarcza klasę bazową, z której wszystkie karty stron dziedziczą, bezpośrednio lub pośrednio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Klasa jest klasą abstrakcyjną, która dostosowuje stronę sieci Web dla określonej klasy przeglądarek, zdefiniowanej w języku znaczników, którego używa przeglądarka (na przykład HTML lub XHTML). Większość możliwości adaptacji w zachowaniu renderowania może być hermetyzowana w wyspecjalizowanych klasach składnika zapisywania tekstu, które <xref:System.Web.UI.HtmlTextWriter> pochodzą od klasy, dlatego nie zawsze trzeba podawać karty stronicowej.  
  
 Większość elementów członkowskich adapterów stron pochodnych jest wywoływana z <xref:System.Web.UI.Page> klasy lub z kart kontrolnych. Po pierwsze, <xref:System.Web.UI.Page> klasy lub karty sterowania wykrywają obecność pochodnej karty strony, a następnie wywołują element członkowski lub udostępniają funkcje, jeśli karta strony nie jest obecna.  
  
 Elementy członkowskie <xref:System.Web.UI.Adapters.PageAdapter> klasy zapewniają następujące funkcje:  
  
-   `GET` `POST` Właściwości <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> i <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> definiują dodatkowe nagłówki HTTP i http i parametry, które mogą być używane do różnicowania pamięci podręcznej. Są one wywoływane podczas inicjowania pamięci podręcznej z <xref:System.Web.UI.Page> klasy.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> Metoda zwraca obiekt, którego można użyć, aby zachować połączony widok i Stany kontroli strony. Jest on przywoływany <xref:System.Web.UI.Page.PageStatePersister%2A> z właściwości, jeśli obecna jest karta strony pochodnej.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Metoda udostępnia fragment kodu DHTML, który może służyć do odwoływania się do formularzy w skryptach.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Metoda zwraca kolekcję zmiennych ogłaszania zwrotnego, jeśli strona znajduje się na stronie ogłaszania zwrotnego. Jest wywoływana przez .NET Framework zamiast <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> metody, jeśli obecna jest karta strony pochodnej.  
  
-   Metody <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> i<xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> są używane przez karty sterujące do renderowania hiperłącze, jeśli obecna jest karta strony pochodnej.  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda renderuje hiperlink lub tag klienta ogłaszania zwrotnego, który może przesłać formularz.  
  
-   Metody <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> <xref:System.Web.UI.WebControls.RadioButton> i <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> są używane przez karty kontrolne przycisków radiowych do odwoływania się do innych kontrolek w grupie przycisków radiowych.  
  
-   Właściwość zapewnia dostęp do połączonej kontrolki i widoku Stanów <xref:System.Web.UI.Page> obiektu za pomocą wewnętrznej `ClientState` właściwości <xref:System.Web.UI.Page> klasy. <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Metoda jest używana przez karty sterujące do wykonywania transformacji tekstu specyficznego dla urządzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak utworzyć klasę o nazwie `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> z klasy i zastąpić <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodę. Metoda dodaje atrybut o nazwie `src` do hiperlinku, który zawiera odwołanie do bieżącej strony. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Wszystkie hiperłącza renderowane na stronach, do `CustomPageAdapter` których jest dołączony, `src` będą miały atrybut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework konstruuje ten adapter wewnętrznie podczas tworzenia odpowiedniej <xref:System.Web.UI.Page> klasy lub klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę dodatkowych nagłówków HTTP, za pomocą których buforowanie jest zróżnicowane dla strony sieci Web, do której jest dołączona ta adapter strony pochodnej.</summary>
        <value>Zawiera listę nagłówków HTTP; <see langword="null" />w przeciwnym razie. <see cref="T:System.Collections.IList" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostki w sieci Web, które są pamięci podręcznej stron sieci Web w pamięci podręcznej wielu wersji, na podstawie nagłówków HTTP i innych czynników. Na przykład wersja dla każdego języka, w którym jest generowana Strona, jest zwykle buforowana na podstawie `Accept-Language` nagłówka HTTP.  
  
 W przypadku określonych przeglądarek może być konieczne zaróżnienie buforowania przy użyciu nagłówków HTTP, a także nagłówków, które kontrolują buforowanie niezależne od celu. Na przykład może być konieczne buforowanie różnych wersji strony dla różnych rozmiarów ekranu.  
  
 Nazwy nagłówków zwracane przez <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> właściwość są dodawane do listy nagłówków `Vary` w nagłówku HTTP wysłanym do przeglądarki klienta.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> zastąpić właściwość, aby zwracała listę dodatkowych nagłówków, aby kontrolować buforowanie specyficzne dla elementu docelowego. Właściwość podstawowa zwraca wartość <see langword="null" />. <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /></para></block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/5032122d-221f-4fed-a5a7-90011f5f88fd">Instrukcje: Buforowanie wersji strony na podstawie nagłówków HTTP</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę dodatkowych parametrów z żądań HTTP GET i POST, za pomocą których buforowanie jest zróżnicowane dla strony sieci Web, do której jest dołączona ta adapter strony pochodnej.</summary>
        <value>Zawiera listę parametrów GET i post; <see langword="null" />w przeciwnym razie. <see cref="T:System.Collections.IList" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednostki w sieci Web, które buforują strony sieci Web, obsługują wiele wersji na podstawie innych czynników, parametrów żądania. Na przykład wersja dla każdej lokalizacji magazynu w ramach łańcucha detalicznego, dla którego może zostać wygenerowana strona, zwykle jest buforowana na podstawie nazwy parametru (na przykład `StoreID`).  
  
 W przypadku określonych przeglądarek może być konieczne zaróżnienie buforowania za pomocą parametrów GET lub POST, a także parametrów kontrolujących buforowanie niezależne od celu. Na przykład może być konieczne buforowanie różnych wersji strony dla różnych dostawców usług telefonii komórkowej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> zastąpić właściwość, aby zwrócić listę dodatkowych parametrów GET lub post, aby kontrolować buforowanie specyficzne dla elementu docelowego. Metoda podstawowa zwraca wartość <see langword="null" />. <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/a504b287-c8d2-4838-9817-3ffee416fec4">Instrukcje: Buforowanie wersji strony na podstawie parametrów</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zakodowany ciąg, który zawiera dane stanu widoku i kontrolki strony sieci Web, do której jest dołączona ta adapter strony pochodnej.</summary>
        <value>Kodowanie <see cref="T:System.String" /> zawierające połączone Stany widoku i kontrolek w skojarzonych <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zapewnia dostęp do wewnętrznej `ClientState` właściwości <xref:System.Web.UI.Page> klasy. <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>  
  
 Dane o stanie przechowywane przez <xref:System.Web.UI.PageStatePersister> obiekt we właściwości wewnętrznej `ClientState` elementu <xref:System.Web.UI.Page> są zawsze zapisywane w ukrytym polu na stronie sieci Web.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy nie można <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> zastąpić właściwości, ponieważ nie <see langword="virtual" />jest ona. Aby zmodyfikować zachowanie <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> w klasie pochodnej, zaimplementuj nową <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> właściwość, która odwołuje się <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> do właściwości klasy bazowej.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">Karty stronicowe i stan widoku</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy strona sieci Web znajduje się na odwrocie i zwraca kolekcję nazw/wartości zmiennych ogłaszania zwrotnego.</summary>
        <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> ze zmiennych ogłaszania zwrotnego, jeśli istnieje <see langword="null" />; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Metoda zwraca jedną z następujących kolekcji:  
  
-   Zmienne formularzy, jeśli jest to `POST`metoda transferu danych http.  
  
-   Zmienne ciągu zapytania, jeśli metoda HTTP to `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> zastąpić metodę, aby zapewnić obsługę specyficzną dla elementu docelowego dla kolekcji zmiennych ogłaszania zwrotnego.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję nazw, która została opublikowana na stronie przy użyciu polecenia POST lub GET, bez wykonywania walidacji żądania ASP.NET na żądanie.</summary>
        <returns>Niezweryfikowane dane formularza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UnvalidatedRequestValues> Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId"><see cref="T:System.String" /> Zawierający identyfikator klienta, który został opublikowany.</param>
        <summary>Zwraca fragment kodu DHTML używany przez przeglądarkę klienta do odwoływania się do formularza na stronie, która została opublikowana.</summary>
        <returns>A <see cref="T:System.String" /> z odwołaniem do formularza na stronie, która została opublikowana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Metoda zawiera odwołanie DHTML do formularza ogłaszania zwrotnego. Fragment kodu ma następujący format:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> zastąpić metodę, Jeśli znaczniki dla przeglądarki obsługiwane przez adapter wymagają innego formatu odwołania do formularza ogłaszania zwrotnego. Na przykład Standard HTML 3,2 używany przez przeglądarki PocketPC wymaga następującego formatu: 
 <c>dokumentu.</c><paramref name="formID" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">A <see cref="T:System.String" /> to nazwa <see cref="T:System.Web.UI.WebControls.RadioButton" /> grupy do pobrania.</param>
        <summary>Pobiera kolekcję kontrolek przycisków radiowych określonych przez <paramref name="groupName" />.</summary>
        <returns>Kontrolki, które tworzą <paramref name="groupName" />. <see cref="T:System.Collections.ICollection" /> <see cref="T:System.Web.UI.WebControls.RadioButton" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Karty kontrolne przycisków radiowych <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> używają <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> metod i, aby odwoływać się do innych <xref:System.Web.UI.WebControls.RadioButton> kontrolek w grupie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt, który jest używany przez stronę sieci Web do obsługi kontrolek i Stanów widoku.</summary>
        <returns>Obiekt pochodzący z <see cref="T:System.Web.UI.PageStatePersister" /> , który obsługuje tworzenie i wyodrębnianie połączonych kontrolek oraz wyświetlanie stanów <see cref="T:System.Web.UI.Page" />dla.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość używa metody do zwrócenia obiektu pochodnego od <xref:System.Web.UI.PageStatePersister> klasy, który tworzy i wyodrębnia połączony formant i wyświetla Stany dla strony. <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> <xref:System.Web.UI.Page.PageStatePersister%2A> Jeśli nie ma żadnej pochodnej karty strony dołączonej do strony, <xref:System.Web.UI.HiddenFieldPageStatePersister> obiekt jest używany do utrzymania stanu w ukrytym polu na stronie.  
  
|Typ łącza|Link wynikający|  
|---------------|--------------------|  
|Odwołanie do jednostki kodu, CER|<xref:System.Char.ToString%2A>|  
|Odwołanie do jednostki kodu kwalifikowana, cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Specyficzne dla odwołania do jednostki kodu, Cers|<xref:System.Char.ToString%28System.Char%29>|  
|Specjalne odwołanie do jednostki kodu, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wyświetl dane stanu przechowywane przez <see cref="T:System.Web.UI.PageStatePersister" /> obiekt we właściwości wewnętrznej <see langword="ClientState" /> elementu, który <see cref="T:System.Web.UI.Page" /> będzie zawsze zapisywany w ukrytym polu na stronie sieci Web.</para></block>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> zastąpić metodę, aby przywrócić inne pochodne stanu strony, jeśli nie jest to możliwe do utrzymania połączonego stanu w ukrytym polu (na przykład z powodu ograniczonych zasobów).  
  
Klasa <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> bazowa<see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> zwraca obiekt. Można użyć <see cref="T:System.Web.UI.SessionPageStatePersister" /> klasy do utrzymania stanu strony w stanie sesji.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">, <see cref="T:System.Web.UI.WebControls.RadioButton" /> Aby dodać do kolekcji.</param>
        <summary>Dodaje kontrolkę przycisk radiowy do kolekcji dla określonej grupy przycisków radiowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter> Klasa<xref:System.Collections.Specialized.ListDictionary> używa obiektu do obsługi listy grup przycisków radiowych. Każdy element w <xref:System.Collections.Specialized.ListDictionary> jest kolekcją <xref:System.Web.UI.WebControls.RadioButton> kontrolek w grupie przycisków radiowych. Metoda dodaje formant do odpowiedniej kolekcji, tworząc kolekcję, jeśli jeszcze nie istnieje, i tworząc <xref:System.Collections.Specialized.ListDictionary> , jeśli nie ma wcześniej zarejestrowanych <xref:System.Web.UI.WebControls.RadioButton> kontrolek. <xref:System.Web.UI.WebControls.RadioButton> <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>  
  
 Karty kontrolne przycisków radiowych <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> używają <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> metod i, aby odwoływać się do innych <xref:System.Web.UI.WebControls.RadioButton> kontrolek w grupie przycisków radiowych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderuje otwierający tag hiperlinków do strumienia odpowiedzi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierające metody do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <param name="targetUrl"><see cref="T:System.String" /> Wartość zawierająca docelowy adres URL linku.</param>
        <param name="encodeUrl"><see langword="true" />Aby użyć <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> do kodowania danych wyjściowych strumienia; <see langword="false" />w przeciwnym razie.</param>
        <param name="softkeyLabel"><see cref="T:System.String" /> Wartość, która ma być używana jako etykieta klucza nietrwałego.</param>
        <summary>Renderuje otwierający tag hiperlinków zawierający docelowy adres URL do strumienia odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda zapisuje tag hiperłącza otwierającego. Gdy `writer` ma <xref:System.Web.UI.HtmlTextWriter>wartość, ten tag ma następujący format:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak utworzyć klasę o nazwie `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> z klasy i zastąpić <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodę. Metoda dodaje atrybut o nazwie `src` do hiperlinku, który zawiera odwołanie do bieżącej strony. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Wszystkie hiperłącza renderowane na stronach, do `CustomPageAdapter` których jest dołączony, `src` będą miały atrybut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> zastąpić metodę, aby napisać inny format dla otwierającego znacznika hiperłącza lub do zapisu dodatkowych atrybutów tagu. Na przykład <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> metoda podstawowa nie zapisuje atrybutu dla <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierające metody do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <param name="targetUrl"><see cref="T:System.String" /> Wartość zawierająca docelowy adres URL linku.</param>
        <param name="encodeUrl"><see langword="true" />Aby użyć <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> do kodowania danych wyjściowych strumienia; <see langword="false" />w przeciwnym razie.</param>
        <param name="softkeyLabel"><see cref="T:System.String" /> Wartość, która ma być używana jako etykieta klucza nietrwałego.</param>
        <param name="accessKey">Wartość <see cref="T:System.String" /> , która ma zostać przypisana <see langword="accessKey" /> do atrybutu linku do utworzenia.</param>
        <summary>Renderuje otwierający tag hiperlinków zawierający docelowy adres URL i klucz dostępu do strumienia odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Metoda zapisuje tag hiperłącza otwierającego. `writer` Gdy<xref:System.Web.UI.HtmlTextWriter> jest obiektem, ten tag ma następujący format:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak utworzyć klasę o nazwie `CustomPageAdapter` <xref:System.Web.UI.Adapters.PageAdapter> z klasy i zastąpić <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> metodę. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>dodaje atrybut o nazwie `src` do hiperlinku, który zawiera odwołanie do bieżącej strony. Wszystkie hiperłącza renderowane na stronach, do `CustomPageAdapter` których jest dołączony, `src` będą miały atrybut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessKey" />zawiera więcej niż jeden znak.</exception>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> zastąpić metodę, aby napisać inny format dla otwierającego znacznika hiperłącza lub do zapisu dodatkowych atrybutów tagu. Na przykład <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> metoda podstawowa nie zapisuje atrybutu dla <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Zawiera <see cref="T:System.Web.UI.HtmlTextWriter" /> metody służące do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <summary>Renderuje tag zamykający hiperłącze do strumienia odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> Metoda zapisuje tag zamykającego hiperłącza. Gdy moduł zapisujący tekstu jest <xref:System.Web.UI.HtmlTextWriter> obiektem, ten tag ma następujący format:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy, można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> przesłonić metody <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> i, gdy musi być renderowany inny format hiperłącza.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Renderuje zdarzenie ogłaszania zwrotnego w strumieniu odpowiedzi jako link, łącznie ze wszystkimi wymaganymi argumentami.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierające metody do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <param name="target"><see cref="T:System.String" /> Wartość zawierająca nazwę obiektu docelowego zdarzenia ogłaszania zwrotnego.</param>
        <param name="argument"><see cref="T:System.String" /> Wartość zawierająca argument do przekazania do zdarzenia docelowego ogłaszania zwrotnego.</param>
        <param name="softkeyLabel"><see cref="T:System.String" /> Wartość, która ma być używana jako etykieta klucza nietrwałego.</param>
        <param name="text"><see cref="T:System.String" /> Wartość tekstowa, która ma być wyświetlana jako link.</param>
        <summary>Renderuje zdarzenie ogłaszania zwrotnego w strumieniu odpowiedzi jako hiperłącze, w tym kodowany i prawdopodobnie zaszyfrowany stan widoku oraz obiekt docelowy i argument zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Metoda zapisuje zdarzenie ogłaszania zwrotnego jako hiperłącze bezskryptowe.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> zastąpić metodę, jeśli dla hiperłącza zdarzenia ogłaszania zwrotnego jest wymagany inny format lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają, aby tekst hiperlinku był niepusty, jeśli łącze jest renderowane. Można również przesłonić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> , jeśli ograniczone zasoby uniemożliwiają uwzględnienie stanu widoku jako parametru adresu URL. Metoda bazowa nie zapisuje atrybutu dla <paramref name="softkeyLabel" />elementu. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierające metody do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <param name="target"><see cref="T:System.String" /> Wartość zawierająca nazwę obiektu docelowego zdarzenia ogłaszania zwrotnego.</param>
        <param name="argument"><see cref="T:System.String" /> Wartość zawierająca argument do przekazania do zdarzenia docelowego ogłaszania zwrotnego.</param>
        <param name="softkeyLabel"><see cref="T:System.String" /> Wartość, która ma być używana jako etykieta klucza nietrwałego.</param>
        <param name="text"><see cref="T:System.String" /> Wartość tekstowa, która ma być wyświetlana jako link.</param>
        <param name="postUrl"><see cref="T:System.String" /> Wartość, która znajduje się na stronie cel adresu URL ogłaszania zwrotnego.</param>
        <param name="accessKey">Wartość służąca do przypisywania <see langword="accessKey" /> do atrybutu utworzonego linku. <see cref="T:System.String" /></param>
        <summary>Renderuje zdarzenie ogłaszania zwrotnego w strumieniu odpowiedzi jako hiperłącze, w tym kodowany i prawdopodobnie zaszyfrowany stan widoku, obiekt docelowy zdarzenia i argument, parametr poprzedniej strony i klucz dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `__EVENTARGUMENT=argument` `__EVENTTARGET=target` <xref:System.Web.HttpUtility.UrlEncode%2A> `accessKey="accessKey"` `__PREVIOUSPAGE=currentFilePath` Metoda zapisuje zdarzenie ogłaszania zwrotnego jako hiperłącze bezskryptowe, w tym prawdopodobnie stan widoku fragmentarycznego,,, parametry i atrybut. <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>  
  
 Stan widoku jest szyfrowany, `enableViewStateMac` Jeśli atrybut elementu konfiguracji [elementu Pages (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) jest ustawiony na. `true`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> zastąpić metodę, jeśli dla hiperłącza zdarzenia ogłaszania zwrotnego jest wymagany inny format lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają, aby tekst hiperlinku był niepusty, jeśli łącze jest renderowane. Można również przesłonić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> , jeśli ograniczone zasoby uniemożliwiają uwzględnienie stanu widoku jako parametru adresu URL. Metoda bazowa nie zapisuje atrybutu dla <paramref name="softkeyLabel" />elementu. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zawierające metody do renderowania danych wyjściowych specyficznych dla elementu docelowego.</param>
        <param name="target"><see cref="T:System.String" /> Wartość zawierająca nazwę obiektu docelowego zdarzenia ogłaszania zwrotnego.</param>
        <param name="argument"><see cref="T:System.String" /> Wartość zawierająca argument do przekazania do zdarzenia docelowego ogłaszania zwrotnego.</param>
        <param name="softkeyLabel"><see cref="T:System.String" /> Wartość, która ma być używana jako etykieta klucza nietrwałego.</param>
        <param name="text"><see cref="T:System.String" /> Wartość tekstowa, która ma być wyświetlana jako link.</param>
        <param name="postUrl"><see cref="T:System.String" /> Wartość, która znajduje się na stronie cel adresu URL ogłaszania zwrotnego.</param>
        <param name="accessKey">Wartość, która ma zostać przypisana <see langword="accessKey" /> do atrybutu utworzonego linku. <see cref="T:System.String" /></param>
        <param name="encode"><see langword="true" />Aby użyć <c>&amp;amp;</c> jako separatora parametru adresu URL; <see langword="false" /> do użycia <c>&amp;</c>.</param>
        <summary>Renderuje zdarzenie ogłaszania zwrotnego w strumieniu odpowiedzi jako hiperłącze, w tym stan widoku zakodowanego, obiekt docelowy zdarzenia i argument, parametr poprzedniej strony i klucz dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `__EVENTARGUMENT=argument` `__EVENTTARGET=target` <xref:System.Web.HttpUtility.UrlEncode%2A> `accessKey="accessKey"` `__PREVIOUSPAGE=currentFilePath` Metoda zapisuje zdarzenie ogłaszania zwrotnego jako hiperłącze bezskryptowe, w tym prawdopodobnie stan widoku fragmentarycznego,,, parametry i atrybut. <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> zastąpić metodę, jeśli dla hiperłącza zdarzenia ogłaszania zwrotnego jest wymagany inny format lub przeglądarka ma inne unikatowe wymagania. Na przykład niektóre przeglądarki wymagają, aby tekst hiperlinku był niepusty, jeśli łącze jest renderowane. Można również przesłonić <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> , jeśli ograniczone zasoby uniemożliwiają uwzględnienie stanu widoku jako parametru adresu URL. Metoda bazowa nie zapisuje atrybutu dla <paramref name="softkeyLabel" />elementu. <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.String" /> Jest to tekst do przekształcenia.</param>
        <summary>Przekształca tekst dla przeglądarki docelowej.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera przekształcony tekst.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda może być używana na przykład do przekształcania znaków tabulacji (`\t`) w podziały wierszy (`\n`). <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>  
  
 Metoda podstawowa zwraca wartość `text`Unchanged. <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Web.UI.Adapters.PageAdapter" /> klasy można przesłonić <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> , jeśli konkretny znacznik ma konstrukcję z innym formularzem niż standardowy kod HTML. Na przykład jeśli przeglądarka wymaga innego identyfikatora dla tagu niż wartość użyta w kodzie HTML, można zastąpić metodę, <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> aby znaleźć ten tag i zmienić go.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>
