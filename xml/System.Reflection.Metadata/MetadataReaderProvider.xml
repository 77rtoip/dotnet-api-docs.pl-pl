<Type Name="MetadataReaderProvider" FullName="System.Reflection.Metadata.MetadataReaderProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="278e0a524bb7012df4bba0ce8a19b5275f595d2e" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67249439" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataReaderProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataReaderProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataReaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataReaderProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderProvider sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type MetadataReaderProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metadataReaderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie pamięci przydzielonej przez czytnik.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMetadataImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image">Obraz metadanych.</param>
        <summary>Tworzy dostawcę za pośrednictwem tablicy bajtów.</summary>
        <returns>Nowego dostawcę.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Wskaźnik do początku metadanych obiektu blob.</param>
        <param name="size">Rozmiar metadanych obiektu blob.</param>
        <summary>Tworzy dostawcę metadanych za pośrednictwem obraz przechowywany w pamięci.</summary>
        <returns>Nowy dostawca metadanych.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="start" /> jest <see cref="F:System.IntPtr.Zero" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="size" /> ma wartość ujemną.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromMetadataStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> wystąpienia.</param>
        <param name="options">Opcje określania, jak części obrazu są odczytywane ze strumienia.</param>
        <param name="size">Rozmiar obiektu blob metadane w strumieniu. Jeśli nie zostanie określony, obiektów blob metadane zakłada, że na końcu strumienia.</param>
        <summary>Tworzy dostawcę dla strumienia na początku określonego rozmiaru w jego bieżącym położeniu.</summary>
        <returns>Nowego dostawcę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

Chyba że <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> jest określona, własność strumienia jest przenoszona na <xref:System.Reflection.Metadata.MetadataReaderProvider> po rozpatrzeniu pomyślne argumentu. Zostaną usunięte przez <xref:System.Reflection.Metadata.MetadataReaderProvider>, i obiekt wywołujący nie musi manipulowania go.
            
Chyba że <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> jest określona, nie są odczytywane dane ze strumienia podczas konstruowania <xref:System.Reflection.Metadata.MetadataReaderProvider>. Ponadto strumień musi nie mogą być ustawiane przez wywołującego podczas <xref:System.Reflection.Metadata.MetadataReaderProvider> jest aktywny i nazwa aktualnie otwartego.
            
Jeśli <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, <xref:System.Reflection.Metadata.MetadataReaderProvider> będzie po ich przeczytaniu wszystkie dane wymagane podczas konstruowania. W takim przypadku <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> również jest określona, obiekt wywołujący zachowuje własność pełną strumienia i pewność, że jej będzie nie być manipulowane przez <xref:System.Reflection.Metadata.MetadataReaderProvider> po konstrukcji.

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> nie obsługuje Odczyt i wyszukiwanie operacji.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Rozmiar jest ujemny lub wykracza poza koniec strumienia.</exception>
        <exception cref="T:System.IO.IOException">Błąd podczas odczytywania ze strumienia (tylko wtedy, gdy <see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> jest określony).</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPortablePdbImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image">Przenośny obraz z pliku PDB.</param>
        <summary>Tworzy dostawcę metadanych przenośnych PDB ciągu na tablicę bajtów.</summary>
        <returns>Nowe przenośnego pliku PDB dostawcy metadanych.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Wskaźnik do początku przenośnego pliku PDB obiektu blob.</param>
        <param name="size">Rozmiar obiektu blob przenośnego pliku PDB.</param>
        <summary>Tworzy przenośnego pliku PDB dostawcy metadanych obiektu blob przechowywane w pamięci.</summary>
        <returns>Nowe przenośnego pliku PDB dostawcy metadanych.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="start" /> jest <see cref="F:System.IntPtr.Zero" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="size" /> ma wartość ujemną.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień.</param>
        <param name="options">Opcje określania, jak części obrazu są odczytywane ze strumienia.</param>
        <param name="size">Rozmiar obiektu blob metadane w strumieniu. Jeśli nie zostanie określony, obiektów blob metadane zakłada, że na końcu strumienia.</param>
        <summary>Tworzy dostawcę dla strumienia na początku określonego rozmiaru w jego bieżącym położeniu.</summary>
        <returns>A <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
Chyba że <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> jest określona, własność strumienia jest przenoszona na <xref:System.Reflection.Metadata.MetadataReaderProvider> po rozpatrzeniu pomyślne argumentu. Zostaną usunięte przez <xref:System.Reflection.Metadata.MetadataReaderProvider>, i obiekt wywołujący nie musi manipulowania go.
            
Chyba że <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> jest określona, nie są odczytywane dane ze strumienia podczas konstruowania <xref:System.Reflection.Metadata.MetadataReaderProvider>. Ponadto strumień musi nie mogą być ustawiane przez wywołującego podczas <xref:System.Reflection.Metadata.MetadataReaderProvider> jest aktywny i nazwa aktualnie otwartego.
            
Jeśli <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, <xref:System.Reflection.Metadata.MetadataReaderProvider> będzie po ich przeczytaniu wszystkie dane wymagane podczas konstruowania. W takim przypadku <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> również jest określona, obiekt wywołujący zachowuje własność pełną strumienia i pewność, że jej będzie nie być manipulowane przez <xref:System.Reflection.Metadata.MetadataReaderProvider> po konstrukcji.

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> nie obsługuje Odczyt i wyszukiwanie operacji.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Rozmiar jest ujemny lub wykracza poza koniec strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.Default, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Metadata.MetadataReader GetMetadataReader(valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.Default, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" />
      <MemberSignature Language="F#" Value="member this.GetMetadataReader : System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="metadataReaderProvider.GetMetadataReader (options, utf8Decoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="options">Bitowa kombinacja wartości wyliczenia, które reprezentują Konfiguracja podczas odczytu metadanych.</param>
        <param name="utf8Decoder">Szyfrowanie do użycia.</param>
        <summary>Pobiera <see cref="T:System.Reflection.Metadata.MetadataReader" /> z <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</summary>
        <returns>A <see cref="T:System.Reflection.Metadata.MetadataReader" /> wystąpienia...</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Kodowanie <paramref name="utf8Decoder" /> nie <see cref="T:System.Text.UTF8Encoding" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Bieżąca platforma jest big-endian.</exception>
        <exception cref="T:System.IO.IOException">Błąd We/Wy podczas odczytu strumienia podstawowego.</exception>
        <exception cref="T:System.ObjectDisposedException">Dostawca został usunięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>