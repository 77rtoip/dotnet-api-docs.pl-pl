<Type Name="SymWriter" FullName="System.Diagnostics.SymbolStore.SymWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3847635e76b7fdf8f07fae12e7dc99259df26211" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69077747" /></Metadata><TypeSignature Language="C#" Value="public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymWriter extends System.Diagnostics.SymbolStore.SymWriterBase implements class System.Diagnostics.SymbolStore.ISymbolWriter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class SymWriter&#xA;Inherits SymWriterBase&#xA;Implements IDisposable, ISymbolWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymWriter : System::Diagnostics::SymbolStore::SymWriterBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolWriter" />
  <TypeSignature Language="F#" Value="type SymWriter = class&#xA;    inherit SymWriterBase&#xA;    interface ISymbolWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymWriterBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9a63c-101">Reprezentuje moduł zapisujący symboli dla kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-101">Represents a symbol writer for managed code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-102"><xref:System.Diagnostics.SymbolStore.SymWriter> Klasa zawiera metody, które definiują dokumenty, punkty sekwencji, zakresy leksykalne i zmienne.</span><span class="sxs-lookup"><span data-stu-id="9a63c-102">The <xref:System.Diagnostics.SymbolStore.SymWriter> class provides methods that define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9a63c-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a63c-104">możliwość uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-104">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymWriter : bool -&gt; System.Diagnostics.SymbolStore.SymWriter" Usage="new System.Diagnostics.SymbolStore.SymWriter noUnderlyingWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter"><span data-ttu-id="9a63c-105"><see langword="true" />Jeśli odpowiedni moduł zapisujący symboli zostanie dostarczony przez wywołanie <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> metody; <see langword="false" /> Jeśli zamiast tego należy utworzyć domyślny moduł zapisujący symboli bazowych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-105"><see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span></span></param>
        <summary><span data-ttu-id="9a63c-106">Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> klasy, określając, czy należy utworzyć odpowiedni moduł zapisujący symboli.</span><span class="sxs-lookup"><span data-stu-id="9a63c-106">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class, specifying whether to create an underlying symbol writer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symWriter.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-107">Zwalnia zasoby przechowywane przez bieżące wystąpienie <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-107">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="9a63c-108">Użyj metody <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> , aby zwolnić zasoby.</span><span class="sxs-lookup"><span data-stu-id="9a63c-108">Use the <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symWriter.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-109">Zwalnia zasoby przechowywane przez bieżące wystąpienie <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-109">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="9a63c-110">Użyj metody <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> , aby zwolnić zasoby.</span><span class="sxs-lookup"><span data-stu-id="9a63c-110">Use the <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="symWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-111"><see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> Zamyka i zatwierdza symbole do magazynu symboli.</span><span class="sxs-lookup"><span data-stu-id="9a63c-111">Closes the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> and commits the symbols to the symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-112">Po wywołaniu tej metody <xref:System.Diagnostics.SymbolStore.SymWriter> staną się nieprawidłowe dla dalszych aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-112">After this call, the <xref:System.Diagnostics.SymbolStore.SymWriter> becomes invalid for further updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseMethod">
      <MemberSignature Language="C#" Value="public virtual void CloseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseMethod();" />
      <MemberSignature Language="F#" Value="abstract member CloseMethod : unit -&gt; unit&#xA;override this.CloseMethod : unit -&gt; unit" Usage="symWriter.CloseMethod " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-113">Zamyka bieżącą metodę.</span><span class="sxs-lookup"><span data-stu-id="9a63c-113">Closes the current method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-114">Po zamknięciu metody nie można zdefiniować symbolu z wewnątrz metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-114">After a method is closed, you cannot define a symbol from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseNamespace">
      <MemberSignature Language="C#" Value="public virtual void CloseNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseNamespace ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseNamespace();" />
      <MemberSignature Language="F#" Value="abstract member CloseNamespace : unit -&gt; unit&#xA;override this.CloseNamespace : unit -&gt; unit" Usage="symWriter.CloseNamespace " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-115">Zamyka najnowszą przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="9a63c-115">Closes the most recent namespace.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseScope">
      <MemberSignature Language="C#" Value="public virtual void CloseScope (int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseScope(int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseScope (endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseScope(int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member CloseScope : int -&gt; unit&#xA;override this.CloseScope : int -&gt; unit" Usage="symWriter.CloseScope endOffset" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endOffset"><span data-ttu-id="9a63c-116">Przesunięcie IL zostało przesunięte tylko do ostatniej instrukcji w zakresie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-116">The IL offset just past the last instruction in the scope.</span></span></param>
        <summary><span data-ttu-id="9a63c-117">Zamyka bieżący zakres leksykalny.</span><span class="sxs-lookup"><span data-stu-id="9a63c-117">Closes the current lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-118">Po zamknięciu zakresu nie można zdefiniować zmiennej z poziomu metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-118">After a scope is closed, you cannot define a variable from within the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter&#xA;override this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="symWriter.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="9a63c-119">Adres URL identyfikujący dokument.</span><span class="sxs-lookup"><span data-stu-id="9a63c-119">The URL that identifies the document.</span></span></param>
        <param name="language"><span data-ttu-id="9a63c-120">Język dokumentu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-120">The document language.</span></span> <span data-ttu-id="9a63c-121">Ten parametr może być <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9a63c-121">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="9a63c-122">Tożsamość dostawcy dla języka dokumentu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-122">The identity of the vendor for the document language.</span></span> <span data-ttu-id="9a63c-123">Ten parametr może być <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9a63c-123">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="documentType"><span data-ttu-id="9a63c-124">Typ dokumentu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-124">The type of the document.</span></span> <span data-ttu-id="9a63c-125">Ten parametr może być <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9a63c-125">This parameter can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <summary><span data-ttu-id="9a63c-126">Definiuje dokument źródłowy.</span><span class="sxs-lookup"><span data-stu-id="9a63c-126">Defines a source document.</span></span></summary>
        <returns><span data-ttu-id="9a63c-127"><see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> Obiekt, który reprezentuje dokument.</span><span class="sxs-lookup"><span data-stu-id="9a63c-127">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolDocumentWriter" /> object that represents the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineField(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineField (parent As SymbolToken, name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineField(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineField : System.Diagnostics.SymbolStore.SymbolToken * string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineField (parent, name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="9a63c-128">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-128">This parameter is not used.</span></span></param>
        <param name="name"><span data-ttu-id="9a63c-129">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-129">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="9a63c-130">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-130">This parameter is not used.</span></span></param>
        <param name="signature"><span data-ttu-id="9a63c-131">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-131">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="9a63c-132">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-132">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="9a63c-133">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-133">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="9a63c-134">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-134">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="9a63c-135">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-135">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9a63c-136"><see cref="T:System.NotSupportedException" /> Zgłasza we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-136">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a63c-137">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-137">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineGlobalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineGlobalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineGlobalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineGlobalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineGlobalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9a63c-138">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-138">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="9a63c-139">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-139">This parameter is not used.</span></span></param>
        <param name="signature"><span data-ttu-id="9a63c-140">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-140">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="9a63c-141">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-141">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="9a63c-142">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-142">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="9a63c-143">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-143">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="9a63c-144">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-144">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9a63c-145"><see cref="T:System.NotSupportedException" /> Zgłasza we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-145">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a63c-146">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-146">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineLocalVariable">
      <MemberSignature Language="C#" Value="public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineLocalVariable(string name, valuetype System.Reflection.FieldAttributes attributes, unsigned int8[] signature, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineLocalVariable (name As String, attributes As FieldAttributes, signature As Byte(), addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineLocalVariable(System::String ^ name, System::Reflection::FieldAttributes attributes, cli::array &lt;System::Byte&gt; ^ signature, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit&#xA;override this.DefineLocalVariable : string * System.Reflection.FieldAttributes * byte[] * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int * int * int -&gt; unit" Usage="symWriter.DefineLocalVariable (name, attributes, signature, addrKind, addr1, addr2, addr3, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9a63c-147">Nazwa zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-147">The local variable name.</span></span></param>
        <param name="attributes"><span data-ttu-id="9a63c-148">Atrybuty zmiennej lokalnej określone przy użyciu <see cref="T:System.Reflection.FieldAttributes" /> modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-148">The local variable attributes specified using the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span></span></param>
        <param name="signature"><span data-ttu-id="9a63c-149">Podpis zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-149">The local variable signature.</span></span></param>
        <param name="addrKind"><span data-ttu-id="9a63c-150">Typy adresów dla <paramref name="addr1" />, <paramref name="addr2" />i <paramref name="addr3" /> za pomocą <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span><span class="sxs-lookup"><span data-stu-id="9a63c-150">The address types for <paramref name="addr1" />, <paramref name="addr2" />, and <paramref name="addr3" /> using <see cref="T:System.Diagnostics.SymbolStore.SymAddressKind" />.</span></span></param>
        <param name="addr1"><span data-ttu-id="9a63c-151">Pierwszy adres specyfikacji zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-151">The first address for the local variable specification.</span></span></param>
        <param name="addr2"><span data-ttu-id="9a63c-152">Drugi adres specyfikacji zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-152">The second address for the local variable specification.</span></span></param>
        <param name="addr3"><span data-ttu-id="9a63c-153">Trzeci adres specyfikacji zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-153">The third address for the local variable specification.</span></span></param>
        <param name="startOffset"><span data-ttu-id="9a63c-154">Przesunięcie początkowe dla zmiennej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-154">The start offset for the variable.</span></span> <span data-ttu-id="9a63c-155">Jeśli wartość jest równa zero, ten parametr jest ignorowany, a zmienna jest zdefiniowana w całym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-155">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="9a63c-156">Jeśli wartość jest różna od zera, mieści się w przesunięciach bieżącego zakresu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-156">If nonzero, it falls within the offsets of the current scope.</span></span></param>
        <param name="endOffset"><span data-ttu-id="9a63c-157">Przesunięcie końcowe dla zmiennej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-157">The end offset for the variable.</span></span> <span data-ttu-id="9a63c-158">Jeśli wartość jest równa zero, ten parametr jest ignorowany, a zmienna jest zdefiniowana w całym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-158">If zero, this parameter is ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="9a63c-159">Jeśli wartość jest różna od zera, mieści się w przesunięciach bieżącego zakresu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-159">If nonzero, it falls within the offsets of the current scope.</span></span></param>
        <summary><span data-ttu-id="9a63c-160">Definiuje pojedynczą zmienną w bieżącym zakresie leksykalnym.</span><span class="sxs-lookup"><span data-stu-id="9a63c-160">Defines a single variable in the current lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-161">Parametry `startOffset` i`endOffset` są opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="9a63c-161">The `startOffset` and `endOffset` parameters are optional.</span></span> <span data-ttu-id="9a63c-162">Jeśli ich wartość wynosi zero, są one ignorowane, a zmienna jest zdefiniowana w całym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-162">If their value is zero, they are ignored and the variable is defined throughout the entire scope.</span></span> <span data-ttu-id="9a63c-163">Jeśli ich wartość jest różna od zera, mieszczą się w przesunięciach bieżącego zakresu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-163">If their value is nonzero, they fall within the offsets of the current scope.</span></span>  
  
 <span data-ttu-id="9a63c-164">Można wywoływać <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> wiele razy dla zmiennej o tej samej nazwie, która występuje wiele razy w różnych zakresach przesunięcia w całym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-164">You can call <xref:System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable%2A> multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope.</span></span> <span data-ttu-id="9a63c-165">(W tym przypadku nie mogą się nakładać na przesunięcia początkowe i końcowe).</span><span class="sxs-lookup"><span data-stu-id="9a63c-165">(In this case, start and end offsets must not overlap.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineParameter(string name, valuetype System.Reflection.ParameterAttributes attributes, int32 sequence, valuetype System.Diagnostics.SymbolStore.SymAddressKind addrKind, int32 addr1, int32 addr2, int32 addr3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineParameter (name As String, attributes As ParameterAttributes, sequence As Integer, addrKind As SymAddressKind, addr1 As Integer, addr2 As Integer, addr3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineParameter(System::String ^ name, System::Reflection::ParameterAttributes attributes, int sequence, System::Diagnostics::SymbolStore::SymAddressKind addrKind, int addr1, int addr2, int addr3);" />
      <MemberSignature Language="F#" Value="abstract member DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit&#xA;override this.DefineParameter : string * System.Reflection.ParameterAttributes * int * System.Diagnostics.SymbolStore.SymAddressKind * int * int * int -&gt; unit" Usage="symWriter.DefineParameter (name, attributes, sequence, addrKind, addr1, addr2, addr3)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="sequence" Type="System.Int32" />
        <Parameter Name="addrKind" Type="System.Diagnostics.SymbolStore.SymAddressKind" />
        <Parameter Name="addr1" Type="System.Int32" />
        <Parameter Name="addr2" Type="System.Int32" />
        <Parameter Name="addr3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9a63c-166">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-166">This parameter is not used.</span></span></param>
        <param name="attributes"><span data-ttu-id="9a63c-167">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-167">This parameter is not used.</span></span></param>
        <param name="sequence"><span data-ttu-id="9a63c-168">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-168">This parameter is not used.</span></span></param>
        <param name="addrKind"><span data-ttu-id="9a63c-169">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-169">This parameter is not used.</span></span></param>
        <param name="addr1"><span data-ttu-id="9a63c-170">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-170">This parameter is not used.</span></span></param>
        <param name="addr2"><span data-ttu-id="9a63c-171">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-171">This parameter is not used.</span></span></param>
        <param name="addr3"><span data-ttu-id="9a63c-172">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-172">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9a63c-173"><see cref="T:System.NotSupportedException" /> Zgłasza we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-173">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a63c-174">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-174">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineSequencePoints(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int32[] offsets, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefineSequencePoints (document As ISymbolDocumentWriter, offsets As Integer(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DefineSequencePoints(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ document, cli::array &lt;int&gt; ^ offsets, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit&#xA;override this.DefineSequencePoints : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="symWriter.DefineSequencePoints (document, offsets, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="9a63c-175">Obiekt dokumentu, dla którego są definiowane punkty sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-175">The document object for which the sequence points are being defined.</span></span></param>
        <param name="offsets"><span data-ttu-id="9a63c-176">Przesunięcie IL punktów sekwencji mierzone od początku metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-176">The IL offset of the sequence points measured from the beginning of the method.</span></span></param>
        <param name="lines"><span data-ttu-id="9a63c-177">Numery wierszy początkowych punktów sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-177">The starting line numbers of the sequence points.</span></span></param>
        <param name="columns"><span data-ttu-id="9a63c-178">Numery kolumn początkowych punktów sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-178">The starting column numbers of the sequence points.</span></span></param>
        <param name="endLines"><span data-ttu-id="9a63c-179">Numery wierszy zakończenia punktów sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-179">The ending line numbers of the sequence points.</span></span></param>
        <param name="endColumns"><span data-ttu-id="9a63c-180">Numery kolumn końcowych punktów sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-180">The ending column numbers of the sequence points.</span></span></param>
        <summary><span data-ttu-id="9a63c-181">Definiuje grupę punktów sekwencji w bieżącej metodzie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-181">Defines a group of sequence points within the current method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-182">Punkty sekwencji są używane do mapowania między lokalizacjami plików źródłowych i przesunięciami IL.</span><span class="sxs-lookup"><span data-stu-id="9a63c-182">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="9a63c-183">Każdy punkt sekwencji składa się z przesunięcia Il i regionu pliku źródłowego, określonego przez początkową i końcową liczbę wierszy/ <xref:System.Diagnostics.SymbolStore.ISymbolDocument> kolumn względem obiektu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-183">Each sequence point consists of an IL offset and source file region, specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="9a63c-184">Każdy element w określonym indeksie każdej tablicy odpowiada określonemu punktowi sekwencji.</span><span class="sxs-lookup"><span data-stu-id="9a63c-184">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="9a63c-185">Każdy wiersz i każda kolumna definiują początek instrukcji w ramach metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-185">Each line and each column defines the start of a statement within a method.</span></span> <span data-ttu-id="9a63c-186">Tablice powinny być sortowane w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="9a63c-186">The arrays should be sorted in the increasing order of offsets.</span></span> <span data-ttu-id="9a63c-187">Przesunięcie jest zawsze przesunięcie od początku metody, w bajtach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-187">The offset is always the offset from the start of the method, in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-188">Zwalnia zasoby używane przez bieżące wystąpienie <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9a63c-188">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symWriter.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="9a63c-189"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-189"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9a63c-190">Wywoływane przez <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> metody i <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> , aby zwolnić zarządzane i niezarządzane zasoby używane przez bieżące wystąpienie <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9a63c-190">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-191">Ta metoda jest wywoływana tylko przez publiczne <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> i <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> metody; nie wywołuj tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="9a63c-191">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-192">Zwalnia zasoby niezarządzane i wykonuje inne operacje czyszczenia przed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> odzyskiwaniem przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-192">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-193">Ta metoda przesłania <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a63c-193">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="9a63c-194">Kod aplikacji nie powinien wywoływać tej metody; `Finalize` metoda obiektu jest automatycznie wywoływana podczas wyrzucania elementów bezużytecznych, chyba że finalizacja przez moduł wyrzucania elementów bezużytecznych została wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-194">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWriter">
      <MemberSignature Language="C#" Value="public ISymUnmanagedWriter* GetWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance ISymUnmanagedWriter* GetWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.GetWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ISymUnmanagedWriter* GetWriter();" />
      <MemberSignature Language="F#" Value="member this.GetWriter : unit -&gt; nativeptr&lt;ISymUnmanagedWriter&gt;" Usage="symWriter.GetWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ISymUnmanagedWriter*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a63c-195">Pobiera źródłowy moduł zapisujący symboli niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-195">Gets the underlying unmanaged symbol writer.</span></span></summary>
        <returns><span data-ttu-id="9a63c-196">Surowy wskaźnik do podstawowego składnika zapisywania symboli niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-196">A raw pointer to the underlying unmanaged symbol writer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(native int emitter, string filename, bool fFullBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (emitter As IntPtr, filename As String, fFullBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(IntPtr emitter, System::String ^ filename, bool fFullBuild);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : nativeint * string * bool -&gt; unit&#xA;override this.Initialize : nativeint * string * bool -&gt; unit" Usage="symWriter.Initialize (emitter, filename, fFullBuild)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitter" Type="System.IntPtr" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="fFullBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitter"><span data-ttu-id="9a63c-197">Interfejs emitujący metadane.</span><span class="sxs-lookup"><span data-stu-id="9a63c-197">The metadata emitter interface.</span></span></param>
        <param name="filename"><span data-ttu-id="9a63c-198">Nazwa pliku, dla którego są napisywane symbole debugowania.</span><span class="sxs-lookup"><span data-stu-id="9a63c-198">The file name for which the debugging symbols are written.</span></span> <span data-ttu-id="9a63c-199">Niektóre moduły zapisujące wymagają nazwy pliku, a inne nie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-199">Some writers require a file name, while others do not.</span></span> <span data-ttu-id="9a63c-200">Jeśli nazwa pliku jest określona dla składnika zapisywania, który nie używa nazw plików, ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-200">If a file name is specified for a writer that does not use file names, this parameter is ignored.</span></span></param>
        <param name="fFullBuild"><span data-ttu-id="9a63c-201"><see langword="true" />wskazuje, że jest to pełna kompilacja; <see langword="false" /> wskazuje kompilację przyrostową.</span><span class="sxs-lookup"><span data-stu-id="9a63c-201"><see langword="true" /> indicates that this is a full rebuild; <see langword="false" /> indicates an incremental compilation.</span></span></param>
        <summary><span data-ttu-id="9a63c-202">Ustawia interfejs emitujący metadane do skojarzenia z tym modułem zapisywania.</span><span class="sxs-lookup"><span data-stu-id="9a63c-202">Sets the metadata emitter interface to associate with this writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-203"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A>ustawia również nazwę pliku wyjściowego, w którym są zapisywane symbole debugowania.</span><span class="sxs-lookup"><span data-stu-id="9a63c-203"><xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> also sets the output file name where the debugging symbols are written.</span></span> <span data-ttu-id="9a63c-204">Tę metodę można wywołać tylko raz i muszą one zostać wywołane przed wywołaniem innych metod składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="9a63c-204">This method can be called only once and must be called before any other writer methods are called.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a63c-205">możliwość uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-205">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InitWriter">
      <MemberSignature Language="C#" Value="public void InitWriter (bool noUnderlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitWriter(bool noUnderlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitWriter (noUnderlyingWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitWriter(bool noUnderlyingWriter);" />
      <MemberSignature Language="F#" Value="member this.InitWriter : bool -&gt; unit" Usage="symWriter.InitWriter noUnderlyingWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noUnderlyingWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noUnderlyingWriter"><span data-ttu-id="9a63c-206"><see langword="true" />Jeśli odpowiedni moduł zapisujący symboli zostanie dostarczony przez wywołanie <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> metody; <see langword="false" /> Jeśli zamiast tego należy utworzyć domyślny moduł zapisujący symboli bazowych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-206"><see langword="true" /> if an underlying symbol writer will be provided by calling the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" /> method; <see langword="false" /> if a default underlying symbol writer should be created instead.</span></span></param>
        <summary><span data-ttu-id="9a63c-207">Inicjuje moduł zapisujący symboli.</span><span class="sxs-lookup"><span data-stu-id="9a63c-207">Initializes the symbol writer.</span></span> <span data-ttu-id="9a63c-208">Ta metoda nie powinna być wywoływana bezpośrednio; jest wywoływana przez konstruktora.</span><span class="sxs-lookup"><span data-stu-id="9a63c-208">This method should not be called directly; it is called by the constructor.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a63c-209">możliwość uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-209">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OpenMethod">
      <MemberSignature Language="C#" Value="public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenMethod (method As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.OpenMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.OpenMethod method" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="9a63c-210">Token metadanych dla metody, która ma zostać otwarta.</span><span class="sxs-lookup"><span data-stu-id="9a63c-210">The metadata token for the method to be opened.</span></span></param>
        <summary><span data-ttu-id="9a63c-211">Otwiera metodę, w której mają zostać umieszczone informacje o symbolach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-211">Opens a method in which to place symbol information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-212">Określona metoda przyjmuje bieżącą metodę dla wywołań, aby zdefiniować punkty sekwencji, parametry i zakresy leksykalne.</span><span class="sxs-lookup"><span data-stu-id="9a63c-212">The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes.</span></span> <span data-ttu-id="9a63c-213">Istnieje niejawny zakres leksykalny wokół całej metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-213">There is an implicit lexical scope around the entire method.</span></span> <span data-ttu-id="9a63c-214">Ponowne otwarcie wcześniej zamkniętej metody powoduje wymazanie wszystkich wcześniej zdefiniowanych symboli dla metody.</span><span class="sxs-lookup"><span data-stu-id="9a63c-214">Reopening a method that has been previously closed erases any previously defined symbols for the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNamespace">
      <MemberSignature Language="C#" Value="public virtual void OpenNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenNamespace(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OpenNamespace (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OpenNamespace(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member OpenNamespace : string -&gt; unit&#xA;override this.OpenNamespace : string -&gt; unit" Usage="symWriter.OpenNamespace name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9a63c-215">Nazwa nowej przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9a63c-215">The name of the new namespace.</span></span></param>
        <summary><span data-ttu-id="9a63c-216">Otwiera nową przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="9a63c-216">Opens a new namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-217">Wywołaj tę metodę przed zdefiniowaniem metod lub zmiennych, które istnieją w przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9a63c-217">Call this method before defining methods or variables that exist within a namespace.</span></span> <span data-ttu-id="9a63c-218">Przestrzenie nazw mogą być zagnieżdżane.</span><span class="sxs-lookup"><span data-stu-id="9a63c-218">Namespaces can be nested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenScope">
      <MemberSignature Language="C#" Value="public virtual int OpenScope (int startOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 OpenScope(int32 startOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenScope (startOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int OpenScope(int startOffset);" />
      <MemberSignature Language="F#" Value="abstract member OpenScope : int -&gt; int&#xA;override this.OpenScope : int -&gt; int" Usage="symWriter.OpenScope startOffset" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset"><span data-ttu-id="9a63c-219">Przesunięcie IL w bajtach od początku metody do pierwszej instrukcji w zakresie leksykalnym.</span><span class="sxs-lookup"><span data-stu-id="9a63c-219">The IL offset in bytes from the beginning of the method to the first instruction in the lexical scope.</span></span></param>
        <summary><span data-ttu-id="9a63c-220">Otwiera nowy zakres leksykalny w bieżącej metodzie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-220">Opens a new lexical scope in the current method.</span></span></summary>
        <returns><span data-ttu-id="9a63c-221">Nieprzezroczysty identyfikator zakresu, którego można użyć <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> w celu zdefiniowania przesunięcia początkowego i końcowego zakresu w późniejszym czasie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-221">An opaque scope identifier that can be used with <see cref="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" /> to define the start and end offsets of a scope at a later time.</span></span> <span data-ttu-id="9a63c-222">W takim przypadku przesunięcia przechodzą do <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> i <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="9a63c-222">In this case, the offsets passed to <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> and <see cref="M:System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)" /> are ignored.</span></span> <span data-ttu-id="9a63c-223">Identyfikator zakresu jest prawidłowy tylko w bieżącej metodzie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-223">A scope identifier is valid only in the current method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-224">Ten zakres będzie nowym bieżącym zakresem i jest wypychany do stosu zakresów.</span><span class="sxs-lookup"><span data-stu-id="9a63c-224">This scope becomes the new current scope and is pushed onto a stack of scopes.</span></span> <span data-ttu-id="9a63c-225">Zakresy muszą tworzyć hierarchię.</span><span class="sxs-lookup"><span data-stu-id="9a63c-225">Scopes must form a hierarchy.</span></span> <span data-ttu-id="9a63c-226">Elementy równorzędne nie mogą nakładać się na siebie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-226">Siblings are not allowed to overlap.</span></span>  
  
 <span data-ttu-id="9a63c-227">Identyfikatory zakresów są prawidłowe tylko w bieżącej metodzie.</span><span class="sxs-lookup"><span data-stu-id="9a63c-227">Scope identifiers are only valid in the current method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethodSourceRange">
      <MemberSignature Language="C#" Value="public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethodSourceRange(class System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int32 startLine, int32 startColumn, class System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMethodSourceRange (startDoc As ISymbolDocumentWriter, startLine As Integer, startColumn As Integer, endDoc As ISymbolDocumentWriter, endLine As Integer, endColumn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMethodSourceRange(System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ startDoc, int startLine, int startColumn, System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ endDoc, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="abstract member SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit&#xA;override this.SetMethodSourceRange : System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int * System.Diagnostics.SymbolStore.ISymbolDocumentWriter * int * int -&gt; unit" Usage="symWriter.SetMethodSourceRange (startDoc, startLine, startColumn, endDoc, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endDoc" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDoc"><span data-ttu-id="9a63c-228">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-228">This parameter is not used.</span></span></param>
        <param name="startLine"><span data-ttu-id="9a63c-229">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-229">This parameter is not used.</span></span></param>
        <param name="startColumn"><span data-ttu-id="9a63c-230">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-230">This parameter is not used.</span></span></param>
        <param name="endDoc"><span data-ttu-id="9a63c-231">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-231">This parameter is not used.</span></span></param>
        <param name="endLine"><span data-ttu-id="9a63c-232">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-232">This parameter is not used.</span></span></param>
        <param name="endColumn"><span data-ttu-id="9a63c-233">Ten parametr nie jest używany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-233">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9a63c-234"><see cref="T:System.NotSupportedException" /> Zgłasza we wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-234">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9a63c-235">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="9a63c-235">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopeRange">
      <MemberSignature Language="C#" Value="public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScopeRange(int32 scopeID, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScopeRange (scopeID As Integer, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScopeRange(int scopeID, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="abstract member SetScopeRange : int * int * int -&gt; unit&#xA;override this.SetScopeRange : int * int * int -&gt; unit" Usage="symWriter.SetScopeRange (scopeID, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeID" Type="System.Int32" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scopeID"><span data-ttu-id="9a63c-236">Identyfikator zakresu leksykalnego zwracanego przez <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="9a63c-236">The identifier of the lexical scope returned by the <see cref="M:System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)" /> method.</span></span></param>
        <param name="startOffset"><span data-ttu-id="9a63c-237">Przesunięcie IL początku zakresu leksykalnego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-237">The IL offset of the beginning of the lexical scope.</span></span></param>
        <param name="endOffset"><span data-ttu-id="9a63c-238">Przesunięcie IL końca zakresu leksykalnego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-238">The IL offset of the end of the lexical scope.</span></span></param>
        <summary><span data-ttu-id="9a63c-239">Definiuje zakres przesunięć dla określonego zakresu leksykalnego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-239">Defines the offset range for the specified lexical scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSymAttribute (parent As SymbolToken, name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit&#xA;override this.SetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string * byte[] -&gt; unit" Usage="symWriter.SetSymAttribute (parent, name, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="9a63c-240">Token metadanych, dla którego atrybut jest definiowany.</span><span class="sxs-lookup"><span data-stu-id="9a63c-240">The metadata token for which the attribute is being defined.</span></span></param>
        <param name="name"><span data-ttu-id="9a63c-241">Nazwa atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-241">The attribute name.</span></span></param>
        <param name="data"><span data-ttu-id="9a63c-242">Wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-242">The attribute value.</span></span></param>
        <summary><span data-ttu-id="9a63c-243">Definiuje atrybut w przypadku podaną nazwę atrybutu i wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-243">Defines an attribute when given the attribute name and the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-244"><xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> Metoda jest skojarzona tylko z informacjami symbolicznymi i nie jest atrybutem niestandardowym metadanych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-244">The <xref:System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute%2A> method is only associated with symbolic information and is not a metadata custom attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUnderlyingWriter">
      <MemberSignature Language="C#" Value="public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUnderlyingWriter(native int underlyingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUnderlyingWriter (underlyingWriter As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUnderlyingWriter(IntPtr underlyingWriter);" />
      <MemberSignature Language="F#" Value="abstract member SetUnderlyingWriter : nativeint -&gt; unit&#xA;override this.SetUnderlyingWriter : nativeint -&gt; unit" Usage="symWriter.SetUnderlyingWriter underlyingWriter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="underlyingWriter" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="underlyingWriter"><span data-ttu-id="9a63c-245">Wskaźnik <see cref="T:System.IntPtr" /> typu do kodu, który jest źródłowym składnikiem zapisywania.</span><span class="sxs-lookup"><span data-stu-id="9a63c-245">An <see cref="T:System.IntPtr" /> type pointer to code that is the underlying writer.</span></span></param>
        <summary><span data-ttu-id="9a63c-246">Ustawia podstawowy [interfejs ISymUnmanagedWriter](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (odpowiedni niezarządzany interfejs API), którego <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> zarządza używany do emitowania symboli.</span><span class="sxs-lookup"><span data-stu-id="9a63c-246">Sets the underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) that a managed <see cref="T:System.Diagnostics.SymbolStore.SymWriter" /> uses to emit symbols.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-247">Podstawowy interfejs [ISymUnmanagedWriter](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (odpowiedni niezarządzany interfejs API) reprezentuje moduł zapisujący symboli dla kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-247">The underlying [ISymUnmanagedWriter Interface](~/docs/framework/unmanaged-api/diagnostics/isymunmanagedwriter-interface.md) (the corresponding unmanaged API) interface represents a symbol writer for managed code.</span></span> <span data-ttu-id="9a63c-248">Interfejs udostępnia metody do definiowania dokumentów, punktów sekwencji, zakresów leksykalnych i zmiennych.</span><span class="sxs-lookup"><span data-stu-id="9a63c-248">The interface provides methods to define documents, sequence points, lexical scopes, and variables.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9a63c-249">możliwość uzyskania dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-249">for the ability to access unmanaged code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserEntryPoint(valuetype System.Diagnostics.SymbolStore.SymbolToken entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserEntryPoint (entryMethod As SymbolToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserEntryPoint(System::Diagnostics::SymbolStore::SymbolToken entryMethod);" />
      <MemberSignature Language="F#" Value="abstract member SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit&#xA;override this.SetUserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken -&gt; unit" Usage="symWriter.SetUserEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="9a63c-250">Token metadanych dla metody, która jest punktem wejścia użytkownika.</span><span class="sxs-lookup"><span data-stu-id="9a63c-250">The metadata token for the method that is the user entry point.</span></span></param>
        <summary><span data-ttu-id="9a63c-251">Identyfikuje metodę zdefiniowaną przez użytkownika jako punkt wejścia dla bieżącego modułu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-251">Identifies the user-defined method as the entry point for the current module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-252">Zwykle jest to Metoda główna.</span><span class="sxs-lookup"><span data-stu-id="9a63c-252">This is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingNamespace">
      <MemberSignature Language="C#" Value="public virtual void UsingNamespace (string fullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UsingNamespace(string fullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UsingNamespace (fullName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UsingNamespace(System::String ^ fullName);" />
      <MemberSignature Language="F#" Value="abstract member UsingNamespace : string -&gt; unit&#xA;override this.UsingNamespace : string -&gt; unit" Usage="symWriter.UsingNamespace fullName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullName"><span data-ttu-id="9a63c-253">W pełni kwalifikowana nazwa przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9a63c-253">The fully qualified name of the namespace.</span></span></param>
        <summary><span data-ttu-id="9a63c-254">Określa, że dana, w pełni kwalifikowana nazwa przestrzeni nazw jest używana w ramach otwartego zakresu leksykalnego.</span><span class="sxs-lookup"><span data-stu-id="9a63c-254">Specifies that the given, fully qualified namespace name is used within the open lexical scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a63c-255">Zamknięcie bieżącego zakresu uniemożliwia korzystanie z przestrzeni nazw przez ten zakres.</span><span class="sxs-lookup"><span data-stu-id="9a63c-255">Closing the current scope prevents this scope from using the namespace.</span></span> <span data-ttu-id="9a63c-256">Przestrzeń nazw pozostaje w użyciu we wszystkich zakresach, które dziedziczą z bieżącego otwartego zakresu.</span><span class="sxs-lookup"><span data-stu-id="9a63c-256">The namespace remains in use in all scopes that inherit from the current open scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
