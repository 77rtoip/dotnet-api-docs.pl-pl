<Type Name="DynamicActivity" FullName="System.Activities.DynamicActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="184d758238be6dae66ad7400e71a9c19b96dc20f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69344390" /></Metadata><TypeSignature Language="C#" Value="public sealed class DynamicActivity : System.Activities.Activity, System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicActivity extends System.Activities.Activity implements class System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicActivity&#xA;Inherits Activity&#xA;Implements ICustomTypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicActivity sealed : System::Activities::Activity, System::ComponentModel::ICustomTypeDescriptor" />
  <TypeSignature Language="F#" Value="type DynamicActivity = class&#xA;    inherit Activity&#xA;    interface ICustomTypeDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ICustomTypeDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Implementation")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ffe32-101">Udostępnia model obiektów, który pozwala na dynamiczne konstruowanie działań tego interfejsu za pomocą projektanta WF i środowiska uruchomieniowego przy użyciu programu <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="ffe32-101">Provides an object model that allows you to construct activities dynamically that interface with the WF designer and runtime using <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ffe32-102">Poniższy przykład pokazuje, <xref:System.Activities.DynamicActivity>jak utworzyć.</span><span class="sxs-lookup"><span data-stu-id="ffe32-102">The following example shows how to create a <xref:System.Activities.DynamicActivity>.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-103">Tworzy nowe wystąpienie <see cref="T:System.Activities.DynamicActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ffe32-103">Creates a new instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-104">Za <xref:System.Activities.DynamicActivity> pomocą programu można tworzyć nowe działania bez tworzenia nowych typów.</span><span class="sxs-lookup"><span data-stu-id="ffe32-104">With <xref:System.Activities.DynamicActivity> you can create new activities without creating new types.</span></span> <span data-ttu-id="ffe32-105"><xref:System.Activities.DynamicActivity>ze skojarzoną obsługą XAML <xref:System.Activities.XamlIntegration.ActivityXamlServices> w programie można definiować nowe argumenty w języku XAML i być powiązane z hostem bez konieczności kompilowania kodu XAML.</span><span class="sxs-lookup"><span data-stu-id="ffe32-105"><xref:System.Activities.DynamicActivity> with its associated XAML support in <xref:System.Activities.XamlIntegration.ActivityXamlServices> allows new arguments to be defined in XAML and bound by the host without requiring XAML to be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As Collection(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ Attributes { System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.Collection&lt;Attribute&gt;" Usage="System.Activities.DynamicActivity.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-106">Pobiera kolekcję atrybutów działania dynamicznie generowanego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-106">Gets the collection of attributes of the dynamically generated activity.</span></span></summary>
        <value><span data-ttu-id="ffe32-107">Kolekcja atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ffe32-107">The collection of attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt; Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.Constraint&gt; Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As Collection(Of Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ Constraints { System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt;" Usage="System.Activities.DynamicActivity.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-108">Zwraca kolekcję <see cref="T:System.Activities.Validation.Constraint" /> działań, które są skonfigurowane w celu zapewnienia weryfikacji <see cref="T:System.Activities.DynamicActivity" />dla.</span><span class="sxs-lookup"><span data-stu-id="ffe32-108">Returns a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that are configured to provide validation for the <see cref="T:System.Activities.DynamicActivity" />.</span></span></summary>
        <value><span data-ttu-id="ffe32-109">Kolekcja ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="ffe32-109">The constraint collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : Func&lt;System.Activities.Activity&gt; with get, set" Usage="System.Activities.DynamicActivity.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.XamlDeferLoad(typeof(System.Activities.XamlIntegration.FuncDeferringLoader), typeof(System.Activities.Activity))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-110">Pobiera lub ustawia logikę wykonywania działania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-110">Gets or sets the execution logic of the activity.</span></span></summary>
        <value><span data-ttu-id="ffe32-111">Logika wykonywania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-111">The execution logic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ffe32-112">Poniższy przykład pokazuje, jak określić implementację działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-112">The following example shows how to specify the implementation for a dynamic activity.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="public Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationVersion : Version with get, set" Usage="System.Activities.DynamicActivity.ImplementationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.ImplementationVersionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-113">Pobiera lub ustawia wersję implementacji działania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-113">Gets or sets the implementation version of the activity.</span></span></summary>
        <value><span data-ttu-id="ffe32-114">Wersja implementacji działania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-114">The implementation version of the activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.DynamicActivity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.IDynamicActivity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-115">Nazwa, która ma być wyświetlana dla działania w Projektancie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ffe32-115">The name to be displayed for the activity in the workflow designer.</span></span></summary>
        <value><span data-ttu-id="ffe32-116">Nazwa działania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-116">The activity name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.KeyedCollection&lt;string,System.Activities.DynamicActivityProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.KeyedCollection`2&lt;string, class System.Activities.DynamicActivityProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As KeyedCollection(Of String, DynamicActivityProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ Properties { System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.ObjectModel.KeyedCollection&lt;string, System.Activities.DynamicActivityProperty&gt;" Usage="System.Activities.DynamicActivity.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Activities.IDynamicActivity.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.KeyedCollection&lt;System.String,System.Activities.DynamicActivityProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffe32-117">Pobiera kolekcję właściwości, które są mapowane na argumenty dynamicznie generowanego działania.</span><span class="sxs-lookup"><span data-stu-id="ffe32-117">Gets the collection of properties that map to the arguments of the dynamically generated activity.</span></span></summary>
        <value><span data-ttu-id="ffe32-118">Kolekcja właściwości.</span><span class="sxs-lookup"><span data-stu-id="ffe32-118">The collection of properties.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <MemberSignature Language="C#" Value="System.ComponentModel.AttributeCollection ICustomTypeDescriptor.GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
      <MemberSignature Language="VB.NET" Value="Function GetAttributes () As AttributeCollection Implements ICustomTypeDescriptor.GetAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::AttributeCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetAttributes() = System::ComponentModel::ICustomTypeDescriptor::GetAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-119">Zwraca kolekcję atrybutów działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-119">Returns a collection of attributes of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-120">Atrybuty działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-120">The attributes of the dynamic activity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-121">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-121">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-122">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-122">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
      <MemberSignature Language="VB.NET" Value="Function GetClassName () As String Implements ICustomTypeDescriptor.GetClassName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetClassName() = System::ComponentModel::ICustomTypeDescriptor::GetClassName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetClassName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-123">Zwraca nazwę klasy działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-123">Returns the class name of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-124">Nazwa klasy.</span><span class="sxs-lookup"><span data-stu-id="ffe32-124">The class name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-125">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-125">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-126">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-126">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
      <MemberSignature Language="VB.NET" Value="Function GetComponentName () As String Implements ICustomTypeDescriptor.GetComponentName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetComponentName() = System::ComponentModel::ICustomTypeDescriptor::GetComponentName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-127">Zwraca nazwę składnika działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-127">Returns the component name of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-128">Nazwa składnika.</span><span class="sxs-lookup"><span data-stu-id="ffe32-128">The component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-129">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-129">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-130">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-130">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <MemberSignature Language="C#" Value="System.ComponentModel.TypeConverter ICustomTypeDescriptor.GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
      <MemberSignature Language="VB.NET" Value="Function GetConverter () As TypeConverter Implements ICustomTypeDescriptor.GetConverter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::TypeConverter ^ System.ComponentModel.ICustomTypeDescriptor.GetConverter() = System::ComponentModel::ICustomTypeDescriptor::GetConverter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetConverter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-131">Zwraca konwerter typu dla działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-131">Returns a type converter for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-132">Konwerter typów dla tego wystąpienia działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-132">A type converter for this dynamic activity instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-133">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-133">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-134">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-134">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptor ICustomTypeDescriptor.GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultEvent () As EventDescriptor Implements ICustomTypeDescriptor.GetDefaultEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-135">Zwraca domyślne zdarzenie dla działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-135">Returns the default event for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-136">Zdarzenie domyślne.</span><span class="sxs-lookup"><span data-stu-id="ffe32-136">The default event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-137">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-137">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-138">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-138">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptor ICustomTypeDescriptor.GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultProperty () As PropertyDescriptor Implements ICustomTypeDescriptor.GetDefaultProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-139">Zwraca domyślną właściwość działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-139">Returns the default property for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-140">Właściwość domyślna.</span><span class="sxs-lookup"><span data-stu-id="ffe32-140">The default property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-141">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-142">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-142">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEditor">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetEditor (editorBaseType As Type) As Object Implements ICustomTypeDescriptor.GetEditor" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type ^ editorBaseType) = System::ComponentModel::ICustomTypeDescriptor::GetEditor;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="ffe32-143">Typ podstawowy edytora, który ma zostać znaleziony.</span><span class="sxs-lookup"><span data-stu-id="ffe32-143">The base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="ffe32-144">Zwraca Edytor o określonym typie podstawowym.</span><span class="sxs-lookup"><span data-stu-id="ffe32-144">Returns an editor with the specified base type.</span></span></summary>
        <returns><span data-ttu-id="ffe32-145">Wystąpienie edytora, które może być rzutowane na określony typ edytora lub <see langword="null" /> Jeśli nie można odnaleźć edytora żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-145">An instance of the editor that can be cast to the specified editor type or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-146">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-146">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-147">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-147">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ffe32-148">Zwraca kolekcję zdarzeń działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-148">Returns the collection of events of the dynamic activity.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents () As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents() = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-149">Zwraca kolekcję zdarzeń działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-149">Returns the collection of events of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-150">Kolekcja zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="ffe32-150">The collection of events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-151">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-152">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-152">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents (attributes As Attribute()) As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ffe32-153">Tablica, która może być używana jako filtr.</span><span class="sxs-lookup"><span data-stu-id="ffe32-153">An array that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="ffe32-154">Zwraca kolekcję zdarzeń działania dynamicznego przy użyciu określonej tablicy atrybutów jako filtru.</span><span class="sxs-lookup"><span data-stu-id="ffe32-154">Returns the collection of events of the dynamic activity using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="ffe32-155">Kolekcja zdarzeń, które pasują do określonych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ffe32-155">The collection of events that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-156">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-156">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-157">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-157">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ffe32-158">Zwraca kolekcję właściwości działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-158">Returns the collection of properties of the dynamic activity.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties () As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties() = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffe32-159">Zwraca kolekcję właściwości działania dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="ffe32-159">Returns the collection of properties of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ffe32-160">Kolekcja właściwości.</span><span class="sxs-lookup"><span data-stu-id="ffe32-160">The collection of properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-161">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-162">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-162">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (attributes As Attribute()) As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ffe32-163">Tablica, która może być używana jako filtr.</span><span class="sxs-lookup"><span data-stu-id="ffe32-163">An array that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="ffe32-164">Zwraca kolekcję właściwości działania dynamicznego przy użyciu określonej tablicy atrybutów jako filtru.</span><span class="sxs-lookup"><span data-stu-id="ffe32-164">Returns the collection of properties of the dynamic activity using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="ffe32-165">Kolekcja właściwości, które pasują do określonych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="ffe32-165">The collection of properties that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-166">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-166">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-167">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-167">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyOwner (pd As PropertyDescriptor) As Object Implements ICustomTypeDescriptor.GetPropertyOwner" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System::ComponentModel::PropertyDescriptor ^ pd) = System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd"><span data-ttu-id="ffe32-168">Właściwość, której właściciel ma zostać znaleziony.</span><span class="sxs-lookup"><span data-stu-id="ffe32-168">The property whose owner is to be found.</span></span></param>
        <summary><span data-ttu-id="ffe32-169">Zwraca to wystąpienie <see cref="T:System.Activities.DynamicActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ffe32-169">Returns this instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span></span></summary>
        <returns><span data-ttu-id="ffe32-170">To wystąpienie <see cref="T:System.Activities.DynamicActivity" />.</span><span class="sxs-lookup"><span data-stu-id="ffe32-170">This instance of <see cref="T:System.Activities.DynamicActivity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffe32-171">Ten `pd` parametr jest ignorowany przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ffe32-171">The `pd` parameter is ignored by this method.</span></span> <span data-ttu-id="ffe32-172">Ten parametr jest obecny, <xref:System.ComponentModel.ICustomTypeDescriptor> aby zaimplementować interfejs.</span><span class="sxs-lookup"><span data-stu-id="ffe32-172">This parameter is present to implement the <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 <span data-ttu-id="ffe32-173">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="ffe32-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ffe32-174">Może być używana tylko wtedy, <xref:System.Activities.DynamicActivity> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.ICustomTypeDescriptor> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ffe32-174">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
