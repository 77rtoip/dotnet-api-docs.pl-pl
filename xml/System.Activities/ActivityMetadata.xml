<Type Name="ActivityMetadata" FullName="System.Activities.ActivityMetadata">
  <TypeSignature Language="C#" Value="public struct ActivityMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ActivityMetadata extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ActivityMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Structure ActivityMetadata" />
  <TypeSignature Language="C++ CLI" Value="public value class ActivityMetadata" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e9178-101">Reprezentuje zestaw argumentów, działania podrzędne, zmienne i który deleguje skonfigurowany <see cref="T:System.Activities.Activity" /> występują po wprowadzeniu do środowiska wykonawczego.</span><span class="sxs-lookup"><span data-stu-id="e9178-101">Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.Activity" /> introduces to the execution environment.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(System::Activities::RuntimeArgument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="e9178-102">Argument do dodania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-102">The argument to add to the collection.</span></span></param>
        <summary><span data-ttu-id="e9178-103">Dodaje argumentu w kolekcji argumentów działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-103">Adds an argument to the collection of arguments of an activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultExtensionProvider&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddDefaultExtensionProvider&lt;T&gt; (Func&lt;T&gt; extensionProvider) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDefaultExtensionProvider&lt;class T&gt;(class System.Func`1&lt;!!T&gt; extensionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDefaultExtensionProvider(Of T As Class) (extensionProvider As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void AddDefaultExtensionProvider(Func&lt;T&gt; ^ extensionProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extensionProvider" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e9178-104">Typ dostawcy rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="e9178-104">The type of the extension provider.</span></span></typeparam>
        <param name="extensionProvider"><span data-ttu-id="e9178-105">Funkcja, która zwraca rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="e9178-105">The function that returns the extension.</span></span></param>
        <summary><span data-ttu-id="e9178-106">Dodaje dostawcę określone rozszerzenie do kolekcji dostawców rozszerzenie domyślne działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-106">Adds the specified extension provider to the collection of default extension providers for the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-107">Jeśli host nie ma rozszerzenie typu `T`, następnie ten dostawca rozszerzenia są filtrowane w celu Podaj jeden.</span><span class="sxs-lookup"><span data-stu-id="e9178-107">If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9178-108">Dodaje określony działania do listy metadane działań importowanego obiektu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-108">Adds the specified activity to the metadata’s list of imported child activities.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="e9178-109">Działanie do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-109">The activity to add.</span></span></param>
        <summary><span data-ttu-id="e9178-110">Dodaje określony działania do listy metadane działań importowanego obiektu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-110">Adds the specified activity to the metadata’s list of imported child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-111">Działanie importowanego obiektu podrzędnego jest działaniem podrzędnym, który działanie nadrzędne nie planować bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="e9178-111">An imported child activity is a child activity that the parent activity does not schedule directly.</span></span> <span data-ttu-id="e9178-112">Zamiast następnie nadrzędny używa tego działania można skonfigurować inne działania podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-112">Rather, then parent uses this activity to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="e9178-113">Działanie do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-113">The activity to add.</span></span></param>
        <param name="origin"><span data-ttu-id="e9178-114">Punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="e9178-114">The origin.</span></span></param>
        <summary><span data-ttu-id="e9178-115">Dodaje określony działania do listy metadane działań importowanego obiektu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-115">Adds the specified activity to the metadata’s list of imported child activities.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9178-116">Dodaje określonego delegata do metadanych listę importowanych delegatów.</span><span class="sxs-lookup"><span data-stu-id="e9178-116">Adds the specified delegate to the metadata’s list of imported delegates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="e9178-117">Delegat do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-117">The delegate to add.</span></span></param>
        <summary><span data-ttu-id="e9178-118">Dodaje określonego delegata do metadanych listę importowanych delegatów.</span><span class="sxs-lookup"><span data-stu-id="e9178-118">Adds the specified delegate to the metadata’s list of imported delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-119">Importowany <xref:System.Activities.ActivityDelegate> jest <xref:System.Activities.ActivityDelegate> który działanie nadrzędne nie jest wywoływany bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="e9178-119">An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly.</span></span> <span data-ttu-id="e9178-120">Zamiast element nadrzędny używa to <xref:System.Activities.ActivityDelegate> skonfigurować inne działania podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-120">Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="e9178-121">Delegat do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-121">The delegate to add.</span></span></param>
        <param name="origin"><span data-ttu-id="e9178-122">Punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="e9178-122">The origin.</span></span></param>
        <summary><span data-ttu-id="e9178-123">Dodaje określonego delegata do metadanych listę importowanych delegatów.</span><span class="sxs-lookup"><span data-stu-id="e9178-123">Adds the specified delegate to the metadata’s list of imported delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValidationError">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9178-124">Dodaje błąd sprawdzania poprawności do zbierania metadanych błędy sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="e9178-124">Adds a validation error to the metadata’s collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="e9178-125">Aby uzyskać więcej informacji, zobacz [weryfikacji Imperative Code-Based](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="e9178-125">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (System.Activities.Validation.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(class System.Activities.Validation.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::Activities::Validation::ValidationError ^ validationError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationError" Type="System.Activities.Validation.ValidationError" />
      </Parameters>
      <Docs>
        <param name="validationError"><span data-ttu-id="e9178-126">Błąd sprawdzania poprawności do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-126">The validation error to add.</span></span></param>
        <summary><span data-ttu-id="e9178-127">Dodaje błąd sprawdzania poprawności określonej kolekcji metadane błędy sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="e9178-127">Adds the specified validation error to the metadata’s collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="e9178-128">Aby uzyskać więcej informacji, zobacz [weryfikacji Imperative Code-Based](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="e9178-128">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(string validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddValidationError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationErrorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::String ^ validationErrorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationErrorMessage"><span data-ttu-id="e9178-129">Komunikat, który opisuje błąd sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="e9178-129">A message that describes the validation error.</span></span></param>
        <summary><span data-ttu-id="e9178-130">Dodaje błąd sprawdzania poprawności do kolekcji błędów sprawdzania poprawności przy użyciu określonego opisu metadanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-130">Adds a validation error to the metadata’s collection of validation errors using the specified description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="e9178-131">Aby uzyskać więcej informacji, zobacz [weryfikacji Imperative Code-Based](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="e9178-131">For more information, see [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddVariable">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9178-132">Dodaje określoną zmienną do metadanych kolekcję zmiennych.</span><span class="sxs-lookup"><span data-stu-id="e9178-132">Adds the specified variable to the metadata’s collection of variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="e9178-133">Zmienna do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-133">The variable to add.</span></span></param>
        <summary><span data-ttu-id="e9178-134">Dodaje określoną zmienną do metadanych kolekcję zmiennych.</span><span class="sxs-lookup"><span data-stu-id="e9178-134">Adds the specified variable to the metadata’s collection of variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-135">Zmienne dodane przy użyciu tej metody są traktowane jako część powierzchni publicznie można skonfigurować działania, oznacza to, że są dostarczane przez konsumentów działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-135">Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="e9178-136">Na przykład <xref:System.Activities.Statements.Sequence> dodaje zmienne w jego <xref:System.Activities.Statements.Sequence.Variables%2A> kolekcji przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="e9178-136">For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method.</span></span> <span data-ttu-id="e9178-137">Implementacja działania nie można uzyskać dostępu zmienne dodane przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="e9178-137">An activity’s implementation cannot access variables added using this method.</span></span> <span data-ttu-id="e9178-138">Działania dodane za pośrednictwem <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (i wszystkie ich działania podrzędne nie implementacji) mogą uzyskiwać dostęp do zmiennych dodane przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="e9178-138">Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method.</span></span> <span data-ttu-id="e9178-139">Na przykład <xref:System.Activities.Statements.Sequence> dodaje jego <xref:System.Activities.Statements.Sequence.Activities%2A> kolekcji w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="e9178-139">For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="e9178-140">Zmienna do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-140">The variable to add.</span></span></param>
        <param name="origin"><span data-ttu-id="e9178-141">Punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="e9178-141">The origin.</span></span></param>
        <summary><span data-ttu-id="e9178-142">Dodaje określoną zmienną do metadanych kolekcję zmiennych.</span><span class="sxs-lookup"><span data-stu-id="e9178-142">Adds the specified variable to the metadata’s collection of variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Activities.Argument binding, class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Activities::Argument ^ binding, System::Activities::RuntimeArgument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Activities.Argument" />
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="e9178-143"><see cref="T:System.Activities.Argument" /> Do powiązania.</span><span class="sxs-lookup"><span data-stu-id="e9178-143">The <see cref="T:System.Activities.Argument" /> to bind.</span></span></param>
        <param name="argument"><span data-ttu-id="e9178-144"><see cref="T:System.Activities.RuntimeArgument" /> Do powiązania.</span><span class="sxs-lookup"><span data-stu-id="e9178-144">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</span></span></param>
        <summary><span data-ttu-id="e9178-145">Wiąże określonego <see cref="T:System.Activities.Argument" /> do określonego <see cref="T:System.Activities.RuntimeArgument" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-145">Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ActivityMetadata.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ Environment { System::Activities::LocationReferenceEnvironment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9178-146">Pobiera działania <see cref="T:System.Activities.LocationReferenceEnvironment" /> argumenty, zmiennych, delegat argumentów lub symbole wprowadzone przez <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-146">Gets the activity’s <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="e9178-147">Działania środowiska odwołanie lokalizacji argumenty, zmiennych, delegat argumentów lub symbole wprowadzone przez <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-147">The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9178-148">Obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="e9178-148">The object to compare.</span></span></param>
        <summary><span data-ttu-id="e9178-149">Określa, czy określony obiekt jest taki sam jak to wystąpienie metadanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-149">Determines whether the specified object is equal to this metadata instance.</span></span></summary>
        <returns>
          <span data-ttu-id="e9178-150"><see langword="true" /> Jeśli określony obiekt jest taki sam, jak to wystąpienie metadanych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-150"><see langword="true" /> if the specified object is equal to this metadata instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgumentsWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgumentsWithReflection () As Collection(Of RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ GetArgumentsWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9178-151">Zwraca kolekcję argumentów uzyskany przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="e9178-151">Returns a collection of arguments obtained by using reflection.</span></span></summary>
        <returns><span data-ttu-id="e9178-152">Kolekcja argumentów.</span><span class="sxs-lookup"><span data-stu-id="e9178-152">A collection of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-153">Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor> zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Argument> i zwraca je w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-153">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9178-154">Zwraca unikatowy identyfikator dla tego wystąpienia metadanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-154">Returns a unique identifier for this metadata instance.</span></span></summary>
        <returns><span data-ttu-id="e9178-155">Liczba całkowita, która unikatowo identyfikuje to wystąpienie metadanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-155">An integer that uniquely identifies this metadata instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportedChildrenWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; GetImportedChildrenWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; GetImportedChildrenWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImportedChildrenWithReflection () As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ GetImportedChildrenWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9178-156">Zwraca kolekcję importowanego obiektu podrzędnego działania za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="e9178-156">Returns a collection of imported child activities using reflection.</span></span></summary>
        <returns><span data-ttu-id="e9178-157">Kolekcja działań importowanego obiektu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="e9178-157">A collection of imported child activities.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-158">Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor> zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Activity>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.Activity>i zwraca je w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-158">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportedDelegatesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; GetImportedDelegatesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; GetImportedDelegatesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImportedDelegatesWithReflection () As Collection(Of ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ GetImportedDelegatesWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9178-159">Zwraca kolekcję obiektów delegowanych za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="e9178-159">Returns a collection of delegates using reflection.</span></span></summary>
        <returns><span data-ttu-id="e9178-160">Kolekcja obiektów delegowanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-160">A collection of delegates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-161">Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor> zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.ActivityDelegate>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.ActivityDelegate>i zwraca je w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-161">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariablesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; GetVariablesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; GetVariablesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetVariablesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariablesWithReflection () As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ GetVariablesWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9178-162">Zwraca kolekcję zmiennych za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="e9178-162">Returns a collection of variables using reflection.</span></span></summary>
        <returns><span data-ttu-id="e9178-163">Kolekcja zmiennych.</span><span class="sxs-lookup"><span data-stu-id="e9178-163">A collection of variables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-164">Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor> zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Variable>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.Variable>i zwraca je w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-164">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasViolations">
      <MemberSignature Language="C#" Value="public bool HasViolations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasViolations" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ActivityMetadata.HasViolations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasViolations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasViolations { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9178-165">Pobiera wartość wskazującą, czy istnieją jakieś błędy sprawdzania poprawności w metadanych.</span><span class="sxs-lookup"><span data-stu-id="e9178-165">Gets a value that indicates whether there are any validation errors in the metadata.</span></span></summary>
        <value>
          <span data-ttu-id="e9178-166"><see langword="true" /> Jeśli występują błędy sprawdzania poprawności; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-166"><see langword="true" /> if validation errors are present; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.ActivityMetadata left, valuetype System.Activities.ActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ActivityMetadata, right As ActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::ActivityMetadata left, System::Activities::ActivityMetadata right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.ActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e9178-167">Pierwszy element do porównania.</span><span class="sxs-lookup"><span data-stu-id="e9178-167">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e9178-168">Drugi element do porównania.</span><span class="sxs-lookup"><span data-stu-id="e9178-168">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="e9178-169">Zwraca wartość wskazującą, czy dwa wystąpienia określonych metadanych są takie same.</span><span class="sxs-lookup"><span data-stu-id="e9178-169">Returns a value that indicates whether the two specified metadata instances are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e9178-170"><see langword="true" /> Jeśli dwa elementy są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-170"><see langword="true" /> if the two items are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.ActivityMetadata left, valuetype System.Activities.ActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ActivityMetadata, right As ActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::ActivityMetadata left, System::Activities::ActivityMetadata right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.ActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="e9178-171">Pierwszy element do porównania.</span><span class="sxs-lookup"><span data-stu-id="e9178-171">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="e9178-172">Drugi element do porównania.</span><span class="sxs-lookup"><span data-stu-id="e9178-172">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="e9178-173">Zwraca wartość wskazującą, czy dwa wystąpienia określonych metadanych nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="e9178-173">Returns a value that indicates whether the two specified metadata instances are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="e9178-174"><see langword="true" /> Jeśli dwa elementy nie są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e9178-174"><see langword="true" /> if the two items are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension">
      <MemberSignature Language="C#" Value="public void RequireExtension (Type extensionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension(class System.Type extensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension (extensionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireExtension(Type ^ extensionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extensionType"><span data-ttu-id="e9178-175">Typ rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="e9178-175">The type of the extension.</span></span></param>
        <summary><span data-ttu-id="e9178-176">Określa, że działanie wymaga rozszerzenia określonego typu w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="e9178-176">Specifies that the activity requires an extension of the specified type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-177">Jeśli host nie zapewniają rozszerzenie określonego typu, uwierzytelnienie nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e9178-177">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RequireExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.RequireExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void RequireExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="e9178-178">Typ rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="e9178-178">The type of the extension.</span></span></typeparam>
        <summary><span data-ttu-id="e9178-179">Określa, że działanie wymaga rozszerzenia typu ogólnego określonego w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="e9178-179">Specifies that the activity requires an extension of the specified generic type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-180">Jeśli host nie zapewniają rozszerzenie określonego typu, uwierzytelnienie nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="e9178-180">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArgumentsCollection">
      <MemberSignature Language="C#" Value="public void SetArgumentsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArgumentsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArgumentsCollection (arguments As Collection(Of RuntimeArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArgumentsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="e9178-181">Argumenty do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-181">The arguments to add.</span></span></param>
        <summary><span data-ttu-id="e9178-182">Dodaje określony zbiór argumenty do argumentów działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-182">Adds the specified collection of arguments to the activity’s arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; importedChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; importedChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedChildrenCollection (importedChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ importedChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="importedChildren"><span data-ttu-id="e9178-183">Działania do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-183">The activities to add.</span></span></param>
        <summary><span data-ttu-id="e9178-184">Dodaje określonej kolekcji jako działania importowanego obiektu podrzędnego działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-184">Adds the specified collection as imported child activities of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-185">To odpowiednik wywołania metody <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> dla każdego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-185">This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; importedDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; importedDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedDelegatesCollection (importedDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ importedDelegates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="importedDelegates"><span data-ttu-id="e9178-186">Obiekty delegowane do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-186">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="e9178-187">Dodaje importowanych delegatów działania określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-187">Adds the specified collection as imported delegates of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9178-188">To odpowiednik wywołania metody <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> dla każdego elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="e9178-188">This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationErrorsCollection">
      <MemberSignature Language="C#" Value="public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidationErrorsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.ValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidationErrorsCollection (validationErrors As Collection(Of ValidationError))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidationErrorsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::ValidationError ^&gt; ^ validationErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrors" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="validationErrors"><span data-ttu-id="e9178-189">Wystąpiły błędy weryfikacji do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-189">The validation errors to add.</span></span></param>
        <summary><span data-ttu-id="e9178-190">Dodaje określony zbiór błędy sprawdzania poprawności do zbierania metadanych błędy sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="e9178-190">Adds the specified collection of validation errors to the metadata’s collection of validation errors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVariablesCollection (variables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="e9178-191">Zmienne do dodania.</span><span class="sxs-lookup"><span data-stu-id="e9178-191">The variables to add.</span></span></param>
        <summary><span data-ttu-id="e9178-192">Dodaje określony zbiór zmiennych do zmiennych działania.</span><span class="sxs-lookup"><span data-stu-id="e9178-192">Adds the specified collection of variables to the activity’s variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>