<Type Name="WorkflowApplicationUnhandledExceptionEventArgs" FullName="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5eb77cd74941a05f413279105a2d6abe2be639ba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36716441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationUnhandledExceptionEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationUnhandledExceptionEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationUnhandledExceptionEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationUnhandledExceptionEventArgs = class&#xA;    inherit WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d7907-101">Zawiera informacje o Wystąpił nieobsługiwany wyjątek, który wystąpił w wystąpieniu przepływu pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7907-101">Provides information about an unhandled exception that occurred in a workflow instance.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7907-102">Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-102">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="d7907-103">Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="d7907-103">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="d7907-104">Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-104">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7907-105">Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d7907-105">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="d7907-106">Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="d7907-106">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="d7907-107"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.</span><span class="sxs-lookup"><span data-stu-id="d7907-107">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionSource">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ExceptionSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ExceptionSource" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSource As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ExceptionSource { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSource : System.Activities.Activity" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7907-108">Pobiera działania, który jest źródłem nieobsługiwany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-108">Gets the activity that is the source of the unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7907-109">Działanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-109">An activity.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7907-110">Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-110">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="d7907-111">Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="d7907-111">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="d7907-112">Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-112">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7907-113">Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d7907-113">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="d7907-114">Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="d7907-114">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="d7907-115"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.</span><span class="sxs-lookup"><span data-stu-id="d7907-115">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionSourceInstanceId">
      <MemberSignature Language="C#" Value="public string ExceptionSourceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExceptionSourceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSourceInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExceptionSourceInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSourceInstanceId : string" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7907-116">Pobiera unikatowy identyfikator wystąpienia działania, który jest źródłem nieobsługiwany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-116">Gets the unique identifier of the activity instance that is the source of the unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7907-117">Identyfikator wystąpienia działania, który jest źródłem nieobsługiwany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-117">An identifier of the activity instance that is the source of the unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7907-118">Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-118">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="d7907-119">Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="d7907-119">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="d7907-120">Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-120">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7907-121">Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d7907-121">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="d7907-122">Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="d7907-122">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="d7907-123"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.</span><span class="sxs-lookup"><span data-stu-id="d7907-123">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public Exception UnhandledException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception UnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ UnhandledException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Exception" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d7907-124">Pobiera <see cref="T:System.Exception" /> który został obsłużony przez wystąpienie przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-124">Gets the <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d7907-125">
            <see cref="T:System.Exception" /> Który został obsłużony przez wystąpienie przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7907-125">The <see cref="T:System.Exception" /> that was unhandled by the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7907-126">Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-126">If an exception is thrown by an activity and is unhandled, the default behavior is to terminate the workflow instance.</span></span> <span data-ttu-id="d7907-127">Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="d7907-127">If an <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is present, it can override this default behavior.</span></span> <span data-ttu-id="d7907-128">Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="d7907-128">This handler gives the workflow host author an opportunity to provide the appropriate handling, such as custom logging, aborting the workflow, canceling the workflow, or terminating the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7907-129">Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d7907-129">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="d7907-130">Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="d7907-130">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="d7907-131"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.</span><span class="sxs-lookup"><span data-stu-id="d7907-131">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>