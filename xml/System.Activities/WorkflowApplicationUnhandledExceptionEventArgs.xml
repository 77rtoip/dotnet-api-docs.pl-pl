<Type Name="WorkflowApplicationUnhandledExceptionEventArgs" FullName="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d62132d4aed267d3c99c8c487a8e61725f259819" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343484" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationUnhandledExceptionEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationUnhandledExceptionEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationUnhandledExceptionEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationUnhandledExceptionEventArgs = class&#xA;    inherit WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o nieobsługiwanym wyjątku, który wystąpił w wystąpieniu przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i jest nieobsługiwany, domyślnym zachowaniem jest zakończenie wystąpienia przepływu pracy. W przypadku obecności programu obsługimożnazastąpićtozachowaniedomyślne.<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> Ta procedura obsługi umożliwia tworzenie przez hosta przepływu pracy odpowiedniej obsługi, takiej jak rejestrowanie niestandardowe, przerywanie przepływu pracy, Anulowanie przepływu pracy lub kończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład wywołuje przepływ pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> wywoływany jest program obsługi. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są one sprawdzane w celu podania informacji o wyjątku, a przepływ pracy zostaje zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionSource">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ExceptionSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ExceptionSource" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSource As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ExceptionSource { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSource : System.Activities.Activity" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera działanie, które jest źródłem nieobsłużonego wyjątku.</summary>
        <value>Działanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i jest nieobsługiwany, domyślnym zachowaniem jest zakończenie wystąpienia przepływu pracy. W przypadku obecności programu obsługimożnazastąpićtozachowaniedomyślne.<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> Ta procedura obsługi umożliwia tworzenie przez hosta przepływu pracy odpowiedniej obsługi, takiej jak rejestrowanie niestandardowe, przerywanie przepływu pracy, Anulowanie przepływu pracy lub kończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład wywołuje przepływ pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> wywoływany jest program obsługi. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są one sprawdzane w celu podania informacji o wyjątku, a przepływ pracy zostaje zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionSourceInstanceId">
      <MemberSignature Language="C#" Value="public string ExceptionSourceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExceptionSourceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSourceInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExceptionSourceInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSourceInstanceId : string" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator wystąpienia działania, które jest źródłem nieobsłużonego wyjątku.</summary>
        <value>Identyfikator wystąpienia działania, które jest źródłem nieobsłużonego wyjątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i jest nieobsługiwany, domyślnym zachowaniem jest zakończenie wystąpienia przepływu pracy. W przypadku obecności programu obsługimożnazastąpićtozachowaniedomyślne.<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> Ta procedura obsługi umożliwia tworzenie przez hosta przepływu pracy odpowiedniej obsługi, takiej jak rejestrowanie niestandardowe, przerywanie przepływu pracy, Anulowanie przepływu pracy lub kończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład wywołuje przepływ pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> wywoływany jest program obsługi. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są one sprawdzane w celu podania informacji o wyjątku, a przepływ pracy zostaje zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public Exception UnhandledException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception UnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ UnhandledException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Exception" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Exception" /> Pobiera, który był nieobsługiwany przez wystąpienie przepływu pracy.</summary>
        <value><see cref="T:System.Exception" /> Nieobsługiwany przez wystąpienie przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i jest nieobsługiwany, domyślnym zachowaniem jest zakończenie wystąpienia przepływu pracy. W przypadku obecności programu obsługimożnazastąpićtozachowaniedomyślne.<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> Ta procedura obsługi umożliwia tworzenie przez hosta przepływu pracy odpowiedniej obsługi, takiej jak rejestrowanie niestandardowe, przerywanie przepływu pracy, Anulowanie przepływu pracy lub kończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład wywołuje przepływ pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> wywoływany jest program obsługi. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są one sprawdzane w celu podania informacji o wyjątku, a przepływ pracy zostaje zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
