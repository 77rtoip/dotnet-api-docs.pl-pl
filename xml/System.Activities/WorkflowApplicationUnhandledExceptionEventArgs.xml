<Type Name="WorkflowApplicationUnhandledExceptionEventArgs" FullName="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5eb77cd74941a05f413279105a2d6abe2be639ba" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36716441" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowApplicationUnhandledExceptionEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationUnhandledExceptionEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationUnhandledExceptionEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationUnhandledExceptionEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationUnhandledExceptionEventArgs = class&#xA;    inherit WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o Wystąpił nieobsługiwany wyjątek, który wystąpił w wystąpieniu przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy. Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne. Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExceptionSource">
      <MemberSignature Language="C#" Value="public System.Activities.Activity ExceptionSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity ExceptionSource" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSource As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ ExceptionSource { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSource : System.Activities.Activity" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera działania, który jest źródłem nieobsługiwany wyjątek.</summary>
        <value>Działanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy. Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne. Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionSourceInstanceId">
      <MemberSignature Language="C#" Value="public string ExceptionSourceInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExceptionSourceInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExceptionSourceInstanceId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExceptionSourceInstanceId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionSourceInstanceId : string" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator wystąpienia działania, który jest źródłem nieobsługiwany wyjątek.</summary>
        <value>Identyfikator wystąpienia działania, który jest źródłem nieobsługiwany wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy. Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne. Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public Exception UnhandledException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception UnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ UnhandledException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Exception" Usage="System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Exception" /> który został obsłużony przez wystąpienie przepływu pracy.</summary>
        <value>
          <see cref="T:System.Exception" /> Który został obsłużony przez wystąpienie przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyjątek jest zgłaszany przez działanie i nie jest obsługiwany, domyślne zachowanie jest przerwanie wystąpienia przepływu pracy. Jeśli <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> program obsługi, można zastąpić to zachowanie domyślne. Ten program obsługi zapewnia Autor hosta przepływu pracy zapewnić odpowiednią obsługę, takich jak niestandardowe rejestrowania, przerwanie przepływu pracy, anulowanie przepływu pracy lub zakończenie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia wywoływanie przepływu pracy, który zgłasza wyjątek. Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> obsługi jest wywoływany. <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są kontrolowane w celu podania informacji o wyjątku, a przepływ pracy zostanie zakończony.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>