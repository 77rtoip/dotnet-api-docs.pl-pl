<Type Name="WorkflowApplicationIdleEventArgs" FullName="System.Activities.WorkflowApplicationIdleEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5fc2ade60f412ba6c36e0b5d7b8319db1439ed5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337874" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowApplicationIdleEventArgs : System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationIdleEventArgs extends System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationIdleEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationIdleEventArgs&#xA;Inherits WorkflowApplicationEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationIdleEventArgs : System::Activities::WorkflowApplicationEventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationIdleEventArgs = class&#xA;    inherit WorkflowApplicationEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.WorkflowApplicationEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o wystąpieniu przepływu pracy, który jest bezczynny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu sprawdza, <xref:System.Activities.WorkflowApplicationIdleEventArgs> czy przeszedł <xref:System.Activities.WorkflowApplication.Idle%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia. W tym przykładzie przepływ pracy, który przejdzie <xref:System.Activities.Bookmark> do bezczynności `EnterGuess`, ma jedną z nazwami, `ReadInt`należącymi do działania o nazwie. Ten przykład kodu jest oparty na [sposobie: Uruchom przepływ pracy](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), który jest częścią [samouczka &#91;wprowadzenie .NET Framework 4,5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md). <xref:System.Activities.WorkflowApplication.Idle%2A> Jeśli program obsługi w tym kroku jest modyfikowany tak, aby zawierał kod z tego przykładu, wyświetlane są następujące dane wyjściowe.  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; Bookmarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; Bookmarks" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bookmarks As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ Bookmarks { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bookmarks : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję zakładek tylko do odczytu dla wystąpienia przepływu pracy.</summary>
        <value>Kolekcja zakładek tylko do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu sprawdza, <xref:System.Activities.WorkflowApplicationIdleEventArgs> czy przeszedł <xref:System.Activities.WorkflowApplication.Idle%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia. W tym przykładzie przepływ pracy, który przejdzie <xref:System.Activities.Bookmark> do bezczynności `EnterGuess`, ma jedną z nazwami, `ReadInt`należącymi do działania o nazwie. Ten przykład kodu jest oparty na [sposobie: Uruchom przepływ pracy](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), który jest częścią [samouczka &#91;wprowadzenie .NET Framework 4,5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md). <xref:System.Activities.WorkflowApplication.Idle%2A> Jeśli program obsługi w tym kroku jest modyfikowany tak, aby zawierał kod z tego przykładu, wyświetlane są następujące dane wyjściowe.  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
