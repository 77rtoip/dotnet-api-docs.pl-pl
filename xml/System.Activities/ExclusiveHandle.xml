<Type Name="ExclusiveHandle" FullName="System.Activities.ExclusiveHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6bff4d3cfd236948e461c7f3c1c0f297f2690294" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48767958" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExclusiveHandle : System.Activities.Handle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExclusiveHandle extends System.Activities.Handle" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ExclusiveHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ExclusiveHandle&#xA;Inherits Handle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExclusiveHandle : System::Activities::Handle" />
  <TypeSignature Language="F#" Value="type ExclusiveHandle = class&#xA;    inherit Handle" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Handle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3956c-101">Dodaje do zakładki, która umożliwia dostęp do podzbioru uchwytów zakres, z wyłączeniem uchwyty, które nie są wymagane dodatkowe informacje.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3956c-101">Adds supplementary information to a bookmark that enables it to access a subset of its scope handles, excluding handles that are not required.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExclusiveHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExclusiveHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3956c-102">Tworzy nowe wystąpienie klasy <see cref="T:System.Activities.ExclusiveHandle" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-102">Creates a new instance of the <see cref="T:System.Activities.ExclusiveHandle" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected override void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="exclusiveHandle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3956c-103">Środowisko, w którym zostanie utworzona uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-103">The environment in which the handle is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3956c-104">Tworzy listę domyślne <see cref="T:System.Activities.BookmarkScopeHandle" /> obiektów ze zmiennych dojście w kontekście inicjalizacji określone dojście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-104">Creates a list of default <see cref="T:System.Activities.BookmarkScopeHandle" /> objects from handle variables in the specified handle initialization context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterBookmarkScope">
      <MemberSignature Language="C#" Value="public void RegisterBookmarkScope (System.Activities.NativeActivityContext context, System.Activities.BookmarkScopeHandle bookmarkScopeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterBookmarkScope(class System.Activities.NativeActivityContext context, class System.Activities.BookmarkScopeHandle bookmarkScopeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterBookmarkScope(System::Activities::NativeActivityContext ^ context, System::Activities::BookmarkScopeHandle ^ bookmarkScopeHandle);" />
      <MemberSignature Language="F#" Value="member this.RegisterBookmarkScope : System.Activities.NativeActivityContext * System.Activities.BookmarkScopeHandle -&gt; unit" Usage="exclusiveHandle.RegisterBookmarkScope (context, bookmarkScopeHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="bookmarkScopeHandle" Type="System.Activities.BookmarkScopeHandle" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3956c-105">Środowisko, w którym zostanie utworzona uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-105">The environment in which the handle is created.</span>
          </span>
        </param>
        <param name="bookmarkScopeHandle">
          <span data-ttu-id="3956c-106">Token używany do identyfikowania i dostęp do grupy zakładek, które działają w ramach tego samego protokołu w ramach operacji działania przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-106">The token used to identify and access a group of bookmarks that operate under the same protocol in a workflow activity operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3956c-107">Dodaje uchwyt zakresu zakładką, aby <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> z <see cref="T:System.Activities.BookmarkScopeHandle" /> obiektów przy użyciu określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-107">Adds the specified bookmark scope handle to the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects using the specified context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3956c-108">Jeśli ta metoda jest wywoływana po utworzeniu zakładki w ramach tego wyłączne zakresu <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="3956c-108">If this method is called after a bookmark has been created under this exclusive scope, a <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredBookmarkScopes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.BookmarkScopeHandle&gt; RegisteredBookmarkScopes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredBookmarkScopes As ReadOnlyCollection(Of BookmarkScopeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ RegisteredBookmarkScopes { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::BookmarkScopeHandle ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredBookmarkScopes : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt;" Usage="System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.BookmarkScopeHandle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3956c-109">Pobiera nową lub istniejącą <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> z <see cref="T:System.Activities.BookmarkScopeHandle" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-109">Gets a new or existing <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Activities.BookmarkScopeHandle" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3956c-110">Kolekcja tylko do odczytu obsługuje zakresu zakładki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-110">A read-only collection of bookmark scope handles.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reinitialize">
      <MemberSignature Language="C#" Value="public void Reinitialize (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reinitialize(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reinitialize (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reinitialize(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Reinitialize : System.Activities.NativeActivityContext -&gt; unit" Usage="exclusiveHandle.Reinitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3956c-111">Środowisko, w którym zostanie utworzona uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-111">The environment in which the handle is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3956c-112">Ustawia zakres zarejestrowanych zakładki obsługuje domyślne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3956c-112">Sets the registered bookmark scope handles back to the defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3956c-113">Jeśli ta metoda jest wywoływana, gdy istnieją zakładki zarejestrowany z dojściem wyłączne <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="3956c-113">If this method is called when there are bookmarks registered with the exclusive handle, a <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>