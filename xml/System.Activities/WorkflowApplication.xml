<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a306551266053970f49f8a237037d8cb9dfdf4c8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343657" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <TypeSignature Language="F#" Value="type WorkflowApplication = class&#xA;    inherit WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ee81e-101">Dostarcza hosta dla pojedynczego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-101">Provides a host for a single instance of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-102"><xref:System.Activities.WorkflowApplication> Klasa dostarcza hosta dla pojedynczego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="ee81e-103">Jest to serwer proxy do rzeczywistego wystąpienia przepływu pracy, który jest zarządzany przez środowisko uruchomieniowe przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="ee81e-104">Użytkownicy mogą nakazać środowisko uruchomieniowe przepływu pracy w celu wykonywania akcji w wystąpieniu przepływu pracy przez wywołanie odpowiednich metod <xref:System.Activities.WorkflowApplication> w obiekcie. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="ee81e-105">Jeśli żądana akcja jest nieprawidłowa, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ee81e-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="ee81e-106">Korzystając <xref:System.Activities.WorkflowApplication> z programu, można wykonać następujące zadania:</span><span class="sxs-lookup"><span data-stu-id="ee81e-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="ee81e-107">Utwórz nowe wystąpienie przepływu pracy lub Załaduj wystąpienie przepływu pracy z magazynu wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="ee81e-108">Podaj rozszerzenia, które mają być używane przez działania w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="ee81e-109">Kontroluj wykonywanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="ee81e-110">Wznów zakładkę utworzoną przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="ee81e-111">Utrwalanie lub zwalnianie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="ee81e-112">Powiadomienia o zdarzeniach cyklu życia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-113">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-114">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-115">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-116">Tworzy nowe wystąpienie <see cref="T:System.Activities.WorkflowApplication" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ee81e-117">Definicja przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-117">The workflow definition.</span></span></param>
        <summary><span data-ttu-id="ee81e-118">Tworzy nowe wystąpienie <see cref="T:System.Activities.WorkflowApplication" /> klasy z określoną definicją przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-119">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-120">Wystąpienie jest zbudowane przy użyciu definicji przepływu pracy składającej się z `DiceRoll` pojedynczego działania. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="ee81e-121">`DiceRoll` Działanie ma dwa argumenty wyjściowe, które reprezentują wyniki operacji rzutowania indeksu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="ee81e-122">Po zakończeniu przepływu pracy dane wyjściowe są pobierane w programie <xref:System.Activities.WorkflowApplication.Completed%2A> obsługi, a w konsoli są wyświetlane następujące dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="ee81e-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ee81e-123">Definicja przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-123">The workflow definition.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-124">Tożsamość definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-124">The definition identity.</span></span></param>
        <summary><span data-ttu-id="ee81e-125">Tworzy nowe wystąpienie <see cref="T:System.Activities.WorkflowApplication" /> klasy z określoną definicją przepływu pracy i tożsamością definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ee81e-126">Definicja przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-126">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="ee81e-127">Wartości argumentów zdefiniowanych w działaniu głównym definicji przepływu pracy, które są poprzedzone przez nazwę argumentu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="ee81e-128">Tworzy nowe wystąpienie <see cref="T:System.Activities.WorkflowApplication" /> klasy, która używa określonych wartości definicji przepływu pracy i argumentów.</span><span class="sxs-lookup"><span data-stu-id="ee81e-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-129">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-130">Wystąpienie jest tworzone przy użyciu definicji przepływu pracy składającej się z `Divide` pojedynczego działania, które przyjmuje dwa argumenty wejściowe, i słownik argumentów wejściowych zawierających dwie wartości, które mają być przekazane przez nazwę argumentu. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="ee81e-131">Zdarzenia cyklu życia przepływu pracy są obsługiwane, a przepływ pracy jest wywoływany z wywołaniem <xref:System.Activities.WorkflowApplication.Run%2A>do.</span><span class="sxs-lookup"><span data-stu-id="ee81e-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-132">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ee81e-133">Definicja przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-133">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="ee81e-134">Tożsamość definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-134">The definition identity.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-135">Wartości argumentów zdefiniowanych w działaniu głównym definicji przepływu pracy, które są poprzedzone przez nazwę argumentu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="ee81e-136">Tworzy nowe wystąpienie <see cref="T:System.Activities.WorkflowApplication" /> klasy, która używa określonych wartości definicji przepływu pracy i argumentów oraz tożsamości definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-137">Powiadamia środowisko uruchomieniowe przepływu pracy, że to wystąpienie przepływu pracy powinno zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="ee81e-137">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-138">Gdy przepływ pracy hostowany przez <xref:System.Activities.WorkflowApplication> jest przerywany <xref:System.Activities.WorkflowApplication.Aborted%2A> , <xref:System.Activities.WorkflowApplication.Completed%2A> program obsługi jest wywoływany, a procedura obsługi nie zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="workflowApplication.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-139">Powiadamia środowisko uruchomieniowe przepływu pracy, że to wystąpienie przepływu pracy powinno zostać przerwane.</span><span class="sxs-lookup"><span data-stu-id="ee81e-139">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-140">Gdy przepływ pracy hostowany przez <xref:System.Activities.WorkflowApplication> jest przerywany <xref:System.Activities.WorkflowApplication.Aborted%2A> , <xref:System.Activities.WorkflowApplication.Completed%2A> program obsługi jest wywoływany, a procedura obsługi nie zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-141">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-142">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-143">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Abort%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="ee81e-144">Gdy przepływ pracy zostanie przerwany, następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="override this.Abort : string -&gt; unit" Usage="workflowApplication.Abort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-145">Powód przerwania żądania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-145">The reason for the request to abort.</span></span></param>
        <summary><span data-ttu-id="ee81e-146">Powiadamia środowisko uruchomieniowe przepływu pracy, że to wystąpienie przepływu pracy powinno zostać przerwane z określonego powodu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-147">Gdy przepływ pracy hostowany przez <xref:System.Activities.WorkflowApplication> jest przerywany <xref:System.Activities.WorkflowApplication.Aborted%2A> , <xref:System.Activities.WorkflowApplication.Completed%2A> program obsługi jest wywoływany, a procedura obsługi nie zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-148">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-149">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-150">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Abort%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="ee81e-151">Gdy przepływ pracy zostanie przerwany, następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Aborted : Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Aborted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-152">Pobiera lub ustawia <see cref="T:System.Action`1" /> , który jest wywoływany, gdy wystąpienie przepływu pracy zostanie przerwane.</span><span class="sxs-lookup"><span data-stu-id="ee81e-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span></span></summary>
        <value><span data-ttu-id="ee81e-153">Akcja, która jest wywoływana, gdy wystąpienie przepływu pracy zostało przerwane.</span><span class="sxs-lookup"><span data-stu-id="ee81e-153">The action that is invoked when the workflow instance is aborted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-154">Gdy przepływ pracy hostowany przez <xref:System.Activities.WorkflowApplication> jest przerywany <xref:System.Activities.WorkflowApplication.Aborted%2A> , <xref:System.Activities.WorkflowApplication.Completed%2A> program obsługi jest wywoływany, a procedura obsługi nie zostanie wywołana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-155">Poniższy przykład kodu sprawdza, <xref:System.Activities.WorkflowApplicationAbortedEventArgs> czy przekazano <xref:System.Activities.WorkflowApplication.Aborted%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia i wyświetla informacje o tym, dlaczego przepływ pracy został przerwany.</span><span class="sxs-lookup"><span data-stu-id="ee81e-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="member this.AddInitialInstanceValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="workflowApplication.AddInitialInstanceValues writeOnlyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues"><span data-ttu-id="ee81e-156">Wartości metadanych do uwzględnienia w pierwszej trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-156">The metadata values to be included with the first persistence.</span></span></param>
        <summary><span data-ttu-id="ee81e-157">Określa wartości metadanych wystąpienia, które są uwzględnione w pierwszej trwałości nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-158">Anuluje przepływ pracy asynchronicznie przy <see cref="T:System.IAsyncResult" /> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-159">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-159">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ee81e-160">Metoda, która ma być wywoływana po zakończeniu operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-160">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-161">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-161">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-162">Anuluje wystąpienie przepływu pracy asynchronicznie przy użyciu <see cref="T:System.AsyncCallback" /> określonego i dostarczonego przez użytkownika stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-163">Odwołanie do asynchronicznej operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-163">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-164">Aby określić, czy operacja anulowania zakończyła się <xref:System.Activities.WorkflowApplication.EndCancel%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="ee81e-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-166">Jeśli <xref:System.Activities.WorkflowApplication.EndCancel%2A> jest wywoływana przed ukończeniem operacji anulowania, zostaje ona zablokowana do momentu zakończenia operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="ee81e-167">Domyślnie operacja Cancel musi zakończyć się w ciągu 30 sekund lub <xref:System.TimeoutException> od. <xref:System.Activities.WorkflowApplication.EndCancel%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-168">Ta metoda anuluje przepływ pracy asynchronicznie przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-169">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-169">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-170">Interwał, w którym operacja anulowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-171">Metoda, która ma być wywoływana po zakończeniu operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-171">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-172">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-172">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-173">Anuluje wystąpienie przepływu pracy asynchronicznie przy użyciu określonego interwału limitu czasu <see cref="T:System.AsyncCallback" />, i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-174">Odwołanie do asynchronicznej operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-174">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-175">Aby określić, czy operacja anulowania zakończyła się <xref:System.Activities.WorkflowApplication.EndCancel%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="ee81e-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A>może być wywoływana z wnętrza lub spoza metody określonej w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-177">Jeśli <xref:System.Activities.WorkflowApplication.EndCancel%2A> jest wywoływana przed ukończeniem operacji anulowania, zostaje ona zablokowana do momentu zakończenia operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="ee81e-178">Jeśli operacja anulowania nie zostanie zakończona w interwale określonym przez `timeOut` parametr <xref:System.TimeoutException> , zostanie zgłoszony z <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee81e-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-179">Ta metoda anuluje przepływ pracy asynchronicznie przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-180">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-180">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-181">Tworzy domyślnego właściciela wystąpienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-182">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-182">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-183">Tożsamość definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-183">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ee81e-184">Filtr tożsamości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-184">The identity filter.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-185">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-185">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-186">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-186">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-187">Tworzy domyślnego właściciela wystąpienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym magazynem wystąpień, tożsamości definicji, filtru tożsamości, wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-188">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-188">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-189">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-189">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-190">Tożsamość definicji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-190">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ee81e-191">Filtr tożsamości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-191">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-192">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-193">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-193">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-194">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-194">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-195">Tworzy domyślnego właściciela wystąpienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym magazynem wystąpień, tożsamości definicji, filtru tożsamości, interwału limitu czasu, wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-196">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-196">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-197">Usuwa domyślnego właściciela wystąpienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-198">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-198">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-199">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-199">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-200">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-200">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-201">Usuwa domyślnego właściciela wystąpienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym magazynem wystąpień, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-202">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-202">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-203">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-203">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-204">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-205">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-205">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-206">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-206">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-207">Usuwa domyślnego właściciela wystąpienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektu asynchronicznego z określonym magazynem wystąpień, interwału limitu czasu, wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-208">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-208">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-209">Pobiera właściciela wystąpienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-210">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-210">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ee81e-211">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-211">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-212">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-212">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-213">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-213">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-214">Pobiera właściciela wystąpienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym identyfikatorem wystąpienia, magazynem wystąpień, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-215">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-215">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-216">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-216">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ee81e-217">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-217">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-218">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-219">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-219">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-220">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-220">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-221">Pobiera właściciela wystąpienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym identyfikatorem wystąpienia, magazynem wystąpień, interwałem limitu czasu, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-222">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-222">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-223">Pobiera właściciela wystąpienia możliwy do uruchomienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-224">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-224">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-225">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-225">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-226">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-226">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-227">Pobiera właściciela wystąpienia możliwy do uruchomienia asynchronicznie za pomocą <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym magazynem wystąpień, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-228">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-228">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-229">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-229">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-230">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-231">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-231">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-232">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-232">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-233">Pobiera właściciela wystąpienia możliwy do uruchomienia asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektu asynchronicznego z określonym magazynem wystąpień, interwału limitu czasu, wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-234">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-234">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-235">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-236">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-236">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-237">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-237">The instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-238">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-238">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-239">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-239">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-240">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym wystąpieniem, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-241">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-241">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-242">Globalnie unikatowy identyfikator 128-bitowy dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-242">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-243">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-243">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-244">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-244">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-245">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu określonego identyfikatora wystąpienia, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-246">Stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-246">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-247">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-247">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ee81e-248">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-248">The update map.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-249">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-249">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-250">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-250">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-251">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym wystąpieniem, mapą aktualizacji, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-252">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-252">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-253">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-253">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-254">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-255">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-255">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-256">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-256">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-257">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym wystąpieniem, interwałem limitu czasu, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-258">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-258">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-259">Globalnie unikatowy identyfikator 128-bitowy dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-259">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-260">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-261">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-261">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-262">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-262">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-263">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu określonego identyfikatora wystąpienia, okresu limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-264">Stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-264">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-265">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-265">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ee81e-266">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-266">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-267">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-268">Metoda, która ma być wywoływana po zakończeniu operacji rozpoczęcia ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-268">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-269">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-269">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-270">Ładuje przepływ pracy asynchronicznie z magazynu wystąpień przy użyciu <see cref="T:System.IAsyncResult" /> asynchronicznego wzorca projektowego z określonym wystąpieniem, mapą aktualizacji, interwałem limitu czasu, wywołaniem zwrotnym i stanem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-271">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-271">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-272">Inicjuje proces asynchroniczny ładowania wystąpienia przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />elementu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-273">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ee81e-274">Metoda, która ma być wywoływana po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-274">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-275">Opcjonalny obiekt specyficzny dla aplikacji zawierający informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-275">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-276">Inicjuje operację ładowania wystąpienia przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />elementu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <returns><span data-ttu-id="ee81e-277">Odwołanie do operacji asynchronicznej</span><span class="sxs-lookup"><span data-stu-id="ee81e-277">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-278">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ee81e-279">Aby określić, czy operacja ładowania zakończyła się <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>pomyślnie, wywołaj.</span><span class="sxs-lookup"><span data-stu-id="ee81e-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="ee81e-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-281">Jeśli <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-282">Domyślnie operacja Resume musi zakończyć się w ciągu 30 sekund lub w przeciwnym razie <xref:System.TimeoutException> jest zgłaszany <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>z.</span><span class="sxs-lookup"><span data-stu-id="ee81e-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-283">Ta metoda ładuje przepływ pracy asynchronicznie przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-284">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-284">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-285">Interwał, w którym operacja ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-286">Metoda, która ma być wywoływana po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-286">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-287">Opcjonalny obiekt specyficzny dla aplikacji zawierający informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-287">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-288">Inicjuje operację ładowania wystąpienia przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> użyciem określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="ee81e-289">Odwołanie do operacji asynchronicznej</span><span class="sxs-lookup"><span data-stu-id="ee81e-289">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-290">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ee81e-291">Aby określić, czy operacja ładowania zakończyła się <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>pomyślnie, wywołaj.</span><span class="sxs-lookup"><span data-stu-id="ee81e-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="ee81e-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-293">Jeśli <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-294">Jeśli operacja ładowania nie zostanie zakończona w określonym limicie czasu, <xref:System.TimeoutException> z. <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-295">Ta metoda ładuje przepływ pracy asynchronicznie przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-296">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-296">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-297">Utrwala wystąpienie przepływu pracy w magazynie wystąpień asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-298">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-298">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="ee81e-299">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-300">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ee81e-301">Metoda, która ma być wywoływana po zakończeniu operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-301">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-302">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-302">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-303">Utrwala wystąpienie przepływu pracy w magazynie wystąpień asynchronicznie przy użyciu określonej metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-304">Odwołanie do asynchronicznej operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-304">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-305">Aby określić, czy operacja utrwalania zakończyła <xref:System.Activities.WorkflowApplication.EndPersist%2A>się pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="ee81e-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A>może być wywoływana z wnętrza lub poza metodę, do której odwołuje `callback` się parametr.</span><span class="sxs-lookup"><span data-stu-id="ee81e-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-307">Jeśli <xref:System.Activities.WorkflowApplication.EndPersist%2A> jest wywoływana przed ukończeniem operacji utrwalania, zostanie ona zablokowana do momentu zakończenia operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="ee81e-308">Jeśli operacja utrwalania nie zakończy się w ciągu 30 sekund <xref:System.TimeoutException> , zgłaszany <xref:System.Activities.WorkflowApplication.EndPersist%2A>jest z.</span><span class="sxs-lookup"><span data-stu-id="ee81e-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-309">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-310">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ee81e-311">Ta metoda utrzymuje przepływ pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-312">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-312">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-313">Interwał, w którym operacja utrwalania musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-314">Metoda, która ma być wywoływana po zakończeniu operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-314">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-315">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-315">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-316">Utrwala wystąpienie przepływu pracy w magazynie wystąpień asynchronicznie przy użyciu określonego interwału limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-317">Odwołanie do asynchronicznej operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-317">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-318">Aby określić, czy operacja utrwalania zakończyła <xref:System.Activities.WorkflowApplication.EndPersist%2A>się pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="ee81e-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A>może być wywoływana z wnętrza lub poza metodę, do której odwołuje `callback` się parametr.</span><span class="sxs-lookup"><span data-stu-id="ee81e-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-320">Jeśli <xref:System.Activities.WorkflowApplication.EndPersist%2A> jest wywoływana przed ukończeniem operacji utrwalania, zostanie ona zablokowana do momentu zakończenia operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="ee81e-321">Jeśli operacja utrwalania nie zostanie zakończona w określonym interwale limitu czasu, <xref:System.TimeoutException> z. <xref:System.Activities.WorkflowApplication.EndPersist%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-322">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-323">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ee81e-324">Ta metoda utrwala wystąpienie przepływu pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-325">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-325">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-326">Powoduje zainicjowanie operacji asynchronicznej w celu wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-326">Initiates an asynchronous operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ee81e-327">Zakładka, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-327">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-328">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-329">Metoda, która ma być wywoływana po zakończeniu operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-329">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-330">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-330">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-331">Powoduje zainicjowanie operacji wznawiania zakładki przy użyciu określonej wartości, metody wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-332">Odwołanie do operacji wznawiania zakładki asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-332">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-333">Aby określić, czy operacja wznowienia zakończyła <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>się pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="ee81e-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-335">Jeśli <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-336">Domyślnie operacja Resume musi zakończyć się w ciągu 30 sekund lub w przeciwnym razie <xref:System.TimeoutException> jest zgłaszany <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>z.</span><span class="sxs-lookup"><span data-stu-id="ee81e-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-337">Ta metoda służy do asynchronicznego wznawiania zakładki przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-338">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-338">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ee81e-339">Nazwa zakładki, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-339">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-340">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-341">Metoda, która jest wywoływana po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-341">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-342">Stan wykonywania przepływu pracy, który został zachowany przez wątek wywołujący przed rozpoczęciem operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="ee81e-343">Powoduje zainicjowanie operacji asynchronicznej w celu wznowienia zakładki o określonej nazwie przy użyciu określonej wartości, metody wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span></span> <span data-ttu-id="ee81e-344">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-345">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-345">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-346">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ee81e-347">Zakładka, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-347">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-348">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-349">Interwał, w którym operacja wznawiania musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-350">Metoda, która ma być wywoływana po zakończeniu operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-350">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-351">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-351">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-352">Powoduje zainicjowanie operacji wznawiania zakładki przy użyciu określonej wartości, interwału limitu czasu, metody wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-353">Odwołanie do operacji wznawiania zakładki asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-353">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-354">Aby określić, czy operacja wznowienia zakończyła <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>się pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="ee81e-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-356">Jeśli <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-357">Jeśli operacja wznowienia nie zostanie zakończona w określonym limicie czasu a <xref:System.TimeoutException> zostanie zgłoszony z. <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-358">Ta metoda służy do asynchronicznego wznawiania zakładki przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-359">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-359">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ee81e-360">Nazwa zakładki, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-360">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-361">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-362">Przedział czasu, w którym należy wznowić zakładkę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-362">The time interval during which the bookmark must be resumed.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-363">Metoda, która jest wywoływana po zakończeniu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-363">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-364">Stan wykonywania przepływu pracy, który został zapisany przez wątek wywołujący przed rozpoczęciem operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="ee81e-365">Powoduje zainicjowanie operacji asynchronicznej w celu wznowienia zakładki o określonej nazwie przy użyciu określonej wartości, interwału limitu czasu, metody wywołania zwrotnego i stanu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span></span> <span data-ttu-id="ee81e-366">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-367">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-367">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-368">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-369">Uruchamia lub wznawia wystąpienie przepływu pracy asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-370">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-370">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ee81e-371">Metoda, która ma być wywoływana po zakończeniu operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-371">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-372">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-372">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-373">Uruchamia lub wznawia wystąpienie przepływu pracy asynchronicznie przy użyciu określonej metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-374">Odwołanie do asynchronicznej operacji przebiegu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-374">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-375">Aby określić, czy operacja uruchamiania zakończyła się <xref:System.Activities.WorkflowApplication.EndRun%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="ee81e-376"><xref:System.Activities.WorkflowApplication.EndRun%2A>może być wywoływana z wnętrza lub poza metodę, do której odwołuje `callback` się parametr.</span><span class="sxs-lookup"><span data-stu-id="ee81e-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-377">Jeśli <xref:System.Activities.WorkflowApplication.EndRun%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-378">Domyślnie operacja Resume musi zakończyć się w ciągu 30 sekund lub <xref:System.TimeoutException> od. <xref:System.Activities.WorkflowApplication.EndRun%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-379">Ta metoda uruchamia lub wznawia przepływ pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-380">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-380">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-381">Interwał, w którym operacja wznawiania musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-382">Metoda, która ma być wywoływana po zakończeniu operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-382">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-383">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-383">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-384">Uruchamia lub wznawia wystąpienie przepływu pracy asynchronicznie przy użyciu określonego interwału limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-385">Odwołanie do asynchronicznej operacji przebiegu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-385">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-386">Aby określić, czy operacja uruchamiania zakończyła się <xref:System.Activities.WorkflowApplication.EndRun%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="ee81e-387"><xref:System.Activities.WorkflowApplication.EndRun%2A>może być wywoływana z wnętrza lub poza odwołaniem metody w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-388">Jeśli <xref:System.Activities.WorkflowApplication.EndRun%2A> jest wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ee81e-389">Jeśli operacja wznowienia nie zostanie zakończona w określonym limicie czasu a <xref:System.TimeoutException> zostanie zgłoszony z. <xref:System.Activities.WorkflowApplication.EndRun%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-390">Ta metoda uruchamia lub wznawia przepływ pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-391">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-391">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-392">Kończy wystąpienie przepływu pracy asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektu asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-393">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-393">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-394">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-394">The reason the workflow instance is terminated.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-395">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-396">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-396">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-397">Kończy wystąpienie przepływu pracy asynchronicznie przy użyciu określonego wyjątku, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-398">Odwołanie do bieżącej <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-399">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-400">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-401">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndTerminate%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ee81e-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>może być wywoływana z wnętrza lub poza metodę, do której odwołuje `callback` się parametr.</span><span class="sxs-lookup"><span data-stu-id="ee81e-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-403">Jeśli <xref:System.Activities.WorkflowApplication.EndTerminate%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ee81e-404">Domyślnie <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja musi zakończyć się w ciągu 30 sekund <xref:System.TimeoutException> lub od <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee81e-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-405">Ta metoda przerywa przepływ pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-406">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-406">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-407">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-407">The reason for terminating the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-408">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-409">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-409">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-410">Kończy wystąpienie przepływu pracy asynchronicznie przy użyciu określonego komunikatu o błędzie, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-411">Odwołanie do bieżącej <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-412">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-413">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-414">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndTerminate%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ee81e-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>może być wywoływana z wnętrza lub poza odwołaniem metody w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-416">Jeśli <xref:System.Activities.WorkflowApplication.EndTerminate%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ee81e-417">Domyślnie <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja musi zakończyć się w ciągu 30 sekund <xref:System.TimeoutException> lub od <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee81e-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-418">Ta metoda przerywa wystąpienie przepływu pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-419">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-419">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-420">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-420">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-421">Interwał, w którym <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacja musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-422">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-423">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-423">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-424">Kończy wystąpienie przepływu pracy asynchronicznie przy użyciu określonego wyjątku, interwału limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-425">Odwołanie do bieżącej <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-426">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-427">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-428">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndTerminate%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ee81e-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>może być wywoływana z wnętrza lub poza `callback` metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ee81e-430">Jeśli <xref:System.Activities.WorkflowApplication.EndTerminate%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ee81e-431">Jeśli operacja nie zostanie zakończona w określonym przedziale czasu a <xref:System.TimeoutException> zostanie zgłoszony. <xref:System.Activities.WorkflowApplication.BeginTerminate%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="ee81e-432">To lub wszelkie inne wyjątki występujące podczas <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> procesu są generowane z programu. <xref:System.Activities.WorkflowApplication.EndTerminate%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-433">Ta metoda przerywa przepływ pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-434">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-434">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-435">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-435">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-436">Interwał, w którym <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacja musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-437">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-438">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-438">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-439">Kończy wystąpienie przepływu pracy asynchronicznie przy użyciu określonego komunikatu o błędzie, interwału limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-440">Odwołanie do operacji asynchronicznej <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-441">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-442">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-443">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndTerminate%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ee81e-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A>może być wywoływana z wnętrza lub poza odwołaniem metody w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-445">Jeśli <xref:System.Activities.WorkflowApplication.EndTerminate%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ee81e-446">Jeśli operacja nie zakończy się w określonym limicie czasu a <xref:System.TimeoutException> zostanie zgłoszony z <xref:System.Activities.WorkflowApplication.EndTerminate%2A>. <xref:System.Activities.WorkflowApplication.BeginTerminate%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-447">Ta metoda przerywa wystąpienie przepływu pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-448">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-448">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-449">Utrzymuje i usuwa wystąpienie przepływu pracy asynchronicznie przy użyciu <see cref="T:System.IAsyncResult" /> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-450">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-450">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 <span data-ttu-id="ee81e-451">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-452">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ee81e-453">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-454">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-454">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-455">Utrzymuje i usuwa wystąpienie przepływu pracy asynchronicznie przy użyciu określonej metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-456">Odwołanie do operacji asynchronicznej <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-457">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndUnload%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="ee81e-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A>może być wywoływana z wnętrza lub poza odwołaniem metody w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-459">Jeśli <xref:System.Activities.WorkflowApplication.EndUnload%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginUnload%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginUnload%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="ee81e-460">Domyślnie <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operacja musi zakończyć się w ciągu 30 sekund <xref:System.TimeoutException> lub od <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span><span class="sxs-lookup"><span data-stu-id="ee81e-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-461">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-462">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ee81e-463">Ta metoda utrzymuje i usuwa wystąpienie przepływu pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-464">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-464">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-465">Interwał, w którym <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operacja musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ee81e-466">Metoda, która ma być wywoływana po <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ee81e-467">Opcjonalny obiekt specyficzny dla aplikacji, który zawiera informacje o operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-467">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-468">Utrzymuje i usuwa wystąpienie przepływu pracy asynchronicznie przy użyciu określonego interwału limitu czasu, metody wywołania zwrotnego i stanu dostarczonego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ee81e-469">Odwołanie do operacji asynchronicznej <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-470">Aby określić, czy <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operacja zakończyła się <xref:System.Activities.WorkflowApplication.EndUnload%2A>pomyślnie, wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="ee81e-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A>może być wywoływana z wnętrza lub poza odwołaniem metody w `callback` parametrze.</span><span class="sxs-lookup"><span data-stu-id="ee81e-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ee81e-472">Jeśli <xref:System.Activities.WorkflowApplication.EndUnload%2A> jest wywoływana <xref:System.Activities.WorkflowApplication.BeginUnload%2A> przed zakończeniem operacji <xref:System.Activities.WorkflowApplication.BeginUnload%2A> , jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="ee81e-473">Jeśli operacja nie zakończy się w określonym limicie czasu a <xref:System.TimeoutException> zostanie zgłoszony z <xref:System.Activities.WorkflowApplication.EndUnload%2A>. <xref:System.Activities.WorkflowApplication.BeginUnload%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="ee81e-474">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-475">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ee81e-476">Ta metoda utrzymuje i zwalnia wystąpienie przepływu pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-477">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-477">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-478">Anuluje wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-478">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-479">Ta metoda służy do planowania anulowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ee81e-480">Aby otrzymywać powiadomienia po zakończeniu anulowania, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-481">Domyślnie operacja anulowania musi zakończyć się w ciągu 30 sekund lub w wyniku <xref:System.TimeoutException> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="workflowApplication.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-482">Anuluje wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-482">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-483">Ta metoda służy do planowania anulowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ee81e-484">Aby otrzymywać powiadomienia po zakończeniu anulowania, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ee81e-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="ee81e-485">Domyślnie operacja anulowania musi zakończyć się w ciągu 30 sekund lub w wyniku <xref:System.TimeoutException> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-486">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-487">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-488">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Cancel%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="ee81e-489">Gdy przepływ pracy zostanie anulowany, następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Cancel : TimeSpan -&gt; unit" Usage="workflowApplication.Cancel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-490">Interwał, w którym operacja anulowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-491">Anuluje wystąpienie przepływu pracy przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-491">Cancels the workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-492">Ta metoda służy do planowania anulowania wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ee81e-493">Aby otrzymywać powiadomienia po zakończeniu anulowania, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="ee81e-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-494">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-495">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-496">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Cancel%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="ee81e-497">Gdy przepływ pracy zostanie anulowany, następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Completed : Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Completed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-498">Pobiera lub ustawia wartość <see cref="T:System.Action`1" /> , która jest wywoływana po zakończeniu wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span></span></summary>
        <value><span data-ttu-id="ee81e-499">Akcja, która jest wywoływana po zakończeniu wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-499">The action that is invoked when the workflow instance is complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-500">Poniższy przykład kodu sprawdza, <xref:System.Activities.WorkflowApplicationCompletedEventArgs> czy przeszedł <xref:System.Activities.WorkflowApplication.Completed%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia i wyświetla informacje o ukończeniu przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-501">Tworzy domyślnego właściciela wystąpienia dla przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-501">Creates a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-502">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-502">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-503">Tożsamość definicji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-503">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ee81e-504">Filtr tożsamości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-504">The identity filter.</span></span></param>
        <summary><span data-ttu-id="ee81e-505">Tworzy domyślnego właściciela wystąpienia przepływu pracy przy użyciu określonego magazynu wystąpienia, tożsamości definicji i filtru tożsamości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-506">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-506">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ee81e-507">Tożsamość definicji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-507">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ee81e-508">Filtr tożsamości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-508">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-509">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-509">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-510">Tworzy domyślnego właściciela wystąpienia przepływu pracy przy użyciu określonego magazynu wystąpienia, tożsamości definicji i filtru tożsamości oraz interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-511">Usuwa domyślnego właściciela wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-511">Deletes a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-512">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-512">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="ee81e-513">Usuwa domyślnego właściciela wystąpienia przepływu pracy z określonym magazynem wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-513">Deletes a default instance owner for the workflow with specified instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-514">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-514">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-515">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-515">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-516">Usuwa domyślnego właściciela wystąpienia przepływu pracy z określonym magazynem wystąpień i interwałem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancel : IAsyncResult -&gt; unit" Usage="workflowApplication.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-517">Asynchroniczna operacja anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-517">The asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-518">Czeka na zakończenie oczekującej asynchronicznej operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-518">Waits for the pending asynchronous cancel operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-519">Ta metoda określa, czy <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-520">Jeśli wywoływana przed zakończeniem operacji anulowania, zostaje ona zablokowana do momentu zakończenia operacji anulowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-521">Ta metoda służy do kończenia asynchronicznej operacji anulowania <xref:System.IAsyncResult> przy użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-522">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-522">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndCreateDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ee81e-523">Wynik asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="ee81e-523">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ee81e-524">Czeka na ukończenie tworzenia domyślnego właściciela wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-524">Waits for the creation of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndDeleteDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ee81e-525">Wynik asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="ee81e-525">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ee81e-526">Czeka na zakończenie usuwania domyślnego właściciela wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-526">Waits for the deletion of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ee81e-527">Wynik asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="ee81e-527">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ee81e-528">Czeka na zakończenie pobierania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-528">Waits for the instance retrieval to complete.</span></span></summary>
        <returns><span data-ttu-id="ee81e-529">Wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-529">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetRunnableInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetRunnableInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ee81e-530">Wynik asynchroniczny.</span><span class="sxs-lookup"><span data-stu-id="ee81e-530">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ee81e-531">Czeka na zakończenie asynchronicznego pobierania operacji wystąpienia możliwy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span></span></summary>
        <returns><span data-ttu-id="ee81e-532">Wynik operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-532">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoad : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-533">Asynchroniczna operacja ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-533">The asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-534">Czeka na zakończenie oczekującej asynchronicznej operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-534">Waits for the pending asynchronous load operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-535">Jeśli ta metoda jest wywoływana przed ukończeniem operacji ładowania, zostaje ona zablokowana do momentu zakończenia operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-536">Ta metoda kończy asynchroniczne ładowanie operacji przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-537">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-537">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoadRunnableInstance : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoadRunnableInstance result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-538">Odwołanie do asynchronicznej operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-538">A reference to the asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-539">Czeka na zakończenie operacji asynchronicznego ładowania wystąpienia możliwy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-539">Waits for the asynchronous load runnable instance operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-540">Ta metoda określa, czy <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-541">Jeśli wywoływana przed zakończeniem operacji ładowania, zostaje ona zablokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-542">Ta metoda ładuje przepływy pracy asynchronicznie przy użyciu <xref:System.IAsyncResult> wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-543">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-543">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.EndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-544">Asynchroniczna operacja utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-544">The asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-545">Czeka na zakończenie oczekującej asynchronicznej operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-545">Waits for the pending asynchronous persist operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-546">Ta metoda określa, czy <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-547">Jeśli wywoływana przed ukończeniem operacji utrwalania, zostanie ona zablokowana do momentu ukończenia operacji utrwalania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-548">Ta metoda wykonuje asynchroniczną operację utrwalania przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-549">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-549">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.EndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-550">Odwołanie do operacji wznawiania zakładki asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-550">A reference to the asynchronous bookmark resume operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-551">Czeka na zakończenie operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-551">Waits for a bookmark resume operation to complete.</span></span></summary>
        <returns><span data-ttu-id="ee81e-552">Jedna z wartości wyliczenia, która wskazuje wyniki operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-553">Ta metoda określa, czy <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-554">Jeśli wywoływana przed zakończeniem operacji ładowania, zostaje ona zablokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-555">Ta metoda służy do asynchronicznego wznawiania zakładki przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-556">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-556">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRun : IAsyncResult -&gt; unit" Usage="workflowApplication.EndRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-557">Operacja przebiegu asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-557">The asynchronous run operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-558">Czeka na zakończenie oczekującej operacji asynchronicznego przebiegu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-558">Waits for the pending asynchronous run operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-559">Ta metoda określa, czy <xref:System.Activities.WorkflowApplication.BeginRun%2A> operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-560">Jeśli wywoływana przed zakończeniem operacji wznawiania, zostanie ona zablokowana do momentu zakończenia operacji wznawiania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-561">Ta metoda wykonuje asynchroniczną operację przebiegu przy <xref:System.IAsyncResult> użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-562">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-562">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndTerminate : IAsyncResult -&gt; unit" Usage="workflowApplication.EndTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-563">Asynchroniczna operacja przerwania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-563">The asynchronous terminate operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-564">Czeka na zakończenie oczekującej asynchronicznej operacji przerwania.</span><span class="sxs-lookup"><span data-stu-id="ee81e-564">Waits for the pending asynchronous terminate operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-565">Ta metoda może zostać wywołana w celu ustalenia, <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-566">Jeśli wywoływana przed zakończeniem operacji zakończenia, zostaje ona zablokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-567">Ta metoda służy do kończenia <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operacji asynchronicznej <xref:System.IAsyncResult> przy użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-568">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-568">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndUnload : IAsyncResult -&gt; unit" Usage="workflowApplication.EndUnload result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ee81e-569">Asynchroniczna operacja zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-569">The asynchronous unload operation.</span></span></param>
        <summary><span data-ttu-id="ee81e-570">Czeka na zakończenie oczekującej asynchronicznej operacji zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-570">Waits for the pending asynchronous unload operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-571">Ta metoda może zostać wywołana w celu ustalenia, <xref:System.Activities.WorkflowApplication.BeginUnload%2A> czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="ee81e-572">Jeśli wywoływana przed ukończeniem operacji zwalniania, zostanie ona zablokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ee81e-573">Ta metoda służy do kończenia <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operacji asynchronicznej <xref:System.IAsyncResult> przy użyciu wzorca projektowego asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="ee81e-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ee81e-574">Aby uzyskać więcej informacji, zobacz [Omówienie programowania asynchronicznego](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-574">For more information, see [Asynchronous Programming Overview](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Activities.Hosting.WorkflowInstanceExtensionManager" Usage="System.Activities.WorkflowApplication.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-575">Pobiera kolekcję rozszerzeń dla bieżącego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-575">Gets the collection of extensions for the current workflow instance.</span></span></summary>
        <value><span data-ttu-id="ee81e-576">Kolekcja obiektów.</span><span class="sxs-lookup"><span data-stu-id="ee81e-576">A collection of objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-577">Zwraca kolekcję zakładek dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-577">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-578">Zwraca kolekcję zakładek dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-578">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-579">Kolekcja zakładek tylko do odczytu dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-579">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-580">Jeśli ta operacja nie <xref:System.TimeoutException> zostanie wykonana w ciągu 30 sekund, zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-581">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-582">Przepływ pracy jest uruchamiany, a gdy <xref:System.Activities.Bookmark> zostanie utworzony, a przepływ pracy jest bezczynny, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ee81e-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="ee81e-583">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-584">Interwał, w którym ta metoda musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-585">Zwraca kolekcję zakładek dla wystąpienia przepływu pracy przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="ee81e-586">Kolekcja zakładek tylko do odczytu dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-586">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-587">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-588">Przepływ pracy jest uruchamiany, a gdy <xref:System.Activities.Bookmark> zostanie utworzony, a przepływ pracy jest bezczynny, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="ee81e-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="ee81e-589">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-590">Pobiera wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-590">Retrieves the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-591">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-591">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ee81e-592">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-592">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="ee81e-593">Pobiera wystąpienie przepływu pracy przy użyciu określonego identyfikatora wystąpienia i magazynu wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-593">Retrieves the workflow instance using specified instance identifier and instance store.</span></span></summary>
        <returns><span data-ttu-id="ee81e-594">Pobrane wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-594">The retrieved instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-595">Identyfikator wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-595">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ee81e-596">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-596">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-597">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-597">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-598">Pobiera wystąpienie przepływu pracy przy użyciu określonego identyfikatora wystąpienia, magazynu wystąpień i interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="ee81e-599">Odwołanie do operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="ee81e-599">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-600">Pobiera wystąpienie możliwy do uruchomienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-600">Retrieves the runnable instance of the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-601">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy</span><span class="sxs-lookup"><span data-stu-id="ee81e-601">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <summary><span data-ttu-id="ee81e-602">Pobiera wystąpienie możliwy do uruchomienia przepływu pracy z określonym magazynem wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-602">Retrieves the runnable instance of the workflow with specified instance store.</span></span></summary>
        <returns><span data-ttu-id="ee81e-603">Wystąpienie możliwy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-603">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ee81e-604">Dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy</span><span class="sxs-lookup"><span data-stu-id="ee81e-604">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-605">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-605">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-606">Pobiera wystąpienie możliwy do uruchomienia przepływu pracy z określonym magazynem wystąpień i interwałem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="ee81e-607">Wystąpienie możliwy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-607">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.WorkflowApplication.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-608">Pobiera 128-bitowy identyfikator GUID bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span></span></summary>
        <value><span data-ttu-id="ee81e-609">128-bitowy identyfikator GUID.</span><span class="sxs-lookup"><span data-stu-id="ee81e-609">A 128-bit GUID identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-610">Poniższy przykład tworzy <xref:System.Activities.WorkflowApplication> wystąpienie, a następnie <xref:System.Activities.WorkflowApplication.Id%2A> wyświetla wartość konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Idle : Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Idle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-611">Pobiera lub ustawia wartość <see cref="T:System.Action`1" /> , która jest wywoływana, gdy bieżące wystąpienie przepływu pracy staje się bezczynna.</span><span class="sxs-lookup"><span data-stu-id="ee81e-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span></span></summary>
        <value><span data-ttu-id="ee81e-612">Akcja, która jest wykonywana, gdy wystąpienie przepływu pracy stanie się bezczynne.</span><span class="sxs-lookup"><span data-stu-id="ee81e-612">An action that executes when a workflow instance becomes idle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-613">Poniższy przykład kodu sprawdza, <xref:System.Activities.WorkflowApplicationIdleEventArgs> czy przeszedł <xref:System.Activities.WorkflowApplication.Idle%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="ee81e-614">W tym przykładzie przepływ pracy, który przejdzie <xref:System.Activities.Bookmark> do bezczynności `EnterGuess`, ma jedną z nazwami, `ReadInt`należącymi do działania o nazwie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="ee81e-615">Ten przykład kodu jest oparty na [sposobie: Uruchom przepływ pracy](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), który jest częścią [samouczka &#91;wprowadzenie .NET Framework 4,5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="ee81e-616"><xref:System.Activities.WorkflowApplication.Idle%2A> Jeśli program obsługi w tym kroku jest modyfikowany tak, aby zawierał kod z tego przykładu, wyświetlane są następujące dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="ee81e-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceStore : System.Runtime.DurableInstancing.InstanceStore with get, set" Usage="System.Activities.WorkflowApplication.InstanceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-617">Pobiera lub ustawia obiekt, który zapewnia dostęp do utrwalonego stanu bieżącego wystąpienia aplikacji przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span></span></summary>
        <value><span data-ttu-id="ee81e-618">Magazyn wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-618">An instance store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-619">Poniższy przykład tworzy wystąpienie obiektu WorkflowApplication, a następnie konfiguruje <xref:System.Activities.WorkflowApplication.InstanceStore%2A> <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ee81e-620">Ten przykład kodu jest częścią [metody: Utwórz i Uruchom długotrwały przepływ pracy](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), który jest częścią [samouczka &#91;wprowadzenie .NET Framework 4,5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span><span class="sxs-lookup"><span data-stu-id="ee81e-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-621">Ładuje wystąpienie przepływu pracy z magazynu wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-621">Loads a workflow instance from an instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance -&gt; unit" Usage="workflowApplication.Load instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-622">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-622">The instance.</span></span></param>
        <summary><span data-ttu-id="ee81e-623">Ładuje wystąpienie przepływu pracy z magazynu wystąpienia z określonym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-623">Loads a workflow instance from an instance store with specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid -&gt; unit" Usage="workflowApplication.Load instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-624">Globalnie unikatowy identyfikator 128-bitowy dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-624">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ee81e-625">Ładuje określone wystąpienie przepływu pracy do pamięci z magazynu wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-625">Loads the specified workflow instance into memory from an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-626">Poniższy przykład wywołuje wywołanie <xref:System.Activities.WorkflowApplication.Load%2A> w celu załadowania utrwalonego wystąpienia <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>przepływu pracy z elementu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ee81e-627">Ten przykład pochodzi z `LoadAndCompleteInstance` metody w przykładzie utrwalania [aplikacji przepływu pracy](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowApplication.Load (instance, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-628">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-628">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ee81e-629">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-629">The update map.</span></span></param>
        <summary><span data-ttu-id="ee81e-630">Ładuje wystąpienie przepływu pracy z magazynu wystąpień z określonym wystąpieniem i mapy aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-630">Loads a workflow instance from an instance store with specified instance and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-631">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-631">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-632">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-632">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-633">Ładuje wystąpienie przepływu pracy z magazynu wystąpień z określonym wystąpieniem i interwałem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instanceId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ee81e-634">Globalnie unikatowy identyfikator 128-bitowy dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-634">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-635">Interwał, w którym operacja ładowania musi zostać zakończona przed anulowaniem operacji ładowania i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-636">Ładuje określone wystąpienie przepływu pracy do pamięci z magazynu wystąpień przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-637">Poniższy przykład wywołuje wywołanie <xref:System.Activities.WorkflowApplication.Load%2A> w celu załadowania utrwalonego wystąpienia <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>przepływu pracy z elementu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ee81e-638">Ten przykład pochodzi z `LoadAndCompleteInstance` metody w przykładzie utrwalania [aplikacji przepływu pracy](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, updateMap, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ee81e-639">Wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-639">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ee81e-640">Mapa aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="ee81e-640">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-641">Interwał, w którym operacja rozpoczęcia ładowania musi zostać zakończona, zanim operacja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-641">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ee81e-642">Ładuje wystąpienie przepływu pracy z magazynu wystąpienia z określonym wystąpieniem, mapą aktualizacji i interwałem limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-643">Ładuje wystąpienie przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span><span class="sxs-lookup"><span data-stu-id="ee81e-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-644">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : unit -&gt; unit" Usage="workflowApplication.LoadRunnableInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-645">Ładuje wystąpienie przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span><span class="sxs-lookup"><span data-stu-id="ee81e-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-646">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ee81e-647">Domyślnie operacja ładowania musi zakończyć się w ciągu 30 sekund lub w wyniku <xref:System.TimeoutException> .</span><span class="sxs-lookup"><span data-stu-id="ee81e-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : TimeSpan -&gt; unit" Usage="workflowApplication.LoadRunnableInstance timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-648">Interwał, w którym operacja ładowania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-649">Ładuje wystąpienie przepływu pracy możliwy do uruchomienia z <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-650">Wystąpienie możliwy do uruchomienia to wystąpienie, dla którego upłynął limit czasu czasomierza lub blokady wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="override this.OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowApplication.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="override this.OnNotifyPaused : unit -&gt; unit" Usage="workflowApplication.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberSignature Language="F#" Value="override this.OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowApplication.OnNotifyUnhandledException (exception, exceptionSource, exceptionSourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="override this.OnRequestAbort : Exception -&gt; unit" Usage="workflowApplication.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnUnhandledException : Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, System.Activities.UnhandledExceptionAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-651">Pobiera lub ustawia <see cref="T:System.Func`2" /> obiekt, który jest wywoływany, gdy bieżące wystąpienie przepływu pracy napotka nieobsługiwany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ee81e-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span></span></summary>
        <value><span data-ttu-id="ee81e-652">Delegat, który jest wywoływany, gdy wystąpienie przepływu pracy napotka nieobsługiwany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ee81e-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-653">Zarówno <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> , <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> jak i dyktować zachowanie środowiska uruchomieniowego, gdy wyjątek nie jest obsługiwany w przepływie pracy, jednak <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> ma opcję opuszczenia zawieszonego przepływu pracy w magazynie trwałości, chociaż <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> nie jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="ee81e-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="ee81e-654">Przyczyną tej sytuacji jest to, że działanie w zawieszonym przepływie pracy jest specyficzne dla hosta <xref:System.Activities.WorkflowApplication> i nie jest.</span><span class="sxs-lookup"><span data-stu-id="ee81e-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="ee81e-655">Aby zaimplementować tę funkcję przy <xref:System.Activities.WorkflowApplication>użyciu programu, należy <xref:System.Activities.Persistence.PersistenceParticipant> utworzyć niestandardową, która ma takie zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-656">Poniższy przykład wywołuje przepływ pracy, który zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ee81e-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="ee81e-657">Wyjątek jest nieobsługiwany przez przepływ pracy i <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> wywoływany jest program obsługi.</span><span class="sxs-lookup"><span data-stu-id="ee81e-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="ee81e-658"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> Są one sprawdzane w celu podania informacji o wyjątku, a przepływ pracy zostaje zakończony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-659">Utrwala wystąpienie przepływu pracy w magazynie wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-659">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-660">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-661">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberSignature Language="F#" Value="member this.Persist : unit -&gt; unit" Usage="workflowApplication.Persist " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-662">Utrwala wystąpienie przepływu pracy w magazynie wystąpień.</span><span class="sxs-lookup"><span data-stu-id="ee81e-662">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-663">Jeśli operacja utrwalania nie <xref:System.TimeoutException> zostanie ukończona w ciągu 30 sekund, zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ee81e-664">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-665">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-666">Poniższy przykład wywołuje <xref:System.Activities.WorkflowApplication.Persist%2A> , aby zachować wystąpienie przepływu pracy przed uruchomieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="ee81e-667">Ten przykład jest częścią `StartAndUnloadInstance` metody w przykładzie utrwalania [aplikacji przepływu pracy](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Persist : TimeSpan -&gt; unit" Usage="workflowApplication.Persist timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-668">Interwał, w którym operacja utrwalania musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-669">Utrwala wystąpienie przepływu pracy w magazynie wystąpień przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-669">Persists a workflow instance to an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-670">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-671">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-672">Poniższy przykład wywołuje <xref:System.Activities.WorkflowApplication.Persist%2A> , aby zachować wystąpienie przepływu pracy przed uruchomieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="ee81e-673">Ten przykład pochodzi z `StartAndUnloadInstance` metody w przykładzie utrwalania [aplikacji przepływu pracy](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PersistableIdle : Func&lt;System.Activities.WorkflowApplicationIdleEventArgs, System.Activities.PersistableIdleAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-674">Pobiera lub ustawia delegata, który jest wywoływany, gdy bieżące wystąpienie przepływu pracy jest w stanie bezczynności i może zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="ee81e-674">Gets or sets the delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></summary>
        <value><span data-ttu-id="ee81e-675">Delegat, który jest wywoływany, gdy bieżące wystąpienie przepływu pracy jest bezczynny i może być utrwalony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-675">The delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-676">Gdy przepływ pracy stanie się bezczynny i może być <xref:System.Activities.WorkflowApplication.Idle%2A> utrwalony, zarówno, jak i <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> są wywoływane, w tej kolejności.</span><span class="sxs-lookup"><span data-stu-id="ee81e-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="ee81e-677"><xref:System.Activities.PersistableIdleAction.None> <xref:System.Activities.PersistableIdleAction.Persist> <xref:System.Activities.PersistableIdleAction.Unload>Procedura obsługi zwraca jedną <xref:System.Activities.PersistableIdleAction> z wartości wyliczenia,, lub. <xref:System.Activities.WorkflowApplication.PersistableIdle%2A></span><span class="sxs-lookup"><span data-stu-id="ee81e-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-678">Poniższy przykład obsługuje <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> procedurę obsługi i powoduje, że środowisko uruchomieniowe w celu utrwalenia i zwolnienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-679">Powoduje zainicjowanie operacji w celu wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-679">Initiates an operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ee81e-680">Zakładka, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-680">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-681">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="ee81e-682">Powoduje zainicjowanie operacji w celu wznowienia określonej zakładki przy użyciu określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-682">Initiates an operation to resume the specified bookmark, using the specified value.</span></span> <span data-ttu-id="ee81e-683">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-684">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-684">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-685">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-686">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-687">Przepływ pracy jest uruchamiany, a po <xref:System.Activities.Bookmark> utworzeniu, a przepływ pracy jest bezczynny, dane wejściowe użytkownika są zbierane i Zakładka zostaje wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ee81e-688">Nazwa zakładki, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-688">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-689">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="ee81e-690">Powoduje zainicjowanie operacji w celu wznowienia zakładki o określonej nazwie przy użyciu określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span></span> <span data-ttu-id="ee81e-691">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-692">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-692">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-693">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-694">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-695">Przepływ pracy jest uruchamiany, a po <xref:System.Activities.Bookmark> utworzeniu, a przepływ pracy jest bezczynny, dane wejściowe użytkownika są zbierane i Zakładka zostaje wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ee81e-696">Zakładka, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-696">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-697">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-698">Przedział czasu, w którym należy wznowić zakładkę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-698">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="ee81e-699">Powoduje zainicjowanie operacji wznawiania określonej zakładki przy użyciu określonej wartości i interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span></span> <span data-ttu-id="ee81e-700">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-701">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-701">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-702">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-703">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-704">Przepływ pracy jest uruchamiany, a po <xref:System.Activities.Bookmark> utworzeniu, a przepływ pracy jest bezczynny, dane wejściowe użytkownika są zbierane i Zakładka zostaje wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ee81e-705">Nazwa zakładki, która ma zostać wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-705">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ee81e-706">Obiekt przeszedł jako parametr do metody, która jest wywoływana, gdy zakładka zostanie wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-707">Przedział czasu, w którym należy wznowić zakładkę.</span><span class="sxs-lookup"><span data-stu-id="ee81e-707">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="ee81e-708">Powoduje zainicjowanie operacji w celu wznowienia zakładki o określonej nazwie przy użyciu określonej wartości i interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span></span> <span data-ttu-id="ee81e-709">Zakładka, która ma zostać wznowiona, została wcześniej utworzona przez działanie w ramach wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ee81e-710">Wynik operacji wznowienia zakładki.</span><span class="sxs-lookup"><span data-stu-id="ee81e-710">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-711">Wynik zakładki wskazuje, czy operacja wznawiania zakończyła się powodzeniem, czy niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ee81e-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-712">Poniższy przykład tworzy przepływ pracy, który używa `ReadLine` działania, które <xref:System.Activities.Bookmark>tworzy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ee81e-713">Przepływ pracy jest uruchamiany, a po <xref:System.Activities.Bookmark> utworzeniu, a przepływ pracy jest bezczynny, dane wejściowe użytkownika są zbierane i Zakładka zostaje wznowiona.</span><span class="sxs-lookup"><span data-stu-id="ee81e-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-714">Rozpoczyna lub wznawia wykonywanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-714">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-715">Wywołaj tę metodę, aby zainicjować wykonywanie nowo utworzonego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="member this.Run : unit -&gt; unit" Usage="workflowApplication.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-716">Rozpoczyna lub wznawia wykonywanie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-716">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-717">Wywołaj tę metodę, aby zainicjować wykonywanie nowo utworzonego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="ee81e-718">Jeśli operacja Run nie <xref:System.TimeoutException> zostanie wykonana w ciągu 30 sekund, zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-719">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-720">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-721">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Run : TimeSpan -&gt; unit" Usage="workflowApplication.Run timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-722">Wywołaj tę metodę, aby zainicjować wykonywanie nowo utworzonego wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-722">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
<span data-ttu-id="ee81e-723">Interwał, w którym operacja uruchamiania musi zostać zakończona, zanim operacja zostanie anulowana i <see cref="T:System.TimeoutException" /> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-724">Rozpoczyna lub wznawia wykonywanie wystąpienia przepływu pracy przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-725">Należy pamiętać, że <xref:System.Activities.WorkflowInvoker.Invoke%2A>w przeciwieństwie do tego metoda spowoduje przekroczenie limitu czasu, gdy przepływ pracy nie zostanie uruchomiony w określonym czasie, a nie musi zostać ukończony w określonym czasie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="ee81e-726">Przyczyną tego jest to, że <xref:System.Activities.WorkflowInvoker.Invoke%2A> wykonuje przepływ pracy synchronicznie (blokując wątek hosta), podczas gdy <xref:System.Activities.WorkflowApplication.Run%2A> wykonuje asynchronicznie, blokując tylko wątek hosta przez czas, w którym przepływ pracy ma zostać uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-727">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-728">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-729">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-730">Kończy wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-730">Terminates a workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-731">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-731">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ee81e-732">Kończy wystąpienie przepływu pracy przy użyciu określonego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ee81e-732">Terminates a workflow instance using the specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-733">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-734">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-735">Domyślnie <xref:System.Activities.WorkflowApplication.Terminate%2A> operacja musi zakończyć się w ciągu 30 sekund <xref:System.TimeoutException> lub jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ee81e-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-736">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-737">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-738">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Terminate%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ee81e-739">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-740">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-740">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ee81e-741">Kończy wystąpienie przepływu pracy przy użyciu określonego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="ee81e-741">Terminates a workflow instance using the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-742">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-743">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ee81e-744">Domyślnie <xref:System.Activities.WorkflowApplication.Terminate%2A> operacja musi zakończyć się w ciągu 30 sekund <xref:System.TimeoutException> lub jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="ee81e-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-745">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-746">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-747">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Terminate%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ee81e-748">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-749">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-749">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-750">Interwał, w którym <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operacja musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-751">Kończy wystąpienie przepływu pracy przy użyciu określonego wyjątku i limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-751">Terminates a workflow instance using the specified exception and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-752">Ta metoda planuje zakończenie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="ee81e-753">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-754">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-755">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-756">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Terminate%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ee81e-757">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ee81e-758">Przyczyna zakończenia wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-758">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ee81e-759">Interwał, w którym <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operacja musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-760">Kończy wystąpienie przepływu pracy przy użyciu określonego komunikatu o błędzie i limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-760">Terminates a workflow instance using the specified error message and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-761">Ta metoda planuje zakończenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ee81e-762">Aby otrzymywać powiadomienia po zakończeniu zakończenia, użyj <xref:System.Activities.WorkflowApplication.Completed%2A> dojścia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-763">Poniższy przykład umożliwia hostowanie przepływu pracy <xref:System.Activities.WorkflowApplication>przy użyciu polecenia.</span><span class="sxs-lookup"><span data-stu-id="ee81e-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ee81e-764">Wystąpienie jest skonstruowane przy użyciu określonej definicji przepływu pracy, są obsługiwane zdarzenia cyklu życia przepływu pracy, a przepływ pracy jest wywoływany z <xref:System.Activities.WorkflowApplication.Run%2A>wywołaniem. <xref:System.Activities.WorkflowApplication></span><span class="sxs-lookup"><span data-stu-id="ee81e-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ee81e-765">Po uruchomieniu <xref:System.Activities.WorkflowApplication.Terminate%2A> przepływu pracy jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ee81e-766">Po zakończeniu przepływu pracy następujące dane wyjściowe są wyświetlane w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee81e-767">Utrzymuje i zwalnia wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-767">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-768">Domyślnie operacja zwalniania musi zakończyć się w ciągu 30 sekund lub w <xref:System.TimeoutException> wyniku.</span><span class="sxs-lookup"><span data-stu-id="ee81e-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ee81e-769">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-770">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowApplication.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee81e-771">Utrzymuje i zwalnia wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="ee81e-771">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-772">Domyślnie operacja zwalniania musi zakończyć się w ciągu 30 sekund lub w <xref:System.TimeoutException> wyniku.</span><span class="sxs-lookup"><span data-stu-id="ee81e-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ee81e-773">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-774">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-775">Poniższy przykład kodu jest częścią przykładu [działania NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="ee81e-776">W tym przykładzie przepływ pracy jest bezczynny, a aplikacja hosta oczekuje na dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="ee81e-777">Jeśli użytkownik zdecyduje się na zwolnienie, <xref:System.Activities.WorkflowApplication.Unload%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="ee81e-778">Jeśli to się powiedzie, przepływ pracy zostanie utrwalony i zwolniony z pamięci.</span><span class="sxs-lookup"><span data-stu-id="ee81e-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Unload : TimeSpan -&gt; unit" Usage="workflowApplication.Unload timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ee81e-779">Interwał, w którym operacja zwalniania musi zostać zakończona, zanim operacja zostanie anulowana <see cref="T:System.TimeoutException" /> i zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ee81e-780">Utrzymuje i zwalnia wystąpienie przepływu pracy przy użyciu określonego interwału limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="ee81e-780">Persists and unloads a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee81e-781">Jeśli wystąpienie przepływu pracy zostało wcześniej załadowane z trwałości, to ten <xref:System.Runtime.DurableInstancing.InstanceStore> sam użyty do załadowania przepływu pracy jest używany na potrzeby trwałości.</span><span class="sxs-lookup"><span data-stu-id="ee81e-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ee81e-782">Jeśli przepływ pracy został utworzony i nie został jeszcze utrwalony, <xref:System.Activities.WorkflowApplication.InstanceStore%2A> należy go skonfigurować przed wywołaniem tej metody lub w przeciwnym razie jest zgłaszany w <xref:System.InvalidOperationException> przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="ee81e-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee81e-783">Poniższy przykład kodu jest częścią przykładu [działania NoPersistScope](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) .</span><span class="sxs-lookup"><span data-stu-id="ee81e-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="ee81e-784">W tym przykładzie przepływ pracy jest bezczynny, a aplikacja hosta oczekuje na dane wejściowe użytkownika.</span><span class="sxs-lookup"><span data-stu-id="ee81e-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="ee81e-785">Jeśli użytkownik zdecyduje się na zwolnienie, <xref:System.Activities.WorkflowApplication.Unload%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="ee81e-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="ee81e-786">Jeśli to się powiedzie, przepływ pracy zostanie utrwalony i zwolniony z pamięci.</span><span class="sxs-lookup"><span data-stu-id="ee81e-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Unloaded : Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Unloaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee81e-787">Pobiera lub ustawia wartość <see cref="T:System.Action`1" /> , która jest wywoływana, gdy bieżący przepływ pracy zostanie zwolniony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span></span></summary>
        <value><span data-ttu-id="ee81e-788">Akcja, która jest wywoływana, gdy wystąpienie przepływu pracy zostanie zwolnione.</span><span class="sxs-lookup"><span data-stu-id="ee81e-788">An action that is invoked when a workflow instance is unloaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee81e-789">Poniższy przykład <xref:System.Activities.WorkflowApplicationEventArgs> kodu sprawdza, czy przekazano <xref:System.Activities.WorkflowApplication.Unloaded%2A> do procedury obsługi <xref:System.Activities.WorkflowApplication> wystąpienia i wyświetla <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> przepływ pracy, który został zwolniony.</span><span class="sxs-lookup"><span data-stu-id="ee81e-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
