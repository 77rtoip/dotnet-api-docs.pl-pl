<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7db856f36ff9d25a38ed30ebc441eeef386ef939" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69114483" /></Metadata><TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje adres nadawcy lub adresata poczty elektronicznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Klasa jest używana <xref:System.Net.Mail.SmtpClient> przez klasy i <xref:System.Net.Mail.MailMessage> do przechowywania informacji o adresach dla wiadomości e-mail. <xref:System.Net.Mail.MailAddress>  
  
Adres e-mail składa się z <xref:System.Net.Mail.MailAddress.User%2A> nazwy, <xref:System.Net.Mail.MailAddress.Host%2A> nazwy i opcjonalnie, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>. Może <xref:System.Net.Mail.MailAddress.DisplayName%2A> zawierać znaki inne niż ASCII w przypadku ich kodowania.  
  
<xref:System.Net.Mail.MailAddress> Klasa obsługuje następujące formaty adresów pocztowych:  
  
-   Prosty format `user@host`adresu. Jeśli wartość nie jest ustawiona, jest to wygenerowany format adresu e-mail. <xref:System.Net.Mail.MailAddress.DisplayName%2A>  
  
-   Standardowy format `"display name" <user@host>`nazwy wyświetlanej w cudzysłowie. <xref:System.Net.Mail.MailAddress.DisplayName%2A> Jeśli jest ustawiona, jest to format wygenerowany.  
  
-   Nawiasy ostre są dodawane wokół <xref:System.Net.Mail.MailAddress.User%2A> nazwy i <xref:System.Net.Mail.MailAddress.Host%2A> nazwy, jeśli nie są one uwzględnione. Na przykład, `"display name" user@host` został zmieniony na `"display name" <user@host>`.
  
-   Cudzysłowy są dodawane wokół <xref:System.Net.Mail.MailAddress.DisplayName%2A>, jeśli nie zostały uwzględnione. Na przykład, `display name <user@host>` został zmieniony na `"display name" <user@host>`.
  
-   Znaki Unicode są obsługiwane we <xref:System.Net.Mail.MailAddress.DisplayName%2A> właściwości.  
  
-   <xref:System.Net.Mail.MailAddress.User%2A> Nazwa z cudzysłowami. Na przykład `"user name"@host`.  
  
-   Kolejne i końcowe kropki w nazwach użytkowników. Na przykład `user...name..@host`.  
  
-   Literały domeny w nawiasach klamrowych. Na przykład `<user@[my domain]>`.  
  
-   Komentarz. Na przykład `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Komentarze są usuwane przed przekazaniem.  
  
Przecinek jest używany do oddzielania elementów na liście adresów pocztowych. W związku z tym nie należy używać przecinka w nazwach wyświetlanych bez cudzysłowów na liście. Dozwolone są następujące adresy e-mail:
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
Następujący adres pocztowy nie będzie dozwolony:  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Cudzysłowy mogą być osadzone w ciągu ujętym w cudzysłów, ale muszą być dla nich zmienione. Dozwolone są następujące adresy e-mail:
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
Następujący adres pocztowy nie będzie dozwolony:  
  
`"John "Jr" Doe" <user@host>`  
  
Gdy nazwa użytkownika nie jest ujęta w cudzysłów, cały tekst między początkiem ciągu (lub przecinkiem) a adresem jest traktowany <xref:System.Net.Mail.MailAddress.DisplayName%2A>jako część komentarza. Na przykład:
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Mimo że <xref:System.Net.Mail.MailAddress> Klasa akceptuje adres poczty jako prawidłowy, inne serwery poczty mogą nie akceptować adresu e-mail.  
  
<xref:System.Net.Mail.MailAddress> Klasa nie obsługuje następujących formatów adresu e-mail:  
  
- Mieszane i niecytowane nazwy wyświetlane. Na przykład `display "name" <user@host>`.
  
- Grupy, zgodnie z definicją w dokumencie RFC 2822 sekcja 3,4 opublikowanym przez grupę IETF.  
  
- Przestarzałe formaty `"user"."name"@host`nazw użytkowników, `user."name"@host` lub `"user".name@host`.
  
   
  
## Examples  
Poniższy przykład kodu demonstruje wysłanie wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient>klas, <xref:System.Net.Mail.MailAddress>i <xref:System.Net.Mail.MailMessage> .  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.MailAddress" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> , który zawiera adres e-mail.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.MailAddress" /> klasy przy użyciu podanego adresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli adres jest umieszczony w nawiasach ostrych, parametrmożezawieraćnazwęwyświetlanąiskojarzonyadrese-mail.`address` Przykład:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Między nazwą wyświetlaną a nawiasami ostrymi jest dozwolone białe miejsce.  
  
 W poniższej tabeli przedstawiono wartości właściwości dla <xref:System.Net.Mail.MailAddress> obiektu skonstruowanego przy użyciu powyższego przykładowego adresu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 Poniższy przykład kodu używa tego konstruktora do utworzenia <xref:System.Net.Mail.MailAddress> obiektu <xref:System.Net.Mail.MailMessage.Bcc%2A> odbiorcy wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />is <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException"><paramref name="address" />nie jest w rozpoznawanym formacie.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> , który zawiera adres e-mail.</param>
        <param name="displayName">A <see cref="T:System.String" /> , który zawiera nazwę wyświetlaną skojarzoną z <paramref name="address" />. Ten parametr może być <see langword="null" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.MailAddress" /> klasy przy użyciu określonego adresu i nazwy wyświetlanej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowane jest odstępy wiodące i końcowe w nazwie wyświetlanej.  
  
 Jeśli `displayName` zawiera znaki inne niż ASCII, zestaw znaków ISO-8859-1 jest używany `displayName` do kodowania. Kodowanie znaków nienależących do zestawu ASCII jest omówione w dokumencie RFC 1522, [https://www.ietf.org/](https://www.ietf.org/)który jest dostępny pod adresem.  
  
 Jeśli `address` zawiera nazwę wyświetlaną i <xref:System.String.Empty?displayProperty=nameWithType> `null` `displayName` nie jest i nie jest równa, `displayName` przesłania wartość określoną w `address`.  
  
   
  
## Examples  
 Poniższy przykład kodu używa tego konstruktora do tworzenia <xref:System.Net.Mail.MailAddress> wystąpień dla nadawcy i adresata wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />is <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException"><paramref name="address" />nie jest w rozpoznawanym formacie.  
  
—lub— 
 <paramref name="address" />zawiera znaki inne niż ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> , który zawiera adres e-mail.</param>
        <param name="displayName">A <see cref="T:System.String" /> , który zawiera nazwę wyświetlaną skojarzoną z <paramref name="address" />.</param>
        <param name="displayNameEncoding">Definiuje zestaw znaków użyty dla <paramref name="displayName" />. <see cref="T:System.Text.Encoding" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.MailAddress" /> klasy z określonym adresem, nazwą wyświetlaną i kodowaniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowane jest odstępy wiodące i końcowe w nazwie wyświetlanej.  
  
 Jeśli `address` zawiera nazwę wyświetlaną i <xref:System.String.Empty?displayProperty=nameWithType> `null` `displayName` nie jest i nie jest równa, `displayName` przesłania wartość określoną w `address`.  
  
 Metoda nie sprawdza, `displayName` czy parametr jest prawidłowy. <xref:System.Net.Mail.MailAddress.%23ctor%2A> Ta metoda usuwa otaczające cudzysłowy, które <xref:System.Net.Mail.MailAddress.DisplayName%2A> nie są wyświetlane przez właściwość. Cudzysłowy zostaną dodane przed przekazaniem, <xref:System.Text.Encoding.ASCII%2A> z <xref:System.Text.Encoding.Unicode%2A> wyjątkiem tego `displayNameEncoding` , gdzie lub jest określony w parametrze. `displayNameEncoding` Kodowanie określone w parametrze zostanie zastosowane <xref:System.Text.Encoding.ASCII%2A> <xref:System.Net.Mail.MailAddress.DisplayName%2A> do właściwości przed przekazaniem lub <xref:System.Text.Encoding.Unicode%2A> jest określone w `displayNameEncoding` parametrze. <xref:System.Text.Encoding.UTF8%2A>jest domyślnym kodowaniem, jeśli nie jest określony.  
  
 Aby uzyskać więcej informacji na temat obsługiwanych formatów adresów e-mail <xref:System.Net.Mail.MailAddress>, zobacz.  
  
   
  
## Examples  
 Poniższy przykład kodu używa tego konstruktora do tworzenia <xref:System.Net.Mail.MailAddress> wystąpień dla nadawcy wiadomości e-mail.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="displayName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />is <see cref="F:System.String.Empty" /> ("").  
  
—lub— 
 <paramref name="displayName" />is <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException"><paramref name="address" />nie jest w rozpoznawanym formacie.  
  
—lub— 
 <paramref name="address" />zawiera znaki inne niż ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres e-mail określony podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera adres e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez tę właściwość nie zawiera <xref:System.Net.Mail.MailAddress.DisplayName%2A> informacji.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla adres odbiorcy wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę wyświetlaną składającą się z informacji o nazwie wyświetlanej i adresie określonej podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera nazwę wyświetlaną; w <see cref="F:System.String.Empty" /> przeciwnym razie (""), jeśli nie określono informacji o nazwie wyświetlanej podczas tworzenia tego wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy wyświetlane, które zawierają znaki nienależące do zestawu znaków ASCII, są zwracane w postaci czytelnej dla człowieka. Użyj metody, aby uzyskać zakodowaną postać <xref:System.Net.Mail.MailAddress.DisplayName%2A>. <xref:System.Net.Mail.MailAddress.ToString%2A>  
  
 Niektóre programy, które są używane do odczytywania wiadomości e-mail <xref:System.Net.Mail.MailAddress.DisplayName%2A> wyświetlają wartość właściwości zamiast lub oprócz adresu e-mail.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla <xref:System.Net.Mail.MailAddress.DisplayName%2A> adresata wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Net.Mail.MailAddress" /> Wystąpienie do porównania z bieżącym wystąpieniem.</param>
        <param name="obj"><see cref="T:System.Net.Mail.MailAddress" /> Wystąpienie do porównania z bieżącym wystąpieniem.</param>
        <summary>Porównuje dwa adresy e-mail.</summary>
        <returns><see langword="true" />Jeśli dwa adresy e-mail są równe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla adresu e-mail.</summary>
        <returns>Wartość skrótu liczb całkowitych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailAddress.GetHashCode%2A> Metoda zwraca kod skrótu adresu pocztowego. Ta wartość może być używana jako klucz w tabelach skrótów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera część adresu określoną podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera nazwę komputera hosta, który akceptuje wiadomości e-mail <see cref="P:System.Net.Mail.MailAddress.User" /> dla właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W typowym adresie e-mail ciąg hosta zawiera wszystkie informacje po znaku "`@`". Na przykład w programie `"tsmith@contoso.com"`host ma `"contoso.com"`wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla miejsce docelowe wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący to wystąpienie.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera zawartość tego <see cref="T:System.Net.Mail.MailAddress" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zwracany przez tę metodę nie musi być identyczny z ciągiem określonym podczas tworzenia wystąpienia. Jeśli właściwość nie `null` jest równa <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> zwraca ciąg składający się z następującej składni: <xref:System.Net.Mail.MailAddress.DisplayName%2A>  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Jeśli <xref:System.Net.Mail.MailAddress.DisplayName%2A> <xref:System.String.Empty?displayProperty=nameWithType>jest `null` lub jest równa, <xref:System.Net.Mail.MailAddress.ToString%2A> zwraca wartość <xref:System.Net.Mail.MailAddress.Address%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla miejsce docelowe wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o użytkowniku z adresu określonego podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera część <see cref="P:System.Net.Mail.MailAddress.Address" />nazwy użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W typowym adresie e-mail ciąg użytkownika zawiera wszystkie informacje poprzedzające znak "`@`". Na przykład w programie `"tsmith@contoso.com"`użytkownik ma `"tsmith"`wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla miejsce docelowe wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
