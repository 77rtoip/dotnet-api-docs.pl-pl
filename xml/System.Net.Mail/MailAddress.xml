<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a012bb7ed4c2f2cee322628799e0c6c20b3d8013" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36475109" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje adres nadawcy poczty elektronicznej lub odbiorcy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<xref:System.Net.Mail.MailAddress> Klasa jest używana przez <xref:System.Net.Mail.SmtpClient> i <xref:System.Net.Mail.MailMessage> klasy do przechowywania informacji o adresie dla wiadomości e-mail.  
  
Adres pocztowy składa się z <xref:System.Net.Mail.MailAddress.User%2A> nazwa <xref:System.Net.Mail.MailAddress.Host%2A> nazwę i opcjonalnie <xref:System.Net.Mail.MailAddress.DisplayName%2A>. <xref:System.Net.Mail.MailAddress.DisplayName%2A> Może zawierać znaków innych niż ASCII, jeśli zakodować je.  
  
<xref:System.Net.Mail.MailAddress> Klasa obsługuje następujące formaty adresu poczty:  
  
-   Format adresu proste `user@host`. Jeśli <xref:System.Net.Mail.MailAddress.DisplayName%2A> nie jest ustawiona, to format adresu poczty wygenerowany.  
  
-   Format nazwy standardowego cudzysłowie `"display name" <user@host>`. Jeśli <xref:System.Net.Mail.MailAddress.DisplayName%2A> jest ustawiona, jest to format wygenerowany.  
  
-   Nawiasy zostaną dodane wokół <xref:System.Net.Mail.MailAddress.User%2A> nazwa <xref:System.Net.Mail.MailAddress.Host%2A> nazwę `"display name" user@host` Jeśli te nie są uwzględniane.  
  
-   Cudzysłowy zostaną dodane wokół <xref:System.Net.Mail.MailAddress.DisplayName%2A> dla `display name <user@host>`, jeśli te nie są uwzględniane.  
  
-   Znaki Unicode są obsługiwane w <xref:System.Net.Mail.MailAddress.DisplayName%2A> właściwości.  
  
-   A <xref:System.Net.Mail.MailAddress.User%2A> nazwa z cudzysłowami. Na przykład `"user name"@host`.  
  
-   Kolejne i końcowe kropek w nazwach użytkowników. Na przykład `user...name..@host`.  
  
-   Literały domeny w nawiasach kwadratowych. Na przykład `<user@[my domain]>`.  
  
-   Komentarze. Na przykład `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Komentarze zostaną usunięte przed ich przesłaniem.  
  
Przecinek jest używany do oddzielania elementów na liście adresów e-mail. W związku z tym przecinek nie należy używać w nazwy bez cudzysłowów wyświetlane na liście. Mogliby następujące adresy:
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
Następujący adres pocztowy czy niedozwolone:  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Cudzysłowy można ją osadzić w ciągu w cudzysłowie, ale musi być miały zmienione znaczenie. Mogliby następujące adresy:
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
Następujący adres pocztowy czy niedozwolone:  
  
`"John "Jr" Doe" <user@host>`  
  
Jeśli nazwa użytkownika jest Uwaga w cudzysłowach, cały tekst od początku ciągu (lub przecinkami) i adres są traktowane jako część <xref:System.Net.Mail.MailAddress.DisplayName%2A>, w tym komentarzy. Na przykład:
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Mimo że <xref:System.Net.Mail.MailAddress> klasy akceptuje adres pocztowy jako prawidłową, w innych serwerów nie mogą przyjmować adres poczty.  
  
<xref:System.Net.Mail.MailAddress> Klasa nie obsługuje następujące formaty adresu poczty:  
  
- Mieszane nazwy wyświetlane ujętego w cudzysłów i bez cudzysłowów. Na przykład `display "name" <user@host>`.
  
- Grupy, zgodnie z definicją w sekcji RFC 2822 3.4 opublikowanych przez grupę roboczą IETF.  
  
- Formaty nazwy użytkownika przestarzałe `"user"."name"@host`, `user."name"@host` lub `"user".name@host`.
  
   
  
## Examples  
Poniższy przykład kodu pokazuje, wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, i <xref:System.Net.Mail.MailMessage> klasy.  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.MailAddress" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> zawierający adres e-mail.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.MailAddress" /> przy użyciu określonego adresu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `address` Parametr może zawierać nazwę wyświetlaną i adres e-mail skojarzony, jeśli należy wpisać adres w nawiasy. Na przykład:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Biały znak jest dozwolone między nazwę wyświetlaną i nawiasy.  
  
 W poniższej tabeli przedstawiono wartości właściwości <xref:System.Net.Mail.MailAddress> obiektu tworzony przy użyciu poprzedniego przykładowego adresu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje ten konstruktor do tworzenia <xref:System.Net.Mail.MailAddress> obiekt do <xref:System.Net.Mail.MailMessage.Bcc%2A> adresatów wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> nie jest w rozpoznawanym formacie.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> zawierający adres e-mail.</param>
        <param name="displayName">A <see cref="T:System.String" /> zawierający nazwę wyświetlaną skojarzoną z <c>adres</c>. Ten parametr może być <see langword="null" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.MailAddress" /> przy użyciu określonego adresu i nazwę wyświetlaną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiodące i końcowe biały znak w polu Nazwa wyświetlana jest zachowywane.  
  
 Jeśli `displayName` zawiera znaki spoza zestawu ASCII, zestaw znaków iso 8859-1 jest używany na potrzeby `displayName` kodowania. Kodowanie znaków innych niż ASCII została szczegółowo opisana w specyfikacji RFC 1522, która jest dostępna w [ https://www.ietf.org/ ](https://www.ietf.org/).  
  
 Jeśli `address` zawiera nazwę wyświetlaną i `displayName` nie jest `null` i nie jest równa <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` powoduje zastąpienie wartości określonej w `address`.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje ten konstruktor do tworzenia <xref:System.Net.Mail.MailAddress> wystąpienia nadawcy i odbiorcy wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> nie jest w rozpoznawanym formacie.  - lub - <paramref name="address" /> zawiera znaki spoza zestawu ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> zawierający adres e-mail.</param>
        <param name="displayName">A <see cref="T:System.String" /> zawierający nazwę wyświetlaną skojarzoną z <c>adres</c>.</param>
        <param name="displayNameEncoding">
          <see cref="T:System.Text.Encoding" /> Definiuje zestaw znaków używany do <c>displayName</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.MailAddress" /> przy użyciu określonego adresu, nazwa wyświetlana i kodowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiodące i końcowe biały znak w polu Nazwa wyświetlana jest zachowywane.  
  
 Jeśli `address` zawiera nazwę wyświetlaną i `displayName` nie jest `null` i nie jest równa <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` powoduje zastąpienie wartości określonej w `address`.  
  
 <xref:System.Net.Mail.MailAddress.%23ctor%2A> Metoda sprawdza, czy `displayName` parametr jest prawidłowy. Ta metoda usuwa otaczające cudzysłowy nie są wyświetlane przez <xref:System.Net.Mail.MailAddress.DisplayName%2A> właściwości. Cudzysłowy zostanie dodany przed transmisją, z wyjątkiem sytuacji, gdy <xref:System.Text.Encoding.ASCII%2A> lub <xref:System.Text.Encoding.Unicode%2A> została określona w `displayNameEncoding` parametru. Kodowanie określone na `displayNameEncoding` parametru zostaną zastosowane do <xref:System.Net.Mail.MailAddress.DisplayName%2A> właściwości przed transmisją <xref:System.Text.Encoding.ASCII%2A> lub <xref:System.Text.Encoding.Unicode%2A> została określona w `displayNameEncoding` parametru. <xref:System.Text.Encoding.UTF8%2A> jest domyślne kodowanie używane, jeśli nie określono żadnego.  
  
 Aby uzyskać więcej informacji na poczty obsługiwane formaty adresu, zobacz <xref:System.Net.Mail.MailAddress>.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje ten konstruktor do tworzenia <xref:System.Net.Mail.MailAddress> wystąpień nadawcy wiadomości e-mail.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.  - lub - <paramref name="displayName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest <see cref="F:System.String.Empty" /> ("").  - lub - <paramref name="displayName" /> jest <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> nie jest w rozpoznawanym formacie.  - lub - <paramref name="address" /> zawiera znaki spoza zestawu ASCII.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres e-mail określony podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> zawierający adres e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez tę właściwość nie ma <xref:System.Net.Mail.MailAddress.DisplayName%2A> informacji.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia adres odbiorcy wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę wyświetlaną składa się z nazwę wyświetlaną i adres określony podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> zawierający wyświetlanie nazwa; w przeciwnym razie <see cref="F:System.String.Empty" /> (""), jeśli nie wyświetlana nazwa nie określono informacji podczas tworzenia tego wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwy wyświetlane, które zawierają znaki spoza zestawu ASCII są zwracane w postaci zrozumiałą dla użytkownika. Użyj <xref:System.Net.Mail.MailAddress.ToString%2A> metodę, aby pobrać formie zakodowanej <xref:System.Net.Mail.MailAddress.DisplayName%2A>.  
  
 Niektóre programy, które są używane na odczytywanie wiadomości e-mail wyświetlić <xref:System.Net.Mail.MailAddress.DisplayName%2A> wartość właściwości zamiast lub oprócz adresu e-mail.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Net.Mail.MailAddress.DisplayName%2A> odbiorcy wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="obj">To be added.</param>
        <summary>Porównuje dwa adresy poczty.</summary>
        <returns>
          <see langword="true" /> Jeśli dwa adresy są takie same; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla adresu poczty.</summary>
        <returns>Wartość skrótu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailAddress.GetHashCode%2A> Metoda zwraca wartość skrótu adres poczty. Ta wartość może być używana jako klucz w tabelach skrótów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera część hosta na adres określony podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> zawierający nazwę komputera hosta, który akceptuje wiadomość e-mail dotycząca <see cref="P:System.Net.Mail.MailAddress.User" /> właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adres e-mail typowy ciąg hosta zawiera następujące informacje "`@`" znak. Na przykład w `"tsmith@contoso.com"`, host jest `"contoso.com"`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia docelowego wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu tego wystąpienia.</summary>
        <returns>A <see cref="T:System.String" /> zawiera zawartość tych <see cref="T:System.Net.Mail.MailAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Długość ciągu zwróconego przez tej metody nie jest zawsze taki sam, jak ciąg określony podczas tworzenia wystąpienia. Jeśli <xref:System.Net.Mail.MailAddress.DisplayName%2A> właściwość nie jest `null` i nie jest równa <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> zwraca ciąg składający się przy użyciu następującej składni:  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Jeśli <xref:System.Net.Mail.MailAddress.DisplayName%2A> jest `null` lub jest równa <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> zwraca wartość <xref:System.Net.Mail.MailAddress.Address%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia docelowego wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o użytkowniku z adres określony podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.String" /> zawierający nazwę użytkownika część <see cref="P:System.Net.Mail.MailAddress.Address" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adres e-mail typowe ciągu użytkownika zawiera wszystkie informacje o poprzednim "`@`" znak. Na przykład w `"tsmith@contoso.com"`, użytkownik jest `"tsmith"`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia docelowego wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>