<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc323bdf5989dabb5b7c9aed2fc65161146feeeb" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39800228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia aplikacji wysyłanie wiadomości e-mail przy użyciu transferu protokół SMTP (Simple Mail).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient> Klasa jest używana do wysyłania wiadomości e-mail do serwera SMTP do dostarczenia. Protokół SMTP jest zdefiniowana w dokumencie RFC 2821, który znajduje się w temacie [ https://www.ietf.org ](https://www.ietf.org/).  
  
 Klasy pokazano w poniższej tabeli są używane do konstruowania wiadomości e-mail, które mogą być wysyłane przy użyciu <xref:System.Net.Mail.SmtpClient>.  
  
|Class|Opis|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Reprezentuje plików załączników. Ta klasa umożliwia dołączanie plików, strumieni lub tekst do wiadomości e-mail.|  
|<xref:System.Net.Mail.MailAddress>|Reprezentuje adres e-mail nadawcy i odbiorcy.|  
|<xref:System.Net.Mail.MailMessage>|Reprezentuje wiadomość e-mail.|  
  
 Do tworzenia i wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient>, należy podać następujące informacje:  
  
-   Hosta serwera SMTP, który umożliwia wysyłanie wiadomości e-mail. Zobacz <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości.  
  
-   Poświadczenia do uwierzytelniania, jeśli jest to wymagane przez serwer SMTP. Zobacz <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości.  
  
-   Adres e-mail nadawcy. Zobacz <xref:System.Net.Mail.SmtpClient.Send%2A> i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metod, które przyjmują `from` parametru. Zobacz też <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> właściwości.  
  
-   Adres lub adresy e-mail adresatów. Zobacz <xref:System.Net.Mail.SmtpClient.Send%2A> i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metod, które przyjmują `recipient` parametru. Zobacz też <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> właściwości.  
  
-   Treść komunikatu. Zobacz <xref:System.Net.Mail.SmtpClient.Send%2A> i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metod, które przyjmują `body` parametru. Zobacz też <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> właściwości.  
  
 Aby dodać załącznik w wiadomości e-mail, najpierw utwórz załącznika za pomocą <xref:System.Net.Mail.Attachment> klasy, a następnie dodaj go do wiadomości przy użyciu <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> właściwości. W zależności od czytnik poczty e-mail używane przez odbiorców oraz typ pliku załącznika niektórzy adresaci nie można otworzyć załącznik. W przypadku klientów, których nie można wyświetlić załącznika w ich oryginalnej formie, można określić alternatywnych widoków przy użyciu <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> właściwości.  
  
 W programie .NET Framework, można użyć aplikacji lub pliki konfiguracji maszyny, aby określić domyślny host, port i poświadczenia wartości dla wszystkich <xref:System.Net.Mail.SmtpClient> obiektów. Aby uzyskać więcej informacji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .NET core nie obsługuje ustawienia domyślne. Jako obejście tego problemu, należy ustawić odpowiednie właściwości na <xref:System.Net.Mail.SmtpClient> bezpośrednio.  
  
 Aby wysłać wiadomość e-mail i blok podczas oczekiwania na wiadomość e-mail, które mają być przekazywane do serwera SMTP, użyj jednej z synchronicznej <xref:System.Net.Mail.SmtpClient.Send%2A> metody. Aby zezwolić na wątku głównego programu kontynuować wykonywanie, gdy wiadomości e-mail są przesyłane, użyj jednej z asynchroniczną <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody. <xref:System.Net.Mail.SmtpClient.SendCompleted> Zdarzenie jest zgłaszane w przypadku <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zakończeniu operacji. Aby otrzymywać tego zdarzenia, należy dodać <xref:System.Net.Mail.SendCompletedEventHandler> delegować <xref:System.Net.Mail.SmtpClient.SendCompleted>. <xref:System.Net.Mail.SendCompletedEventHandler> Delegowanego musi odwoływać się do metody wywołania zwrotnego, która obsługuje powiadomienia o <xref:System.Net.Mail.SmtpClient.SendCompleted> zdarzenia. Aby anulować transmisji asynchronicznego poczty e-mail, należy użyć <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metody.  
  
> [!NOTE]
>  W przypadku przekazywania poczty e-mail w toku wywołujesz <xref:System.Net.Mail.SmtpClient.SendAsync%2A> lub <xref:System.Net.Mail.SmtpClient.Send%2A> ponownie, zostanie wyświetlony <xref:System.InvalidOperationException>.  
  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy do serwera SMTP, mogą być używane ponownie, jeśli aplikacja chce wysłać wiele wiadomości na ten sam serwer SMTP. Jest to szczególnie przydatne, gdy są używane uwierzytelniania i szyfrowania nawiązania połączenia z serwerem SMTP. Proces uwierzytelniania i ustanowienia sesji protokołu TLS można kosztownych operacji. Wymaganie, aby ponownie ustanowić połączenia dla każdego komunikatu podczas wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji dużej liczby wiadomości e-mail, które wysyła aktualizacje stanu wiadomości e-mail, dystrybucje biuletynu lub alerty w wiadomościach e-mail. Wiele aplikacji klienta poczty e-mail obsługują także trybu offline, w którym użytkownicy można utworzyć wiele wiadomości e-mail, które są wysyłane później, po nawiązaniu połączenia z serwerem SMTP. Jest to typowe dla klienta poczty e-mail wysłać wszystkie wiadomości SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail na inne serwery SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Implementacja klasy pul połączeń SMTP, aby go uniknąć konieczności ponownego nawiązywania połączenia na tym samym serwerze co wiadomości. Aplikacja może ponownie używać tego samego <xref:System.Net.Mail.SmtpClient> obiekt do wysyłania wiadomości e-mail z wielu różnych ten sam serwer SMTP i do wielu różnych serwerów SMTP. W rezultacie nie istnieje sposób do określenia, po zakończeniu aplikacji przy użyciu <xref:System.Net.Mail.SmtpClient> obiekt, a powinien być wyczyszczone.  
  
 Po zakończeniu sesji SMTP i klient chce zakończyć połączenie, jest w stanie wysyłać wiadomości zamknij do serwera, aby wskazać, że ma on dalszych komunikatów do wysłania. Dzięki temu serwer Zwolnij część zasobów skojarzonych z tym połączeniem z klienta i przetwarzać komunikaty, które zostały wysłane przez klienta.  
  
 <xref:System.Net.Mail.SmtpClient> Nie ma klasy `Finalize` metody, dzięki czemu aplikacja musi wywoływać <xref:System.Net.Mail.SmtpClient.Dispose%2A> jawnie zwolnić zasoby. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda wykonuje iterację przez wszystkie ustanowionych połączeń do serwera SMTP, określone w <xref:System.Net.Mail.SmtpClient.Host%2A> właściwość i wysyła komunikat QUIT następuje bez problemu zmieniała końcowy połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda również zwalnia zasoby niezarządzane używane przez <xref:System.Net.Sockets.Socket> i opcjonalnie usuwa zarządzane zasoby.  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Pozostawia metoda <xref:System.Net.Mail.SmtpClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Net.Mail.SmtpClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Net.Mail.SmtpClient> zajmowaną przez wystąpienie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje asynchronicznego wysyłania wiadomości e-mail.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.SmtpClient" /> przy użyciu ustawień pliku konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, i <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości dla nowego <xref:System.Net.Mail.SmtpClient> przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny. Aby uzyskać więcej informacji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wysłanie wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Na przykład \<mailSettings > węzła w aplikacji lub plik konfiguracji komputera, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">do konstruowania <see cref="T:System.Net.Mail.SmtpClient" />. Powiązane wyliczenie: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Element <see cref="T:System.String" /> zawierający nazwę lub adres IP komputera-hosta używany dla transakcji SMTP.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.SmtpClient" /> klasy, która wysyła wiadomość e-mail przy użyciu określonego serwera SMTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host` Parametr jest używany do inicjacji wartości <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości. <xref:System.Net.Mail.SmtpClient.Credentials%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości są inicjowane przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny. Jeśli `host` jest `null` lub równa <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> jest inicjowany przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny.  
  
 Aby uzyskać więcej informacji na temat korzystania z aplikacji i plików konfiguracji maszyny, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje jest określony, przy użyciu <xref:System.Net.Mail.SmtpClient> konstruktorów lub właściwości, informacje te zastąpienia ustawień pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wywoływania tego konstruktora.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">do konstruowania <see cref="T:System.Net.Mail.SmtpClient" />. Powiązane wyliczenie: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Element <see cref="T:System.String" /> zawierający nazwę lub adres IP hosta używany dla transakcji SMTP.</param>
        <param name="port">
          <see cref="T:System.Int32" /> Większą niż zero, zawierający port używany na <c>hosta</c>.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.SmtpClient" /> klasy, która wysyła wiadomość e-mail przy użyciu określonego serwera SMTP oraz port.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `host` i `port` parametry wartość <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości, odpowiednio. Jeśli `host` jest `null` lub równa <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.SmtpClient.Host%2A> jest inicjowany przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny. Jeśli `port` wynosi zero, <xref:System.Net.Mail.SmtpClient.Port%2A> jest inicjowany przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny. <xref:System.Net.Mail.SmtpClient.Credentials%2A> Właściwość jest inicjowana przy użyciu ustawień w aplikacji lub pliki konfiguracji maszyny.  
  
 Aby uzyskać więcej informacji na temat korzystania z aplikacji i plików konfiguracji maszyny, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje jest określony, przy użyciu <xref:System.Net.Mail.SmtpClient> konstruktorów lub właściwości, informacje te zastąpienia ustawień pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wywoływania tego konstruktora.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> nie może być mniejsza od zera.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby określić numer portu. Powiązane wyliczenie: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określ, które certyfikaty powinny być używane do nawiązania połączenia protokołu Secure Sockets Layer (SSL).</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, Zawierający co najmniej jednego certyfikatu klienta. Wartością domyślną jest pochodną atrybuty konfiguracji wiadomości e-mail w pliku konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certyfikaty klientów są domyślnie opcjonalna. Konfiguracja serwera mogą jednak wymagać, że klient występują ważnego certyfikatu w ramach negocjacji początkowego połączenia.  
  
> [!NOTE]
>  Struktura buforuje sesji protokołu SSL, ponieważ są one tworzone i podejmie próbę ponownego użycia pamięci podręcznej sesji dla nowego żądania, jeśli jest to możliwe. Podczas próby ponownego użycia sesji SSL, struktura używa pierwszego elementu <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (jeśli istnieje), lub spróbuje ponownie użyć sesji anonimowe, jeśli <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> jest pusty.  
  
   
  
## Examples  
 Poniższy przykład kodu, ustanawia połączenie SSL z serwerem SMTP i używa połączenia, aby wysłać wiadomość e-mail.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia używane do uwierzytelnić nadawcę.</summary>
        <value>
          <see cref="T:System.Net.ICredentialsByHost" /> Reprezentujący poświadczenia na potrzeby uwierzytelniania; lub <see langword="null" /> Jeśli żadne poświadczenia nie zostały określone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre serwery SMTP wymagają uwierzytelnienia klienta przed serwer będzie wysyłał wiadomości e-mail w jej imieniu. Aby korzystać z poświadczeń sieciowych Twojej domyślnej, można ustawić <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> do `true` zamiast ustawienie tej właściwości. Jeśli <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwość jest ustawiona na `false,` następnie wartość ustawiona w <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwość będzie używana dla poświadczeń podczas nawiązywania połączenia z serwerem. Jeśli <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwość jest ustawiona na `false` i <xref:System.Net.Mail.SmtpClient.Credentials%2A> nie ustawiono właściwości, a następnie wiadomości e-mail są wysyłane do serwera anonimowo.  
  
 Informacje o poświadczeniach można także określić przy użyciu aplikacji i plików konfiguracji maszyny. Aby uzyskać więcej informacji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje jest określony, przy użyciu <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości, informacje te zastąpienia ustawień pliku konfiguracji.  
  
> [!CAUTION]
>  Jeśli zostanie podane poświadczenia dla uwierzytelniania podstawowego, te są wysyłane do serwera, w postaci zwykłego tekstu. Może to spowodować problem z zabezpieczeniami, ponieważ poświadczenia mogą być wyświetlane i użyte przez inne osoby.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, Ustawianie poświadczeń, używane do wysyłania wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wartość tej właściwości nie można zmienić po wysłaniu wiadomości e-mail.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format dostarczania używane przez <see cref="T:System.Net.Mail.SmtpClient" /> do wysyłania wiadomości e-mail.</summary>
        <value>Zwraca <see cref="T:System.Net.Mail.SmtpDeliveryFormat" />.  Format dostarczania używane przez <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, jak wychodzących wiadomości e-mail, komunikaty będą obsługiwane.</summary>
        <value>
          <see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> Oznacza sposobu dostarczania wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody dostarczania obejmują:  
  
-   Serwer SMTP.  
  
-   Przenoszenie wiadomości e-mail w katalogu pośrednim dla usług IIS, który następnie dostarcza wiadomość.  
  
-   Przenoszenie wiadomości e-mail w katalogu określonym przez <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> celu późniejszego dostarczenia przez inną aplikację.  
  
 Wartość domyślna tej właściwości można również ustawić na maszynie lub pliku konfiguracji aplikacji. Wszelkie zmiany wprowadzone do <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> właściwości zastąpienia ustawień pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła komunikat Zakończ do serwera SMTP, bez problemu zmieniała kończy połączenie TCP i zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy do serwera SMTP, mogą być używane ponownie, jeśli aplikacja chce wysłać wiele wiadomości na ten sam serwer SMTP. Jest to szczególnie przydatne, gdy są używane uwierzytelniania i szyfrowania nawiązania połączenia z serwerem SMTP. Proces uwierzytelniania i ustanowienia sesji protokołu TLS można kosztownych operacji. Wymaganie, aby ponownie ustanowić połączenia dla każdego komunikatu podczas wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji dużej liczby wiadomości e-mail, które wysyła aktualizacje stanu wiadomości e-mail, dystrybucje biuletynu lub alerty w wiadomościach e-mail. Wiele aplikacji klienta poczty e-mail obsługują także trybu offline, w którym użytkownicy można utworzyć wiele wiadomości e-mail, które są wysyłane później, po nawiązaniu połączenia z serwerem SMTP. Jest to typowe dla klienta poczty e-mail wysłać wszystkie wiadomości SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail na inne serwery SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Implementacja klasy pul połączeń SMTP, aby go uniknąć konieczności ponownego nawiązywania połączenia na tym samym serwerze co wiadomości. Aplikacja może ponownie używać tego samego <xref:System.Net.Mail.SmtpClient> obiekt do wysyłania wiadomości e-mail z wielu różnych ten sam serwer SMTP i do wielu różnych serwerów SMTP. W rezultacie nie istnieje sposób do określenia, po zakończeniu aplikacji przy użyciu <xref:System.Net.Mail.SmtpClient> obiekt, a powinien być wyczyszczone.  
  
 Po zakończeniu sesji SMTP i klient chce zakończyć połączenie, jest w stanie wysyłać wiadomości zamknij do serwera, aby wskazać, że ma on dalszych komunikatów do wysłania. Dzięki temu serwer Zwolnij część zasobów skojarzonych z tym połączeniem z klienta i przetwarzać komunikaty, które zostały wysłane przez klienta.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metody wykonuje iterację przez wszystkie ustanowionych połączeń i wysyłania Zamknij komunikat do każdego serwera SMTP, następuje bez problemu zmieniała końcowy połączenia TCP. Te metody również zwolnić zasoby niezarządzane używane przez <xref:System.Net.Sockets.Socket> i opcjonalnie usuwa zarządzane zasoby.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła komunikat Zakończ do serwera SMTP, bez problemu zmieniała kończy połączenie TCP i zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy do serwera SMTP, mogą być używane ponownie, jeśli aplikacja chce wysłać wiele wiadomości na ten sam serwer SMTP. Jest to szczególnie przydatne, gdy są używane uwierzytelniania i szyfrowania nawiązania połączenia z serwerem SMTP. Proces uwierzytelniania i ustanowienia sesji protokołu TLS można kosztownych operacji. Wymaganie, aby ponownie ustanowić połączenia dla każdego komunikatu podczas wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji dużej liczby wiadomości e-mail, które wysyła aktualizacje stanu wiadomości e-mail, dystrybucje biuletynu lub alerty w wiadomościach e-mail. Wiele aplikacji klienta poczty e-mail obsługują także trybu offline, w którym użytkownicy można utworzyć wiele wiadomości e-mail, które są wysyłane później, po nawiązaniu połączenia z serwerem SMTP. Jest to typowe dla klienta poczty e-mail wysłać wszystkie wiadomości SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail na inne serwery SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Implementacja klasy pul połączeń SMTP, aby go uniknąć konieczności ponownego nawiązywania połączenia na tym samym serwerze co wiadomości. Aplikacja może ponownie używać tego samego <xref:System.Net.Mail.SmtpClient> obiekt do wysyłania wiadomości e-mail z wielu różnych ten sam serwer SMTP i do wielu różnych serwerów SMTP. W rezultacie nie istnieje sposób do określenia, po zakończeniu aplikacji przy użyciu <xref:System.Net.Mail.SmtpClient> obiekt, a powinien być wyczyszczone.  
  
 Po zakończeniu sesji SMTP i klient chce zakończyć połączenie, jest w stanie wysyłać wiadomości zamknij do serwera, aby wskazać, że ma on dalszych komunikatów do wysłania. Dzięki temu serwer Zwolnij część zasobów skojarzonych z tym połączeniem z klienta i przetwarzać komunikaty, które zostały wysłane przez klienta.  
  
 Wywoływanie <xref:System.Net.Mail.SmtpClient.Dispose%2A> metody <xref:System.Net.Mail.SmtpClient> obiekt, który jest wykonywany asynchronicznego <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operacja spowoduje anulowanie operacji wysyłania tak, jakby <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> miał zostanie wywołana metoda.  
  
 <xref:System.Net.Mail.SmtpClient> Nie ma klasy `Finalize` metody. Dzięki czemu aplikacja musi wywoływać <xref:System.Net.Mail.SmtpClient.Dispose%2A> jawnie zwolnić zasoby.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda wykonuje iterację przez wszystkie ustanowionych połączeń do serwera SMTP, określone w <xref:System.Net.Mail.SmtpClient.Host%2A> właściwość i wysyła komunikat QUIT następuje bez problemu zmieniała końcowy połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda również zwalnia zasoby niezarządzane używane przez podstawowe <xref:System.Net.Sockets.Socket>.  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Pozostawia metoda <xref:System.Net.Mail.SmtpClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Net.Mail.SmtpClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Net.Mail.SmtpClient> zajmowaną przez wystąpienie.  
  
 Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Net.Mail.SmtpClient.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Net.Mail.SmtpClient>. W przeciwnym razie zasoby, których używa nie zostanie zwolniona, aby moduł zbierający elementy bezużyteczne mógł odzyskać pamięć.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do wersji tylko niezarządzane zasoby.</param>
        <summary>Wysyła komunikat Zakończ do serwera SMTP, bez problemu zmieniała kończy połączenie TCP, zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy i opcjonalnie usuwa zarządzane zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy do serwera SMTP, mogą być używane ponownie, jeśli aplikacja chce wysłać wiele wiadomości na ten sam serwer SMTP. Jest to szczególnie przydatne, gdy są używane uwierzytelniania i szyfrowania nawiązania połączenia z serwerem SMTP. Proces uwierzytelniania i ustanowienia sesji protokołu TLS można kosztownych operacji. Wymaganie, aby ponownie ustanowić połączenia dla każdego komunikatu podczas wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji dużej liczby wiadomości e-mail, które wysyła aktualizacje stanu wiadomości e-mail, dystrybucje biuletynu lub alerty w wiadomościach e-mail. Wiele aplikacji klienta poczty e-mail obsługują także trybu offline, w którym użytkownicy można utworzyć wiele wiadomości e-mail, które są wysyłane później, po nawiązaniu połączenia z serwerem SMTP. Jest to typowe dla klienta poczty e-mail wysłać wszystkie wiadomości SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail na inne serwery SMTP.  
  
 <xref:System.Net.Mail.SmtpClient> Implementacja klasy pul połączeń SMTP, aby go uniknąć konieczności ponownego nawiązywania połączenia na tym samym serwerze co wiadomości. Aplikacja może ponownie używać tego samego <xref:System.Net.Mail.SmtpClient> obiekt do wysyłania wiadomości e-mail z wielu różnych ten sam serwer SMTP i do wielu różnych serwerów SMTP. W rezultacie nie istnieje sposób do określenia, po zakończeniu aplikacji przy użyciu <xref:System.Net.Mail.SmtpClient> obiekt, a powinien być wyczyszczone.  
  
 Po zakończeniu sesji SMTP i klient chce zakończyć połączenie, jest w stanie wysyłać wiadomości zamknij do serwera, aby wskazać, że ma on dalszych komunikatów do wysłania. Dzięki temu serwer Zwolnij część zasobów skojarzonych z tym połączeniem z klienta i przetwarzać komunikaty, które zostały wysłane przez klienta.  
  
 Wywoływanie <xref:System.Net.Mail.SmtpClient.Dispose%2A> metody <xref:System.Net.Mail.SmtpClient> obiekt, który jest wykonywany asynchronicznego <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operacja spowoduje anulowanie operacji wysyłania tak, jakby <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> miał zostanie wywołana metoda.  
  
 <xref:System.Net.Mail.SmtpClient> Nie ma klasy `Finalize` metody. Dzięki czemu aplikacja musi wywoływać <xref:System.Net.Mail.SmtpClient.Dispose%2A> jawnie zwolnić zasoby.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda wykonuje iterację przez wszystkie ustanowionych połączeń do serwera SMTP, określone w <xref:System.Net.Mail.SmtpClient.Host%2A> właściwość i wysyła komunikat QUIT następuje bez problemu zmieniała końcowy połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda również zwalnia zasoby niezarządzane używane przez <xref:System.Net.Sockets.Socket> i opcjonalnie usuwa zarządzane zasoby.  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Pozostawia metoda <xref:System.Net.Mail.SmtpClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Net.Mail.SmtpClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Net.Mail.SmtpClient> zajmowaną przez wystąpienie.  
  
 Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Net.Mail.SmtpClient.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Net.Mail.SmtpClient>. W przeciwnym razie zasoby, których używa nie zostanie zwolniona, aby moduł zbierający elementy bezużyteczne mógł odzyskać pamięć.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określ czy <see cref="T:System.Net.Mail.SmtpClient" /> używa protokołu Secure Sockets Layer (SSL) do szyfrowania połączenia.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Net.Mail.SmtpClient" /> używa protokołu SSL; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> Właściwość określa, czy dostęp do określonego serwera poczty SMTP jest używany protokół SSL.  
  
 Wartość domyślna tej właściwości można również ustawić na maszynie lub pliku konfiguracji aplikacji. Wszelkie zmiany wprowadzone do <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwości zastąpienia ustawień pliku konfiguracji.  
  
 <xref:System.Net.Mail.SmtpClient> Klasy obsługuje tylko rozszerzenia usługi SMTP dla bezpiecznego protokołu SMTP za pośrednictwem Transport Layer Security zgodnie z definicją w dokumencie RFC 3207. W tym trybie rozpoczyna się i niezaszyfrowanego kanału sesji SMTP, a następnie polecenie STARTTLS wystawiony przez klienta do serwera, aby przełączyć się do bezpiecznej komunikacji przy użyciu protokołu SSL. Zobacz RFC 3207 opublikowane przez Internet Engineering Task Force (IETF) Aby uzyskać więcej informacji.  
  
 Metody alternatywne połączenie jest, gdzie SSL zostanie utworzona sesja na początku przed protokołu wysłania polecenia. Tej metody połączenia jest czasami nazywane SMTP/SSL, SMTP, za pośrednictwem protokołu SSL lub SMTPS i domyślnie używa portu 465. Ta metoda alternatywne połączenie przy użyciu protokołu SSL nie jest obecnie obsługiwane.  
  
 Możesz użyć <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> do określenia, które certyfikaty klienta powinny być używane do nawiązania połączenia SSL. <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> Umożliwia odrzucanie certyfikat dostarczony przez serwer SMTP. <xref:System.Net.ServicePointManager.SecurityProtocol%2A> Właściwość pozwala określić wersję protokołu SSL do użycia.  
  
> [!NOTE]
>  Jeśli <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwość jest ustawiona na `true`, i serwera poczty SMTP nie ogłasza STARTTLS w odpowiedzi na polecenie EHLO polecenia następnie wywołania <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zgłosi metody <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Poniższy przykład kodu, ustanawia połączenie SSL z serwerem SMTP i używa połączenia, aby wysłać wiadomość e-mail.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę lub adres IP hosta używany dla transakcji SMTP.</summary>
        <value>Element <see cref="T:System.String" /> zawierający nazwę lub adres IP komputera do użycia dla transakcji SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości można również ustawić za pomocą konstruktorów lub aplikacji lub plik konfiguracji komputera. Aby uzyskać więcej informacji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Jeśli informacji jest określony za pomocą tej właściwości, informacje te zastąpienia ustawień pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wysłanie wiadomości e-mail przy użyciu hosta i port określony w pliku konfiguracji aplikacji.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji zestawu jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość określona dla operacji zestawu jest równa <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">Wartość tej właściwości nie można zmienić po wysłaniu wiadomości e-mail.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z <xref:System.Net.Mail.SmtpClient> zastępować <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> metodę w celu dodatkowych zadań, kiedy <xref:System.Net.Mail.SmtpClient.SendCompleted> wystąpi zdarzenie.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> Umożliwia także klasy pochodne, aby obsłużyć <xref:System.Net.Mail.SmtpClient.SendCompleted> bez dołączając delegata. Jest to preferowana metoda obsługi <xref:System.Net.Mail.SmtpClient.SendCompleted> w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> w klasie pochodnej, pamiętaj wywołać klasy bazowej <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> otrzymywać metody, która jest zarejestrowana delegatów <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> zdarzeń.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia folderu oszczędzić wiadomości e-mail do przetworzenia przez lokalny serwer SMTP w aplikacji.</summary>
        <value>A <see cref="T:System.String" /> określająca katalog podnoszenia dla wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiadomości e-mail w katalogu pośrednim są automatycznie wysyłane przez lokalny serwer SMTP (jeśli istnieje), takich jak usługi IIS.  
  
 Wartość domyślna tej właściwości można również ustawić na maszynie lub pliku konfiguracji aplikacji. Wszelkie zmiany wprowadzone do <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> właściwości zastąpienia ustawień pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia port używany dla transakcji SMTP.</summary>
        <value>
          <see cref="T:System.Int32" /> Zawierającą numer portu na hoście SMTP. Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości można również ustawić za pomocą konstruktorów lub aplikacji lub plik konfiguracji komputera. Aby uzyskać więcej informacji na temat korzystania z plików konfiguracji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacji jest określony za pomocą tej właściwości, informacje te zastąpienia ustawień pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wysłanie wiadomości e-mail przy użyciu hosta i port określony w pliku konfiguracji aplikacji.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest mniejsza niż lub równy zeru.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość tej właściwości nie można zmienić po wysłaniu wiadomości e-mail.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby ustawić <see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwości. Powiązane wyliczenie: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła wiadomość e-mail do serwera SMTP do dostarczenia. Te metody zablokowanie, gdy komunikat jest przesyłane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Element <see cref="T:System.Net.Mail.MailMessage" /> zawierający komunikat do wysłania.</param>
        <summary>Wysyła określoną wiadomość do serwera SMTP do dostarczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia blokowanie, gdy wiadomości e-mail są przesyłane. Można określić wartość limitu czasu za pomocą <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwości, aby upewnić się, że metoda zwraca po upływie określonego czasu upłynie.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> należy ustawić właściwości za pomocą plików konfiguracji przez ustawienie odpowiednich właściwości lub przez przekazanie tych informacji do <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> konstruktora.  
  
 Nie można wywołać tej metody, w przypadku wiadomości są wysyłane asynchronicznie.  
  
 Jeśli SMTP host wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> lub <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości.  
  
 Jeśli zostanie wyświetlony <xref:System.Net.Mail.SmtpException> wyjątek, sprawdź <xref:System.Net.Mail.SmtpException.StatusCode%2A> właściwości, aby znaleźć przyczynę, operacji nie powiodło się. <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, która wskazuje przyczynę, operacji nie powiodło się.  
  
 Podczas wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.Send%2A> do wielu odbiorców i SMTP server akceptuje niektórzy adresaci jako prawidłowy i odrzuca innych <xref:System.Net.Mail.SmtpClient.Send%2A> wysyła wiadomość e-mail do adresatów akceptowane a następnie <xref:System.Net.Mail.SmtpFailedRecipientsException> zgłaszany (lub <xref:System.Net.Mail.SmtpFailedRecipientException> jeśli tylko jeden Adresat jest odrzucana). Element <xref:System.Net.Mail.SmtpFailedRecipientsException> zawiera listę adresatów, które zostały odrzucone.
  
> [!NOTE]
>  Jeśli <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwość jest ustawiona na `true`, i serwera poczty SMTP nie ogłasza STARTTLS w odpowiedzi na polecenie EHLO polecenia następnie wywołania <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zgłosi metody <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, przy użyciu tej metody.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" /> ma <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> połączenie w toku.  - lub - <see cref="P:System.Net.Mail.MailMessage.From" /> jest <see langword="null" />.  - lub - brak jest adresatów określonych w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, i <see cref="P:System.Net.Mail.MailMessage.Bcc" /> właściwości.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest <see langword="null" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest taki sam, jak ciąg pusty ("").  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Port" /> jest zero ujemna liczba lub większy niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  - lub - uwierzytelnianie nie powiodło się.  - lub - upłynął limit czasu operacji.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true" /> ale <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true," /> , ale serwer poczty SMTP nie anonsować STARTTLS w odpowiedzi na polecenie EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">
          <paramref name="message" /> Nie można dostarczyć do jednego z adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">
          <paramref name="message" /> Nie można dostarczyć do dwóch lub więcej adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Wyliczenie skojarzone: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> zawierająca informacje adres nadawcy wiadomości.</param>
        <param name="recipients">Element <see cref="T:System.String" /> zawierający adresy, które komunikat jest wysyłany do.</param>
        <param name="to">Element <see cref="T:System.String" /> zawierający adresy, które komunikat jest wysyłany do.</param>
        <param name="subject">A <see cref="T:System.String" /> zawierającą wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> zawierającą treść wiadomości.</param>
        <summary>Wysyła wiadomość podany adres e-mail do serwera SMTP do dostarczenia. Nadawca wiadomości adresatów, tematu oraz treści wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia blokowanie, gdy wiadomości e-mail są przesyłane. Można określić wartość limitu czasu za pomocą <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwości, aby upewnić się, że metoda zwraca po upływie określonego czasu upłynie.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> należy ustawić właściwości za pomocą plików konfiguracji przez ustawienie odpowiednich właściwości lub przez przekazanie tych informacji do <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> konstruktora.  
  
 Nie można wywołać tej metody, w przypadku wiadomości są wysyłane asynchronicznie.  
  
 Jeśli SMTP host wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> lub <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości.  
  
 Jeśli zostanie wyświetlony <xref:System.Net.Mail.SmtpException> wyjątek, sprawdź <xref:System.Net.Mail.SmtpException.StatusCode%2A> właściwości, aby znaleźć przyczynę, operacji nie powiodło się. <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, która wskazuje przyczynę, operacji nie powiodło się.  

 Podczas wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.Send%2A> do wielu odbiorców i SMTP server akceptuje niektórzy adresaci jako prawidłowy i odrzuca innych <xref:System.Net.Mail.SmtpClient.Send%2A> wysyła wiadomość e-mail do adresatów akceptowane a następnie <xref:System.Net.Mail.SmtpFailedRecipientsException> zgłaszany (lub <xref:System.Net.Mail.SmtpFailedRecipientException> jeśli tylko jeden Adresat jest odrzucana). Element <xref:System.Net.Mail.SmtpFailedRecipientsException> zawiera listę adresatów, które zostały odrzucone.
 
> [!NOTE]
>  Jeśli <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwość jest ustawiona na `true`, i serwera poczty SMTP nie ogłasza STARTTLS w odpowiedzi na polecenie EHLO polecenia następnie wywołania <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zgłosi metody <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> jest <see langword="null" />.  - lub - <paramref name="recipients" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> jest <see cref="F:System.String.Empty" />.  - lub - <paramref name="recipients" /> jest <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" /> ma <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> połączenie w toku.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest <see langword="null" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest taki sam, jak ciąg pusty ("").  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Port" /> jest zero ujemna liczba lub większy niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  - lub - uwierzytelnianie nie powiodło się.  - lub - upłynął limit czasu operacji.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true" /> ale <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true," /> , ale serwer poczty SMTP nie anonsować STARTTLS w odpowiedzi na polecenie EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">
          <paramref name="message" /> Nie można dostarczyć do jednego z adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">
          <paramref name="message" /> Nie można dostarczyć do dwóch lub więcej adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Wyliczenie skojarzone: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła wiadomość e-mail. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Element <see cref="T:System.Net.Mail.MailMessage" /> zawierający komunikat do wysłania.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przekazywany do metody wywoływane, gdy operacja asynchroniczna.</param>
        <summary>Wysyła wiadomość podany adres e-mail do serwera SMTP do dostarczenia. Ta metoda nie blokuje wątek wywołujący i umożliwia obiektowi wywołującemu przekazać obiekt do metody, która jest wywoływana po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby otrzymywać powiadomienia, gdy wiadomość e-mail została wysłana lub operacja została anulowana, należy dodać program obsługi zdarzeń do <xref:System.Net.Mail.SmtpClient.SendCompleted> zdarzeń. Możesz anulować <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operacji przez wywołanie metody <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metody.  
  
 Po wywołaniu <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, należy poczekać do przekazywania wiadomości e-mail do wykonania przed próbą wysłania innego wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> musi być ustawiony za pomocą plików konfiguracji, ustawiając odpowiednich właściwości lub przez przekazanie tych informacji do <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> konstruktora.  
  
 Jeśli SMTP host wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> lub <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości.  
  
 Jeśli zostanie wyświetlony <xref:System.Net.Mail.SmtpException> wyjątek, sprawdź <xref:System.Net.Mail.SmtpException.StatusCode%2A> właściwości, aby znaleźć przyczynę, operacji nie powiodło się. <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, która wskazuje przyczynę, operacji nie powiodło się.  
  
 Podczas wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> do wielu odbiorców, serwer SMTP akceptuje niektórzy adresaci jako prawidłowy i odrzuca innych <xref:System.Net.Mail.SmtpException> zgłaszany <xref:System.NullReferenceException> wyjątek wewnętrzny. W takim przypadku <xref:System.Net.Mail.SmtpClient.SendAsync%2A> nie uda się wysłać wiadomość e-mail do dowolnych odbiorców.  
  
 Aplikacja może wykryć błąd sprawdzania poprawności certyfikatu serwera, sprawdzając <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> właściwość jest przekazywana do <xref:System.Net.Mail.SendCompletedEventHandler> delegować.  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> Właściwość nie ma wpływu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> wywołania.  
  
 Aby wysłać poczty e-mail i blok, gdy są przesyłane do serwera SMTP, użyj jednej z <xref:System.Net.Mail.SmtpClient.Send%2A> metody.  
  
> [!NOTE]
>  Jeśli <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwość jest ustawiona na `true`, i serwera poczty SMTP nie ogłasza STARTTLS w odpowiedzi na polecenie EHLO polecenia następnie wywołania <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zgłosi metody <xref:System.Net.Mail.SmtpException>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.  - lub - <see cref="P:System.Net.Mail.MailMessage.From" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" /> ma <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> połączenie w toku.  - lub - brak jest adresatów określonych w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, i <see cref="P:System.Net.Mail.MailMessage.Bcc" /> właściwości.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest <see langword="null" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest taki sam, jak ciąg pusty ("").  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Port" /> jest zero ujemna liczba lub większy niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  - lub - uwierzytelnianie nie powiodło się.  - lub - upłynął limit czasu operacji.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true" /> ale <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true," /> , ale serwer poczty SMTP nie anonsować STARTTLS w odpowiedzi na polecenie EHLO.  - lub - <paramref name="message" /> nie można dostarczyć do jednego lub więcej adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Wyliczenie skojarzone: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> zawierająca informacje adres nadawcy wiadomości.</param>
        <param name="recipients">Element <see cref="T:System.String" /> zawierający adres, który komunikat jest wysyłany do.</param>
        <param name="to">Element <see cref="T:System.String" /> zawierający adres, który komunikat jest wysyłany do.</param>
        <param name="subject">A <see cref="T:System.String" /> zawierającą wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> zawierającą treść wiadomości.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przekazywany do metody wywoływane, gdy operacja asynchroniczna.</param>
        <summary>Wysyła wiadomość e-mail do serwera SMTP do dostarczenia. Nadawca wiadomości adresatów, tematu oraz treści wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów. Ta metoda nie blokuje wątek wywołujący i umożliwia obiektowi wywołującemu przekazać obiekt do metody, która jest wywoływana po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby otrzymywać powiadomienia, gdy wiadomość e-mail została wysłana lub operacja została anulowana, należy dodać program obsługi zdarzeń do <xref:System.Net.Mail.SmtpClient.SendCompleted> zdarzeń. Możesz anulować <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operacji przez wywołanie metody <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metody.  
  
 Po wywołaniu <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, należy poczekać do przekazywania wiadomości e-mail do wykonania przed próbą wysłania innego wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> można ustawić właściwości, za pomocą plików konfiguracji lub przez ustawienie właściwości lub przekazywanie tych informacji do <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> konstruktora.  
  
 Jeśli SMTP host wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> lub <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości.  
  
 Jeśli zostanie wyświetlony <xref:System.Net.Mail.SmtpException> wyjątek, sprawdź <xref:System.Net.Mail.SmtpException.StatusCode%2A> właściwości, aby znaleźć przyczynę, operacji nie powiodło się. <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, która wskazuje przyczynę, operacji nie powiodło się.  
  
 Podczas wysyłania wiadomości e-mail przy użyciu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> do wielu odbiorców, serwer SMTP akceptuje niektórzy adresaci jako prawidłowy i odrzuca innych <xref:System.Net.Mail.SmtpException> zgłaszany <xref:System.NullReferenceException> wyjątek wewnętrzny. W takim przypadku <xref:System.Net.Mail.SmtpClient.SendAsync%2A> nie uda się wysłać wiadomość e-mail do dowolnych odbiorców.  
  
 Aplikacja może wykryć błąd sprawdzania poprawności certyfikatu serwera, sprawdzając <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> właściwość jest przekazywana do <xref:System.Net.Mail.SendCompletedEventHandler> delegować.  
  
 <xref:System.Net.Mail.SmtpClient.Timeout%2A> Właściwość nie ma wpływu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> wywołania.  
  
 Aby wysłać poczty e-mail i blok, gdy są przesyłane do serwera SMTP, użyj jednej z <xref:System.Net.Mail.SmtpClient.Send%2A> metody.  
  
> [!NOTE]
>  Jeśli <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwość jest ustawiona na `true`, i serwera poczty SMTP nie ogłasza STARTTLS w odpowiedzi na polecenie EHLO polecenia następnie wywołania <xref:System.Net.Mail.SmtpClient.Send%2A> lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> zgłosi metody <xref:System.Net.Mail.SmtpException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> jest <see langword="null" />.  - lub - <paramref name="recipient" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> jest <see cref="F:System.String.Empty" />.  - lub - <paramref name="recipient" /> jest <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" /> ma <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> połączenie w toku.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest <see langword="null" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest taki sam, jak ciąg pusty ("").  - lub - <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Port" /> jest zero ujemna liczba lub większy niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  - lub - uwierzytelnianie nie powiodło się.  - lub - upłynął limit czasu operacji.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true" /> ale <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  - lub - <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ustawiono <see langword="true," /> , ale serwer poczty SMTP nie anonsować STARTTLS w odpowiedzi na polecenie EHLO.  Nie można dostarczyć komunikatu do jednego lub więcej adresatów w - lub - <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Wyliczenie skojarzone: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje operację asynchroniczną do wysyłania wiadomości e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metodę, aby anulować oczekujące <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operacji. Jeśli ma oczekujących na wysłanie wiadomości e-mail, ta metoda zwalnia zasoby używane do przechowywania wiadomości e-mail. Jeśli nie ma żadnych wiadomości e-mail oczekujących na wysłanie, ta metoda nie działa.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje asynchronicznego wysyłania wiadomości e-mail. Użytkownik ma możliwość anulowania wiadomości e-mail, jeśli nie została wysłana.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji wysyłania asynchronicznego wiadomości e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.SendCompleted> Zdarzenie jest zgłaszane w każdorazowo po zakończeniu operacji wysyłania wiadomości e-mail są wysyłane asynchronicznie. Aby wysłać wiadomość e-mail asynchronicznie, należy użyć <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> Delegat dla obiektu jest <xref:System.Net.Mail.SmtpClient.SendCompleted>. <xref:System.ComponentModel.AsyncCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń za pomocą danych zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje asynchronicznego wysyłania wiadomości e-mail.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła określoną wiadomość do serwera SMTP do dostarczenia jako operację asynchroniczną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Element <see cref="T:System.Net.Mail.MailMessage" /> zawierający komunikat do wysłania.</param>
        <summary>Wysyła określoną wiadomość do serwera SMTP do dostarczenia jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task>> obiekt zostanie ukończone po wysłaniu wiadomości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="recipients" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> zawierająca informacje adres nadawcy wiadomości.</param>
        <param name="recipients">Element <see cref="T:System.String" /> zawierający adresy, które komunikat jest wysyłany do.</param>
        <param name="subject">A <see cref="T:System.String" /> zawierającą wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> zawierającą treść wiadomości.</param>
        <summary>Wysyła określoną wiadomość do serwera SMTP do dostarczenia jako operację asynchroniczną. . Nadawca wiadomości adresatów, tematu oraz treści wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task>> obiekt zostanie ukończone po wysłaniu wiadomości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> jest <see langword="null" />.  - lub - <paramref name="recipients" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> jest <see cref="F:System.String.Empty" />.  - lub - <paramref name="recipients" /> jest <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera połączenie sieciowe, używany do przesyłania wiadomości e-mail.</summary>
        <value>A <see cref="T:System.Net.ServicePoint" /> łączący się <see cref="P:System.Net.Mail.SmtpClient.Host" /> właściwość używana dla protokołu SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia dla <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> właściwości są tworzone przy użyciu domyślnych ustawień w aplikacji lub pliki konfiguracji maszyn i <xref:System.Net.ServicePointManager> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, uzyskiwanie dostępu do <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> właściwości.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest <see langword="null" /> lub pustym ciągiem ("").  - lub - <see cref="P:System.Net.Mail.SmtpClient.Port" /> wynosi zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy usługi (SPN) na potrzeby uwierzytelniania przy użyciu mechanizmu rozszerzonej ochrony.</summary>
        <value>Element <see cref="T:System.String" /> , który określa nazwę SPN dla ochrony rozszerzonej. Wartością domyślną dla tej nazwy SPN ma postać "SMTPSVC /&lt;hosta&gt;" gdzie &lt;hosta&gt; jest nazwą hosta serwera poczty SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.TargetName%2A> Właściwość jest używana przy użyciu zintegrowanego uwierzytelniania Windows, gdy aplikacja używa ochrony rozszerzonej. <xref:System.Net.Mail.SmtpClient> Mogą udzielić im rozszerzonej ochrony, upewnij się, że odpowiedzi żądania poświadczeń zawierają informacje o określonej usługi (SPN), jeśli to konieczne, channel określonych informacji (token wiązania kanałów lub CBT). Dzięki tym informacjom wymianę poświadczeń usługi mają możliwość zapewnienia lepszej ochrony przed złośliwym korzystaniem z odpowiedzi żądania poświadczeń, które może być nieprawidłowo uzyskany.  
  
 Wartość domyślna tej właściwości można również ustawić na maszynie lub pliku konfiguracji aplikacji. Wszelkie zmiany wprowadzone do <xref:System.Net.Mail.SmtpClient.TargetName%2A> właściwości zastąpienia ustawień pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która określa czas, po którym synchronicznego <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> upłynie limit czasu wywołania.</summary>
        <value>
          <see cref="T:System.Int32" /> Określająca wartość limitu czasu w milisekundach. Wartość domyślna to 100 000 (100 sekund).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wywołuje w celu <xref:System.Net.Mail.SmtpClient.Send%2A> bloku metody do momentu ukończenia operacji. Jeśli ustawisz <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwości do wartości dodatniej i <xref:System.Net.Mail.SmtpClient.Send%2A> nie można ukończyć operacji w wyznaczonym czasie <xref:System.Net.Mail.SmtpClient> klasy zgłasza <xref:System.Net.Mail.SmtpException> wyjątku.  
  
 Aby wysłać wiadomość i kontynuować wykonywanie w wątku aplikacji, użyj <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, pobieranie i ustawianie wartości limitu czasu.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji set była mniejsza niż zero.</exception>
        <exception cref="T:System.InvalidOperationException">Wartość tej właściwości nie można zmienić po wysłaniu wiadomości e-mail.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość kontrolować, czy <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> są wysyłane z żądania.</summary>
        <value>
          <see langword="true" /> Jeśli używane są domyślne poświadczenia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre serwery SMTP wymagają uwierzytelnienia klienta przed wysłaniem wiadomości e-mail w jej imieniu. Ustaw tę właściwość na `true` podczas to <xref:System.Net.Mail.SmtpClient> obiektu powinien Jeśli jest to wymagane przez serwer uwierzytelniania za pomocą domyślnych poświadczeń aktualnie zalogowanego użytkownika. Aplikacje klienckie to żądane zachowanie w większości scenariuszy.  
  
 Informacje o poświadczeniach można także określić przy użyciu aplikacji i plików konfiguracji maszyny. Aby uzyskać więcej informacji, zobacz [ &lt;mailSettings&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Jeśli <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwość jest ustawiona na `false,` następnie wartość ustawiona w <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwość będzie używana dla poświadczeń podczas nawiązywania połączenia z serwerem. Jeśli <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwość jest ustawiona na `false` i <xref:System.Net.Mail.SmtpClient.Credentials%2A> nie ustawiono właściwości, a następnie wiadomości e-mail są wysyłane do serwera anonimowo.  
  
> [!CAUTION]
>  Jeśli zostanie podane poświadczenia dla uwierzytelniania podstawowego, te są wysyłane do serwera, w postaci zwykłego tekstu. Może to spowodować problem z zabezpieczeniami, ponieważ poświadczenia mogą być wyświetlane i użyte przez inne osoby.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, użycie tej właściwości.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wartość tej właściwości nie można zmienić po wysłaniu wiadomości e-mail.</exception>
      </Docs>
    </Member>
  </Members>
</Type>