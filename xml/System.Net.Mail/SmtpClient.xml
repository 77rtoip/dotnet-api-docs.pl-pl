<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed28822361c2692f9c19e5d91499617125ec2436" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69114468" /></Metadata><TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia aplikacjom wysyłanie wiadomości e-mail przy użyciu Simple Mail Transfer Protocol (SMTP). Typ <c>SmtpClient</c> jest obecnie przestarzały.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `System.Net.Mail.SmtpClient` Klasa jest używana do wysyłania wiadomości e-mail do serwera SMTP w celu dostarczenia. Protokół SMTP jest zdefiniowany w dokumencie RFC 2821, który jest dostępny pod [https://www.ietf.org](https://www.ietf.org/)adresem.  

> [!IMPORTANT]
>  Nie zalecamy używania `SmtpClient` klasy do nowych celów programistycznych. Aby uzyskać więcej informacji, zobacz [SmtpClient nie powinien być używany](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md) w serwisie GitHub.

 Klasy przedstawione w poniższej tabeli służą do konstruowania wiadomości e-mail, które mogą być wysyłane przy <xref:System.Net.Mail.SmtpClient>użyciu programu.  
  
|Class|Opis|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Reprezentuje pliki załączników. Ta klasa umożliwia dołączanie plików, strumieni lub tekstu do wiadomości e-mail.|  
|<xref:System.Net.Mail.MailAddress>|Reprezentuje adres e-mail nadawcy i adresatów.|  
|<xref:System.Net.Mail.MailMessage>|Reprezentuje wiadomość e-mail.|  
  
 Aby utworzyć i wysłać wiadomość e-mail przy użyciu <xref:System.Net.Mail.SmtpClient>, należy określić następujące informacje:  
  
-   Serwer hosta SMTP używany do wysyłania wiadomości e-mail. Zobacz właściwości <xref:System.Net.Mail.SmtpClient.Port%2A>i. <xref:System.Net.Mail.SmtpClient.Host%2A>  
  
-   Poświadczenia na potrzeby uwierzytelniania, jeśli jest to wymagane przez serwer SMTP. <xref:System.Net.Mail.SmtpClient.Credentials%2A> Zobacz właściwość.  
  
-   Adres e-mail nadawcy. <xref:System.Net.Mail.SmtpClient.Send%2A> Zobacz i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody, które przyjmują `from` parametr. Zobacz <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> również właściwość.  
  
-   Adres lub adresy e-mail adresatów. <xref:System.Net.Mail.SmtpClient.Send%2A> Zobacz i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody, które przyjmują `recipient` parametr. Zobacz <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> również właściwość.  
  
-   Zawartość komunikatu. <xref:System.Net.Mail.SmtpClient.Send%2A> Zobacz i <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody, które przyjmują `body` parametr. Zobacz <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> również właściwość.  
  
 Aby dołączyć załącznik z wiadomością e-mail, najpierw utwórz załącznik przy użyciu <xref:System.Net.Mail.Attachment> klasy, a następnie dodaj go do komunikatu przy <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> użyciu właściwości. W zależności od czytnika poczty e-mail używanej przez odbiorców i typ pliku załącznika Niektórzy adresaci mogą nie być w stanie odczytać załącznika. W przypadku klientów, którzy nie mogą wyświetlić załącznika w jego oryginalnym formularzu, można określić alternatywne widoki przy użyciu <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> właściwości.  
  
 W .NET Framework można użyć plików konfiguracji aplikacji lub komputera, aby określić domyślne wartości hosta, portu i poświadczeń dla wszystkich <xref:System.Net.Mail.SmtpClient> obiektów. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; mailSettings element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Platforma .NET Core nie obsługuje ustawiania wartości domyślnych. Aby obejść ten problem, należy <xref:System.Net.Mail.SmtpClient> bezpośrednio ustawić odpowiednie właściwości.  
  
 Aby wysłać wiadomość e-mail i blokadę podczas oczekiwania na przesłanie wiadomości e-mail do serwera SMTP, użyj jednej z metod synchronicznych <xref:System.Net.Mail.SmtpClient.Send%2A> . Aby umożliwić kontynuowanie wykonywania wątku głównego programu podczas przesyłania wiadomości e-mail, użyj jednej z metod asynchronicznych <xref:System.Net.Mail.SmtpClient.SendAsync%2A> . Zdarzenie <xref:System.Net.Mail.SmtpClient.SendCompleted> jest zgłaszane, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> gdy operacja zostanie ukończona. Aby odebrać to zdarzenie, musisz dodać <xref:System.Net.Mail.SendCompletedEventHandler> delegata do. <xref:System.Net.Mail.SmtpClient.SendCompleted> Delegat musi odwoływać się do metody wywołania zwrotnego, <xref:System.Net.Mail.SmtpClient.SendCompleted> która obsługuje powiadomienia o zdarzeniach. <xref:System.Net.Mail.SendCompletedEventHandler> Aby anulować asynchroniczne przesyłanie wiadomości e-mail, użyj <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> metody.  
  
> [!NOTE]
>  Jeśli trwa przesyłanie wiadomości e-mail i nastąpi wywołanie lub <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpClient.Send%2A> ponowne połączenie, zostanie wyświetlony komunikat <xref:System.InvalidOperationException>.  
  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy z serwerem SMTP może być ponownie używane, jeśli aplikacja chce wysyłać wiele komunikatów do tego samego serwera SMTP. Jest to szczególnie przydatne w przypadku, gdy używane jest uwierzytelnianie lub szyfrowanie, nawiąż połączenie z serwerem SMTP. Proces uwierzytelniania i ustanawiania sesji TLS może być kosztowny. Wymaganie ponownego nawiązania połączenia dla każdego komunikatu w przypadku wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji poczty e-mail, które wysyłają aktualizacje stanu wiadomości e-mail, dystrybucje biuletynów lub alerty e-mail. Ponadto wiele aplikacji klienckich poczty e-mail obsługuje tryb offline, w którym użytkownicy mogą tworzyć wiele wiadomości e-mail wysyłanych później podczas ustanawiania połączenia z serwerem SMTP. Zwykle klient poczty e-mail wysyła wszystkie komunikaty SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail do innych serwerów SMTP.  
  
 Implementacja <xref:System.Net.Mail.SmtpClient> klasy pule połączeń SMTP, aby uniknąć narzutu ponownego nawiązywania połączenia dla każdej wiadomości na ten sam serwer. Aplikacja może ponownie użyć tego samego <xref:System.Net.Mail.SmtpClient> obiektu do wysyłania wielu różnych wiadomości e-mail do tego samego serwera SMTP i wielu różnych serwerów SMTP. W związku z tym nie ma możliwości ustalenia, kiedy aplikacja jest ukończona przy użyciu <xref:System.Net.Mail.SmtpClient> obiektu i powinna zostać wyczyszczona.  
  
 Gdy sesja SMTP zostanie zakończona, a klient chce zakończyć połączenie, musi wysłać komunikat zamknięcia do serwera, aby wskazać, że nie ma więcej komunikatów do wysłania. Umożliwia to serwerowi zwolnienie zasobów skojarzonych z połączeniem klienta i przetwarzanie komunikatów, które zostały wysłane przez klienta.  
  
 Klasa nie `Finalize` ma metody, dlatego aplikacja musi wywołać <xref:System.Net.Mail.SmtpClient.Dispose%2A> , aby jawnie zwolnić zasoby. <xref:System.Net.Mail.SmtpClient> Metoda wykonuje iterację wszystkich ustanowionych połączeń z serwerem SMTP określonym <xref:System.Net.Mail.SmtpClient.Host%2A> we właściwości i wysyła komunikat kończący, po którym następuje bezpieczne zakończenie połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda zwalnia również niezarządzane zasoby używane <xref:System.Net.Sockets.Socket> przez i opcjonalnie usuwa zarządzane zasoby. <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu korzystania z <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda<xref:System.Net.Mail.SmtpClient> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Net.Mail.SmtpClient> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Net.Mail.SmtpClient> , którą zajmował.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje asynchroniczne wysyłanie wiadomości e-mail.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">Programowanie dla sieci w .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">Przykłady programowania sieciowego</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">Śledzenie sieci w .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">Zabezpieczenia w programowaniu sieciowym</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy za pomocą ustawień pliku konfiguracji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Mail.SmtpClient.Host%2A>właściwości, <xref:System.Net.Mail.SmtpClient.Credentials%2A>i <xref:System.Net.Mail.SmtpClient.Port%2A> dla nowego <xref:System.Net.Mail.SmtpClient> przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; mailSettings element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wysłanie wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Aby zapoznać się z \<przykładem węzła > mailSettings w pliku konfiguracji aplikacji lub komputera, zobacz [ &lt;mailSettings&gt; elementu (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">do skonstruowania <see cref="T:System.Net.Mail.SmtpClient" />. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> , który zawiera nazwę lub adres IP komputera hosta używany do transakcji SMTP.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy, która wysyła wiadomości e-mail przy użyciu określonego serwera SMTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr jest używany do zainicjowania wartości <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości. `host` Właściwości <xref:System.Net.Mail.SmtpClient.Credentials%2A> i<xref:System.Net.Mail.SmtpClient.Port%2A> są inicjowane przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera. Jeśli `host` <xref:System.String.Empty?displayProperty=nameWithType>jest `null` lub równa ,<xref:System.Net.Mail.SmtpClient.Host%2A> jest inicjowana przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera.  
  
 Aby uzyskać więcej informacji o korzystaniu z plików konfiguracji aplikacji i komputera, zobacz [ &lt;mailSettings&gt; element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje są określone za <xref:System.Net.Mail.SmtpClient> pomocą konstruktorów lub właściwości, te informacje zastępują ustawienia pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tego konstruktora.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">do skonstruowania <see cref="T:System.Net.Mail.SmtpClient" />. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.Mail.SmtpAccess.Connect" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> , który zawiera nazwę lub adres IP hosta używany do transakcji SMTP.</param>
        <param name="port">Większa od zera, która zawiera port do <paramref name="host" />użycia. <see cref="T:System.Int32" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy, która wysyła wiadomości e-mail przy użyciu określonego serwera i portu SMTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry `host` i `port` ustawiająodpowiedniowartości<xref:System.Net.Mail.SmtpClient.Port%2A>właściwościi. <xref:System.Net.Mail.SmtpClient.Host%2A> Jeśli `host` <xref:System.String.Empty?displayProperty=nameWithType>jest `null` lub równa ,<xref:System.Net.Mail.SmtpClient.Host%2A> jest inicjowana przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera. Jeśli `port` jest równa <xref:System.Net.Mail.SmtpClient.Port%2A> zero, zostanie zainicjowany przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera. <xref:System.Net.Mail.SmtpClient.Credentials%2A> Właściwość jest inicjowana przy użyciu ustawień w plikach konfiguracji aplikacji lub komputera.  
  
 Aby uzyskać więcej informacji o korzystaniu z plików konfiguracji aplikacji i komputera, zobacz [ &lt;mailSettings&gt; element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje są określone za <xref:System.Net.Mail.SmtpClient> pomocą konstruktorów lub właściwości, te informacje zastępują ustawienia pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tego konstruktora.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" />nie może być mniejsza od zera.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby określić port. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określ certyfikaty, które mają być używane do nawiązywania połączenia SSL (SSL).</summary>
        <value>A <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, zawierający co najmniej jeden certyfikat klienta. Wartość domyślna jest pochodną atrybutów konfiguracji poczty w pliku konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certyfikaty klienta są domyślnie opcjonalne; jednak konfiguracja serwera może wymagać, aby klient zaprezentować prawidłowy certyfikat w ramach negocjacji początkowego połączenia.  
  
> [!NOTE]
>  Struktura buforuje sesje SSL w miarę ich tworzenia i próbuje ponownie użyć buforowanej sesji dla nowego żądania, jeśli jest to możliwe. Przy próbie ponownego użycia sesji SSL w strukturze jest używany pierwszy element <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (jeśli istnieje) lub próba ponownego użycia sesji anonimowych, jeśli <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> jest ona pusta.  
  
   
  
## Examples  
 Poniższy przykład kodu nawiązuje połączenie SSL z serwerem SMTP i używa tego połączenia do wysyłania wiadomości e-mail.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings, element (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia używane do uwierzytelniania nadawcy.</summary>
        <value>Reprezentuje poświadczenia, <see langword="null" /> któremająbyćużywanedouwierzytelniania,lubjeśli<see cref="T:System.Net.ICredentialsByHost" /> nie określono poświadczeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre serwery SMTP wymagają uwierzytelnienia klienta, zanim serwer wyśle wiadomość e-mail w jego imieniu. Aby użyć domyślnych poświadczeń sieciowych, można ustawić <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> na `true` zamiast ustawiać tę właściwość. Jeśli właściwość jest ustawiona na `false,` <xref:System.Net.Mail.SmtpClient.Credentials%2A> , wartość ustawiona we właściwości zostanie użyta dla poświadczeń podczas nawiązywania połączenia z serwerem. <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Jeśli właściwość jest ustawiona na `false` , a <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwość nie została ustawiona, wiadomości e-mail są wysyłane na serwer anonimowo. <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>  
  
 Informacje o poświadczeniach można także określić przy użyciu plików konfiguracyjnych aplikacji i komputera. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; mailSettings element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje są określone za pomocą <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwości, te informacje zastępują ustawienia pliku konfiguracji.  
  
> [!CAUTION]
>  W przypadku podania poświadczeń uwierzytelniania podstawowego są one wysyłane do serwera w postaci zwykłego tekstu. Może to stanowić problem z zabezpieczeniami, ponieważ Twoje poświadczenia mogą być widoczne, a następnie wykorzystane przez inne osoby.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie poświadczeń używanych do wysyłania wiadomości e-mail.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić wartości tej właściwości, gdy jest wysyłana wiadomość e-mail.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format dostarczania używany przez <see cref="T:System.Net.Mail.SmtpClient" /> program do wysyłania wiadomości e-mail.</summary>
        <value>Format dostarczania używany przez <see cref="T:System.Net.Mail.SmtpClient" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa sposób obsługi wychodzących wiadomości e-mail.</summary>
        <value><see cref="T:System.Net.Mail.SmtpDeliveryMethod" /> Wskazuje sposób dostarczania wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody dostarczania obejmują:  
  
-   Serwer SMTP.  
  
-   Przeniesienie wiadomości e-mail do katalogu podnoszenia dla usług IIS, który następnie dostarcza komunikat.  
  
-   Przeniesienie wiadomości e-mail do katalogu określonego przez <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> program w celu późniejszego dostarczenia przez inną aplikację.  
  
 Wartość domyślna tej właściwości można również ustawić w pliku konfiguracji komputera lub aplikacji. Wszelkie zmiany wprowadzone w tej <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> właściwości zastępują ustawienia pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła komunikat zakończenia do serwera SMTP, bezpiecznie kończy połączenie TCP i zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy z serwerem SMTP może być ponownie używane, jeśli aplikacja chce wysyłać wiele komunikatów do tego samego serwera SMTP. Jest to szczególnie przydatne w przypadku, gdy używane jest uwierzytelnianie lub szyfrowanie, nawiąż połączenie z serwerem SMTP. Proces uwierzytelniania i ustanawiania sesji TLS może być kosztowny. Wymaganie ponownego nawiązania połączenia dla każdego komunikatu w przypadku wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji poczty e-mail, które wysyłają aktualizacje stanu wiadomości e-mail, dystrybucje biuletynów lub alerty e-mail. Ponadto wiele aplikacji klienckich poczty e-mail obsługuje tryb offline, w którym użytkownicy mogą tworzyć wiele wiadomości e-mail wysyłanych później podczas ustanawiania połączenia z serwerem SMTP. Zwykle klient poczty e-mail wysyła wszystkie komunikaty SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail do innych serwerów SMTP.  
  
 Implementacja <xref:System.Net.Mail.SmtpClient> klasy pule połączeń SMTP, aby uniknąć narzutu ponownego nawiązywania połączenia dla każdej wiadomości na ten sam serwer. Aplikacja może ponownie użyć tego samego <xref:System.Net.Mail.SmtpClient> obiektu do wysyłania wielu różnych wiadomości e-mail do tego samego serwera SMTP i wielu różnych serwerów SMTP. W związku z tym nie ma możliwości ustalenia, kiedy aplikacja jest ukończona przy użyciu <xref:System.Net.Mail.SmtpClient> obiektu i powinna zostać wyczyszczona.  
  
 Gdy sesja SMTP zostanie zakończona, a klient chce zakończyć połączenie, musi wysłać komunikat zamknięcia do serwera, aby wskazać, że nie ma więcej komunikatów do wysłania. Umożliwia to serwerowi zwolnienie zasobów skojarzonych z połączeniem klienta i przetwarzanie komunikatów, które zostały wysłane przez klienta.  
  
 <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metody dokonują iteracji przez wszystkie ustanowione połączenia i wysyłają komunikat kończący do każdego serwera SMTP, a następnie przez bezpieczne zakończenie połączenia TCP. Te metody zwalniają również niezarządzane zasoby używane przez <xref:System.Net.Sockets.Socket> program i opcjonalnie metodę Dispose zarządzanych zasobów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wysyła komunikat zakończenia do serwera SMTP, bezpiecznie kończy połączenie TCP i zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy z serwerem SMTP może być ponownie używane, jeśli aplikacja chce wysyłać wiele komunikatów do tego samego serwera SMTP. Jest to szczególnie przydatne w przypadku, gdy używane jest uwierzytelnianie lub szyfrowanie, nawiąż połączenie z serwerem SMTP. Proces uwierzytelniania i ustanawiania sesji TLS może być kosztowny. Wymaganie ponownego nawiązania połączenia dla każdego komunikatu w przypadku wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji poczty e-mail, które wysyłają aktualizacje stanu wiadomości e-mail, dystrybucje biuletynów lub alerty e-mail. Ponadto wiele aplikacji klienckich poczty e-mail obsługuje tryb offline, w którym użytkownicy mogą tworzyć wiele wiadomości e-mail wysyłanych później podczas ustanawiania połączenia z serwerem SMTP. Zwykle klient poczty e-mail wysyła wszystkie komunikaty SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail do innych serwerów SMTP.  
  
 Implementacja <xref:System.Net.Mail.SmtpClient> klasy pule połączeń SMTP, aby uniknąć narzutu ponownego nawiązywania połączenia dla każdej wiadomości na ten sam serwer. Aplikacja może ponownie użyć tego samego <xref:System.Net.Mail.SmtpClient> obiektu do wysyłania wielu różnych wiadomości e-mail do tego samego serwera SMTP i wielu różnych serwerów SMTP. W związku z tym nie ma możliwości ustalenia, kiedy aplikacja jest ukończona przy użyciu <xref:System.Net.Mail.SmtpClient> obiektu i powinna zostać wyczyszczona.  
  
 Gdy sesja SMTP zostanie zakończona, a klient chce zakończyć połączenie, musi wysłać komunikat zamknięcia do serwera, aby wskazać, że nie ma więcej komunikatów do wysłania. Umożliwia to serwerowi zwolnienie zasobów skojarzonych z połączeniem klienta i przetwarzanie komunikatów, które zostały wysłane przez klienta.  
  
 Wywołanie metody na obiekcie, który wykonuje operację asynchroniczną <xref:System.Net.Mail.SmtpClient.SendAsync%2A> , <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> spowoduje anulowanie operacji wysyłania, tak jakby Metoda została wywołana. <xref:System.Net.Mail.SmtpClient> <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 <xref:System.Net.Mail.SmtpClient> Klasa nie`Finalize` ma metody. W związku z tym aplikacja <xref:System.Net.Mail.SmtpClient.Dispose%2A> musi wywołać, aby jawnie zwolnić zasoby.  
  
 Metoda wykonuje iterację wszystkich ustanowionych połączeń z serwerem SMTP określonym <xref:System.Net.Mail.SmtpClient.Host%2A> we właściwości i wysyła komunikat kończący, po którym następuje bezpieczne zakończenie połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda zwalnia również niezarządzane zasoby używane przez bazowe <xref:System.Net.Sockets.Socket>. <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu korzystania z <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda<xref:System.Net.Mail.SmtpClient> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Net.Mail.SmtpClient> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Net.Mail.SmtpClient> , którą zajmował.  
  
 Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Net.Mail.SmtpClient.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Net.Mail.SmtpClient>do. W przeciwnym razie używane zasoby nie zostaną zwolnione, aby moduł wyrzucania elementów bezużytecznych mógł odrościć pamięć.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> zwalnia tylko niezarządzane zasoby.</param>
        <summary>Wysyła komunikat zakończenia do serwera SMTP, bezpiecznie kończy połączenie TCP, zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Mail.SmtpClient" /> klasy i opcjonalnie usuwa zarządzane zasoby.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Połączenie ustanowione przez bieżące wystąpienie <xref:System.Net.Mail.SmtpClient> klasy z serwerem SMTP może być ponownie używane, jeśli aplikacja chce wysyłać wiele komunikatów do tego samego serwera SMTP. Jest to szczególnie przydatne w przypadku, gdy używane jest uwierzytelnianie lub szyfrowanie, nawiąż połączenie z serwerem SMTP. Proces uwierzytelniania i ustanawiania sesji TLS może być kosztowny. Wymaganie ponownego nawiązania połączenia dla każdego komunikatu w przypadku wysyłania dużej liczby wiadomości e-mail na ten sam serwer SMTP może mieć znaczący wpływ na wydajność. Istnieje wiele aplikacji poczty e-mail, które wysyłają aktualizacje stanu wiadomości e-mail, dystrybucje biuletynów lub alerty e-mail. Ponadto wiele aplikacji klienckich poczty e-mail obsługuje tryb offline, w którym użytkownicy mogą tworzyć wiele wiadomości e-mail wysyłanych później podczas ustanawiania połączenia z serwerem SMTP. Zwykle klient poczty e-mail wysyła wszystkie komunikaty SMTP do określonego serwera SMTP (dostarczone przez usługodawcę internetowego), który następnie przekazuje tę wiadomość e-mail do innych serwerów SMTP.  
  
 Implementacja <xref:System.Net.Mail.SmtpClient> klasy pule połączeń SMTP, aby uniknąć narzutu ponownego nawiązywania połączenia dla każdej wiadomości na ten sam serwer. Aplikacja może ponownie użyć tego samego <xref:System.Net.Mail.SmtpClient> obiektu do wysyłania wielu różnych wiadomości e-mail do tego samego serwera SMTP i wielu różnych serwerów SMTP. W związku z tym nie ma możliwości ustalenia, kiedy aplikacja jest ukończona przy użyciu <xref:System.Net.Mail.SmtpClient> obiektu i powinna zostać wyczyszczona.  
  
 Gdy sesja SMTP zostanie zakończona, a klient chce zakończyć połączenie, musi wysłać komunikat zamknięcia do serwera, aby wskazać, że nie ma więcej komunikatów do wysłania. Umożliwia to serwerowi zwolnienie zasobów skojarzonych z połączeniem klienta i przetwarzanie komunikatów, które zostały wysłane przez klienta.  
  
 Wywołanie metody na obiekcie, który wykonuje operację asynchroniczną <xref:System.Net.Mail.SmtpClient.SendAsync%2A> , <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> spowoduje anulowanie operacji wysyłania, tak jakby Metoda została wywołana. <xref:System.Net.Mail.SmtpClient> <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 <xref:System.Net.Mail.SmtpClient> Klasa nie`Finalize` ma metody. W związku z tym aplikacja <xref:System.Net.Mail.SmtpClient.Dispose%2A> musi wywołać, aby jawnie zwolnić zasoby.  
  
 Metoda wykonuje iterację wszystkich ustanowionych połączeń z serwerem SMTP określonym <xref:System.Net.Mail.SmtpClient.Host%2A> we właściwości i wysyła komunikat kończący, po którym następuje bezpieczne zakończenie połączenia TCP. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda zwalnia również niezarządzane zasoby używane <xref:System.Net.Sockets.Socket> przez i opcjonalnie usuwa zarządzane zasoby. <xref:System.Net.Mail.SmtpClient.Dispose%2A>  
  
 Wywołaj <xref:System.Net.Mail.SmtpClient.Dispose%2A> po zakończeniu korzystania z <xref:System.Net.Mail.SmtpClient>. <xref:System.Net.Mail.SmtpClient.Dispose%2A> Metoda<xref:System.Net.Mail.SmtpClient> pozostawia w stanie niezdatnym do użytku. Po wywołaniu <xref:System.Net.Mail.SmtpClient.Dispose%2A>należy wydać wszystkie odwołania <xref:System.Net.Mail.SmtpClient> do, aby moduł wyrzucania elementów bezużytecznych mógł odwoływać pamięć <xref:System.Net.Mail.SmtpClient> , którą zajmował.  
  
 Aby uzyskać więcej informacji, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i implementowanie [metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Zawsze wywołuj <xref:System.Net.Mail.SmtpClient.Dispose%2A> przed wydaniem ostatniego odwołania <xref:System.Net.Mail.SmtpClient>do. W przeciwnym razie używane zasoby nie zostaną zwolnione, aby moduł wyrzucania elementów bezużytecznych mógł odrościć pamięć.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określ, czy <see cref="T:System.Net.Mail.SmtpClient" /> program używa SSL (SSL), aby zaszyfrować połączenie.</summary>
        <value><see langword="true" />Jeśli używa protokołu SSL; w przeciwnym <see langword="false" />razie,. <see cref="T:System.Net.Mail.SmtpClient" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> określa, czy protokół SSL jest używany w celu uzyskania dostępu do określonego serwera poczty SMTP.  
  
 Wartość domyślna tej właściwości można również ustawić w pliku konfiguracji komputera lub aplikacji. Wszelkie zmiany wprowadzone w tej <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> właściwości zastępują ustawienia pliku konfiguracji.  
  
 <xref:System.Net.Mail.SmtpClient> Klasa obsługuje tylko rozszerzenie usługi SMTP dla bezpiecznego protokołu SMTP dla Transport Layer Security zgodnie z definicją w dokumencie RFC 3207. W tym trybie sesja SMTP rozpoczyna się na nieszyfrowanym kanale, a następnie polecenie STARTTLS zostaje wystawione przez klienta na serwer w celu przełączenia do bezpiecznej komunikacji przy użyciu protokołu SSL. Więcej informacji można znaleźć w dokumencie RFC 3207 opublikowanym przez Internet Engineering Task Force (IETF).  
  
 Alternatywna metoda połączenia polega na tym, że sesja SSL jest ustanawiana przed wysłaniem jakichkolwiek poleceń protokołu. Ta metoda połączenia jest czasami nazywana SMTP/SSL, SMTP przez SSL lub SMTP i domyślnie używa portu 465. Ta alternatywna metoda łączenia przy użyciu protokołu SSL nie jest obecnie obsługiwana.  
  
 Można użyć <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> , aby określić, które certyfikaty klientów mają być używane do nawiązania połączenia SSL. <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> Umożliwia odrzucanie certyfikatu dostarczonego przez serwer SMTP. <xref:System.Net.ServicePointManager.SecurityProtocol%2A> Właściwość umożliwia określenie wersji protokołu SSL, który ma być używany.  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Jeśli właściwość jest ustawiona na `true`, a serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO, wywołanie metody lub spowoduje zgłoszenie. <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu nawiązuje połączenie SSL z serwerem SMTP i używa tego połączenia do wysyłania wiadomości e-mail.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Element&gt; sieci (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę lub adres IP hosta używany do transakcji SMTP.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera nazwę lub adres IP komputera do użycia dla transakcji SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości można również ustawić za pomocą konstruktorów lub pliku konfiguracji aplikacji lub komputera. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; mailSettings element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Jeśli informacje są określone za pomocą tej właściwości, te informacje zastępują ustawienia pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wysłanie wiadomości e-mail przy użyciu hosta i portu określonego w pliku konfiguracyjnym aplikacji.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji zestawu to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Wartość określona dla operacji zestawu jest równa <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić wartości tej właściwości, gdy jest wysyłana wiadomość e-mail.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings dla system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Element&gt; sieci (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z <xref:System.Net.Mail.SmtpClient> klasy mogą <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> przesłonić metodę, aby <xref:System.Net.Mail.SmtpClient.SendCompleted> wykonać dodatkowe zadania w przypadku wystąpienia zdarzenia.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>umożliwia również obsługę <xref:System.Net.Mail.SmtpClient.SendCompleted> klas pochodnych bez dołączania delegata. Jest to preferowana technika obsługi <xref:System.Net.Mail.SmtpClient.SendCompleted> w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia folder, w którym aplikacje zapisują wiadomości e-mail do przetworzenia przez lokalny serwer SMTP.</summary>
        <value>A <see cref="T:System.String" /> , który określa katalog podnoszenia dla wiadomości e-mail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiadomości e-mail w katalogu podnoszenia są automatycznie wysyłane przez lokalny serwer SMTP (jeśli istnieje), takich jak usługi IIS.  
  
 Wartość domyślna tej właściwości można również ustawić w pliku konfiguracji komputera lub aplikacji. Wszelkie zmiany wprowadzone w tej <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> właściwości zastępują ustawienia pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia port używany na potrzeby transakcji SMTP.</summary>
        <value><see cref="T:System.Int32" /> , Który zawiera numer portu na hoście SMTP. Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Mail.SmtpClient.Port%2A> właściwości można również ustawić za pomocą konstruktorów lub pliku konfiguracji aplikacji lub komputera. Aby uzyskać więcej informacji o korzystaniu z plików konfiguracji, zobacz [ &lt;mailSettings&gt; element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Jeśli informacje są określone za pomocą tej właściwości, te informacje zastępują ustawienia pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wysłanie wiadomości e-mail przy użyciu hosta i portu określonego w pliku konfiguracyjnym aplikacji.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest mniejsza lub równa zero.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić wartości tej właściwości, gdy jest wysyłana wiadomość e-mail.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby ustawić <see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwość. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />.</permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings dla system.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Element&gt; sieci (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła wiadomość e-mail do serwera SMTP w celu dostarczenia. Te metody blokują, gdy komunikat jest przesyłany.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> , który zawiera komunikat do wysłania.</param>
        <summary>Wysyła określony komunikat do serwera SMTP w celu dostarczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest blokowana podczas przesyłania wiadomości e-mail. Możesz określić wartość limitu czasu przy użyciu <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwości, aby upewnić się, że metoda wraca po upływie określonego czasu.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości i <xref:System.Net.Mail.SmtpClient.Port%2A> muszą być ustawiane za pomocą plików konfiguracji przez ustawienie odpowiednich właściwości lub przez <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> przekazanie tych informacji do konstruktora.  
  
 Nie można wywołać tej metody, jeśli komunikat jest wysyłany asynchronicznie.  
  
 Jeśli host SMTP wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwości lub. <xref:System.Net.Mail.SmtpClient.Credentials%2A>  
  
 Jeśli wystąpi <xref:System.Net.Mail.SmtpException.StatusCode%2A> wyjątek, sprawdź właściwość, aby znaleźć przyczynę niepowodzenia operacji. <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, który wskazuje przyczynę niepowodzenia operacji.  
  
 Podczas wysyłania wiadomości e-mail <xref:System.Net.Mail.SmtpClient.Send%2A> z użyciem do wielu adresatów, gdy serwer SMTP akceptuje niektórych odbiorców jako prawidłowy i odrzuca <xref:System.Net.Mail.SmtpClient.Send%2A> inne, wysyła wiadomość e-mail do <xref:System.Net.Mail.SmtpFailedRecipientsException> zaakceptowanych adresatów, a następnie <xref:System.Net.Mail.SmtpFailedRecipientException> zgłasza (lub jeśli tylko jeden odbiorca jest odrzucany). A <xref:System.Net.Mail.SmtpFailedRecipientsException> zawiera listę adresatów, którzy zostali odrzucona.
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Jeśli właściwość jest ustawiona na `true`, a serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO, wywołanie metody lub spowoduje zgłoszenie. <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tej metody.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" />wywołaniejestw toku.<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />  
  
—lub— 
 <see cref="P:System.Net.Mail.MailMessage.From" />jest <see langword="null" />.  
  
—lub— 
Brak adresatów określonych w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />i <see cref="P:System.Net.Mail.MailMessage.Bcc" /> właściwości.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> ma <see langword="null" />wartość.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest równa pustemu ciągowi ("").  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /><see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> wartość<see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwości jest równa zero, liczba ujemna lub większa niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  
  
—lub— 
Uwierzytelnianie nie powiodło się.  
  
—lub— 
Przekroczono limit czasu operacji. 
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiona na <see langword="true" /> , <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> ale właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiony na <see langword="true," /> , ale serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Nie można dostarczyć do jednego z adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />. <paramref name="message" /></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Nie można dostarczyć do co najmniej dwóch adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />. <paramref name="message" /></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Skojarzone Wyliczenie:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> , który zawiera informacje o adresie nadawcy wiadomości.</param>
        <param name="recipients"><see cref="T:System.String" /> Zawierający adresy, do których jest wysyłany komunikat.</param>
        <param name="to"><see cref="T:System.String" /> Zawierający adresy, do których jest wysyłany komunikat.</param>
        <param name="subject">A <see cref="T:System.String" /> , który zawiera wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> , który zawiera treść wiadomości.</param>
        <summary>Wysyła określoną wiadomość e-mail do serwera SMTP w celu dostarczenia. Nadawca wiadomości, adresaci, temat i treść wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest blokowana podczas przesyłania wiadomości e-mail. Możesz określić wartość limitu czasu przy użyciu <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwości, aby upewnić się, że metoda wraca po upływie określonego czasu.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości i <xref:System.Net.Mail.SmtpClient.Port%2A> muszą być ustawiane za pomocą plików konfiguracji przez ustawienie odpowiednich właściwości lub przez <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> przekazanie tych informacji do konstruktora.  
  
 Nie można wywołać tej metody, jeśli komunikat jest wysyłany asynchronicznie.  
  
 Jeśli host SMTP wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwości lub. <xref:System.Net.Mail.SmtpClient.Credentials%2A>  
  
 Jeśli wystąpi <xref:System.Net.Mail.SmtpException.StatusCode%2A> wyjątek, sprawdź właściwość, aby znaleźć przyczynę niepowodzenia operacji. <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, który wskazuje przyczynę niepowodzenia operacji.  

 Podczas wysyłania wiadomości e-mail <xref:System.Net.Mail.SmtpClient.Send%2A> z użyciem do wielu adresatów, gdy serwer SMTP akceptuje niektórych odbiorców jako prawidłowy i odrzuca <xref:System.Net.Mail.SmtpClient.Send%2A> inne, wysyła wiadomość e-mail do <xref:System.Net.Mail.SmtpFailedRecipientsException> zaakceptowanych adresatów, a następnie <xref:System.Net.Mail.SmtpFailedRecipientException> zgłasza (lub jeśli tylko jeden odbiorca jest odrzucany). A <xref:System.Net.Mail.SmtpFailedRecipientsException> zawiera listę adresatów, którzy zostali odrzucona.
 
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Jeśli właściwość jest ustawiona na `true`, a serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO, wywołanie metody lub spowoduje zgłoszenie. <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="recipients" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" />jest <see cref="F:System.String.Empty" />.  
  
—lub— 
 <paramref name="recipients" />jest <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" />wywołaniejestw toku.<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> ma <see langword="null" />wartość.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest równa pustemu ciągowi ("").  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /><see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> wartość<see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwości jest równa zero, liczba ujemna lub większa niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  
  
—lub— 
Uwierzytelnianie nie powiodło się.  
  
—lub— 
Przekroczono limit czasu operacji. 
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiona na <see langword="true" /> , <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> ale właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiony na <see langword="true," /> , ale serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Nie można dostarczyć do jednego z adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />. <paramref name="message" /></exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Nie można dostarczyć do co najmniej dwóch adresatów w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />. <paramref name="message" /></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Skojarzone Wyliczenie:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła wiadomość e-mail. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> , który zawiera komunikat do wysłania.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Wysyła określoną wiadomość e-mail do serwera SMTP w celu dostarczenia. Ta metoda nie blokuje wątku wywołującego i zezwala obiektowi wywołującemu na przekazywanie obiektu do metody, która jest wywoływana po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby otrzymać powiadomienie, gdy wiadomość e-mail została wysłana lub operacja została anulowana, Dodaj do <xref:System.Net.Mail.SmtpClient.SendCompleted> zdarzenia procedurę obsługi zdarzeń. Możesz anulować <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operację, <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> wywołując metodę.  
  
 Po wywołaniu <xref:System.Net.Mail.SmtpClient.SendAsync%2A>należy poczekać na zakończenie transmisji wiadomości e-mail przed podjęciem próby wysłania kolejnej wiadomości e-mail <xref:System.Net.Mail.SmtpClient.Send%2A> przy <xref:System.Net.Mail.SmtpClient.SendAsync%2A>użyciu lub.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> i <xref:System.Net.Mail.SmtpClient.Port%2A> musi być ustawiane za pomocą plików konfiguracji przez ustawienie odpowiednich właściwości lub przez <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> przekazanie tych informacji do konstruktora.  
  
 Jeśli host SMTP wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwości lub. <xref:System.Net.Mail.SmtpClient.Credentials%2A>  
  
 Jeśli wystąpi <xref:System.Net.Mail.SmtpException.StatusCode%2A> wyjątek, sprawdź właściwość, aby znaleźć przyczynę niepowodzenia operacji. <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, który wskazuje przyczynę niepowodzenia operacji.  
  
 W przypadku wysyłania wiadomości <xref:System.Net.Mail.SmtpClient.SendAsync%2A> e-mail przy użyciu programu do wielu adresatów, jeśli serwer SMTP akceptuje niektórych adresatów jako prawidłowy i <xref:System.Net.Mail.SmtpException> odrzuca inne, zgłaszany <xref:System.NullReferenceException> jest wyjątek dla wyjątku wewnętrznego. W takim <xref:System.Net.Mail.SmtpClient.SendAsync%2A> przypadku nie można wysłać wiadomości e-mail do żadnego z adresatów.  
  
 Aplikacja może wykryć błąd walidacji certyfikatu serwera, sprawdzając <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Właściwość przekazaną <xref:System.Net.Mail.SendCompletedEventHandler> do delegata.  
  
 Właściwość nie ma żadnego wpływu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> na wywołanie. <xref:System.Net.Mail.SmtpClient.Timeout%2A>  
  
 Aby wysłać pocztę i zablokować podczas przesyłania ich do serwera SMTP, należy użyć jednej z <xref:System.Net.Mail.SmtpClient.Send%2A> metod.  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Jeśli właściwość jest ustawiona na `true`, a serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO, wywołanie metody lub spowoduje zgłoszenie. <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.  
  
—lub— 
 <see cref="P:System.Net.Mail.MailMessage.From" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" />wywołaniejestw toku.<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />  
  
—lub— 
Brak adresatów określonych w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />i <see cref="P:System.Net.Mail.MailMessage.Bcc" /> właściwości.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> ma <see langword="null" />wartość.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest równa pustemu ciągowi ("").  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /><see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> wartość<see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwości jest równa zero, liczba ujemna lub większa niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  
  
—lub— 
Uwierzytelnianie nie powiodło się.  
  
—lub— 
Przekroczono limit czasu operacji. 
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiona na <see langword="true" /> , <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> ale właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiony na <see langword="true," /> , ale serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO.  
  
—lub— 
Nie można dostarczyć do co najmniej jednego adresata w <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, lub <see cref="P:System.Net.Mail.MailMessage.Bcc" />. <paramref name="message" /></exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Skojarzone Wyliczenie:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> , który zawiera informacje o adresie nadawcy wiadomości.</param>
        <param name="recipients">A <see cref="T:System.String" /> , który zawiera adres, na który jest wysyłany komunikat.</param>
        <param name="to">A <see cref="T:System.String" /> , który zawiera adres, na który jest wysyłany komunikat.</param>
        <param name="subject">A <see cref="T:System.String" /> , który zawiera wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> , który zawiera treść wiadomości.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Wysyła wiadomość e-mail do serwera SMTP w celu dostarczenia. Nadawca wiadomości, adresaci, temat i treść wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów. Ta metoda nie blokuje wątku wywołującego i zezwala obiektowi wywołującemu na przekazywanie obiektu do metody, która jest wywoływana po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby otrzymać powiadomienie, gdy wiadomość e-mail została wysłana lub operacja została anulowana, Dodaj do <xref:System.Net.Mail.SmtpClient.SendCompleted> zdarzenia procedurę obsługi zdarzeń. Możesz anulować <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operację, <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> wywołując metodę.  
  
 Po wywołaniu <xref:System.Net.Mail.SmtpClient.SendAsync%2A>należy poczekać na zakończenie transmisji wiadomości e-mail przed podjęciem próby wysłania kolejnej wiadomości e-mail <xref:System.Net.Mail.SmtpClient.Send%2A> przy <xref:System.Net.Mail.SmtpClient.SendAsync%2A>użyciu lub.  
  
 Przed wywołaniem tej metody <xref:System.Net.Mail.SmtpClient.Host%2A> właściwości i <xref:System.Net.Mail.SmtpClient.Port%2A> muszą być ustawiane przy użyciu plików konfiguracyjnych lub przez ustawienie właściwości lub <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> przekazanie tych informacji do konstruktora.  
  
 Jeśli host SMTP wymaga poświadczeń, należy je ustawić przed wywołaniem tej metody. Aby określić poświadczenia, użyj <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> właściwości lub. <xref:System.Net.Mail.SmtpClient.Credentials%2A>  
  
 Jeśli wystąpi <xref:System.Net.Mail.SmtpException.StatusCode%2A> wyjątek, sprawdź właściwość, aby znaleźć przyczynę niepowodzenia operacji. <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpException> Może również zawierać wyjątek wewnętrzny, który wskazuje przyczynę niepowodzenia operacji.  
  
 W przypadku wysyłania wiadomości <xref:System.Net.Mail.SmtpClient.SendAsync%2A> e-mail przy użyciu programu do wielu adresatów, jeśli serwer SMTP akceptuje niektórych adresatów jako prawidłowy i <xref:System.Net.Mail.SmtpException> odrzuca inne, zgłaszany <xref:System.NullReferenceException> jest wyjątek dla wyjątku wewnętrznego. W takim <xref:System.Net.Mail.SmtpClient.SendAsync%2A> przypadku nie można wysłać wiadomości e-mail do żadnego z adresatów.  
  
 Aplikacja może wykryć błąd walidacji certyfikatu serwera, sprawdzając <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Właściwość przekazaną <xref:System.Net.Mail.SendCompletedEventHandler> do delegata.  
  
 Właściwość nie ma żadnego wpływu <xref:System.Net.Mail.SmtpClient.SendAsync%2A> na wywołanie. <xref:System.Net.Mail.SmtpClient.Timeout%2A>  
  
 Aby wysłać pocztę i zablokować podczas przesyłania ich do serwera SMTP, należy użyć jednej z <xref:System.Net.Mail.SmtpClient.Send%2A> metod.  
  
> [!NOTE]
>  <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpException> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Jeśli właściwość jest ustawiona na `true`, a serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO, wywołanie metody lub spowoduje zgłoszenie. <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="recipient" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" />jest <see cref="F:System.String.Empty" />.  
  
—lub— 
 <paramref name="recipient" />jest <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">To <see cref="T:System.Net.Mail.SmtpClient" />wywołaniejestw toku.<see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> ma <see langword="null" />wartość.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />Właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> i <see cref="P:System.Net.Mail.SmtpClient.Host" /> jest równa pustemu ciągowi ("").  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /><see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> wartość<see cref="P:System.Net.Mail.SmtpClient.Port" /> właściwości jest równa zero, liczba ujemna lub większa niż 65 535.</exception>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Połączenie z serwerem SMTP nie powiodło się.  
  
—lub— 
Uwierzytelnianie nie powiodło się.  
  
—lub— 
Przekroczono limit czasu operacji. 
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiona na <see langword="true" /> , <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> ale właściwość jest ustawiona na <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> lub <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" />jest ustawiony na <see langword="true," /> , ale serwer poczty SMTP nie anonsuje STARTTLS w odpowiedzi na polecenie EHLO.  
  
—lub— 
Nie można dostarczyć komunikatu do co najmniej jednego adresata w <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Aby nawiązać połączenie z serwerem SMTP. Skojarzone Wyliczenie:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje operację asynchroniczną w celu wysłania wiadomości e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> , aby anulować oczekującą <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operację. Jeśli oczekuje na wysłanie wiadomości e-mail, ta metoda zwalnia zasoby używane do przechowywania poczty. W przypadku braku poczty oczekującej na wysłanie ta metoda nic nie robi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje asynchroniczne wysyłanie wiadomości e-mail. Użytkownik ma możliwość anulowania poczty, jeśli nie została wysłana.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Ten obiekt został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji wysyłania wiadomości e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.SmtpClient.SendCompleted> Zdarzenie jest wywoływane za każdym razem, gdy wiadomość e-mail jest wysyłana asynchronicznie po zakończeniu operacji wysyłania. Aby wysłać wiadomość e-mail asynchronicznie, użyj <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metod.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler>jest delegatem dla <xref:System.Net.Mail.SmtpClient.SendCompleted>. <xref:System.ComponentModel.AsyncCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje asynchroniczne wysyłanie wiadomości e-mail.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła określony komunikat do serwera SMTP w celu dostarczenia jako operacji asynchronicznej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> , który zawiera komunikat do wysłania.</param>
        <summary>Wysyła określony komunikat do serwera SMTP w celu dostarczenia jako operacji asynchronicznej.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task>Obiekt > zostanie ukończony po wysłaniu komunikatu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> , który zawiera informacje o adresie nadawcy wiadomości.</param>
        <param name="recipients"><see cref="T:System.String" /> Zawierający adresy, do których jest wysyłany komunikat.</param>
        <param name="subject">A <see cref="T:System.String" /> , który zawiera wiersz tematu wiadomości.</param>
        <param name="body">A <see cref="T:System.String" /> , który zawiera treść wiadomości.</param>
        <summary>Wysyła określony komunikat do serwera SMTP w celu dostarczenia jako operacji asynchronicznej. . Nadawca wiadomości, adresaci, temat i treść wiadomości są określane za pomocą <see cref="T:System.String" /> obiektów.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task>Obiekt > zostanie ukończony po wysłaniu komunikatu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="recipients" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" />jest <see cref="F:System.String.Empty" />.  
  
—lub— 
 <paramref name="recipients" />jest <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera połączenie sieciowe używane do przesyłania wiadomości e-mail.</summary>
        <value>A <see cref="T:System.Net.ServicePoint" /> który łączy <see cref="P:System.Net.Mail.SmtpClient.Host" /> się z właściwością używaną przez protokół SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> właściwości są tworzone przy użyciu wartości domyślnych określonych w plikach konfiguracji aplikacji lub komputera oraz w <xref:System.Net.ServicePointManager> klasie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje dostęp <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> do właściwości.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.Mail.SmtpClient.Host" />jest <see langword="null" /> lub ciągiem pustym ("").  
  
—lub— 
 <see cref="P:System.Net.Mail.SmtpClient.Port" />ma wartość zero.</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement, element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Zarządzanie połączeniami</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy usług (SPN), która będzie używana do uwierzytelniania podczas korzystania z ochrony rozszerzonej.</summary>
        <value>A <see cref="T:System.String" /> określa nazwę SPN, która ma być używana do ochrony rozszerzonej. Wartość domyślna tej nazwy SPN ma postać "SMTPSVC&lt;/host&gt;", gdzie &lt;host&gt; jest nazwą hosta serwera poczty SMTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta <xref:System.Net.Mail.SmtpClient.TargetName%2A> właściwość jest używana w połączeniu ze zintegrowanym uwierzytelnianiem systemu Windows, gdy aplikacja korzysta z ochrony rozszerzonej. <xref:System.Net.Mail.SmtpClient> Może to następnie zapewnić rozszerzoną ochronę, aby zapewnić, że odpowiedzi na wezwania na żądanie zawierają informacje specyficzne dla usługi (SPN) i, w razie potrzeby, informacje specyficzne dla kanału (Token powiązania kanału lub CBT). Dzięki tym informacjom w wymianie poświadczeń usługi są w stanie lepiej chronić przed złośliwym użyciem odpowiedzi na wyzwania, które mogły zostać nieprawidłowo pobrane.  
  
 Wartość domyślna tej właściwości można również ustawić w pliku konfiguracji komputera lub aplikacji. Wszelkie zmiany wprowadzone w tej <xref:System.Net.Mail.SmtpClient.TargetName%2A> właściwości zastępują ustawienia pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">Zintegrowane uwierzytelnianie systemu Windows z ochroną rozszerzoną</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; , element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; — element (Ustawienia sieci)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Element&gt; sieci (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą czas, po upływie którego upłynął limit czasu <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> wywołania synchronicznego.</summary>
        <value><see cref="T:System.Int32" /> Określa wartość limitu czasu w milisekundach. Wartość domyślna to 100 000 (100 s).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wywołania do <xref:System.Net.Mail.SmtpClient.Send%2A> bloku metody do momentu zakończenia operacji. Jeśli <xref:System.Net.Mail.SmtpClient.Timeout%2A> właściwość zostanie ustawiona na wartość dodatnią, <xref:System.Net.Mail.SmtpClient.Send%2A> a operacja nie może zostać zakończona w wyznaczonym czasie <xref:System.Net.Mail.SmtpException> , <xref:System.Net.Mail.SmtpClient> Klasa zgłasza wyjątek.  
  
 Aby wysłać komunikat i kontynuować wykonywanie w wątku aplikacji, użyj <xref:System.Net.Mail.SmtpClient.SendAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje pobieranie i ustawianie wartości limitu czasu.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu była mniejsza od zera.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić wartości tej właściwości, gdy jest wysyłana wiadomość e-mail.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określającą, <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> czy są wysyłane żądania.</summary>
        <value><see langword="true" />Jeśli są używane poświadczenia domyślne; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre serwery SMTP wymagają uwierzytelnienia klienta, zanim serwer wyśle wiadomość e-mail w jego imieniu. Ustaw tę właściwość na `true` , gdy <xref:System.Net.Mail.SmtpClient> ten obiekt powinien, w razie żądania przez serwer, uwierzytelniać się przy użyciu domyślnych poświadczeń aktualnie zalogowanego użytkownika. W przypadku aplikacji klienckich jest to odpowiednie zachowanie w większości scenariuszy.  
  
 Informacje o poświadczeniach można także określić przy użyciu plików konfiguracyjnych aplikacji i komputera. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; mailSettings element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Jeśli właściwość jest ustawiona na `false,` <xref:System.Net.Mail.SmtpClient.Credentials%2A> , wartość ustawiona we właściwości zostanie użyta dla poświadczeń podczas nawiązywania połączenia z serwerem. <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Jeśli właściwość jest ustawiona na `false` , a <xref:System.Net.Mail.SmtpClient.Credentials%2A> właściwość nie została ustawiona, wiadomości e-mail są wysyłane na serwer anonimowo. <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>  
  
> [!CAUTION]
>  W przypadku podania poświadczeń uwierzytelniania podstawowego są one wysyłane do serwera w postaci zwykłego tekstu. Może to stanowić problem z zabezpieczeniami, ponieważ Twoje poświadczenia mogą być widoczne, a następnie wykorzystane przez inne osoby.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie tej właściwości.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić wartości tej właściwości, gdy jest wysyłana wiadomość e-mail.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
