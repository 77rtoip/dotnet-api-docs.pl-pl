<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="081a8839059eeefd055349f66dc042fca18a52a4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="71c14-101">Typ kluczy w kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71c14-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="71c14-102">Typ elementów w kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71c14-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="71c14-103">Udostępnia abstrakcyjna klasa podstawowa dla kolekcji, w której klucze są osadzone w wartości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71c14-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-104"><xref:System.Collections.ObjectModel.KeyedCollection%602> Klasa udostępnia zarówno O(1) indeksowane pobierania i pobieranie powodujące zbliżenie O(1) z kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="71c14-105">Jest typem abstrakcyjnym lub dokładniej nieskończone zestawu typów abstrakcyjnych, ponieważ każdy jego skonstruowane typów ogólnych jest abstrakcyjna klasa podstawowa.</span><span class="sxs-lookup"><span data-stu-id="71c14-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="71c14-106">Aby użyć <xref:System.Collections.ObjectModel.KeyedCollection%602>, pochodzi z typem kolekcji z odpowiedniego typu skonstruowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="71c14-107"><xref:System.Collections.ObjectModel.KeyedCollection%602> Klasy jest hybrydowego między kolekcję na podstawie <xref:System.Collections.Generic.IList%601> ogólny interfejs i kolekcji na podstawie <xref:System.Collections.Generic.IDictionary%602> interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="71c14-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="71c14-108">Kolekcje oparte na, takich jak <xref:System.Collections.Generic.IList%601> ogólny interfejs <xref:System.Collections.ObjectModel.KeyedCollection%602> jest indeksowany listy elementów.</span><span class="sxs-lookup"><span data-stu-id="71c14-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="71c14-109">Kolekcje oparte na, takich jak <xref:System.Collections.Generic.IDictionary%602> ogólny interfejs <xref:System.Collections.ObjectModel.KeyedCollection%602> ma klucz skojarzone z każdym elementem.</span><span class="sxs-lookup"><span data-stu-id="71c14-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="71c14-110">W przeciwieństwie do słowników, element <xref:System.Collections.ObjectModel.KeyedCollection%602> nie jest para klucza i wartości; zamiast tego cały element jest wartością i klucz jest osadzony w wartości.</span><span class="sxs-lookup"><span data-stu-id="71c14-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="71c14-111">Na przykład element kolekcji pochodną `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` w języku Visual Basic) może być "Jr John Doe".</span><span class="sxs-lookup"><span data-stu-id="71c14-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="71c14-112">Jeśli wartość jest "Jr John Doe".</span><span class="sxs-lookup"><span data-stu-id="71c14-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="71c14-113">jak klucz "Nowak;" lub kolekcji o pracownikach zawierający klucze liczby całkowitej może pochodzić od `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="71c14-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="71c14-114">Abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody wyodrębnia klucz z elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="71c14-115">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który można uzyskać z <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="71c14-116">Gdy element zostanie dodany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucza elementu wyodrębnione raz i zapisane w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="71c14-117">To zachowanie jest przesłonić, określając próg tworzenia słownika, podczas tworzenia <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-118">Słownik wyszukiwania jest tworzony po raz pierwszy tej wartości progowej przekracza liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="71c14-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="71c14-119">Jeśli określisz -1 jako wartość progową, nigdy nie zostanie utworzony słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-120">W przypadku słownik wewnętrzny wyszukiwania zawiera odwołania do wszystkich elementów w kolekcji, jeśli `TItem` jest typem referencyjnym lub kopiuje wszystkie elementy w kolekcji, jeśli `TItem` jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="71c14-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="71c14-121">W związku z tym, za pomocą słownika wyszukiwania mogą nie być odpowiednie Jeśli `TItem` jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="71c14-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="71c14-122">Dostęp do elementu za pomocą jego indeksu lub klucza przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="71c14-123">Można dodawać elementów bez klucza, ale te elementy mogą następnie uzyskiwać tylko przez indeks.</span><span class="sxs-lookup"><span data-stu-id="71c14-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-124">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="71c14-124">This section contains two code examples.</span></span> <span data-ttu-id="71c14-125">Pierwszy przykład przedstawia minimalny kod wymagany do pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>oraz przedstawia liczbę dziedziczonej metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="71c14-126">Drugi przykład przedstawia sposób przesłonięcia metody chronionych <xref:System.Collections.ObjectModel.KeyedCollection%602> zapewniające niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="71c14-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="71c14-127">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="71c14-127">**Example 1**</span></span>  
  
 <span data-ttu-id="71c14-128">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-129">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-130">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-131">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-132">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="71c14-133">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="71c14-133">**Example 2**</span></span>  
  
 <span data-ttu-id="71c14-134">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-135">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-136">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-137">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-138">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-139">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-140">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-141">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71c14-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71c14-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa domyślna funkcja porównująca równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> utworzone za pomocą tego konstruktora używa domyślna funkcja porównująca równości ogólny typ klucza, otrzymanego z <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="71c14-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="71c14-145">Aby określić porównania równości ogólnego różnych, użyj <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> konstruktora lub <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="71c14-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="71c14-146">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony po dodaniu pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="71c14-147">Gdy element zostanie dodany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucza elementu wyodrębnione raz i zapisane w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="71c14-148">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określanie próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="71c14-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-149">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest abstrakcyjna (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="71c14-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="71c14-150">W Konstruktorze typu pochodnego wywołać odpowiednie <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="71c14-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="71c14-151">Nie jest konieczne do udostępnienia funkcji takich jak porównania równości lub próg tworzenia słownika w Twojej konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="71c14-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="71c14-152">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-153">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-154">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-155">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-156">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-157">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="71c14-158">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs do używania przy porównywaniu klucze, lub <see langword="null" /> do używania domyślnego porównania równości dla typu klucza, uzyskane z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-159">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa porównania równości określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-160">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony po dodaniu pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="71c14-161">Gdy element zostanie dodany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucza elementu wyodrębnione raz i zapisane w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="71c14-162">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określanie próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="71c14-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-163">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest abstrakcyjna (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="71c14-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="71c14-164">W Konstruktorze typu pochodnego wywołać odpowiednie <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="71c14-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="71c14-165">Nie jest konieczne do udostępnienia funkcji takich jak porównania równości lub próg tworzenia słownika w Twojej konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="71c14-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="71c14-166">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="71c14-167">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs do używania przy porównywaniu klucze, lub <see langword="null" /> do używania domyślnego porównania równości dla typu klucza, uzyskane z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="71c14-168">Liczba elementów w kolekcji może zawierać bez tworzenia słownika wyszukiwania (0 tworzy słownik wyszukiwania, gdy pierwszy element zostanie dodany), lub -1, aby określić, czy słownik wyszukiwania nigdy nie został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-169">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa porównania równości określonego i tworzy słownik wyszukiwania, po przekroczeniu określonego progu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-170">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony po dodaniu pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="71c14-171">Gdy element zostanie dodany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucza elementu wyodrębnione raz i zapisane w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="71c14-172">Ten konstruktor służy do zastąpienia tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="71c14-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="71c14-173">Określ 0, aby utworzyć słownik po dodaniu pierwszego elementu, 1, aby utworzyć słownik po dodaniu drugiego elementu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="71c14-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="71c14-174">Jeśli określisz -1 jako wartość progową, nigdy nie zostanie utworzony słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="71c14-175">Bardzo małe kolekcji poprawy szybkości pobierania podał słownika wyszukiwania może nie być warto dodatkową pamięć wymagana przez słownik.</span><span class="sxs-lookup"><span data-stu-id="71c14-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="71c14-176">Ustawianie wartości progowej, można zdecydować, kiedy należy utworzyć ten zależnościami.</span><span class="sxs-lookup"><span data-stu-id="71c14-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-177">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest abstrakcyjna (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="71c14-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="71c14-178">W Konstruktorze typu pochodnego wywołać odpowiednie <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="71c14-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="71c14-179">Nie jest konieczne do udostępnienia funkcji takich jak porównania równości lub próg tworzenia słownika w Twojej konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="71c14-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="71c14-180">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-181">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-182">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-183">Przykład kodu wykorzystuje <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora z próg o wartości 0, tak że słownik wewnętrzny jest tworzony po raz pierwszy obiekt został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="71c14-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="71c14-184">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-185">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-186">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-187">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-188">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-189">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71c14-190">
            <paramref name="dictionaryCreationThreshold" /> jest mniejsza niż -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71c14-191">Element, aby zmienić klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="71c14-192">Nowy klucz dla <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-193">Zmienia klucz skojarzony z określonym elementem w słowniku wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-194">Ta metoda nie modyfikuje klucza osadzone w `item`; po prostu zastępuje klucz zapisane w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="71c14-195">W związku z tym jeśli `newKey` różni się od klucz, który jest osadzony w `item`, nie można uzyskać dostępu `item` przy użyciu klucza zwróconego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="71c14-196">Ta metoda nie robi nic, jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> nie ma słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="71c14-197">Każdy klucz w <xref:System.Collections.ObjectModel.KeyedCollection%602> muszą być unikatowe.</span><span class="sxs-lookup"><span data-stu-id="71c14-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="71c14-198">Klucz nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="71c14-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="71c14-199">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-200">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-200">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-201">Przed klucz osadzone w elemencie, należy wywołać tę metodę, aby zaktualizować klucz w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="71c14-202">Jeśli próg tworzenia słownika jest -1, wywołanie tej metody nie jest konieczne.</span><span class="sxs-lookup"><span data-stu-id="71c14-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="71c14-203">Nie ujawniaj <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodę jako publiczną metodę klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="71c14-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="71c14-204">Nieprawidłowe użycie tej metody umieszcza słownika wyszukiwania zsynchronizowane z kluczami elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="71c14-205">Na przykład, ustawienie klucza `null` i ustawienie jej z inną wartością dodaje wielu kluczy dla element do słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="71c14-206">Ujawnia tej metody wewnętrznie, aby umożliwić modyfikowalną elementu kluczy: po zmianie klucza dla elementu, ta metoda służy do zmiany kluczem w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-207">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-208">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-209">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-210">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-211">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-212">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-213">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-214">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71c14-215">
            <paramref name="item" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="71c14-216">- lub - <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71c14-217">
            <paramref name="item" /> Nie znaleziono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="71c14-218">- lub - <paramref name="key" /> już istnieje w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71c14-219">Usuwa wszystkie elementy z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-220">W przypadku słownika wyszukiwania, ta metoda usuwa go, ale nie powoduje usunięcia.</span><span class="sxs-lookup"><span data-stu-id="71c14-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="71c14-221">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest za pomocą słownika wyszukiwania, nadal będzie użycie słownika wyszukiwania, mimo że liczby elementów ponownie jest poniżej wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="71c14-222">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-223">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-223">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-224">Przesłonić tę metodę, aby zapewnić zachowanie dostosowane <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> dziedziczone z metody <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="71c14-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="71c14-225">Wywołanie tej metody, aby wyczyścić kolekcja źródłowa i można wyczyścić słownika wyszukiwania Implementacja klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-226">Ta sekcja zawiera dwa przykłady kodu, które przedstawiają zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> metodę w celu zapewnienia zachowania niestandardowego czyszczenie wszystkich obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="71c14-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="71c14-227">Pierwszym przykładzie dodaje zdarzenie niestandardowe powiadomienie i drugi zapewnia obsługę kolekcji obiektów z tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="71c14-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="71c14-228">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="71c14-228">Example 1</span></span>  
  
 <span data-ttu-id="71c14-229">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-230">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-231">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-232">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-233">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-234">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-235">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-236">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="71c14-237">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="71c14-237">Example 2</span></span>  
  
 <span data-ttu-id="71c14-238">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-239">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-240">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-241">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-242">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-243">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-244">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-245">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71c14-246">Pobiera porównania równości ogólnego, który służy do określania równości klucze w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71c14-247">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs, który służy do określania równości klucze w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-248">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71c14-249">Klucz do zlokalizowania w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-250">Określa, czy kolekcja zawiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71c14-251">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-252">Jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> słownika wyszukiwania `key` służy do wyszukiwania słownika.</span><span class="sxs-lookup"><span data-stu-id="71c14-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="71c14-253">Jeśli nie ma żadnych słownika wyszukiwania, klucz każdego elementu jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i w porównaniu z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="71c14-254">Ta metoda jest operacją O(1), jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> słownika wyszukiwania; w przeciwnym razie jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-255">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-256">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-257">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-258">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-259">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71c14-260">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71c14-261">Pobiera słownik wyszukiwania <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71c14-262">Słownik wyszukiwania <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, jeśli istnieje; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-263">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony po dodaniu pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="71c14-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="71c14-264">Gdy element zostanie dodany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucza elementu wyodrębnione raz i zapisane w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="71c14-265">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określanie próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="71c14-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="71c14-266">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-267">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-268">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-269">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-270">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-271">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-272">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-273">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-274">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="71c14-275">Element, z którego mają zostać wyodrębnione klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-276">Po zaimplementowaniu w klasie pochodnej pobiera klucz z określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71c14-277">Klucz dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-278">Jeśli klucz w słowniku wyszukiwania jest inny niż klucz, który jest osadzony w `item`, nie można uzyskać dostępu `item` przy użyciu klucza zwróconego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="71c14-279">Można zaimplementować tę metodę, aby zwrócić `null` dla kolekcji, który zawiera elementy, bez kluczy, w którym to przypadku elementy są dostępne tylko według ich indeksu.</span><span class="sxs-lookup"><span data-stu-id="71c14-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="71c14-280">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-281">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-281">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-282">Należy przesłonić tę metodę, aby zapewnić słownik sposobem wyodrębniania klucze elementów w słowniku.</span><span class="sxs-lookup"><span data-stu-id="71c14-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="71c14-283">Ta metoda jest wywoływana wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="71c14-283">This method is called internally.</span></span> <span data-ttu-id="71c14-284">Nie jest konieczne jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="71c14-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-285">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-286">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-287">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-288">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-289">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71c14-290">Liczony od zera indeks, w którym <c>elementu</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="71c14-291">Obiekt do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-292">Wstawia element do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-293">Jeśli `index` jest równa <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` zostanie dodany na końcu <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="71c14-294">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="71c14-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda jest wywoływana przez <xref:System.Collections.ObjectModel.Collection%601.Add%2A> i <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-296">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-296">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-297">Przesłonić tę metodę, aby zapewnić zachowanie dostosowane <xref:System.Collections.ObjectModel.Collection%601.Add%2A> i <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> metody odziedziczone <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="71c14-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="71c14-298">Wywołanie implementacji klasy podstawowej tej metody można umieścić element w kolekcji źródłowej oraz do aktualizowania słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-299">Ta sekcja zawiera dwa przykłady kodu, które przedstawiają zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metodę w celu zapewnienia zachowania niestandardowych w celu dodawania lub wstawianie obiektów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="71c14-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="71c14-300">Pierwszym przykładzie dodaje zdarzenie niestandardowe powiadomienie i drugi zapewnia obsługę kolekcji obiektów z tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="71c14-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="71c14-301">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="71c14-301">Example 1</span></span>  
  
 <span data-ttu-id="71c14-302">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-303">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-304">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-305">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-306">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-307">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-308">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-309">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="71c14-310">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="71c14-310">Example 2</span></span>  
  
 <span data-ttu-id="71c14-311">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-312">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-313">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-314">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-315">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-316">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-317">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-318">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71c14-319">
            <paramref name="index" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="71c14-320">- lub - <paramref name="index" /> jest większa niż <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71c14-321">Klucz elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-322">Pobiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71c14-323">Element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="71c14-324">Jeśli element z określonym kluczem nie zostanie znaleziony, jest zwracany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-325">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[key]` (`myCollection(key)` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="71c14-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-326">Ta właściwość zawiera tylko unikatowe wiersze z dziedziczonego <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwość, która pobiera i ustawia elementów według indeksu liczbowego.</span><span class="sxs-lookup"><span data-stu-id="71c14-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="71c14-327">Jednak jeśli `TKey` jest typu <xref:System.Int32>, ta właściwość maski właściwość dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="71c14-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="71c14-328">W takim przypadku możesz uzyskać dostęp do właściwość dziedziczona, rzutowania <xref:System.Collections.ObjectModel.KeyedCollection%602> na jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="71c14-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="71c14-329">Na przykład `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` w języku Visual Basic `KeyedCollection<int, MyType^>` w języku C++) mogą być rzutowane na `Collection<MyType>` (`Collection(Of MyType)` w języku Visual Basic `Collection<MyType^>` w języku C++).</span><span class="sxs-lookup"><span data-stu-id="71c14-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="71c14-330">Jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> słownika wyszukiwania `key` służy do pobierania elementu ze słownika.</span><span class="sxs-lookup"><span data-stu-id="71c14-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="71c14-331">Jeśli nie ma żadnych słownika wyszukiwania, klucz każdego elementu jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i w porównaniu z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="71c14-332">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="71c14-333">Implementuje Visual Basic <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="71c14-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="71c14-334">Pobieranie wartości tej właściwości jest operacją O(1), jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> słownika wyszukiwania; w przeciwnym razie jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-335">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-336">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-337">Przykładowy kod wywołuje zarówno <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwość, która jest tylko do odczytu i pobiera klucz, oraz <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwości, które można ustawić i pobiera według indeksu.</span><span class="sxs-lookup"><span data-stu-id="71c14-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="71c14-338">Widoczny jest sposób dostępu ostatnie właściwości, gdy w obiektach w pochodnej kolekcji kluczy liczba całkowita, można odróżnić od liczby całkowite użyte do pobierania indeksowanego.</span><span class="sxs-lookup"><span data-stu-id="71c14-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="71c14-339">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-340">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-341">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71c14-342">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="71c14-343">Element z określonym kluczem nie istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71c14-344">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-345">Usuwa element z określonym kluczem z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71c14-346">
            <see langword="true" /> Jeśli element został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71c14-347">Ta metoda zwraca również wartość <see langword="false" /> Jeśli <paramref name="key" /> nie został znaleziony w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-348">Klucz elementu powoduje również usunięcie ze słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="71c14-349">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest za pomocą słownika wyszukiwania, nadal będzie użycie słownika wyszukiwania, mimo że liczby elementów ponownie jest poniżej wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-350">Aby dostosować zachowanie tej metody, należy zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="71c14-351">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-352">Ten przykładowy kod przedstawia minimalne kodu konieczne pochodzi z klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> — metoda i zapewnianie konstruktora publicznego, który deleguje do konstruktora klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="71c14-353">Przykładowy kod przedstawia również wiele właściwości i metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="71c14-354">W przykładzie pokazano <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> odziedziczone — metoda <xref:System.Collections.ObjectModel.KeyedCollection%602>, która usuwa element z określonym kluczem, a także <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> i <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> metody dziedziczone z <xref:System.Collections.ObjectModel.Collection%601>, którego usunięcie przez obiekt i przez indeks odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="71c14-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="71c14-355">`SimpleOrder` Klasy jest bardzo proste zapotrzebowania lista zawierająca `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="71c14-356">Klucz `OrderItem` nie można modyfikować, ważną kwestią dla klas, które pochodzą z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="71c14-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="71c14-357">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71c14-358">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71c14-359">Indeks elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-360">Usuwa element o określonym indeksie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-361">Klucz elementu powoduje również usunięcie ze słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="71c14-362">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest za pomocą słownika wyszukiwania, nadal będzie użycie słownika wyszukiwania, mimo że liczby elementów ponownie jest poniżej wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="71c14-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="71c14-363">Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-364">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-364">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-365">Przesłonić tę metodę, aby zapewnić zachowanie dostosowane dla <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> i <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> metody dziedziczone z <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej i <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="71c14-366">Wywołanie implementacji klasy podstawowej tej metody, aby usunąć element z kolekcji źródłowej oraz do aktualizowania słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-367">Ta sekcja zawiera dwa przykłady kodu, które przedstawiają zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metodę w celu zapewnienia zachowania niestandardowych do usuwania obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="71c14-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="71c14-368">Pierwszym przykładzie dodaje zdarzenie niestandardowe powiadomienie i drugi zapewnia obsługę kolekcji obiektów z tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="71c14-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="71c14-369">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="71c14-369">Example 1</span></span>  
  
 <span data-ttu-id="71c14-370">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-371">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-372">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-373">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-374">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-375">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-376">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-377">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="71c14-378">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="71c14-378">Example 2</span></span>  
  
 <span data-ttu-id="71c14-379">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-380">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-381">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-382">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-383">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-384">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-385">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-386">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="71c14-387">Liczony od zera indeks elementu do wymiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="71c14-388">Nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71c14-389">Zamienia określony element element w określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71c14-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71c14-390">Słownik wyszukiwania jest odpowiednio aktualizowany.</span><span class="sxs-lookup"><span data-stu-id="71c14-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="71c14-391">Oznacza to klucza elementu, który jest zastępowany jest usunięty ze słownika wyszukiwania i klucza nowy element jest dodawany.</span><span class="sxs-lookup"><span data-stu-id="71c14-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="71c14-392">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="71c14-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="71c14-393">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="71c14-393">Notes for Implementers</span></span>  
 <span data-ttu-id="71c14-394">Przesłonić tę metodę, aby zapewnić zachowanie dostosowane ustawienia <xref:System.Collections.ObjectModel.Collection%601.Item%2A> odziedziczone właściwości <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="71c14-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71c14-395">Ta metoda nie ma wpływu na zachowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwość, która jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="71c14-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="71c14-396">Wywołanie implementacji klasy podstawowej tej metody można ustawić elementu w kolekcji źródłowej oraz do aktualizowania słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="71c14-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71c14-397">Ta sekcja zawiera dwa przykłady kodu, które przedstawiają zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodę w celu zapewnienia zachowania niestandardowego ustawienia <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="71c14-398">Pierwszym przykładzie dodaje zdarzenie niestandardowe powiadomienie i drugi zapewnia obsługę kolekcji obiektów z tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="71c14-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="71c14-399">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="71c14-399">Example 1</span></span>  
  
 <span data-ttu-id="71c14-400">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod, aby zapewnić zachowanie niestandardowych <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod oraz ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksator w języku C#).</span><span class="sxs-lookup"><span data-stu-id="71c14-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="71c14-401">Niestandardowe zachowanie, w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdej z metod zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="71c14-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="71c14-402">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i formularza proste kolejności.</span><span class="sxs-lookup"><span data-stu-id="71c14-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="71c14-403">Formularz zawiera `OrderItem` obiekty reprezentujący elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="71c14-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="71c14-404">Przykład kodu tworzy także `SimpleOrderChangedEventArgs` klasa może zawierać informacje dotyczące zdarzenia, a wyliczenie do identyfikowania typ zmiany.</span><span class="sxs-lookup"><span data-stu-id="71c14-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="71c14-405">Przykład kodu pokazuje niestandardowe zachowanie, wywołując właściwości i metod klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="71c14-406">Ten przykładowy kod używa obiektów z kluczami niezmienialny.</span><span class="sxs-lookup"><span data-stu-id="71c14-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="71c14-407">Na przykład kodu, która używa kluczy modyfikowalne, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="71c14-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="71c14-408">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="71c14-408">Example 2</span></span>  
  
 <span data-ttu-id="71c14-409">Poniższy przykładowy kod przedstawia sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody do obsługi tych kluczy i sposób przesłonięcia chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="71c14-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="71c14-410">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="71c14-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="71c14-411">`MutableKey` Klasa ma można ustawić `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="71c14-412">Gdy nowy klucz jest przypisany do właściwości, wywołuje metodę ustawiającą właściwość `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="71c14-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="71c14-413">Jeśli tak, jest zgłaszany wyjątek i nie ulega zmianie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="71c14-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="71c14-414">Aby można było obsługiwać połączenia między `MutableKey` obiektu i `MutableKeys` kolekcji i uniemożliwić obiektu wstawiane do dwie kolekcje `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="71c14-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="71c14-415">To pole jest obsługiwana przez metody chronione, zawierających niestandardowe zachowanie Dodawanie i usuwanie elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71c14-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="71c14-416">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="71c14-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>