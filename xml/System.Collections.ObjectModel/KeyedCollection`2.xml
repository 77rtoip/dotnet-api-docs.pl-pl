<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51fedac866190cb2630656d61d2189f984fca7bb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352263" /></Metadata><TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="4c465-101">Typ kluczy w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-101">The type of keys in the collection.</span></span></typeparam>
    <typeparam name="TItem"><span data-ttu-id="4c465-102">Typ elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-102">The type of items in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="4c465-103">Dostarcza abstrakcyjną klasę bazową dla kolekcji, której klucze są osadzone w wartościach.</span><span class="sxs-lookup"><span data-stu-id="4c465-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-104"><xref:System.Collections.ObjectModel.KeyedCollection%602> Klasa zapewnia zarówno (1) indeksowane pobieranie i poddające się do pobrania, które podejścia do o (1).</span><span class="sxs-lookup"><span data-stu-id="4c465-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="4c465-105">Jest to typ abstrakcyjny lub bardziej precyzyjnie nieskończony zestaw typów abstrakcyjnych, ponieważ każdy z jego typów ogólnych jest abstrakcyjną klasą bazową.</span><span class="sxs-lookup"><span data-stu-id="4c465-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="4c465-106">Aby użyć <xref:System.Collections.ObjectModel.KeyedCollection%602>, należy utworzyć typ kolekcji na podstawie odpowiedniego konstruowanego typu.</span><span class="sxs-lookup"><span data-stu-id="4c465-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="4c465-107">Klasa jest hybrydowa między kolekcją opartą <xref:System.Collections.Generic.IList%601> na interfejsie ogólnym i kolekcją opartą <xref:System.Collections.Generic.IDictionary%602> na interfejsie ogólnym. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="4c465-108">Podobnie jak kolekcje oparte na <xref:System.Collections.Generic.IList%601> interfejsie ogólnym, <xref:System.Collections.ObjectModel.KeyedCollection%602> są indeksowaną listą elementów.</span><span class="sxs-lookup"><span data-stu-id="4c465-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="4c465-109">Podobnie jak kolekcje oparte na <xref:System.Collections.Generic.IDictionary%602> interfejsie ogólnym, <xref:System.Collections.ObjectModel.KeyedCollection%602> mają klucz skojarzony z każdym elementem.</span><span class="sxs-lookup"><span data-stu-id="4c465-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="4c465-110">W przeciwieństwie do słowników element <xref:System.Collections.ObjectModel.KeyedCollection%602> nie jest parą klucz/wartość; zamiast tego cały element jest wartością, a klucz jest osadzony w wartości.</span><span class="sxs-lookup"><span data-stu-id="4c465-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="4c465-111">Na przykład element kolekcji pochodnej od `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` w Visual Basic) może być "Jan Nowak potrafisz".</span><span class="sxs-lookup"><span data-stu-id="4c465-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="4c465-112">gdzie wartość to "Jan Nowak potrafisz".</span><span class="sxs-lookup"><span data-stu-id="4c465-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="4c465-113">a kluczem jest "Nowak"; lub kolekcja rekordów pracowników zawierających klucze całkowite mogą pochodzić od `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="4c465-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="4c465-114">Metoda abstrakcyjna <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> wyodrębnia klucz z elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="4c465-115">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który można uzyskać <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c465-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="4c465-116">Gdy element jest dodawany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisywany w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="4c465-117">To zachowanie jest przesłonięte przez określenie progu tworzenia słownika podczas tworzenia <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="4c465-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-118">Słownik wyszukiwania jest tworzony po raz pierwszy, gdy liczba elementów przekracza ten próg.</span><span class="sxs-lookup"><span data-stu-id="4c465-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="4c465-119">Jeśli określisz wartość-1, słownik wyszukiwania nigdy nie zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4c465-119">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-120">Gdy używany jest wewnętrzny słownik wyszukiwania, zawiera odwołania do wszystkich elementów w kolekcji, jeśli `TItem` jest typem referencyjnym lub kopiami wszystkich elementów w kolekcji, jeśli `TItem` jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="4c465-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="4c465-121">W ten sposób używanie słownika wyszukiwania może być nieodpowiednie, `TItem` jeśli jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="4c465-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="4c465-122">Możesz uzyskać dostęp do elementu według jego indeksu lub klucza przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c465-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="4c465-123">Można dodawać elementy bez klucza, ale dostęp do tych elementów można następnie uzyskać tylko za pomocą indeksu.</span><span class="sxs-lookup"><span data-stu-id="4c465-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-124">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="4c465-124">This section contains two code examples.</span></span> <span data-ttu-id="4c465-125">Pierwszy przykład przedstawia kod minimalny wymagany do wygenerowania z <xref:System.Collections.ObjectModel.KeyedCollection%602>i demonstruje wiele metod dziedziczonych.</span><span class="sxs-lookup"><span data-stu-id="4c465-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="4c465-126">W drugim przykładzie przedstawiono sposób przesłaniania chronionych metod programu <xref:System.Collections.ObjectModel.KeyedCollection%602> w celu zapewnienia zachowania niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="4c465-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="4c465-127">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="4c465-127">**Example 1**</span></span>  
  
 <span data-ttu-id="4c465-128">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-129">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-130">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-131">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-132">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="4c465-133">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="4c465-133">**Example 2**</span></span>  
  
 <span data-ttu-id="4c465-134">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-135">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-136">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-137">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-138">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-139">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-140">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-141">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4c465-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c465-143">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa domyślnej wartości porównującej równości.</span><span class="sxs-lookup"><span data-stu-id="4c465-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-144">Utworzony za pomocą tego konstruktora używa domyślnej ogólnej wartości porównującej równości dla typu klucza uzyskanego z <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4c465-145">Aby określić inną ogólną funkcję porównującą równość, użyj <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> konstruktora <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> lub konstruktora.</span><span class="sxs-lookup"><span data-stu-id="4c465-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="4c465-146">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony podczas dodawania pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="4c465-147">Gdy element jest dodawany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisywany w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="4c465-148">To zachowanie można przesłonić, używając <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora i określając próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="4c465-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-149">Ponieważ Klasa jest abstrakcyjna (`MustInherit` w Visual Basic), należy od niej dziedziczyć, aby jej używać. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="4c465-150">W konstruktorze dla typu pochodnego Wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4c465-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="4c465-151">Nie trzeba ujawniać funkcji, takich jak porównania równości lub progu tworzenia słownika w konstruktorach.</span><span class="sxs-lookup"><span data-stu-id="4c465-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="4c465-152">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="4c465-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-153">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-154">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-155">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-156">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-157">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="4c465-158">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interfejsu generycznego do użycia podczas porównywania kluczy lub <see langword="null" /> do użycia domyślnej funkcji porównującej równość dla typu klucza uzyskanego z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="4c465-159">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa określonej metody porównującej równości.</span><span class="sxs-lookup"><span data-stu-id="4c465-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-160">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony podczas dodawania pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="4c465-161">Gdy element jest dodawany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisywany w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="4c465-162">To zachowanie można przesłonić, używając <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora i określając próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="4c465-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-163">Ponieważ Klasa jest abstrakcyjna (`MustInherit` w Visual Basic), należy od niej dziedziczyć, aby jej używać. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="4c465-164">W konstruktorze dla typu pochodnego Wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4c465-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="4c465-165">Nie trzeba ujawniać funkcji, takich jak porównania równości lub progu tworzenia słownika w konstruktorach.</span><span class="sxs-lookup"><span data-stu-id="4c465-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="4c465-166">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="4c465-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="4c465-167">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interfejsu generycznego do użycia podczas porównywania kluczy lub <see langword="null" /> do użycia domyślnej funkcji porównującej równość dla typu klucza uzyskanego z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span></span></param>
        <param name="dictionaryCreationThreshold"><span data-ttu-id="4c465-168">Liczba elementów, które mogą być przechowywane w kolekcji bez tworzenia słownika wyszukiwania (0 tworzy słownik wyszukiwania po dodaniu pierwszego elementu) lub-1, aby określić, że słownik wyszukiwania nigdy nie został utworzony.</span><span class="sxs-lookup"><span data-stu-id="4c465-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or -1 to specify that a lookup dictionary is never created.</span></span></param>
        <summary><span data-ttu-id="4c465-169">Inicjuje nowe wystąpienie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa określonej metody porównującej równość i tworzy słownik wyszukiwania, gdy zostanie przekroczony określony próg.</span><span class="sxs-lookup"><span data-stu-id="4c465-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-170">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony podczas dodawania pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="4c465-171">Gdy element jest dodawany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisywany w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="4c465-172">Ten konstruktor umożliwia przesłonięcie tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="4c465-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="4c465-173">Określ wartość 0, aby utworzyć słownik po dodaniu pierwszego elementu, 1, aby utworzyć słownik po dodaniu drugiego elementu itd.</span><span class="sxs-lookup"><span data-stu-id="4c465-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="4c465-174">Jeśli określisz wartość-1, słownik wyszukiwania nigdy nie zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="4c465-174">If you specify -1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="4c465-175">W przypadku bardzo małych kolekcji zwiększenie szybkości pobierania zapewnianej przez słownik wyszukiwania może nie być cenną dodatkową pamięcią wymaganą przez słownik.</span><span class="sxs-lookup"><span data-stu-id="4c465-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="4c465-176">Ustawienie wartości progowej pozwala określić, kiedy ma być to kompromis.</span><span class="sxs-lookup"><span data-stu-id="4c465-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-177">Ponieważ Klasa jest abstrakcyjna (`MustInherit` w Visual Basic), należy od niej dziedziczyć, aby jej używać. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="4c465-178">W konstruktorze dla typu pochodnego Wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="4c465-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="4c465-179">Nie trzeba ujawniać funkcji, takich jak porównania równości lub progu tworzenia słownika w konstruktorach.</span><span class="sxs-lookup"><span data-stu-id="4c465-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="4c465-180">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="4c465-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-181">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-182">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-183">W przykładzie kodu jest używane <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora z progiem równym 0, aby słownik wewnętrzny został utworzony przy pierwszym dodawaniu obiektu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="4c465-184">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-185">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-186">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-187">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-188">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-189">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4c465-190"><paramref name="dictionaryCreationThreshold" />jest mniejsza niż-1.</span><span class="sxs-lookup"><span data-stu-id="4c465-190"><paramref name="dictionaryCreationThreshold" /> is less than -1.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4c465-191">Element, dla którego ma zostać zmieniony klucz.</span><span class="sxs-lookup"><span data-stu-id="4c465-191">The element to change the key of.</span></span></param>
        <param name="newKey"><span data-ttu-id="4c465-192">Nowy klucz dla <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-192">The new key for <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="4c465-193">Zmienia klucz skojarzony z określonym elementem w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-193">Changes the key associated with the specified element in the lookup dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-194">Ta metoda nie modyfikuje klucza osadzonego w `item`programie; po prostu zastępuje klucz zapisany w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="4c465-195">W związku z `newKey` tym, jeśli różni się od klucza osadzonego `item`w, nie można `item` uzyskać dostępu przy użyciu klucza zwracanego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="4c465-196">Ta metoda nie robi nic, <xref:System.Collections.ObjectModel.KeyedCollection%602> Jeśli nie ma słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="4c465-197">Każdy klucz w a <xref:System.Collections.ObjectModel.KeyedCollection%602> musi być unikatowy.</span><span class="sxs-lookup"><span data-stu-id="4c465-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="4c465-198">Klucz nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="4c465-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="4c465-199">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="4c465-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-200">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-200">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-201">Przed zmodyfikowaniem klucza osadzonego w elemencie należy wywołać tę metodę, aby zaktualizować klucz w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="4c465-202">Jeśli wartość progowa tworzenia słownika to-1, wywołanie tej metody nie jest konieczne.</span><span class="sxs-lookup"><span data-stu-id="4c465-202">If the dictionary creation threshold is -1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="4c465-203">Nie ujawniaj <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody jako metody publicznej klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="4c465-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="4c465-204">Nieprawidłowe użycie tej metody powoduje, że słownik wyszukiwania nie jest zsynchronizowany z kluczami elementów.</span><span class="sxs-lookup"><span data-stu-id="4c465-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="4c465-205">Na przykład ustawienie klucza na `null` , a następnie ustawienie go na inną wartość dodaje wiele kluczy dla elementu do słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="4c465-206">Udostępnienie tej metody wewnętrznie w celu zezwolenia na modyfikowalne klucze elementów: Po zmianie klucza elementu Ta metoda jest używana do zmiany klucza w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-207">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-208">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-209">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-210">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-211">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-212">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-213">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-214">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c465-215"><paramref name="item" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-215"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4c465-216">—lub—</span><span class="sxs-lookup"><span data-stu-id="4c465-216">-or-</span></span> 
 <span data-ttu-id="4c465-217"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-217"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4c465-218"><paramref name="item" />nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="4c465-218"><paramref name="item" /> is not found.</span></span>  
  
<span data-ttu-id="4c465-219">—lub—</span><span class="sxs-lookup"><span data-stu-id="4c465-219">-or-</span></span> 
 <span data-ttu-id="4c465-220"><paramref name="key" />już istnieje w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-220"><paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4c465-221">Usuwa wszystkie elementy z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-221">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-222">W przypadku słownika wyszukiwania ta metoda czyści je, ale nie usuwa.</span><span class="sxs-lookup"><span data-stu-id="4c465-222">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="4c465-223">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> używa słownika wyszukiwania, będzie nadal używać słownika wyszukiwania, nawet jeśli liczba elementów jest ponownie objęta progiem.</span><span class="sxs-lookup"><span data-stu-id="4c465-223">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="4c465-224">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-225">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-225">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-226">Zastąp tę metodę, aby zapewnić dostosowane zachowanie <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metody dziedziczonej <xref:System.Collections.ObjectModel.Collection%601> z klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="4c465-226">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="4c465-227">Wywołaj implementację klasy bazowej tej metody w celu wyczyszczenia źródłowej kolekcji i wyczyszczenia słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-227">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-228">Ta sekcja zawiera dwa przykłady kodu, które demonstrują <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> przesłanianie metody w celu zapewnienia niestandardowego zachowania podczas czyszczenia wszystkich obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-228">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="4c465-229">Pierwszy przykład dodaje niestandardowe zdarzenie powiadomień, a drugi zapewnia obsługę kolekcji obiektów z modyfikowalnymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-229">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="4c465-230">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="4c465-230">Example 1</span></span>  
  
 <span data-ttu-id="4c465-231">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-231">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-232">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-232">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-233">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-233">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-234">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-234">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-235">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-235">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-236">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-236">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-237">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-237">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-238">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-238">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="4c465-239">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="4c465-239">Example 2</span></span>  
  
 <span data-ttu-id="4c465-240">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-240">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-241">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-241">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-242">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-242">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-243">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-243">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-244">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-244">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-245">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-245">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-246">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-246">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-247">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-247">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c465-248">Pobiera ogólną funkcję porównującą równość, która jest używana do określania równości kluczy w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-248">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span></span></summary>
        <value><span data-ttu-id="4c465-249">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interfejsu generycznego, który jest używany do określania równości kluczy w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-249">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-250">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="4c465-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4c465-251">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-251">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></param>
        <summary><span data-ttu-id="4c465-252">Określa, czy kolekcja zawiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-252">Determines whether the collection contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="4c465-253"><see langword="true" />Jeśli zawiera element z określonym kluczem; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /></span><span class="sxs-lookup"><span data-stu-id="4c465-253"><see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-254">Jeśli ma słownik wyszukiwania, `key` jest używany do przeszukiwania słownika. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-254">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="4c465-255">Jeśli nie ma słownika wyszukiwania, klucz każdego elementu jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i porównywany z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-255">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="4c465-256">Ta metoda jest operacją o (1), jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> ma słownik wyszukiwania; w przeciwnym razie jest to operacja o`n`(), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-256">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-257">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-257">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-258">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-258">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-259">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-259">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-260">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-260">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-261">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-261">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c465-262"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-262"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4c465-263">Pobiera słownik <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-263">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <value><span data-ttu-id="4c465-264">Słownik <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />wyszukiwania, jeśli istnieje; <see langword="null" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="4c465-264">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-265">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony podczas dodawania pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-265">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="4c465-266">Gdy element jest dodawany do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisywany w słowniku wyszukiwania w celu szybszego wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-266">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="4c465-267">To zachowanie można przesłonić, używając <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora i określając próg tworzenia słownika.</span><span class="sxs-lookup"><span data-stu-id="4c465-267">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="4c465-268">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="4c465-268">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-269">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-269">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-270">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-270">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-271">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-271">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-272">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-272">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-273">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-273">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-274">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-274">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-275">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-275">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-276">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-276">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4c465-277">Element, z którego ma zostać wyodrębniony klucz.</span><span class="sxs-lookup"><span data-stu-id="4c465-277">The element from which to extract the key.</span></span></param>
        <summary><span data-ttu-id="4c465-278">Po zaimplementowaniu w klasie pochodnej wyodrębnia klucz z określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-278">When implemented in a derived class, extracts the key from the specified element.</span></span></summary>
        <returns><span data-ttu-id="4c465-279">Klucz dla określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="4c465-279">The key for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-280">Jeśli klucz w słowniku wyszukiwania jest inny niż klucz osadzony w `item`, nie można uzyskać dostępu `item` przy użyciu klucza zwracanego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-280">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="4c465-281">Możesz zaimplementować tę metodę, aby zwrócić `null` do kolekcji zawierającej elementy bez kluczy, w takim przypadku można uzyskać dostęp do elementów tylko według ich indeksu.</span><span class="sxs-lookup"><span data-stu-id="4c465-281">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="4c465-282">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="4c465-282">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-283">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-283">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-284">Należy zastąpić tę metodę, aby zapewnić słownikowi możliwość wyodrębnienia kluczy z elementów w słowniku.</span><span class="sxs-lookup"><span data-stu-id="4c465-284">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="4c465-285">Ta metoda jest wywoływana wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="4c465-285">This method is called internally.</span></span> <span data-ttu-id="4c465-286">Nie jest to konieczne, aby była publiczna.</span><span class="sxs-lookup"><span data-stu-id="4c465-286">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-287">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-287">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-288">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-288">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-289">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-289">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-290">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-290">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-291">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-291">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4c465-292">Indeks (liczony od zera), <paramref name="item" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="4c465-292">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="4c465-293">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-293">The object to insert.</span></span></param>
        <summary><span data-ttu-id="4c465-294">Wstawia element do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="4c465-294">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-295">Jeśli `index` wartość jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>równa `item` , zostanie dodana na końcu. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-295">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="4c465-296">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-296">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="4c465-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>jest wywoływana przez <xref:System.Collections.ObjectModel.Collection%601.Add%2A> metody i <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> .</span><span class="sxs-lookup"><span data-stu-id="4c465-297"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-298">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-298">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-299">Zastąp tę metodę, aby zapewnić dostosowane zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.Collection%601> metod <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> i dziedziczonych z klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="4c465-299">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="4c465-300">Wywołaj implementację klasy bazowej tej metody, aby wstawić element do kolekcji źródłowej i zaktualizować słownik wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-300">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-301">Ta sekcja zawiera dwa przykłady kodu, które demonstrują <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> przesłanianie metody w celu zapewnienia niestandardowego zachowania do dodawania lub wstawiania obiektów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-301">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="4c465-302">Pierwszy przykład dodaje niestandardowe zdarzenie powiadomień, a drugi zapewnia obsługę kolekcji obiektów z modyfikowalnymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-302">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="4c465-303">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="4c465-303">Example 1</span></span>  
  
 <span data-ttu-id="4c465-304">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-304">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-305">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-305">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-306">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-306">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-307">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-307">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-308">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-308">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-309">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-309">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-310">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-310">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-311">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-311">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="4c465-312">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="4c465-312">Example 2</span></span>  
  
 <span data-ttu-id="4c465-313">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-313">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-314">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-314">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-315">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-315">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-316">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-316">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-317">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-317">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-318">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-318">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-319">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-319">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-320">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-320">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4c465-321"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="4c465-321"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="4c465-322">—lub—</span><span class="sxs-lookup"><span data-stu-id="4c465-322">-or-</span></span> 
 <span data-ttu-id="4c465-323"><paramref name="index" />jest większa niż <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-323"><paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4c465-324">Klucz elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="4c465-324">The key of the element to get.</span></span></param>
        <summary><span data-ttu-id="4c465-325">Pobiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-325">Gets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="4c465-326">Element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-326">The element with the specified key.</span></span> <span data-ttu-id="4c465-327">Jeśli element z określonym kluczem nie zostanie znaleziony, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="4c465-327">If an element with the specified key is not found, an exception is thrown.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-328">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[key]` (`myCollection(key)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4c465-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-329">Ta właściwość jest odrębna względem dziedziczonej <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwości, która pobiera i ustawia elementy według indeksu liczbowego.</span><span class="sxs-lookup"><span data-stu-id="4c465-329">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="4c465-330">Jeśli `TKey` jednak jest typu <xref:System.Int32>, ta właściwość maskuje dziedziczonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c465-330">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="4c465-331">W takim przypadku można uzyskać dostęp do dziedziczonej właściwości przez rzutowanie <xref:System.Collections.ObjectModel.KeyedCollection%602> na jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="4c465-331">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="4c465-332">Na `KeyedCollection<int, MyType>` przykład C++(`KeyedCollection(Of Integer, MyType)` w `KeyedCollection<int, MyType^>` Visual Basic w programie C++) można rzutować na `Collection<MyType>` (`Collection(Of MyType)` w Visual Basic, `Collection<MyType^>` w).</span><span class="sxs-lookup"><span data-stu-id="4c465-332">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="4c465-333">Jeśli ma słownik wyszukiwania, `key` jest używany do pobierania elementu ze słownika. <xref:System.Collections.ObjectModel.KeyedCollection%602></span><span class="sxs-lookup"><span data-stu-id="4c465-333">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="4c465-334">Jeśli nie ma słownika wyszukiwania, klucz każdego elementu jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i porównywany z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-334">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="4c465-335">C# Język używa słowa kluczowego do definiowania indeksatorów zamiast implementowania <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c465-335">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="4c465-336">Visual Basic implementuje <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="4c465-336">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="4c465-337">Pobieranie wartości tej właściwości <xref:System.Collections.ObjectModel.KeyedCollection%602> jest operacją o (1), jeśli ma słownik wyszukiwania; w przeciwnym razie jest to operacja o (`n`), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-337">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-338">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-338">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-339">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-339">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-340">Przykładowy kod wywołuje zarówno <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwość, która jest tylko do odczytu, jak i pobiera według klucza, <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> i właściwość, która jest metodą settable i pobiera według indeksu.</span><span class="sxs-lookup"><span data-stu-id="4c465-340">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="4c465-341">Pokazuje, w jaki sposób uzyskać dostęp do tej ostatniej właściwości, gdy obiekty w kolekcji pochodnej mają klucze całkowite, nieodróżniające od liczb całkowitych używanych do pobierania indeksowanego.</span><span class="sxs-lookup"><span data-stu-id="4c465-341">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="4c465-342">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-342">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-343">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-343">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-344">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-344">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c465-345"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-345"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="4c465-346">Element z określonym kluczem nie istnieje w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-346">An element with the specified key does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4c465-347">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="4c465-347">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="4c465-348">Usuwa element z określonym kluczem z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-348">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <returns><span data-ttu-id="4c465-349"><see langword="true" />Jeśli element został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="4c465-349"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="4c465-350">Ta metoda zwraca również <see langword="false" /> wartość <paramref name="key" /> , <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />Jeśli nie została znaleziona w.</span><span class="sxs-lookup"><span data-stu-id="4c465-350">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-351">Klucz elementu zostanie również usunięty z słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-351">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="4c465-352">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> używa słownika wyszukiwania, będzie nadal używać słownika wyszukiwania, nawet jeśli liczba elementów jest ponownie objęta progiem.</span><span class="sxs-lookup"><span data-stu-id="4c465-352">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-353">Aby dostosować zachowanie tej metody, Zastąp <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="4c465-353">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="4c465-354">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-354">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-355">Ten przykład kodu pokazuje minimalny kod niezbędny do wygenerowania klasy kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>z: <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> Zastępowanie metody i dostarczenie konstruktora publicznego, który jest delegatem do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="4c465-355">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="4c465-356">W przykładzie kodu pokazano również wiele właściwości i metod dziedziczonych z <xref:System.Collections.ObjectModel.KeyedCollection%602> klas i. <xref:System.Collections.ObjectModel.Collection%601></span><span class="sxs-lookup"><span data-stu-id="4c465-356">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="4c465-357">Przykład <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> ilustruje metodę dziedziczoną z <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602>, która usuwa element z określonym kluczem, a także metod i <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> metody dziedziczone z <xref:System.Collections.ObjectModel.Collection%601>, które Usuń odpowiednio przez obiekt i według indeksu.</span><span class="sxs-lookup"><span data-stu-id="4c465-357">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="4c465-358">Klasa jest bardzo prostą listą zapotrzebowania, która `OrderItem` zawiera obiekty, z których każdy reprezentuje element linii w kolejności. `SimpleOrder`</span><span class="sxs-lookup"><span data-stu-id="4c465-358">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="4c465-359">Klucz `OrderItem` jest niezmienny, ważnym zagadnieniem dotyczącym klas, które pochodzą <xref:System.Collections.ObjectModel.KeyedCollection%602>z.</span><span class="sxs-lookup"><span data-stu-id="4c465-359">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="4c465-360">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-360">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4c465-361"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-361"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4c465-362">Indeks elementu, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-362">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="4c465-363">Usuwa element w określonym indeksie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span><span class="sxs-lookup"><span data-stu-id="4c465-363">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-364">Klucz elementu zostanie również usunięty z słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-364">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="4c465-365">Jeśli liczba elementów przekroczyła próg tworzenia słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> używa słownika wyszukiwania, będzie nadal używać słownika wyszukiwania, nawet jeśli liczba elementów jest ponownie objęta progiem.</span><span class="sxs-lookup"><span data-stu-id="4c465-365">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="4c465-366">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="4c465-366">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-367">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-367">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-368">Zastąp tę metodę, aby zapewnić dostosowane zachowanie <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> <xref:System.Collections.ObjectModel.Collection%601> metod <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> i, dziedziczonych z klasy generycznej i <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> metody.</span><span class="sxs-lookup"><span data-stu-id="4c465-368">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="4c465-369">Wywołaj implementację klasy bazowej tej metody, aby usunąć element z kolekcji źródłowej i zaktualizować słownik wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-369">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-370">Ta sekcja zawiera dwa przykłady kodu, które demonstrują <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> przesłanianie metody w celu zapewnienia niestandardowego zachowania do usuwania obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4c465-370">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="4c465-371">Pierwszy przykład dodaje niestandardowe zdarzenie powiadomień, a drugi zapewnia obsługę kolekcji obiektów z modyfikowalnymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-371">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="4c465-372">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="4c465-372">Example 1</span></span>  
  
 <span data-ttu-id="4c465-373">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-373">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-374">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-374">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-375">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-375">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-376">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-376">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-377">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-377">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-378">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-378">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-379">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-379">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-380">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-380">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="4c465-381">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="4c465-381">Example 2</span></span>  
  
 <span data-ttu-id="4c465-382">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-382">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-383">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-383">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-384">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-384">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-385">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-385">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-386">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-386">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-387">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-387">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-388">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-388">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-389">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-389">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4c465-390">Indeks (liczony od zera) elementu, który ma zostać zastąpiony.</span><span class="sxs-lookup"><span data-stu-id="4c465-390">The zero-based index of the item to be replaced.</span></span></param>
        <param name="item"><span data-ttu-id="4c465-391">Nowy element.</span><span class="sxs-lookup"><span data-stu-id="4c465-391">The new item.</span></span></param>
        <summary><span data-ttu-id="4c465-392">Zamienia element w określonym indeksie na określony element.</span><span class="sxs-lookup"><span data-stu-id="4c465-392">Replaces the item at the specified index with the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c465-393">Słownik wyszukiwania jest odpowiednio aktualizowany.</span><span class="sxs-lookup"><span data-stu-id="4c465-393">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="4c465-394">Oznacza to, że klucz elementu, który jest zastępowany, jest usuwany z słownika wyszukiwania, a klucz nowego elementu zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="4c465-394">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="4c465-395">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="4c465-395">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="4c465-396">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="4c465-396">Notes for Implementers</span></span>  
 <span data-ttu-id="4c465-397">Zastąp tę metodę, aby zapewnić dostosowane zachowanie dotyczące <xref:System.Collections.ObjectModel.Collection%601.Item%2A> ustawiania właściwości dziedziczonej <xref:System.Collections.ObjectModel.Collection%601> z klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="4c465-397">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c465-398">Ta metoda nie wpływa na zachowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwości, która jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="4c465-398">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="4c465-399">Wywołaj implementację klasy bazowej tej metody, aby ustawić element w kolekcji źródłowej i zaktualizować słownik wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="4c465-399">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c465-400">Ta sekcja zawiera dwa przykłady kodu, które demonstrują <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> przesłanianie metody w celu zapewnienia niestandardowego zachowania <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> do ustawiania właściwości.</span><span class="sxs-lookup"><span data-stu-id="4c465-400">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4c465-401">Pierwszy przykład dodaje niestandardowe zdarzenie powiadomień, a drugi zapewnia obsługę kolekcji obiektów z modyfikowalnymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-401">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="4c465-402">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="4c465-402">Example 1</span></span>  
  
 <span data-ttu-id="4c465-403">Poniższy przykład kodu pokazuje <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, jak zastąpić chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zapewnić niestandardowe zachowanie dla <xref:System.Collections.ObjectModel.Collection%601.Add%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>metod,, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> i dla Ustawianie właściwości domyślnej <xref:System.Collections.ObjectModel.Collection%601.Item%2A> (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="4c465-403">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="4c465-404">Zachowanie niestandardowe podane w tym przykładzie jest zdarzeniem powiadomienia o nazwie `Changed`, które jest zgłaszane na końcu każdej z przesłoniętych metod.</span><span class="sxs-lookup"><span data-stu-id="4c465-404">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="4c465-405">Przykładowy kod tworzy `SimpleOrder` klasę, która dziedziczy z <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje prosty formularz zamówienia.</span><span class="sxs-lookup"><span data-stu-id="4c465-405">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="4c465-406">Formularz Order zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="4c465-406">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="4c465-407">W przykładzie kodu tworzona jest `SimpleOrderChangedEventArgs` również Klasa, która zawiera informacje o zdarzeniu, oraz Wyliczenie umożliwiające zidentyfikowanie typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="4c465-407">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="4c465-408">Przykład kodu demonstruje zachowanie niestandardowe przez wywołanie właściwości i metod klasy pochodnej, w `Main` metodzie `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-408">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="4c465-409">Ten przykład kodu używa obiektów z niezmiennymi kluczami.</span><span class="sxs-lookup"><span data-stu-id="4c465-409">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="4c465-410">Aby zapoznać się z przykładem kodu, który używa <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>modyfikowalnych kluczy, zobacz.</span><span class="sxs-lookup"><span data-stu-id="4c465-410">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="4c465-411">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="4c465-411">Example 2</span></span>  
  
 <span data-ttu-id="4c465-412">Poniższy przykład kodu pokazuje, jak zastąpić metodę chronioną <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> , aby obsługiwała klucze mutable i jak zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>chronione <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>metody,, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> , aby zachować integralność kluczy i kolekcja.</span><span class="sxs-lookup"><span data-stu-id="4c465-412">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="4c465-413">Przykładowy kod tworzy `MutableKeys` kolekcję, która pochodzi od <xref:System.Collections.ObjectModel.KeyedCollection%602>, i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="4c465-413">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="4c465-414">Klasa ma właściwość settable `Key`. `MutableKey`</span><span class="sxs-lookup"><span data-stu-id="4c465-414">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="4c465-415">Gdy nowy klucz zostanie przypisany do właściwości, Metoda ustawiająca właściwość wywołuje `internal` metodę (`Friend` w Visual Basic) `ChangeKey` kolekcji, aby sprawdzić, czy nowy klucz koliduje z istniejącym kluczem.</span><span class="sxs-lookup"><span data-stu-id="4c465-415">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="4c465-416">Jeśli tak jest, zgłaszany jest wyjątek, a wartość właściwości nie zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="4c465-416">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="4c465-417">Aby zachować połączenie między `MutableKey` obiektem `MutableKeys` a kolekcją i zapobiec wstawieniu obiektu `MutableKey` do dwóch kolekcji `internal` , Klasa ma (`Friend` w Visual Basic) `Collection`pole.</span><span class="sxs-lookup"><span data-stu-id="4c465-417">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="4c465-418">To pole jest obsługiwane przez chronione metody, które zapewniają niestandardowe zachowanie podczas dodawania i usuwania elementów z kolekcji, takich jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> Metoda.</span><span class="sxs-lookup"><span data-stu-id="4c465-418">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="4c465-419">Pole jest ustawiane, gdy element zostanie dodany do kolekcji i wyczyszczony, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="4c465-419">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="item" Type="TItem" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
