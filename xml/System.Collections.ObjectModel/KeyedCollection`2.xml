<Type Name="KeyedCollection&lt;TKey,TItem&gt;" FullName="System.Collections.ObjectModel.KeyedCollection&lt;TKey,TItem&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3534cea367a9d48a548c1c49b2b7d0292ba22003" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39840645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class KeyedCollection&lt;TKey,TItem&gt; : System.Collections.ObjectModel.Collection&lt;TItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit KeyedCollection`2&lt;TKey, TItem&gt; extends System.Collections.ObjectModel.Collection`1&lt;!TItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ObjectModel.KeyedCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class KeyedCollection(Of TKey, TItem)&#xA;Inherits Collection(Of TItem)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TItem&gt;&#xA;public ref class KeyedCollection abstract : System::Collections::ObjectModel::Collection&lt;TItem&gt;" />
  <TypeSignature Language="F#" Value="type KeyedCollection&lt;'Key, 'Item&gt; = class&#xA;    inherit Collection&lt;'Item&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ObjectModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;TItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_KeyedCollectionDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="d3c0c-101">Typ kluczy w kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3c0c-101">The type of keys in the collection.</span>
      </span>
    </typeparam>
    <typeparam name="TItem">
      <span data-ttu-id="d3c0c-102">Typ elementów w kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3c0c-102">The type of items in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d3c0c-103">Udostępnia abstrakcyjną klasę bazową dla kolekcji, których klucze są osadzone w wartościach.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d3c0c-103">Provides the abstract base class for a collection whose keys are embedded in the values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-104"><xref:System.Collections.ObjectModel.KeyedCollection%602> Klasa udostępnia zarówno O(1) indeksowane pobierania i opartych na kluczach pobierania, który zbliża się O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-104">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</span></span> <span data-ttu-id="d3c0c-105">Jest typem abstrakcyjnym lub dokładniej nieskończone zestaw typów abstrakcyjnych, ponieważ każdy z jej skonstruowany typów ogólnych jest abstrakcyjną klasę bazową.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-105">It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</span></span> <span data-ttu-id="d3c0c-106">Aby użyć <xref:System.Collections.ObjectModel.KeyedCollection%602>, dziedziczyć po odpowiedniego typu skonstruowanego typu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-106">To use <xref:System.Collections.ObjectModel.KeyedCollection%602>, derive your collection type from the appropriate constructed type.</span></span>  
  
 <span data-ttu-id="d3c0c-107"><xref:System.Collections.ObjectModel.KeyedCollection%602> Klasy jest hybrydą między kolekcję na podstawie <xref:System.Collections.Generic.IList%601> ogólny interfejs i kolekcji na podstawie <xref:System.Collections.Generic.IDictionary%602> interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-107">The <xref:System.Collections.ObjectModel.KeyedCollection%602> class is a hybrid between a collection based on the <xref:System.Collections.Generic.IList%601> generic interface and a collection based on the <xref:System.Collections.Generic.IDictionary%602> generic interface.</span></span> <span data-ttu-id="d3c0c-108">Kolekcje oparte na, takich jak <xref:System.Collections.Generic.IList%601> ogólny interfejs <xref:System.Collections.ObjectModel.KeyedCollection%602> jest indeksowany listę elementów.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-108">Like collections based on the <xref:System.Collections.Generic.IList%601> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> is an indexed list of items.</span></span> <span data-ttu-id="d3c0c-109">Kolekcje oparte na, takich jak <xref:System.Collections.Generic.IDictionary%602> ogólny interfejs <xref:System.Collections.ObjectModel.KeyedCollection%602> ma klucz skojarzony z każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-109">Like collections based on the <xref:System.Collections.Generic.IDictionary%602> generic interface, <xref:System.Collections.ObjectModel.KeyedCollection%602> has a key associated with each element.</span></span>  
  
 <span data-ttu-id="d3c0c-110">W odróżnieniu od słowników, element <xref:System.Collections.ObjectModel.KeyedCollection%602> nie jest pary klucz/wartość; zamiast tego cały element jest wartością i klucz zostanie osadzony w wartości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-110">Unlike dictionaries, an element of <xref:System.Collections.ObjectModel.KeyedCollection%602> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</span></span>  <span data-ttu-id="d3c0c-111">Na przykład element kolekcji pochodną `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` w języku Visual Basic) może być "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="d3c0c-111">For example, an element of a collection derived from `KeyedCollection\<String,String>` (`KeyedCollection(Of String, String)` in Visual Basic) might be "John Doe Jr."</span></span> <span data-ttu-id="d3c0c-112">Jeśli wartość jest "John Doe Jr."</span><span class="sxs-lookup"><span data-stu-id="d3c0c-112">where the value is "John Doe Jr."</span></span> <span data-ttu-id="d3c0c-113">a klucz jest "Doe"; lub zbiór rekordy pracowników, zawierający kluczy liczby całkowitej może pochodzić z `KeyedCollection\<int,Employee>`.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-113">and the key is "Doe"; or a collection of employee records containing integer keys could be derived from `KeyedCollection\<int,Employee>`.</span></span> <span data-ttu-id="d3c0c-114">Abstrakcyjna <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metoda wyodrębnia klucz z elementu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-114">The abstract <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method extracts the key from the element.</span></span>  
  
 <span data-ttu-id="d3c0c-115">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który można uzyskać za pomocą <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-115">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that you can obtain with the <xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A> property.</span></span>  <span data-ttu-id="d3c0c-116">Po dodaniu elementu do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisane w słowniku wyszukiwania, wyszukiwanie jest szybsze.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-116">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="d3c0c-117">To zachowanie jest zastępowany przez określenie próg Tworzenie słownika, podczas tworzenia <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-117">This behavior is overridden by specifying a dictionary creation threshold when you create the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-118">Słownik wyszukiwania jest tworzony po raz pierwszy liczba elementów przekracza wartość progu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-118">The lookup dictionary is created the first time the number of elements exceeds that threshold.</span></span>  <span data-ttu-id="d3c0c-119">Jeśli określisz -1 jako wartość progową, słownika wyszukiwania nigdy nie zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-119">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-120">Stosowania słownik wewnętrzny wyszukiwania zawiera odwołania do wszystkich elementów w kolekcji, jeśli `TItem` jest typem referencyjnym lub kopiuje wszystkich elementów w kolekcji, jeśli `TItem` jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-120">When the internal lookup dictionary is used, it contains references to all the items in the collection if `TItem` is a reference type, or copies of all the items in the collection if `TItem` is a value type.</span></span> <span data-ttu-id="d3c0c-121">W związku z tym, za pomocą słownika wyszukiwania może nie być odpowiednie Jeśli `TItem` jest typem wartości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-121">Thus, using the lookup dictionary may not be appropriate if `TItem` is a value type.</span></span>  
  
 <span data-ttu-id="d3c0c-122">Dostęp do elementu za pomocą jego indeksu lub klucza przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-122">You can access an item by its index or key by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="d3c0c-123">Można dodawać elementy bez klucza, ale te elementy później są dostępne tylko za pomocą indeksu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-123">You can add items without a key, but these items can subsequently be accessed only by index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-124">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-124">This section contains two code examples.</span></span> <span data-ttu-id="d3c0c-125">Pierwszy przykład pokazuje kod minimalne wymagane do uzyskania z <xref:System.Collections.ObjectModel.KeyedCollection%602>i pokazuje liczbę metody dziedziczone.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-125">The first example shows the minimum code required to derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and demonstrates many of the inherited methods.</span></span> <span data-ttu-id="d3c0c-126">Drugi przykład przedstawia sposób przesłonięcia metody chronionej <xref:System.Collections.ObjectModel.KeyedCollection%602> zapewnienie niestandardowe zachowanie.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-126">The second example shows how to override the protected methods of <xref:System.Collections.ObjectModel.KeyedCollection%602> to provide custom behavior.</span></span>  
  
 <span data-ttu-id="d3c0c-127">**Przykład 1**</span><span class="sxs-lookup"><span data-stu-id="d3c0c-127">**Example 1**</span></span>  
  
 <span data-ttu-id="d3c0c-128">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-128">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-129">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-129">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-130">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-130">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-131">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-131">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-132">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-132">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 <span data-ttu-id="d3c0c-133">**Przykład 2**</span><span class="sxs-lookup"><span data-stu-id="d3c0c-133">**Example 2**</span></span>  
  
 <span data-ttu-id="d3c0c-134">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-134">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-135">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-135">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-136">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-136">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-137">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-137">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-138">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-138">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-139">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-139">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-140">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-140">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-141">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-141">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Specialized.StringDictionary" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d3c0c-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-142">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c0c-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasy, która używa domyślny moduł porównujący równość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-143">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the default equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> utworzone za pomocą tego konstruktora używa domyślny moduł porównujący równość ogólny typ klucza, otrzymanego z <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-144">A <xref:System.Collections.ObjectModel.KeyedCollection%602> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d3c0c-145">Aby określić funkcję porównującą inną równość ogólny, użyj <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> konstruktora lub <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-145">To specify a different generic equality comparer, use the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29> constructor or the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="d3c0c-146">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony, gdy pierwszy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-146">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="d3c0c-147">Po dodaniu elementu do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisane w słowniku wyszukiwania, wyszukiwanie jest szybsze.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-147">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="d3c0c-148">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określając próg Tworzenie słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-148">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-149">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest klasą abstrakcyjną (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-149">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="d3c0c-150">W Konstruktorze dla danego typu pochodnego, wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-150">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="d3c0c-151">Nie jest wymagane do udostępnienia funkcji, takich jak moduł porównujący równość lub próg Tworzenie słownika w konstruktorach usługi.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-151">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="d3c0c-152">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-153">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-153">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-154">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-154">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-155">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-155">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-156">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-156">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-157">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-157">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="d3c0c-158">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs do użycia podczas porównywania kluczy lub <see langword="null" /> do użycia typ klucza, domyślny moduł porównujący równość uzyskany z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-158">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-159">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasę, która używa moduł porównujący równość określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-159">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-160">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony, gdy pierwszy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-160">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="d3c0c-161">Po dodaniu elementu do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisane w słowniku wyszukiwania, wyszukiwanie jest szybsze.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-161">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="d3c0c-162">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określając próg Tworzenie słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-162">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-163">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest klasą abstrakcyjną (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-163">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="d3c0c-164">W Konstruktorze dla danego typu pochodnego, wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-164">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="d3c0c-165">Nie jest wymagane do udostępnienia funkcji, takich jak moduł porównujący równość lub próg Tworzenie słownika w konstruktorach usługi.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-165">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="d3c0c-166">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-166">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedCollection (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer, int32 dictionaryCreationThreshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (comparer As IEqualityComparer(Of TKey), dictionaryCreationThreshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; KeyedCollection(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer, int dictionaryCreationThreshold);" />
      <MemberSignature Language="F#" Value="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * int -&gt; System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;" Usage="new System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt; (comparer, dictionaryCreationThreshold)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="dictionaryCreationThreshold" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="d3c0c-167">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs do użycia podczas porównywania kluczy lub <see langword="null" /> do użycia typ klucza, domyślny moduł porównujący równość uzyskany z <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-167">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface to use when comparing keys, or <see langword="null" /> to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default" />.</span>
          </span>
        </param>
        <param name="dictionaryCreationThreshold">
          <span data-ttu-id="d3c0c-168">Liczba elementów w kolekcji może zawierać bez tworzenia słownika wyszukiwania (0 tworzy słownik wyszukiwania, gdy pierwszy element zostanie dodany), lub -1, aby określić, czy słownik wyszukiwania nigdy nie został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-168">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-169">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> klasę, która używa moduł porównujący równość określonego i tworzy słownik wyszukiwania w przypadku przekroczenia określonego progu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-169">Initializes a new instance of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-170">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony, gdy pierwszy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-170">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="d3c0c-171">Po dodaniu elementu do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisane w słowniku wyszukiwania, wyszukiwanie jest szybsze.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-171">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="d3c0c-172">Ten konstruktor pozwala na zastąpienie tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-172">This constructor allows you to override that behavior.</span></span> <span data-ttu-id="d3c0c-173">Określ 0, aby utworzyć słownik po dodaniu pierwszego elementu, 1, aby utworzyć słownik po dodaniu drugiego elementu i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-173">Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</span></span> <span data-ttu-id="d3c0c-174">Jeśli określisz -1 jako wartość progową, słownika wyszukiwania nigdy nie zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-174">If you specify –1 as the threshold, the lookup dictionary is never created.</span></span>  
  
 <span data-ttu-id="d3c0c-175">Bardzo mały kolekcji poprawę szybkość pobierania dostarczone przez słownik wyszukiwania może nie być warte dodatkową pamięć wymagana przez słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-175">For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</span></span> <span data-ttu-id="d3c0c-176">Ustawienie progu pozwala zdecydować, kiedy ustawić tego kosztem.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-176">Setting a threshold allows you to decide when to make that tradeoff.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-177">Ponieważ <xref:System.Collections.ObjectModel.KeyedCollection%602> klasa jest klasą abstrakcyjną (`MustInherit` w języku Visual Basic), musi pochodzić od niego, aby można było go używać.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-177">Because the <xref:System.Collections.ObjectModel.KeyedCollection%602> class is abstract (`MustInherit` in Visual Basic), you must derive from it in order to use it.</span></span> <span data-ttu-id="d3c0c-178">W Konstruktorze dla danego typu pochodnego, wywołaj odpowiedni <xref:System.Collections.ObjectModel.KeyedCollection%602> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-178">In the constructor for your derived type, call the appropriate <xref:System.Collections.ObjectModel.KeyedCollection%602> constructor.</span></span> <span data-ttu-id="d3c0c-179">Nie jest wymagane do udostępnienia funkcji, takich jak moduł porównujący równość lub próg Tworzenie słownika w konstruktorach usługi.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-179">It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</span></span>  
  
 <span data-ttu-id="d3c0c-180">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-180">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-181">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-181">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-182">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-182">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-183">Przykład kodu wykorzystuje <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> konstruktora z próg o wartości 0, tak aby słownik wewnętrzny jest tworzony po raz pierwszy obiekt zostanie dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-183">The code example uses the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor with a threshold of 0, so that the internal dictionary is created the first time an object is added to the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-184">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-184">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-185">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-185">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-186">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-186">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-187">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-187">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-188">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-188">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-189">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-189">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d3c0c-190">
            <paramref name="dictionaryCreationThreshold" /> jest mniejsza niż -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-190">
              <paramref name="dictionaryCreationThreshold" /> is less than –1.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeItemKey">
      <MemberSignature Language="C#" Value="protected void ChangeItemKey (TItem item, TKey newKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ChangeItemKey(!TItem item, !TKey newKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ChangeItemKey (item As TItem, newKey As TKey)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ChangeItemKey(TItem item, TKey newKey);" />
      <MemberSignature Language="F#" Value="member this.ChangeItemKey : 'Item * 'Key -&gt; unit" Usage="keyedCollection.ChangeItemKey (item, newKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
        <Parameter Name="newKey" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d3c0c-191">Element, aby zmienić klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-191">The element to change the key of.</span>
          </span>
        </param>
        <param name="newKey">
          <span data-ttu-id="d3c0c-192">Nowy klucz dla <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-192">The new key for <c>item</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-193">Zmienia klucz skojarzony z określonym elementem w słowniku wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-193">Changes the key associated with the specified element in the lookup dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-194">Ta metoda nie powoduje modyfikacji klucz osadzone w `item`; po prostu zastępuje klucz zapisany w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-194">This method does not modify the key embedded in `item`; it simply replaces the key saved in the lookup dictionary.</span></span>  <span data-ttu-id="d3c0c-195">W związku z tym jeśli `newKey` różni się od klucza, który jest osadzony w `item`, nie masz dostępu do `item` przy użyciu klucza zwróconego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-195">Therefore, if `newKey` is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="d3c0c-196">Ta metoda nie robi nic Jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> nie ma słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-196">This method does nothing if the <xref:System.Collections.ObjectModel.KeyedCollection%602> does not have a lookup dictionary.</span></span>  
  
 <span data-ttu-id="d3c0c-197">Każdy klucz w <xref:System.Collections.ObjectModel.KeyedCollection%602> muszą być unikatowe.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-197">Every key in a <xref:System.Collections.ObjectModel.KeyedCollection%602> must be unique.</span></span> <span data-ttu-id="d3c0c-198">Klucz nie może być `null`.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-198">A key cannot be `null`.</span></span>  
  
 <span data-ttu-id="d3c0c-199">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-199">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-200">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-200">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-201">Zanim klucz osadzone w elemencie, musi wywołać tę metodę, aby zaktualizować klucz w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-201">Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</span></span> <span data-ttu-id="d3c0c-202">Jeśli próg tworzenia słownika jest -1, wywołanie tej metody nie jest konieczne.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-202">If the dictionary creation threshold is –1, calling this method is not necessary.</span></span>  
  
 <span data-ttu-id="d3c0c-203">Nie ujawniaj <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metodę jako publiczna metoda klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-203">Do not expose the <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method as a public method of a derived class.</span></span> <span data-ttu-id="d3c0c-204">Niewłaściwe korzystanie z tej metody umieszcza słownika wyszukiwania zsynchronizowany przy użyciu kluczy elementu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-204">Misuse of this method puts the lookup dictionary out of sync with item keys.</span></span> <span data-ttu-id="d3c0c-205">Na przykład, ustawienie klucza `null` i ustawienie jej z inną wartością dodaje wiele kluczy dla elementu do słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-205">For example, setting the key to `null` and then setting it to another value adds multiple keys for an item to the lookup dictionary.</span></span> <span data-ttu-id="d3c0c-206">Udostępnianie tej metody wewnętrznie, aby umożliwić mutable elementu klucze: po zmianie klucza dla elementu ta metoda jest używana, aby zmienić klucz w słowniku wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-206">Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-207">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-207">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-208">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-208">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-209">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-209">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-210">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-210">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-211">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-211">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-212">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-212">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-213">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-213">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-214">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-214">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3c0c-215">
            <paramref name="item" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-215">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d3c0c-216">- lub - <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-216">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3c0c-217">
            <paramref name="item" /> Nie można odnaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-217">
              <paramref name="item" /> is not found.</span>
          </span>
          <span data-ttu-id="d3c0c-218">- lub - <paramref name="key" /> już istnieje w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-218">-or-  <paramref name="key" /> already exists in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="keyedCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d3c0c-219">Usuwa wszystkie elementy z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-219">Removes all elements from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-220">W przypadku słownika wyszukiwania, ta metoda usuwa go, ale nie spowoduje usunięcia go.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-220">If there is a lookup dictionary, this method clears it but does not delete it.</span></span>  
  
 <span data-ttu-id="d3c0c-221">Jeśli liczba elementów został przekroczony próg Tworzenie słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest przy użyciu słownika wyszukiwania, nadal będzie użyć słownika wyszukiwania, mimo że liczba elementów, które jest ponownie od wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-221">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="d3c0c-222">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-222">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-223">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-223">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-224">Przesłonić tę metodę, aby zapewnić zachowanie niestandardowe <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metody dziedziczone z <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-224">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> method, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="d3c0c-225">Wywołanie tej metody, aby wyczyścić kolekcji źródłowej, a także można wyczyścić słownika wyszukiwania implementacji klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-225">Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-226">Ta sekcja zawiera dwa przykłady kodu, które pokazują, zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> metody w celu zapewnienia niestandardowe zachowanie czyszczenia wszystkich obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-226">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A> method to provide custom behavior for clearing all objects from the collection.</span></span> <span data-ttu-id="d3c0c-227">Pierwszy przykład dodaje zdarzenie niestandardowe powiadomienie, a drugi zapewnia obsługę kolekcji obiektów za pomocą tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-227">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="d3c0c-228">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="d3c0c-228">Example 1</span></span>  
  
 <span data-ttu-id="d3c0c-229">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-229">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-230">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-230">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-231">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-231">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-232">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-232">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-233">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-233">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-234">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-234">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-235">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-235">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-236">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-236">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="d3c0c-237">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="d3c0c-237">Example 2</span></span>  
  
 <span data-ttu-id="d3c0c-238">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-238">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-239">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-239">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-240">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-240">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-241">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-241">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-242">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-242">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-243">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-243">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-244">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-244">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-245">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-245">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEqualityComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IEqualityComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IEqualityComparer&lt;'Key&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3c0c-246">Pobiera modułu porównującego równości ogólny, który służy do określania równości kluczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-246">Gets the generic equality comparer that is used to determine equality of keys in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c0c-247">Implementacja <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> ogólny interfejs, który służy do określania równości kluczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-247">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface that is used to determine equality of keys in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-248">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-248">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Contains : 'Key -&gt; bool" Usage="keyedCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d3c0c-249">Klucz do zlokalizowania w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-249">The key to locate in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-250">Określa, czy kolekcja zawiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-250">Determines whether the collection contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c0c-251">
            <see langword="true" /> Jeśli <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-251">
              <see langword="true" /> if the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-252">Jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> ma słownika wyszukiwania `key` służy do wyszukiwania słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-252">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to search the dictionary.</span></span> <span data-ttu-id="d3c0c-253">W przypadku żaden słownik wyszukiwania klucza każdy element jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i w porównaniu z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-253">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="d3c0c-254">Ta metoda jest operacją O(1), jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> ma słownik wyszukiwanie; w przeciwnym razie jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-254">This method is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-255">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-255">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-256">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-256">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-257">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-257">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-258">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-258">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-259">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-259">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3c0c-260">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-260">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IDictionary&lt;TKey,TItem&gt; Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;!TKey, !TItem&gt; Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ Dictionary { System::Collections::Generic::IDictionary&lt;TKey, TItem&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.Generic.IDictionary&lt;'Key, 'Item&gt;" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;TKey,TItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d3c0c-261">Pobiera słownik wyszukiwania <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-261">Gets the lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c0c-262">Słownik wyszukiwania <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, jeśli taki istnieje; w przeciwnym razie <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-262">The lookup dictionary of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />, if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-263">Domyślnie <xref:System.Collections.ObjectModel.KeyedCollection%602> zawiera słownik wyszukiwania, który jest tworzony, gdy pierwszy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-263">By default, the <xref:System.Collections.ObjectModel.KeyedCollection%602> includes a lookup dictionary that is created when the first item is added.</span></span> <span data-ttu-id="d3c0c-264">Po dodaniu elementu do <xref:System.Collections.ObjectModel.KeyedCollection%602>, klucz elementu jest wyodrębniany raz i zapisane w słowniku wyszukiwania, wyszukiwanie jest szybsze.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-264">When an item is added to the <xref:System.Collections.ObjectModel.KeyedCollection%602>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</span></span> <span data-ttu-id="d3c0c-265">To zachowanie można przesłonić przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> Konstruktor i określając próg Tworzenie słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-265">This behavior can be overridden by using the <xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29> constructor and specifying a dictionary creation threshold.</span></span>  
  
 <span data-ttu-id="d3c0c-266">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-266">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-267">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-267">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-268">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-268">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-269">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-269">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-270">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-270">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-271">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-271">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-272">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-272">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-273">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-273">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-274">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-274">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyForItem">
      <MemberSignature Language="C#" Value="protected abstract TKey GetKeyForItem (TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TKey GetKeyForItem(!TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetKeyForItem (item As TItem) As TKey" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TKey GetKeyForItem(TItem item);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyForItem : 'Item -&gt; 'Key" Usage="keyedCollection.GetKeyForItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d3c0c-275">Element, z którego ma zostać wyodrębniony klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-275">The element from which to extract the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-276">Po zaimplementowaniu w klasie pochodnej, wyodrębnia klucz z określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-276">When implemented in a derived class, extracts the key from the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c0c-277">Klucz dla określonego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-277">The key for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-278">Jeśli kluczem w słowniku wyszukiwania jest inny niż klucz, który jest osadzony w `item`, nie masz dostępu do `item` przy użyciu klucza zwróconego przez <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-278">If the key in the lookup dictionary is different from the key that is embedded in `item`, you cannot access `item` by using the key returned by <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A>.</span></span>  
  
 <span data-ttu-id="d3c0c-279">Możesz zaimplementować tę metodę, aby zwrócić `null` dla kolekcji, która zawiera elementy, bez kluczy, w którym to przypadku elementy są dostępne tylko za pomocą ich indeksu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-279">You can implement this method to return `null` for a collection that contains items without keys, in which case the items can be accessed only by their index.</span></span> <span data-ttu-id="d3c0c-280">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-280">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-281">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-281">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-282">Należy przesłonić tę metodę, aby zapewnić słownika umożliwia prowadzenie klucze elementów w słowniku.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-282">You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</span></span>  
  
 <span data-ttu-id="d3c0c-283">Ta metoda jest wywoływana wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-283">This method is called internally.</span></span> <span data-ttu-id="d3c0c-284">Nie jest konieczne, aby mogła być publiczne.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-284">It is not necessary for it to be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-285">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-285">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-286">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-286">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-287">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-287">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-288">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-288">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-289">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-289">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)" />
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'Item -&gt; unit" Usage="keyedCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d3c0c-290">Liczony od zera indeks, w którym <c>elementu</c> powinien zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-290">The zero-based index at which <c>item</c> should be inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d3c0c-291">Obiekt do wstawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-291">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-292">Wstawia element do <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-292">Inserts an element into the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-293">Jeśli `index` jest równa <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` zostanie dodany na końcu <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-293">If `index` is equal to <xref:System.Collections.ObjectModel.Collection%601.Count%2A>, `item` is added to the end of the <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span>  
  
 <span data-ttu-id="d3c0c-294">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-294">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="d3c0c-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> jest wywoływana przez <xref:System.Collections.ObjectModel.Collection%601.Add%2A> i <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-295"><xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> is called by the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-296">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-296">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-297">Przesłonić tę metodę, aby zapewnić zachowanie niestandardowe <xref:System.Collections.ObjectModel.Collection%601.Add%2A> i <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> metod odziedziczone <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-297">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> and <xref:System.Collections.ObjectModel.Collection%601.Insert%2A> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
 <span data-ttu-id="d3c0c-298">Wywołania implementacji klasy podstawowej przez tę metodę, aby wstawić element do kolekcji źródłowej oraz do aktualizowania słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-298">Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-299">Ta sekcja zawiera dwa przykłady kodu, które pokazują, zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody w celu zapewnienia zachowania niestandardowe do dodawania lub wstawianie obiektów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-299">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method to provide custom behavior for adding or inserting objects into the collection.</span></span> <span data-ttu-id="d3c0c-300">Pierwszy przykład dodaje zdarzenie niestandardowe powiadomienie, a drugi zapewnia obsługę kolekcji obiektów za pomocą tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-300">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="d3c0c-301">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="d3c0c-301">Example 1</span></span>  
  
 <span data-ttu-id="d3c0c-302">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-302">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-303">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-303">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-304">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-304">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-305">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-305">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-306">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-306">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-307">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-307">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-308">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-308">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-309">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-309">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="d3c0c-310">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="d3c0c-310">Example 2</span></span>  
  
 <span data-ttu-id="d3c0c-311">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-311">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-312">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-312">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-313">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-313">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-314">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-314">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-315">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-315">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-316">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-316">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-317">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-317">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-318">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-318">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d3c0c-319">
            <paramref name="index" /> jest mniejsza niż 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-319">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="d3c0c-320">- lub - <paramref name="index" /> jest większa niż <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-320">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItem this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItem Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItem default[TKey] { TItem get(TKey key); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Item" Usage="System.Collections.ObjectModel.KeyedCollection&lt;'Key, 'Item&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d3c0c-321">Klucz elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-321">The key of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-322">Pobiera element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-322">Gets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d3c0c-323">Element z określonym kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-323">The element with the specified key.</span>
          </span>
          <span data-ttu-id="d3c0c-324">Jeśli element z określonym kluczem nie zostanie znaleziony, jest zgłaszany wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-324">If an element with the specified key is not found, an exception is thrown.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-325">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[key]` (`myCollection(key)` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-325">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-326">Właściwość ta różni się od dziedziczonego <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwość, która pobiera i ustawia elementów według indeksu liczbowego.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-326">This property is distinct from the inherited <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which gets and sets elements by numeric index.</span></span> <span data-ttu-id="d3c0c-327">Jednak jeśli `TKey` typu <xref:System.Int32>, ta właściwość maskuje właściwość dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-327">However, if `TKey` is of type <xref:System.Int32>, this property masks the inherited property.</span></span> <span data-ttu-id="d3c0c-328">W takim przypadku możesz uzyskać dostęp właściwość dziedziczona przez rzutowanie <xref:System.Collections.ObjectModel.KeyedCollection%602> na jego typ bazowy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-328">In that case, you can access the inherited property by casting the <xref:System.Collections.ObjectModel.KeyedCollection%602> to its base type.</span></span> <span data-ttu-id="d3c0c-329">Na przykład `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` w języku Visual Basic `KeyedCollection<int, MyType^>` w języku C++) mogą być rzutowane na `Collection<MyType>` (`Collection(Of MyType)` w języku Visual Basic `Collection<MyType^>` w języku C++).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-329">For example, `KeyedCollection<int, MyType>` (`KeyedCollection(Of Integer, MyType)` in Visual Basic, `KeyedCollection<int, MyType^>` in C++) can be cast to `Collection<MyType>` (`Collection(Of MyType)` in Visual Basic, `Collection<MyType^>` in C++).</span></span>  
  
 <span data-ttu-id="d3c0c-330">Jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> ma słownika wyszukiwania `key` służy do pobierania elementu ze słownika.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-330">If the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary, `key` is used to retrieve the element from the dictionary.</span></span>  <span data-ttu-id="d3c0c-331">W przypadku żaden słownik wyszukiwania klucza każdy element jest wyodrębniany przy użyciu <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i w porównaniu z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-331">If there is no lookup dictionary, the key of each element is extracted using the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and compared with the specified key.</span></span>  
  
 <span data-ttu-id="d3c0c-332">W języku C# używa słowa kluczowego w celu zdefiniowania indeksatorów, a nie Implementowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-332">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> property.</span></span> <span data-ttu-id="d3c0c-333">Implementuje języka Visual Basic <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> jako właściwość domyślną, która zapewnia taką samą funkcjonalność indeksowania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-333">Visual Basic implements <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="d3c0c-334">Pobieranie wartości tej właściwości jest operacją O(1), jeśli <xref:System.Collections.ObjectModel.KeyedCollection%602> ma słownik wyszukiwanie; w przeciwnym razie jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-334">Retrieving the value of this property is an O(1) operation if the <xref:System.Collections.ObjectModel.KeyedCollection%602> has a lookup dictionary; otherwise it is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-335">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-335">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-336">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-336">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-337">Przykładowy kod wywołuje zarówno <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwość, która jest tylko do odczytu, a następnie pobiera według klucza, a <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwości można ustawić, która pobiera według indeksu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-337">The code example calls both the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only and retrieves by key, and the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property, which is settable and retrieves by index.</span></span> <span data-ttu-id="d3c0c-338">Widoczny jest sposób uzyskiwać dostęp do jego właściwości w przypadku obiektów pochodnych kolekcji mają klucze liczby całkowitej, nie do odróżnienia od liczb całkowitych, użyte do pobierania indeksowanego.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-338">It shows how to access the latter property when the objects in the derived collection have integer keys, indistinguishable from the integers used for indexed retrieval.</span></span>  
  
 <span data-ttu-id="d3c0c-339">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-339">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-340">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-340">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-341">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-341">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3c0c-342">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-342">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="d3c0c-343">Element z określonym kluczem nie istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-343">An element with the specified key does not exist in the collection.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Key -&gt; bool" Usage="keyedCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="d3c0c-344">Klucz elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-344">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-345">Usuwa element z określonym kluczem z <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-345">Removes the element with the specified key from the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d3c0c-346">
            <see langword="true" /> Jeśli element został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-346">
              <see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d3c0c-347">Ta metoda zwraca też wartość <see langword="false" /> Jeśli <paramref name="key" /> nie zostanie znaleziony w <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-347">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-348">Klucz elementu jest również usuwana ze słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-348">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="d3c0c-349">Jeśli liczba elementów został przekroczony próg Tworzenie słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest przy użyciu słownika wyszukiwania, nadal będzie użyć słownika wyszukiwania, mimo że liczba elementów, które jest ponownie od wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-349">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-350">Aby dostosować zachowanie tej metody, należy zastąpić <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-350">To customize the behavior of this method, override the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method.</span></span>  
  
 <span data-ttu-id="d3c0c-351">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-351">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-352">Ten przykład kodu pokazuje kod minimalne należy wyprowadzić klasę z kolekcji <xref:System.Collections.ObjectModel.KeyedCollection%602>: zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> metody i zapewniając Konstruktor publiczny, który deleguje do konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-352">This code example shows the minimum code necessary to derive a collection class from <xref:System.Collections.ObjectModel.KeyedCollection%602>: overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A> method and providing a public constructor that delegates to a base class constructor.</span></span> <span data-ttu-id="d3c0c-353">W przykładzie kodu pokazano również wiele właściwości i metod odziedziczone <xref:System.Collections.ObjectModel.KeyedCollection%602> i <xref:System.Collections.ObjectModel.Collection%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-353">The code example also demonstrates many of the properties and methods inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602> and <xref:System.Collections.ObjectModel.Collection%601> classes.</span></span>  
  
 <span data-ttu-id="d3c0c-354">W przykładzie pokazano <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> metody dziedziczone z <xref:System.Collections.ObjectModel.KeyedCollection%602>, który usuwa element z określonym kluczem, a także <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> i <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> metod odziedziczone <xref:System.Collections.ObjectModel.Collection%601>, którego usunięcie przez obiekt i za pomocą indeksu odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-354">The example demonstrates <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A> method inherited from <xref:System.Collections.ObjectModel.KeyedCollection%602>, which removes the item with a specified key, and also the <xref:System.Collections.ObjectModel.Collection%601.Remove%2A> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%2A> methods inherited from <xref:System.Collections.ObjectModel.Collection%601>, which remove by object and by index respectively.</span></span>  
  
 <span data-ttu-id="d3c0c-355">`SimpleOrder` Klasa jest lista zapotrzebowania bardzo prosty, która zawiera `OrderItem` obiektów, z których każdy reprezentuje elementu wiersza w kolejności.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-355">The `SimpleOrder` class is a very simple requisition list that contains `OrderItem` objects, each of which represents a line item in the order.</span></span> <span data-ttu-id="d3c0c-356">Klucz `OrderItem` można modyfikować, ważną kwestią dla klas, które wynikają z <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-356">The key of `OrderItem` is immutable, an important consideration for classes that derive from <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span></span> <span data-ttu-id="d3c0c-357">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-357">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection/cs/source.cs#1)]
 [!code-vb[KeyedCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d3c0c-358">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-358">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="keyedCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d3c0c-359">Indeks elementu do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-359">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-360">Usuwa element o określonym indeksie <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-360">Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-361">Klucz elementu jest również usuwana ze słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-361">The key of the element is also removed from the lookup dictionary.</span></span>  
  
 <span data-ttu-id="d3c0c-362">Jeśli liczba elementów został przekroczony próg Tworzenie słownika i <xref:System.Collections.ObjectModel.KeyedCollection%602> jest przy użyciu słownika wyszukiwania, nadal będzie użyć słownika wyszukiwania, mimo że liczba elementów, które jest ponownie od wartości progowej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-362">If the number of elements has exceeded the dictionary creation threshold and the <xref:System.Collections.ObjectModel.KeyedCollection%602> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</span></span>  
  
 <span data-ttu-id="d3c0c-363">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-363">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.Collection%601.Count%2A>.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-364">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-364">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-365">Przesłonić tę metodę, aby zapewnić zachowanie niestandardowe <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> i <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> metod odziedziczone <xref:System.Collections.ObjectModel.Collection%601> klasy generycznej i <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-365">Override this method to provide customized behavior for the <xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29> and <xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29> methods, inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class, and the <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29> method.</span></span>  
  
 <span data-ttu-id="d3c0c-366">Wywołania implementacji klasy podstawowej przez tę metodę, aby usunąć element z kolekcji źródłowej i aktualizowanie słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-366">Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-367">Ta sekcja zawiera dwa przykłady kodu, które pokazują, zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> metody w celu zapewnienia zachowania niestandardowe do usuwania obiektów z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-367">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A> method to provide custom behavior for removing objects from the collection.</span></span> <span data-ttu-id="d3c0c-368">Pierwszy przykład dodaje zdarzenie niestandardowe powiadomienie, a drugi zapewnia obsługę kolekcji obiektów za pomocą tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-368">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="d3c0c-369">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="d3c0c-369">Example 1</span></span>  
  
 <span data-ttu-id="d3c0c-370">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-370">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-371">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-371">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-372">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-372">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-373">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-373">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-374">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-374">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-375">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-375">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-376">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-376">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-377">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-377">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="d3c0c-378">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="d3c0c-378">Example 2</span></span>  
  
 <span data-ttu-id="d3c0c-379">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-379">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-380">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-380">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-381">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-381">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-382">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-382">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-383">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-383">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-384">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-384">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-385">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-385">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-386">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-386">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems" />
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, !TItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, TItem item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * 'Item -&gt; unit" Usage="keyedCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="TItem" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d3c0c-387">Liczony od zera indeks elementu, który ma zostać zastąpione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-387">The zero-based index of the item to be replaced.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d3c0c-388">Nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-388">The new item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d3c0c-389">Zamienia określony element element pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d3c0c-389">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3c0c-390">Słownik wyszukiwania jest odpowiednio aktualizowana.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-390">The lookup dictionary is updated accordingly.</span></span> <span data-ttu-id="d3c0c-391">Oznacza to, że klucz elementu, który jest zastępowany został usunięty ze słownika wyszukiwania i klucza nowy element zostanie dodany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-391">That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</span></span>  
  
 <span data-ttu-id="d3c0c-392">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-392">This method is an O(1) operation.</span></span>  
  
## <a name="notes-for-implementers"></a><span data-ttu-id="d3c0c-393">Uwagi dotyczące implementacji</span><span class="sxs-lookup"><span data-stu-id="d3c0c-393">Notes for Implementers</span></span>  
 <span data-ttu-id="d3c0c-394">Przesłonić tę metodę, aby zapewnić zachowanie niestandardowe ustawienia <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwość dziedziczona z <xref:System.Collections.ObjectModel.Collection%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-394">Override this method to provide customized behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property inherited from the <xref:System.Collections.ObjectModel.Collection%601> generic class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d3c0c-395">Ta metoda nie ma wpływu na zachowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> właściwość, która jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-395">This method does not affect the behavior of the <xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=nameWithType> property, which is read-only.</span></span>  
  
 <span data-ttu-id="d3c0c-396">Wywołania implementacji klasy podstawowej przez tę metodę, aby ustawić element w kolekcji źródłowej oraz do aktualizowania słownika wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-396">Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3c0c-397">Ta sekcja zawiera dwa przykłady kodu, które pokazują, zastępowanie <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metodę, aby zapewnić zachowanie niestandardowe ustawienia <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-397">This section contains two code examples that demonstrate overriding the <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> method to provide custom behavior for setting the <xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d3c0c-398">Pierwszy przykład dodaje zdarzenie niestandardowe powiadomienie, a drugi zapewnia obsługę kolekcji obiektów za pomocą tych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-398">The first example adds a custom notification event and the second provides support for a collection of objects with mutable keys.</span></span>  
  
 <span data-ttu-id="d3c0c-399">Przykład 1</span><span class="sxs-lookup"><span data-stu-id="d3c0c-399">Example 1</span></span>  
  
 <span data-ttu-id="d3c0c-400">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metody w celu zapewnienia niestandardowe zachowanie <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, i <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> metod i ustawienie domyślne <xref:System.Collections.ObjectModel.Collection%601.Item%2A> właściwości (indeksatora w języku C#).</span><span class="sxs-lookup"><span data-stu-id="d3c0c-400">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods, to provide custom behavior for the <xref:System.Collections.ObjectModel.Collection%601.Add%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%2A>, and <xref:System.Collections.ObjectModel.Collection%601.Clear%2A> methods, and for setting the default <xref:System.Collections.ObjectModel.Collection%601.Item%2A> property (the indexer in C#).</span></span> <span data-ttu-id="d3c0c-401">Niestandardowe zachowanie, które podano w tym przykładzie jest to zdarzenie powiadomienia o nazwie `Changed`, które jest wywoływane na końcu każdego zastąpionych metod.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-401">The custom behavior provided in this example is a notification event named `Changed`, which is raised at the end of each of the overridden methods.</span></span>  
  
 <span data-ttu-id="d3c0c-402">Przykład kodu tworzy `SimpleOrder` klasy, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602> i reprezentuje kolejność prostego formularza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-402">The code example creates the `SimpleOrder` class, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602> and represents a simple order form.</span></span> <span data-ttu-id="d3c0c-403">Formularz zawiera `OrderItem` obiekty reprezentujące elementy uporządkowane.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-403">The order form contains `OrderItem` objects representing items ordered.</span></span> <span data-ttu-id="d3c0c-404">Przykład kodu tworzy również `SimpleOrderChangedEventArgs` klasa może zawierać informacje o zdarzeniu i wyliczenia do identyfikowania typu zmiany.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-404">The code example also creates a `SimpleOrderChangedEventArgs` class to contain the event information, and an enumeration to identify the type of change.</span></span>  
  
 <span data-ttu-id="d3c0c-405">Przykład kodu demonstruje niestandardowe zachowanie, wywołując właściwości i metody klasy pochodnej w `Main` metody `Demo` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-405">The code example demonstrates the custom behavior by calling the properties and methods of the derived class, in the `Main` method of the `Demo` class.</span></span>  
  
 <span data-ttu-id="d3c0c-406">Ten przykład kodu używa obiektów za pomocą niezmienialnych kluczy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-406">This code example uses objects with immutable keys.</span></span> <span data-ttu-id="d3c0c-407">Aby uzyskać przykładowy kod, który korzysta z kluczami modyfikowalny, zobacz <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-407">For a code example that uses mutable keys, see <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A>.</span></span>  
  
 [!code-cpp[KeyedCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR/KeyedCollection2/cpp/source.cpp#1)]
 [!code-csharp[KeyedCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollection2/cs/source.cs#1)]
 [!code-vb[KeyedCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollection2/vb/source.vb#1)]  
  
 <span data-ttu-id="d3c0c-408">Przykład 2</span><span class="sxs-lookup"><span data-stu-id="d3c0c-408">Example 2</span></span>  
  
 <span data-ttu-id="d3c0c-409">Poniższy przykład kodu przedstawia sposób przesłonięcia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> metody w celu obsługi mutable kluczy i sposób zastąpienia chronionego <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, i <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> metod w celu zachowania integralności kluczy i Kolekcja.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-409">The following code example shows how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A> method to support mutable keys, and how to override the protected <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A>, <xref:System.Collections.ObjectModel.KeyedCollection%602.ClearItems%2A>, and <xref:System.Collections.ObjectModel.KeyedCollection%602.SetItem%2A> methods to maintain the integrity of the keys and the collection.</span></span>  
  
 <span data-ttu-id="d3c0c-410">Przykład kodu tworzy `MutableKeys` kolekcji, która jest pochodną <xref:System.Collections.ObjectModel.KeyedCollection%602>i `MutableKey` klasy.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-410">The code example creates the `MutableKeys` collection, which derives from <xref:System.Collections.ObjectModel.KeyedCollection%602>, and the `MutableKey` class.</span></span> <span data-ttu-id="d3c0c-411">`MutableKey` Klasa ma Ustawialne `Key` właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-411">The `MutableKey` class has a settable `Key` property.</span></span> <span data-ttu-id="d3c0c-412">Gdy nowy klucz jest przypisywane do właściwości, metody ustawiającej właściwość wywołuje `internal` (`Friend` w języku Visual Basic) `ChangeKey` metody kolekcji, aby sprawdzić, czy nowy klucz spowodowałoby to konflikt z istniejącego klucza.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-412">When a new key is assigned to the property, the property setter calls the `internal` (`Friend` in Visual Basic) `ChangeKey` method of the collection to test whether the new key would conflict with an existing key.</span></span> <span data-ttu-id="d3c0c-413">Jeśli tak, jest zgłaszany wyjątek, a nie ulega zmianie wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-413">If so, an exception is thrown and the property value is not changed.</span></span>  
  
 <span data-ttu-id="d3c0c-414">Aby zachować połączenie między `MutableKey` obiektu i `MutableKeys` kolekcji i aby zapobiec obiektu jest wstawiany do dwóch kolekcji `MutableKey` klasa ma `internal` (`Friend` w języku Visual Basic) `Collection`pola.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-414">In order to maintain the connection between a `MutableKey` object and the `MutableKeys` collection and to prevent an object from being inserted into two collections, the `MutableKey` class has an `internal` (`Friend` in Visual Basic) `Collection` field.</span></span> <span data-ttu-id="d3c0c-415">To pole jest obsługiwane przez metody chronione, które zapewniają niestandardowe zachowanie w przypadku dodawania i usuwania elementów z kolekcji, takie jak <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-415">This field is maintained by the protected methods that provide custom behavior for adding and removing items from the collection, such as the <xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A> method.</span></span> <span data-ttu-id="d3c0c-416">Pole jest ustawiona, gdy element zostanie dodany do kolekcji i wyczyszczone, gdy element zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="d3c0c-416">The field is set when the item is added to a collection and cleared when the item is removed.</span></span>  
  
 [!code-csharp[KeyedCollectionMutable#1](~/samples/snippets/csharp/VS_Snippets_CLR/KeyedCollectionMutable/cs/source.cs#1)]
 [!code-vb[KeyedCollectionMutable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/KeyedCollectionMutable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        <altmember cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TItem&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef item As TItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TItem % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="keyedCollection.TryGetValue (key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ObjectModel</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TItem" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>