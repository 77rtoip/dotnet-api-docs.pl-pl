<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da30da679c2a77c26760debcd9671baba03a69f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36469971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e6b5-101">Reprezentuje kontekst dostosowywalne odbicia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e6b5-101">Represents a customizable reflection context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6b5-102"><xref:System.Reflection.Context.CustomReflectionContext> Umożliwia dodać lub usunąć atrybuty niestandardowe z odbiciem obiektów lub dodać właściwości zastępczego do tych obiektów bez ponownego stosowania modelu pełną odbicia.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="7e6b5-103">Wartość domyślna <xref:System.Reflection.Context.CustomReflectionContext> po prostu zawija odbicia obiektów bez wprowadzania żadnych zmian, ale tworzenie podklas i zastępowanie odpowiednich metod, można dodać, usunąć, lub zmień atrybuty, które są stosowane do dowolnego odzwierciedlanego parametru lub elementu członkowskiego lub dodać nowych właściwości do odbite typu.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="7e6b5-104">Załóżmy na przykład, że kod następuje Konwencji zastosowania określonego atrybutu metodami factory, ale muszą teraz współpracować kodu innych firm, który nie ma atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="7e6b5-105">Można użyć <xref:System.Reflection.Context.CustomReflectionContext> określić regułę do identyfikowania obiektów, które powinny zawierać atrybuty i podaj obiekty te atrybuty widzianego w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="7e6b5-106">Aby użyć <xref:System.Reflection.Context.CustomReflectionContext> efektywnie kod, który używa odbite obiektów musi obsługiwać pojęcia Określanie kontekście odbicia, zamiast zakładając, że wszystkie odzwierciedlone obiektów skojarzonych z kontekstu w czasie wykonywania odbicia.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="7e6b5-107">Podaj wiele metod odbicia w .NET Framework <xref:System.Reflection.ReflectionContext> parametru w tym celu.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="7e6b5-108">Aby zmodyfikować atrybuty, które są stosowane do odzwierciedlanego parametru lub elementu członkowskiego, Przesłoń <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> lub <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="7e6b5-109">Te metody odbite obiektu i listy atrybutów w jej bieżącym kontekście odbicia, a zwrócona lista atrybutów, które powinny mieć w kontekście odbicia niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7e6b5-110"><xref:System.Reflection.Context.CustomReflectionContext> metody nie mają do listy atrybutów obiektu odbite lub metoda bezpośrednio przez wywołanie metody <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metody w dostarczonych <xref:System.Reflection.MemberInfo> lub <xref:System.Reflection.ParameterInfo> wystąpienia, ale zamiast tego należy użyć `declaredAttributes` listę, która została przekazana jako parametr Aby <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="7e6b5-111">Aby dodać właściwości do odbite typu, Przesłoń <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="7e6b5-112">Metoda przyjmuje parametr, który określa typ odbitych i zwraca listę dodatkowych właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="7e6b5-113">Należy używać <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> metodą tworzenia obiektów właściwości do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="7e6b5-114">Obiekty delegowane można określić podczas tworzenia właściwość, która będzie służyć jako metoda dostępu do właściwości i można pominąć jedną z metod dostępu do tworzenia właściwości tylko do odczytu lub w trybie tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="7e6b5-115">Należy zauważyć, że takie właściwości fikcyjny Brak metadanych lub zapasowego wspólnego języka pośredniego (CIL).</span><span class="sxs-lookup"><span data-stu-id="7e6b5-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7e6b5-116">Zastanów się równości między obiektami odbite podczas pracy z konteksty odbicia, ponieważ może reprezentować ten sam obiekt odbite w wielu kontekstów.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="7e6b5-117">Można użyć <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> metodę, aby uzyskać wersję w kontekście konkretnego odbicia odbite obiektu.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7e6b5-118">A <xref:System.Reflection.Context.CustomReflectionContext> obiektu zmienia atrybuty zwróconej przez obiekt określonego odbicia, na przykład identyfikatorami uzyskanymi przez <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="7e6b5-119">Nie zmienia atrybutu niestandardowego danych zwróconych przez <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> — metoda i te dwie listy nie będzie odpowiadała używania kontekstu odbicie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e6b5-120">W poniższym przykładzie pokazano sposób podklasy <xref:System.Reflection.Context.CustomReflectionContext> można dodać atrybutu niestandardowego do wszystkich członków z danego typu, których nazwy zaczynają się od "Do".</span><span class="sxs-lookup"><span data-stu-id="7e6b5-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="7e6b5-121">Aby uruchomić ten kod, wklej go do projektu w pustej konsoli i upewnij się, że odwołanie do System.Reflection.Context.dll.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e6b5-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e6b5-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="7e6b5-124">Odbicie kontekst do użycia jako podstawy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-124">The reflection context to use as a base.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy w kontekście odbicia określony jako podstawy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e6b5-126">Typ właściwości, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-126">The type to add properties to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-127">W przypadku przesłonięcia w klasie pochodnej zapewnia zbiór dodatkowe właściwości dla określonego typu reprezentowany w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-128">Kolekcja dodatkowe właściwości dla określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-128">A collection of additional properties for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6b5-129">Zastępuje tę metodę, aby określić właściwości, które powinny zostać dodane do danego typu.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="7e6b5-130">Aby utworzyć właściwości, należy użyć <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e6b5-131">Tworzy obiekt, który reprezentuje właściwość do dodania do typu określony przez <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="7e6b5-132">Typ właściwości do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-132">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7e6b5-133">Nazwa właściwości do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-133">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="7e6b5-134">Obiekt reprezentujący wartość właściwości <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-134">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="7e6b5-135">Obiekt reprezentujący wartość właściwości <see langword="set" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-135">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-136">Tworzy obiekt, który reprezentuje właściwość do dodania do typu, ma być używany z <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-137">Obiekt, który reprezentuje właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-137">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6b5-138">Obiekty, które są zwracane przez tę metodę nie zostały zakończone <xref:System.Reflection.PropertyInfo> obiekty i powinna być używana tylko w kontekście <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType">
          <span data-ttu-id="7e6b5-139">Typ właściwości do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-139">The type of the property to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7e6b5-140">Nazwa właściwości do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-140">The name of the property to create.</span>
          </span>
        </param>
        <param name="getter">
          <span data-ttu-id="7e6b5-141">Obiekt reprezentujący wartość właściwości <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-141">An object that represents the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setter">
          <span data-ttu-id="7e6b5-142">Obiekt reprezentujący wartość właściwości <see langword="set" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-142">An object that represents the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <param name="propertyCustomAttributes">
          <span data-ttu-id="7e6b5-143">Kolekcja atrybutów niestandardowych, które można zastosować do właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-143">A collection of custom attributes to apply to the property.</span>
          </span>
        </param>
        <param name="getterCustomAttributes">
          <span data-ttu-id="7e6b5-144">Kolekcja atrybutów niestandardowych do zastosowania z właściwością <see langword="get" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span>
          </span>
        </param>
        <param name="setterCustomAttributes">
          <span data-ttu-id="7e6b5-145">Kolekcja atrybutów niestandardowych do zastosowania z właściwością <see langword="set" /> metody dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-146">Tworzy obiekt, który reprezentuje właściwość do dodania do typu, ma być używany z <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> — metoda i przy użyciu określonych atrybutów niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-147">Obiekt, który reprezentuje właściwość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-147">An object that represents the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6b5-148">Obiekty, które są zwracane przez tę metodę nie zostały zakończone <xref:System.Reflection.PropertyInfo> obiekty i powinna być używana tylko w kontekście <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7e6b5-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7e6b5-149">W przypadku przesłonięcia w klasie pochodnej zapewnia zmodyfikowane Kolekcja niestandardowych atrybutów dla określonego obiektu reprezentowany w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="7e6b5-150">Element członkowski, którego atrybutów niestandardowych, które zostaną zwrócone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-150">The member whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="7e6b5-151">Kolekcja atrybutów elementu członkowskiego w jej bieżącym kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-151">A collection of the member's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-152">W przypadku przesłonięcia w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego elementu członkowskiego, reprezentowany w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-153">Kolekcja, która reprezentuje atrybuty niestandardowe określonego elementu członkowskiego w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-153">A collection that represents the custom attributes of the specified member in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="7e6b5-154">Parametr, których atrybutów niestandardowych, które zostaną zwrócone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-154">The parameter whose custom attributes will be returned.</span>
          </span>
        </param>
        <param name="declaredAttributes">
          <span data-ttu-id="7e6b5-155">Kolekcja atrybutów parametru w jej bieżącym kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-155">A collection of the parameter's attributes in its current context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-156">W przypadku przesłonięcia w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego parametru reprezentowany w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-157">Kolekcja, która reprezentuje atrybuty niestandardowe określonego parametru w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="7e6b5-158">Zewnętrznej reprezentacja zestawu do reprezentowania w tym kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-158">The external representation of the assembly to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-159">Pobiera reprezentacja, w tym kontekście odbicia zestawu, który jest reprezentowany przez obiekt z innym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-160">Reprezentacja zestawu w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-160">The representation of the assembly in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7e6b5-161">Zewnętrznej reprezentacja typu do reprezentowania w tym kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-161">The external representation of the type to represent in this context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e6b5-162">Pobiera reprezentacja, w tym kontekście odbicia typu reprezentowanego przez obiekt z innym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e6b5-163">Reprezentacja typu w tym kontekście odbicia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6b5-163">The representation of the type in this reflection context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>