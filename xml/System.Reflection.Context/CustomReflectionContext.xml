<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomReflectionContext.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52cb0994464985332742e76a283814be590106a9b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cb0994464985332742e76a283814be590106a9b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Represents a customizable reflection context.</source>
          <target state="translated">Reprezentuje kontekst dostosowywalne odbicia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> Umożliwia dodać lub usunąć atrybuty niestandardowe z odbiciem obiektów lub dodać właściwości zastępczego do tych obiektów bez ponownego stosowania modelu pełną odbicia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The default <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</source>
          <target state="translated">Wartość domyślna <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> po prostu zawija odbicia obiektów bez wprowadzania żadnych zmian, ale tworzenie podklas i zastępowanie odpowiednich metod, można dodać, usunąć, lub zmień atrybuty, które są stosowane do dowolnego odzwierciedlanego parametru lub elementu członkowskiego lub dodać nowych właściwości do odbite typu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</source>
          <target state="translated">Załóżmy na przykład, że kod następuje Konwencji zastosowania określonego atrybutu metodami factory, ale muszą teraz współpracować kodu innych firm, który nie ma atrybutów.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> określić regułę do identyfikowania obiektów, które powinny zawierać atrybuty i podaj obiekty te atrybuty widzianego w kodzie.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</source>
          <target state="translated">Aby użyć <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> efektywnie kod, który używa odbite obiektów musi obsługiwać pojęcia Określanie kontekście odbicia, zamiast zakładając, że wszystkie odzwierciedlone obiektów skojarzonych z kontekstu w czasie wykonywania odbicia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Many reflection methods in the .NET Framework provide a <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parameter for this purpose.</source>
          <target state="translated">Podaj wiele metod odbicia w .NET Framework <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parametru w tym celu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To modify the attributes that are applied to a reflected parameter or member, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> method.</source>
          <target state="translated">Aby zmodyfikować atrybuty, które są stosowane do odzwierciedlanego parametru lub elementu członkowskiego, Przesłoń <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> lub <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</source>
          <target state="translated">Te metody odbite obiektu i listy atrybutów w jej bieżącym kontekście odbicia, a zwrócona lista atrybutów, które powinny mieć w kontekście odbicia niestandardowych.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> methods should not access the list of attributes of a reflected object or method directly by calling the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the provided <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> instance, but should instead use the <ph id="ph5">`declaredAttributes`</ph> list, which is passed as a parameter to the <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> method overloads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> metody nie mają do listy atrybutów obiektu odbite lub metoda bezpośrednio przez wywołanie metody <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> metody w dostarczonych <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> lub <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> wystąpienia, ale zamiast tego należy użyć <ph id="ph5">`declaredAttributes`</ph> listę, która została przekazana jako parametr Aby <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> przeciążenia metody.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To add properties to a reflected type, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Aby dodać właściwości do odbite typu, Przesłoń <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</source>
          <target state="translated">Metoda przyjmuje parametr, który określa typ odbitych i zwraca listę dodatkowych właściwości.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You should use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method to create property objects to return.</source>
          <target state="translated">Należy używać <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> metodą tworzenia obiektów właściwości do zwrócenia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</source>
          <target state="translated">Obiekty delegowane można określić podczas tworzenia właściwość, która będzie służyć jako metoda dostępu do właściwości i można pominąć jedną z metod dostępu do tworzenia właściwości tylko do odczytu lub w trybie tylko do zapisu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</source>
          <target state="translated">Należy zauważyć, że takie właściwości fikcyjny Brak metadanych lub zapasowego wspólnego języka pośredniego (CIL).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</source>
          <target state="translated">Zastanów się równości między obiektami odbite podczas pracy z konteksty odbicia, ponieważ może reprezentować ten sam obiekt odbite w wielu kontekstów.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> method to obtain a particular reflection context's version of a reflected object.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> metodę, aby uzyskać wersję w kontekście konkretnego odbicia odbite obiektu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object alters the attributes returned by a particular reflection object, such as those obtained by the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> obiektu zmienia atrybuty zwróconej przez obiekt określonego odbicia, na przykład identyfikatorami uzyskanymi przez <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>It does not alter the custom attribute data returned by the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> method, and these two lists will not match when you use a custom reflection context.</source>
          <target state="translated">Nie zmienia atrybutu niestandardowego danych zwróconych przez <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> — metoda i te dwie listy nie będzie odpowiadała używania kontekstu odbicie niestandardowe.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The following example demonstrates how to subclass  <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to add a custom attribute to all the members of a given type whose names begin with "To".</source>
          <target state="translated">W poniższym przykładzie pokazano sposób podklasy <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> można dodać atrybutu niestandardowego do wszystkich członków z danego typu, których nazwy zaczynają się od "Do".</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</source>
          <target state="translated">Aby uruchomić ten kod, wklej go do projektu w pustej konsoli i upewnij się, że odwołanie do System.Reflection.Context.dll.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>The reflection context to use as a base.</source>
          <target state="translated">Odbicie kontekst do użycia jako podstawy.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class with the specified reflection context as a base.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> klasy w kontekście odbicia określony jako podstawy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>The type to add properties to.</source>
          <target state="translated">Typ właściwości, aby dodać.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej zapewnia zbiór dodatkowe właściwości dla określonego typu reprezentowany w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>A collection of additional properties for the specified type.</source>
          <target state="translated">Kolekcja dodatkowe właściwości dla określonego typu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>Override this method to specify which properties should be added to a given type.</source>
          <target state="translated">Zastępuje tę metodę, aby określić właściwości, które powinny zostać dodane do danego typu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>To create the properties, use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method.</source>
          <target state="translated">Aby utworzyć właściwości, należy użyć <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Creates an object that represents a property to be added to a type, as specified by the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Tworzy obiekt, który reprezentuje właściwość do dodania do typu określony przez <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The type of the property to create.</source>
          <target state="translated">Typ właściwości do utworzenia.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The name of the property to create.</source>
          <target state="translated">Nazwa właściwości do utworzenia.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Obiekt reprezentujący wartość właściwości <ph id="ph1">&lt;see langword="get" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Obiekt reprezentujący wartość właściwości <ph id="ph1">&lt;see langword="set" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Tworzy obiekt, który reprezentuje właściwość do dodania do typu, ma być używany z <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property.</source>
          <target state="translated">Obiekt, który reprezentuje właściwość.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Obiekty, które są zwracane przez tę metodę nie zostały zakończone <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> obiekty i powinna być używana tylko w kontekście <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The type of the property to create.</source>
          <target state="translated">Typ właściwości do utworzenia.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The name of the property to create.</source>
          <target state="translated">Nazwa właściwości do utworzenia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Obiekt reprezentujący wartość właściwości <ph id="ph1">&lt;see langword="get" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Obiekt reprezentujący wartość właściwości <ph id="ph1">&lt;see langword="set" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property.</source>
          <target state="translated">Kolekcja atrybutów niestandardowych, które można zastosować do właściwości.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Kolekcja atrybutów niestandardowych do zastosowania z właściwością <ph id="ph1">&lt;see langword="get" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Kolekcja atrybutów niestandardowych do zastosowania z właściwością <ph id="ph1">&lt;see langword="set" /&gt;</ph> metody dostępu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method and using the specified custom attributes.</source>
          <target state="translated">Tworzy obiekt, który reprezentuje właściwość do dodania do typu, ma być używany z <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> — metoda i przy użyciu określonych atrybutów niestandardowych.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property.</source>
          <target state="translated">Obiekt, który reprezentuje właściwość.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">Obiekty, które są zwracane przez tę metodę nie zostały zakończone <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> obiekty i powinna być używana tylko w kontekście <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej zapewnia zmodyfikowane Kolekcja niestandardowych atrybutów dla określonego obiektu reprezentowany w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The member whose custom attributes will be returned.</source>
          <target state="translated">Element członkowski, którego atrybutów niestandardowych, które zostaną zwrócone.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the member's attributes in its current context.</source>
          <target state="translated">Kolekcja atrybutów elementu członkowskiego w jej bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego elementu członkowskiego, reprezentowany w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified member in this reflection context.</source>
          <target state="translated">Kolekcja, która reprezentuje atrybuty niestandardowe określonego elementu członkowskiego w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The parameter whose custom attributes will be returned.</source>
          <target state="translated">Parametr, których atrybutów niestandardowych, które zostaną zwrócone.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the parameter's attributes in its current context.</source>
          <target state="translated">Kolekcja atrybutów parametru w jej bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego parametru reprezentowany w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified parameter in this reflection context.</source>
          <target state="translated">Kolekcja, która reprezentuje atrybuty niestandardowe określonego parametru w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The external representation of the assembly to represent in this context.</source>
          <target state="translated">Zewnętrznej reprezentacja zestawu do reprezentowania w tym kontekście.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
          <target state="translated">Pobiera reprezentacja, w tym kontekście odbicia zestawu, który jest reprezentowany przez obiekt z innym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The representation of the assembly in this reflection context.</source>
          <target state="translated">Reprezentacja zestawu w tym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The external representation of the type to represent in this context.</source>
          <target state="translated">Zewnętrznej reprezentacja typu do reprezentowania w tym kontekście.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
          <target state="translated">Pobiera reprezentacja, w tym kontekście odbicia typu reprezentowanego przez obiekt z innym kontekście odbicia.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The representation of the type in this reflection context.</source>
          <target state="translated">Reprezentacja typu w tym kontekście odbicia.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>