<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e43f354e0b6a5d442e4029130d5e39757891bb1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69071247" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8df1d-101">Reprezentuje kontekst odbicia, który można dostosować.</span><span class="sxs-lookup"><span data-stu-id="8df1d-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8df1d-102"><xref:System.Reflection.Context.CustomReflectionContext>zapewnia sposób dodawania lub usuwania atrybutów niestandardowych z obiektów odbicia lub dodawania fikcyjnych właściwości do tych obiektów, bez konieczności ponownego wdrażania kompletnego modelu odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="8df1d-103">Domyślnie <xref:System.Reflection.Context.CustomReflectionContext> po prostu otacza obiekty odbicia bez wprowadzania żadnych zmian, ale przez podklasę i zastępowanie odpowiednich metod, można dodawać, usuwać lub zmieniać atrybuty, które mają zastosowanie do dowolnego odbicia parametru lub elementu członkowskiego, lub dodawać nowe właściwości do typ odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="8df1d-104">Załóżmy na przykład, że kod jest zgodny z Konwencją stosowania określonego atrybutu do metod fabrycznych, ale teraz wymagane jest współdziałanie z kodem innej firmy, który nie ma atrybutów.</span><span class="sxs-lookup"><span data-stu-id="8df1d-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="8df1d-105">Możesz użyć <xref:System.Reflection.Context.CustomReflectionContext> , aby określić regułę służącą do identyfikowania obiektów, które powinny mieć atrybuty, oraz do dostarczania obiektów z tymi atrybutami, gdy są one wyświetlane w kodzie.</span><span class="sxs-lookup"><span data-stu-id="8df1d-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="8df1d-106">Aby efektywnie <xref:System.Reflection.Context.CustomReflectionContext> korzystać z programu, kod, który używa odzwierciedlonych obiektów, musi obsługiwać koncepcję określania kontekstu odbicia, zamiast przy założeniu, że wszystkie odbite obiekty są skojarzone z kontekstem odbicia środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="8df1d-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="8df1d-107">Wiele metod odbicia w .NET Framework dostarcza <xref:System.Reflection.ReflectionContext> do tego celu parametru.</span><span class="sxs-lookup"><span data-stu-id="8df1d-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="8df1d-108">Aby zmodyfikować atrybuty, które są stosowane do odbitego parametru lub elementu członkowskiego <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> , <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> Zastąp metodę or.</span><span class="sxs-lookup"><span data-stu-id="8df1d-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="8df1d-109">Te metody przyjmują obiekt odbity i listę atrybutów pod jego bieżącym kontekstem odbicia i zwracają listę atrybutów, które powinny znajdować się w kontekście odbicia niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="8df1d-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8df1d-110"><xref:System.Reflection.Context.CustomReflectionContext>metody nie powinny mieć dostępu do listy atrybutów obiektu lub metody <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> odbitego bezpośrednio przez wywołanie metody dla podanego <xref:System.Reflection.MemberInfo> lub <xref:System.Reflection.ParameterInfo> wystąpienia, ale zamiast tego należy użyć `declaredAttributes` listy, która jest przekazywany jako parametr do przeciążenia <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8df1d-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="8df1d-111">Aby dodać właściwości do typu odbicia, Zastąp <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="8df1d-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="8df1d-112">Metoda akceptuje parametr, który określa typ odbicia, i zwraca listę dodatkowych właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="8df1d-113">Należy użyć metody, <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> aby utworzyć obiekty właściwości do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="8df1d-114">Można określić delegatów podczas tworzenia właściwości, która będzie stanowić metodę dostępu do właściwości, i można pominąć jeden z metod dostępu, aby utworzyć właściwość tylko do odczytu lub tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="8df1d-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="8df1d-115">Należy zauważyć, że takie właściwości fikcyjne nie mają kopii zapasowej ani wspólnego języka pośredniego (CIL).</span><span class="sxs-lookup"><span data-stu-id="8df1d-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8df1d-116">Należy zachować ostrożność w odróżnieniu od obiektów odbitej podczas pracy z kontekstami odbicia, ponieważ obiekty mogą reprezentować ten sam obiekt odbity w wielu kontekstach.</span><span class="sxs-lookup"><span data-stu-id="8df1d-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="8df1d-117">Możesz użyć metody, <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> Aby uzyskać określony kontekst odbicia w wersji obiektu odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="8df1d-118">Obiekt zmienia atrybuty zwracane przez określony obiekt odbicia, taki jak te uzyskane <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> przez metodę. <xref:System.Reflection.Context.CustomReflectionContext></span><span class="sxs-lookup"><span data-stu-id="8df1d-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="8df1d-119">Nie modyfikuje danych atrybutów niestandardowych zwracanych przez <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> metodę, a te dwie listy nie będą zgodne w przypadku używania niestandardowego kontekstu odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8df1d-120">Poniższy przykład ilustruje sposób tworzenia podklasy <xref:System.Reflection.Context.CustomReflectionContext> w celu dodania atrybutu niestandardowego do wszystkich elementów członkowskich danego typu, których nazwy zaczynają się od "do".</span><span class="sxs-lookup"><span data-stu-id="8df1d-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="8df1d-121">Aby uruchomić ten kod, wklej go do pustego projektu konsoli i upewnij się, że dołączysz odwołanie do System. odbicie. Context. dll.</span><span class="sxs-lookup"><span data-stu-id="8df1d-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8df1d-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8df1d-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8df1d-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8df1d-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8df1d-124">Kontekst odbicia, który ma być używany jako baza.</span><span class="sxs-lookup"><span data-stu-id="8df1d-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="8df1d-125">Inicjuje nowe wystąpienie <see cref="T:System.Reflection.Context.CustomReflectionContext" /> klasy z określonym kontekstem odbicia jako baza.</span><span class="sxs-lookup"><span data-stu-id="8df1d-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8df1d-126">Typ, do którego mają zostać dodane właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="8df1d-127">Gdy jest zastępowany w klasie pochodnej, zawiera kolekcję dodatkowych właściwości określonego typu, które są reprezentowane w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="8df1d-128">Kolekcja dodatkowych właściwości określonego typu.</span><span class="sxs-lookup"><span data-stu-id="8df1d-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8df1d-129">Zastąp tę metodę, aby określić, które właściwości powinny zostać dodane do danego typu.</span><span class="sxs-lookup"><span data-stu-id="8df1d-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="8df1d-130">Aby utworzyć właściwości, użyj <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8df1d-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8df1d-131">Tworzy obiekt, który reprezentuje właściwość, która ma zostać dodana do typu, jak określono przez <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="8df1d-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="8df1d-132">Typ właściwości do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="8df1d-133">Nazwa właściwości do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="8df1d-134">Obiekt, który reprezentuje <see langword="get" /> metodę dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="8df1d-135">Obiekt, który reprezentuje <see langword="set" /> metodę dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="8df1d-136">Tworzy obiekt, który reprezentuje właściwość, która ma zostać dodana do typu, która ma być używana z <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> metodą.</span><span class="sxs-lookup"><span data-stu-id="8df1d-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="8df1d-137">Obiekt, który reprezentuje właściwość.</span><span class="sxs-lookup"><span data-stu-id="8df1d-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8df1d-138">Obiekty, które są zwracane przez tę metodę, nie <xref:System.Reflection.PropertyInfo> są kompletnymi obiektami i powinny być używane tylko w kontekście <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8df1d-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="8df1d-139">Typ właściwości do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="8df1d-140">Nazwa właściwości do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="8df1d-141">Obiekt, który reprezentuje <see langword="get" /> metodę dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="8df1d-142">Obiekt, który reprezentuje <see langword="set" /> metodę dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="8df1d-143">Kolekcja atrybutów niestandardowych, które mają zostać zastosowane do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="8df1d-144">Kolekcja atrybutów niestandardowych, które mają zostać zastosowane do <see langword="get" /> metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="8df1d-145">Kolekcja atrybutów niestandardowych, które mają zostać zastosowane do <see langword="set" /> metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="8df1d-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="8df1d-146">Tworzy obiekt, który reprezentuje właściwość, która ma zostać dodana do typu, do użycia z <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> metodą i przy użyciu określonych atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="8df1d-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="8df1d-147">Obiekt, który reprezentuje właściwość.</span><span class="sxs-lookup"><span data-stu-id="8df1d-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8df1d-148">Obiekty, które są zwracane przez tę metodę, nie <xref:System.Reflection.PropertyInfo> są kompletnymi obiektami i powinny być używane tylko w kontekście <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8df1d-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8df1d-149">Gdy jest zastępowany w klasie pochodnej, zapewnia zmodyfikowaną kolekcję atrybutów niestandardowych dla określonego obiektu, jak to zostało reprezentowane w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="8df1d-150">Element członkowski, którego atrybuty niestandardowe zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="8df1d-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="8df1d-151">Kolekcja atrybutów elementu członkowskiego w jego bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="8df1d-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="8df1d-152">Gdy jest zastępowany w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego elementu członkowskiego, jak to zostało reprezentowane w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="8df1d-153">Kolekcja, która reprezentuje atrybuty niestandardowe określonego elementu członkowskiego w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="8df1d-154">Parametr, którego atrybuty niestandardowe zostaną zwrócone.</span><span class="sxs-lookup"><span data-stu-id="8df1d-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="8df1d-155">Kolekcja atrybutów parametru w bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="8df1d-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="8df1d-156">Gdy jest zastępowany w klasie pochodnej, zawiera listę atrybutów niestandardowych dla określonego parametru, jak to zostało przedstawione w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="8df1d-157">Kolekcja, która reprezentuje atrybuty niestandardowe określonego parametru w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="8df1d-158">Zewnętrzna reprezentacja zestawu do reprezentowania w tym kontekście.</span><span class="sxs-lookup"><span data-stu-id="8df1d-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="8df1d-159">Pobiera reprezentację w tym kontekście odbicia zestawu, który jest reprezentowany przez obiekt z innego kontekstu odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="8df1d-160">Reprezentacja zestawu w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8df1d-161">Zewnętrzna reprezentacja typu do reprezentowania w tym kontekście.</span><span class="sxs-lookup"><span data-stu-id="8df1d-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="8df1d-162">Pobiera reprezentację w tym kontekście odbicia typu reprezentowanego przez obiekt z innego kontekstu odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="8df1d-163">Reprezentacja typu w tym kontekście odbicia.</span><span class="sxs-lookup"><span data-stu-id="8df1d-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
