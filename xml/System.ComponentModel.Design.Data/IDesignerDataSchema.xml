<Type Name="IDesignerDataSchema" FullName="System.ComponentModel.Design.Data.IDesignerDataSchema">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd5170a1948b603b574c9972774e36299c3ffa38" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerDataSchema" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerDataSchema" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Data.IDesignerDataSchema" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerDataSchema" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerDataSchema" />
  <TypeSignature Language="F#" Value="type IDesignerDataSchema = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody do pobierania informacji o schemacie magazynu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które implementują <xref:System.ComponentModel.Design.Data.IDesignerDataSchema> interfejsu informacji o schemacie pobierania z magazynu danych i przywróć jego interfejsu użytkownika, zazwyczaj do wypełniania elementów interfejsu użytkownika, które umożliwiają użytkownikowi na określenie obiektu magazynu danych, który chcą pracować.  
  
 <xref:System.ComponentModel.Design.Data.IDesignerDataSchema> Interfejsu udostępnia dwie metody: <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> metody, która zwraca obiekty żądany schemat, a <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> metody, która wskazuje, czy obiekt Schemat danych jest obsługiwana przez Magazyn danych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchemaItems">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSchemaItems (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetSchemaItems(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaItems (schemaClass As DesignerDataSchemaClass) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSchemaItems(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaItems : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; System.Collections.ICollection" Usage="iDesignerDataSchema.GetSchemaItems schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Obiekty schematu do zwrócenia.</param>
        <summary>Pobiera kolekcję elementów określony schemat.</summary>
        <returns>Kolekcja obiektów schematu dla określonego typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Metoda zwraca kolekcję obiektów określony schemat w magazynie danych.  
  
 Zobacz <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> klasy listy obiektów schematu obsługiwane przez program .NET Framework. Obiekty schematu dodatkowe mogą być dodawane do <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> klasy przez tworzenie typu pochodnego.  
  
 Jeśli magazyn danych nie obsługuje obiektu żądany schemat <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> metoda powinna zwrócić `null`. Możesz użyć <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> metodę, aby sprawdzić, czy magazyn danych obsługuje żądany schemat obiekt przed wywołaniem <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> metodę, należy unikać cofania się `null` do aplikacji.  
  
 Jeśli magazyn danych obsługuje żądany obiekt, ale nie zawiera żadnych wystąpień <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> metoda powinna zwrócić pustą kolekcję.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSchemaClass">
      <MemberSignature Language="C#" Value="public bool SupportsSchemaClass (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsSchemaClass(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function SupportsSchemaClass (schemaClass As DesignerDataSchemaClass) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SupportsSchemaClass(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member SupportsSchemaClass : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; bool" Usage="iDesignerDataSchema.SupportsSchemaClass schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Obiekty schematu do zwrócenia.</param>
        <summary>Zwraca wartość wskazującą, czy magazyn danych zawiera obiekt schematu danych.</summary>
        <returns>
          <see langword="true" /> Jeśli magazyn danych obsługuje obiektu schematu danych. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Metoda wskazuje, czy magazyn danych obsługuje obiektu schematu danych. Jeśli magazyn danych nie obsługuje określonego obiektu <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> metoda powinna zwrócić `false`.  
  
 Możesz dodać testy dla dodatkowej schemat danych obiektów, wynikające z <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>