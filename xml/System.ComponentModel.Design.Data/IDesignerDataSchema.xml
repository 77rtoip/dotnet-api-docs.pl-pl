<Type Name="IDesignerDataSchema" FullName="System.ComponentModel.Design.Data.IDesignerDataSchema">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd805578cb4de2a9eb3fb922bf4cdc718da02b79" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69350471" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerDataSchema" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerDataSchema" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Data.IDesignerDataSchema" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerDataSchema" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerDataSchema" />
  <TypeSignature Language="F#" Value="type IDesignerDataSchema = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody pobierania informacji o schemacie magazynu danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy implementujące <xref:System.ComponentModel.Design.Data.IDesignerDataSchema> interfejs pobierają informacje o schemacie z magazynu danych i zwracają je do interfejsu użytkownika, zwykle do wypełniania elementów interfejsu użytkownika, które umożliwiają użytkownikowi określenie obiektu magazynu danych, z którym chcą współpracować.  
  
 Interfejs udostępnia dwie metody <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> : metoda, która zwraca żądane obiekty <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> schematu i metodę, która wskazuje, czy określony obiekt schematu danych jest obsługiwany przez magazyn danych. <xref:System.ComponentModel.Design.Data.IDesignerDataSchema>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchemaItems">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSchemaItems (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetSchemaItems(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaItems (schemaClass As DesignerDataSchemaClass) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSchemaItems(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaItems : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; System.Collections.ICollection" Usage="iDesignerDataSchema.GetSchemaItems schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Obiekty schematu do zwrócenia.</param>
        <summary>Pobiera kolekcję określonych elementów schematu.</summary>
        <returns>Kolekcja obiektów schematu określonego typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Metoda zwraca kolekcję wszystkich określonych obiektów schematu w magazynie danych.  
  
 Zapoznaj się z klasą listy obiektów schematu obsługiwanych przez .NET Framework. <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> Do <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> klasy można dodawać dodatkowe obiekty schematu, tworząc typ pochodny.  
  
 Jeśli magazyn danych nie obsługuje żądanego obiektu schematu, <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Metoda powinna zwrócić. `null` Można użyć <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> metody, aby określić, czy magazyn danych obsługuje żądany obiekt schematu przed <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> wywołaniem metody, aby uniknąć powrotu `null` do aplikacji.  
  
 Jeśli magazyn danych obsługuje żądany obiekt, ale nie zawiera żadnych wystąpień, <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Metoda powinna zwracać pustą kolekcję.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSchemaClass">
      <MemberSignature Language="C#" Value="public bool SupportsSchemaClass (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsSchemaClass(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function SupportsSchemaClass (schemaClass As DesignerDataSchemaClass) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SupportsSchemaClass(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member SupportsSchemaClass : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; bool" Usage="iDesignerDataSchema.SupportsSchemaClass schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Obiekty schematu do zwrócenia.</param>
        <summary>Zwraca wartość wskazującą, czy magazyn danych zawiera określony obiekt schematu danych.</summary>
        <returns><see langword="true" />Jeśli magazyn danych obsługuje określony obiekt schematu danych; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Metoda wskazuje, czy magazyn danych obsługuje określony obiekt schematu danych. Jeśli magazyn danych nie obsługuje określonego obiektu, <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Metoda powinna zwrócić. `false`  
  
 Możesz dodać testy dla dodatkowych obiektów schematu danych, wyprowadzając z <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
