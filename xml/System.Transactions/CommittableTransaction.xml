<Type Name="CommittableTransaction" FullName="System.Transactions.CommittableTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="653e75529ebd3742b4b2014f94ade3492b520480" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58728830" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommittableTransaction : System.Transactions.Transaction, IAsyncResult, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CommittableTransaction extends System.Transactions.Transaction implements class System.IAsyncResult, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.CommittableTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommittableTransaction&#xA;Inherits Transaction&#xA;Implements IAsyncResult, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommittableTransaction sealed : System::Transactions::Transaction, IAsyncResult, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type CommittableTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable&#xA;    interface IDisposable&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4bd63-101">W tym artykule opisano można zatwierdzić transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-101">Describes a committable transaction.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd63-102"><xref:System.Transactions.CommittableTransaction> Klasy zapewnia sposób jawny dla aplikacji używać transakcji, w przeciwieństwie do używania <xref:System.Transactions.TransactionScope> niejawnie klasy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-102">The <xref:System.Transactions.CommittableTransaction> class provides an explicit way for applications to use a transaction, as opposed to using the <xref:System.Transactions.TransactionScope> class implicitly.</span></span> <span data-ttu-id="4bd63-103">W odróżnieniu od <xref:System.Transactions.TransactionScope> klasy, Edytor aplikacji musi wywołać specjalnie <xref:System.Transactions.CommittableTransaction.Commit%2A> i <xref:System.Transactions.Transaction.Rollback%2A> metody w celu zatwierdzenia lub przerwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-103">Unlike the <xref:System.Transactions.TransactionScope> class, the application writer needs to specifically call the <xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.Transaction.Rollback%2A> methods in order to commit or abort the transaction.</span></span> <span data-ttu-id="4bd63-104">Jednak tylko twórca transakcji można zatwierdzić transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-104">However, only the creator of a transaction can commit the transaction.</span></span> <span data-ttu-id="4bd63-105">Dlatego kopie można zatwierdzić transakcji, uzyskanymi za pośrednictwem <xref:System.Transactions.Transaction.Clone%2A> metody nie są można zatwierdzić.</span><span class="sxs-lookup"><span data-stu-id="4bd63-105">Therefore, copies of a committable transaction, obtained through the <xref:System.Transactions.Transaction.Clone%2A> method are not committable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd63-106">Zaleca się tworzenie niejawne transakcji za pomocą <xref:System.Transactions.TransactionScope> klasy, tak aby kontekst transakcji otoczenia jest zarządzane automatycznie dla Ciebie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-106">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="4bd63-107">Należy również użyć <xref:System.Transactions.TransactionScope> i <xref:System.Transactions.DependentTransaction> klasy dla aplikacji, które korzystają z tej samej transakcji w wielu wywołań funkcji lub wielu wywołań wątku.</span><span class="sxs-lookup"><span data-stu-id="4bd63-107">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="4bd63-108">Aby uzyskać więcej informacji na temat tego modelu, zobacz [implementacji niejawnej transakcji przy użyciu zakresu transakcji](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="4bd63-108">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="4bd63-109">Tworzenie <xref:System.Transactions.CommittableTransaction> automatycznie nie ustawiono otoczenia transakcji, transakcja wykonuje kod.</span><span class="sxs-lookup"><span data-stu-id="4bd63-109">Creating a <xref:System.Transactions.CommittableTransaction> does not automatically set the ambient transaction, which is the transaction your code executes in.</span></span> <span data-ttu-id="4bd63-110">Można uzyskać lub ustawić transakcji otoczenia przez wywołanie statycznego <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> właściwości globalnego <xref:System.Transactions.Transaction> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4bd63-110">You can get or set the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the global <xref:System.Transactions.Transaction> object.</span></span> <span data-ttu-id="4bd63-111">Aby uzyskać więcej informacji na temat otoczenia transakcji, zobacz sekcję "Zarządzanie przepływu transakcji przy użyciu TransactionScopeOption" [implementacji niejawnej transakcji przy użyciu zakresu transakcji](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="4bd63-111">For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="4bd63-112">Jeśli nie ustawiono otoczenia transakcji, żadnych operacji na Menedżera zasobów nie jest częścią tej transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-112">If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</span></span> <span data-ttu-id="4bd63-113">Musisz jawnie ustawić i zresetować otoczenia transakcji, aby upewnić się, że menedżerów zasobów działają w kontekście transakcji w prawo.</span><span class="sxs-lookup"><span data-stu-id="4bd63-113">You need to explicitly set and reset the ambient transaction to ensure that resource managers operate under the right transaction context.</span></span>  
  
 <span data-ttu-id="4bd63-114">Do momentu <xref:System.Transactions.CommittableTransaction> ma została zatwierdzona, wszystkie zasoby związane z transakcją są nadal zablokowane.</span><span class="sxs-lookup"><span data-stu-id="4bd63-114">Until a <xref:System.Transactions.CommittableTransaction> has been committed, all the resources involved with the transaction are still locked.</span></span>  
  
 <span data-ttu-id="4bd63-115">Element <xref:System.Transactions.CommittableTransaction> obiektu nie może być używany ponownie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-115">A <xref:System.Transactions.CommittableTransaction> object cannot be reused.</span></span> <span data-ttu-id="4bd63-116">Gdy ma zostać przekazana lub wycofana, nie można użyć ponownie w transakcji lub ustawić jako bieżący kontekst transakcji otoczenia.</span><span class="sxs-lookup"><span data-stu-id="4bd63-116">Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bd63-117">Poniższy przykład tworzy dwa nowe wystąpienia <xref:System.Transactions.CommittableTransaction>, zatwierdzenia i przedstawia odpowiednio je ponownie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-117">The following sample creates two new instances of <xref:System.Transactions.CommittableTransaction>, commits and rolls back them respectively.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4bd63-118">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="4bd63-118">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="4bd63-119">Implementowanie transakcji niejawnej przy użyciu zakresu transakcji</span><span class="sxs-lookup"><span data-stu-id="4bd63-119">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f6c648f8-d638-4228-bfa4-0d65dd262968"><span data-ttu-id="4bd63-120">Implementowanie transakcji jawnej przy użyciu Commitabletransakction</span><span class="sxs-lookup"><span data-stu-id="4bd63-120">Implementing An Explicit Transaction Using CommittableTransaction</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4bd63-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Transactions.CommittableTransaction" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-121">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bd63-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Transactions.CommittableTransaction" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-122">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4bd63-123">Poniższy przykład tworzy nowe wystąpienie klasy <xref:System.Transactions.CommittableTransaction> i zatwierdzeń go.</span><span class="sxs-lookup"><span data-stu-id="4bd63-123">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> and commits it.</span></span>  
  
 [!code-csharp[Tx_CommittableTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_committabletx/cs/committabletxwithsql.cs#1)]
 [!code-vb[Tx_CommittableTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_committabletx/vb/committabletxwithsql.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4bd63-124">Próba utworzenia transakcji w obszarze Windows 98, Windows 98 Wydanie drugie lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="4bd63-124">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : TimeSpan -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction timeout" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="4bd63-125">Maksymalna ilość czasu transakcji może istnieć, zanim został on przerwany.</span><span class="sxs-lookup"><span data-stu-id="4bd63-125">The maximum amount of time the transaction can exist, before it is aborted.</span></span></param>
        <summary><span data-ttu-id="4bd63-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Transactions.CommittableTransaction" /> klasy z określonym <paramref name="timeout" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="4bd63-126">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4bd63-127">Próba utworzenia transakcji w obszarze Windows 98, Windows 98 Wydanie drugie lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="4bd63-127">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (System.Transactions.TransactionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As TransactionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(System::Transactions::TransactionOptions options);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : System.Transactions.TransactionOptions -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="4bd63-128">A <see cref="T:System.Transactions.TransactionOptions" /> strukturę, która w tym artykule opisano opcje transakcji na potrzeby nowej transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-128">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</span></span></param>
        <summary><span data-ttu-id="4bd63-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.Transactions.CommittableTransaction" /> klasy przy użyciu opcji określonej transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-129">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4bd63-130">Poniższy przykład tworzy nowe wystąpienie klasy <xref:System.Transactions.CommittableTransaction> z opcjami i jego przerwanie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-130">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> with options, and aborts it.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="4bd63-131">Próba utworzenia transakcji w obszarze Windows 98, Windows 98 Wydanie drugie lub Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="4bd63-131">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4bd63-132"><paramref name="options" /> jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-132"><paramref name="options" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback callback, object user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback callback, object user_defined_state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ callback, System::Object ^ user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="user_defined_state" Type="System.Object" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="4bd63-133"><see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-133">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="4bd63-134">Ten parametr może być <see langword="null" />, w którym to przypadku aplikacji nie jest powiadamiany o ukończenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-134">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="4bd63-135">Zamiast tego należy użyć aplikacji <see cref="T:System.IAsyncResult" /> interfejsu można sprawdzić na zakończenie i w związku z tym czekać, lub zadzwoń <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> czekać na zakończenie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-135">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="callback"><span data-ttu-id="4bd63-136"><see cref="T:System.AsyncCallback" /> Delegata, która jest wywoływana po zakończeniu transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-136">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="4bd63-137">Ten parametr może być <see langword="null" />, w którym to przypadku aplikacji nie jest powiadamiany o ukończenia transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-137">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="4bd63-138">Zamiast tego należy użyć aplikacji <see cref="T:System.IAsyncResult" /> interfejsu można sprawdzić na zakończenie i w związku z tym czekać, lub zadzwoń <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> czekać na zakończenie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-138">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="asyncState"><span data-ttu-id="4bd63-139">Obiekt, który może zawierać informacji o stanie dowolnego skojarzony asynchroniczny zobowiązania.</span><span class="sxs-lookup"><span data-stu-id="4bd63-139">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="4bd63-140">Ten obiekt jest przekazywany do wywołania zwrotnego i nie będzie interpretowany przez <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="4bd63-140">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="4bd63-141">Odwołanie o wartości null jest dozwolona.</span><span class="sxs-lookup"><span data-stu-id="4bd63-141">A null reference is permitted.</span></span></param>
        <param name="user_defined_state"><span data-ttu-id="4bd63-142">Obiekt, który może zawierać informacji o stanie dowolnego skojarzony asynchroniczny zobowiązania.</span><span class="sxs-lookup"><span data-stu-id="4bd63-142">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="4bd63-143">Ten obiekt jest przekazywany do wywołania zwrotnego i nie będzie interpretowany przez <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="4bd63-143">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="4bd63-144">Odwołanie o wartości null jest dozwolona.</span><span class="sxs-lookup"><span data-stu-id="4bd63-144">A null reference is permitted.</span></span></param>
        <summary><span data-ttu-id="4bd63-145">Rozpoczyna się próba przekazania transakcji asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-145">Begins an attempt to commit the transaction asynchronously.</span></span></summary>
        <returns><span data-ttu-id="4bd63-146"><see cref="T:System.IAsyncResult" /> Interfejsu, który może służyć przez obiekt wywołujący, aby sprawdzić stan operacji asynchronicznej lub poczekaj na zakończenie operacji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-146">An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd63-147">Ta metoda zwraca natychmiast przed ukończeniem transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-147">This method returns immediately, before the transaction has been completed.</span></span> <span data-ttu-id="4bd63-148">Transakcji, a następnie zatwierdzeń w innym wątku i `asyncCallback` obiekt delegowany jest wywoływany po jego zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="4bd63-148">The transaction then commits on a different thread, and the `asyncCallback` delegate is invoked when it has completed.</span></span> <span data-ttu-id="4bd63-149">Po ta metoda jest wywoływana, nie jest wyświetlany wynik transakcji, dopóki nie zostanie wywołana <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span><span class="sxs-lookup"><span data-stu-id="4bd63-149">After this method is called, you do not receive the outcome of the transaction until you call <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bd63-150">Proces zatwierdzania może zakończyć się synchronicznie wewnątrz wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="4bd63-150">The commit process may complete synchronously inside this method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="committableTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bd63-151">Próbuje zatwierdzić transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-151">Attempts to commit the transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd63-152">Gdy ta metoda jest wywoływana, wszystkie obiekty, które zostały zarejestrowane do wzięcia udziału w transakcji są wysyłane i niezależnie może oznaczać ich głos Zatwierdź lub Wycofaj tę transakcję.</span><span class="sxs-lookup"><span data-stu-id="4bd63-152">When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</span></span> <span data-ttu-id="4bd63-153">Jeśli każdy uczestnik głosów można wycofać transakcji, zostanie wycofana, a ta metoda wyrzuca <xref:System.Transactions.TransactionException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="4bd63-153">If any participant votes to roll back the transaction, it is rolled back and this method throws a <xref:System.Transactions.TransactionException> exception.</span></span> <span data-ttu-id="4bd63-154">Jest to normalne dla transakcji i kodzie należy przechwytywać i przetwarzania tych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="4bd63-154">This is a normal occurrence for a transaction and your code should catch and process such exceptions.</span></span>  
  
 <span data-ttu-id="4bd63-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> i <xref:System.Transactions.CommittableTransaction.EndCommit%2A> blokowane, aż zakończeniu pierwszej fazy przetwarzania transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="4bd63-156">Pierwsza faza kończy się po wszystkich menedżerów zasobów i rejestracji w transakcji ma pod głosowanie w wyniku transakcji i <xref:System.Transactions.TransactionManager> trwale zdecydował się na zatwierdzenia lub przerwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-156">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="4bd63-157">Drugi etap przetwarzania jest zawsze asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="4bd63-157">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="4bd63-158">W związku z tym nie ma żadnej gwarancji, że dane tylko zatwierdzone z w ramach danej transakcji będą natychmiast dostępne później bez korzystania z innej transakcji do wyświetlenia tych danych.</span><span class="sxs-lookup"><span data-stu-id="4bd63-158">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="4bd63-159">Ponieważ to bloki metoda zakończeniem pierwszej fazy przetwarzania transakcji, należy zachować ostrożność bardzo przy użyciu tej metody w aplikacji formularza Windows (formularza systemu Windows) lub zakleszczenie mogą wystąpić.</span><span class="sxs-lookup"><span data-stu-id="4bd63-159">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="4bd63-160">Jeśli wywołanie tej metody w ramach jednego zdarzenia kontrolki formularza systemu Windows (np. Kliknięcie przycisku) i użyj synchronicznej <xref:System.Windows.Forms.Control.Invoke%2A> metody bezpośrednie kontrolki do wykonania niektórych zadań interfejsu użytkownika (na przykład zmiany kolorów) w trakcie przetwarzania transakcji nastąpi zakleszczenia.</span><span class="sxs-lookup"><span data-stu-id="4bd63-160">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="4bd63-161">Jest to spowodowane <xref:System.Windows.Forms.Control.Invoke%2A> metoda jest synchroniczne i blokuje wątku roboczego zakończenie wątku interfejsu użytkownika swojego zadania.</span><span class="sxs-lookup"><span data-stu-id="4bd63-161">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="4bd63-162">Jednak w naszym scenariuszu wątku interfejsu użytkownika również czeka, aż wątek roboczy można zatwierdzić transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-162">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="4bd63-163">Wynik jest brak jest w stanie kontynuować i zakresu przez czas nieokreślony oczekuje na zakończenie zatwierdzania.</span><span class="sxs-lookup"><span data-stu-id="4bd63-163">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="4bd63-164">Należy używać <xref:System.Windows.Forms.Control.BeginInvoke%2A> zamiast <xref:System.Windows.Forms.Control.Invoke%2A> wszędzie tam, gdzie to możliwe, ponieważ jest asynchroniczne i w związku z tym są mniej podatne na zakleszczenie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-164">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionInDoubtException"><span data-ttu-id="4bd63-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> jest wywoływana w transakcji i transakcji staje się <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span><span class="sxs-lookup"><span data-stu-id="4bd63-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span></span></exception>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="4bd63-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> nosi nazwę i wycofanie transakcji po raz pierwszy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult ar) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (ar As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="4bd63-167"><see cref="T:System.IAsyncResult" /> Obiekt skojarzony z zobowiązania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="4bd63-167">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <param name="ar"><span data-ttu-id="4bd63-168"><see cref="T:System.IAsyncResult" /> Obiekt skojarzony z zobowiązania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="4bd63-168">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <summary><span data-ttu-id="4bd63-169">Kończy się próba przekazania transakcji asynchronicznie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-169">Ends an attempt to commit the transaction asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bd63-170">Powinna wywołać tę metodę w delegata wywołania zwrotnego, określony jako parametr do <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> metody, po zakończeniu wszelkie prace oczyszczania, skojarzony asynchroniczny zobowiązania.</span><span class="sxs-lookup"><span data-stu-id="4bd63-170">You should call this method in the callback delegate specified as a parameter to the <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> method, when you have finished any cleanup work associated with the asynchronous commitment.</span></span> <span data-ttu-id="4bd63-171">Tę metodę można również wywołać wcześnie, bez konieczności oczekiwania na delegata.</span><span class="sxs-lookup"><span data-stu-id="4bd63-171">You can also call this method early without waiting for the delegate.</span></span> <span data-ttu-id="4bd63-172">Jeśli przez czas, ta metoda jest wywoływana, transakcji nie zostanie zakończony, ta metoda czeka na jego zakończenie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-172">If, by the time you call this method, the transaction has not completed, this method waits for its completion.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4bd63-173"><xref:System.IAsyncResult.CompletedSynchronously%2A> Właściwości zwróconej przez `asyncResult` jest zawsze `false`nawet wtedy, gdy operacja została ukończona synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-173">The <xref:System.IAsyncResult.CompletedSynchronously%2A> property returned by `asyncResult` is always `false`, even if the operation completed synchronously.</span></span>  
  
 <span data-ttu-id="4bd63-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> i <xref:System.Transactions.CommittableTransaction.EndCommit%2A> blokowane, aż zakończeniu pierwszej fazy przetwarzania transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="4bd63-175">Pierwsza faza kończy się po wszystkich menedżerów zasobów i rejestracji w transakcji ma pod głosowanie w wyniku transakcji i <xref:System.Transactions.TransactionManager> trwale zdecydował się na zatwierdzenia lub przerwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="4bd63-175">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="4bd63-176">Drugi etap przetwarzania jest zawsze asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="4bd63-176">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="4bd63-177">W związku z tym nie ma żadnej gwarancji, że dane tylko zatwierdzone z w ramach danej transakcji będą natychmiast dostępne później bez korzystania z innej transakcji do wyświetlenia tych danych.</span><span class="sxs-lookup"><span data-stu-id="4bd63-177">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="4bd63-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> nosi nazwę i wycofanie transakcji po raz pierwszy.</span><span class="sxs-lookup"><span data-stu-id="4bd63-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncState">
      <MemberSignature Language="C#" Value="object System.IAsyncResult.AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.IAsyncResult.AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncState As Object Implements IAsyncResult.AsyncState" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::IAsyncResult::AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bd63-179">Pobiera obiekt udostępniany jako ostatni parametr <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="4bd63-179">Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></summary>
        <value><span data-ttu-id="4bd63-180">Obiekt udostępniany jako ostatni parametr <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="4bd63-180">The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncWaitHandle">
      <MemberSignature Language="C#" Value="System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncWaitHandle As WaitHandle Implements IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="property System::Threading::WaitHandle ^ System::IAsyncResult::AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bd63-181">Pobiera <see cref="T:System.Threading.WaitHandle" /> umożliwiający poczekaj na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="4bd63-181">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="4bd63-182">A <see cref="T:System.Threading.WaitHandle" /> umożliwiający poczekaj na zakończenie operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="4bd63-182">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.CompletedSynchronously">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompletedSynchronously As Boolean Implements IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bd63-183">Pobiera wskazanie, czy operacja zatwierdzania asynchronicznego zakończona synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-183">Gets an indication of whether the asynchronous commit operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="4bd63-184"><see langword="true" /> Jeśli operacja zatwierdzania asynchronicznego zakończona synchronicznie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4bd63-184"><see langword="true" /> if the asynchronous commit operation completed synchronously; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4bd63-185">Właściwość ta zwraca zawsze <see langword="false" /> nawet wtedy, gdy operacja została ukończona synchronicznie.</span><span class="sxs-lookup"><span data-stu-id="4bd63-185">This property always returns <see langword="false" /> even if the operation completed synchronously.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.IsCompleted">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsCompleted As Boolean Implements IAsyncResult.IsCompleted" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4bd63-186">Pobiera wskazanie, czy operacja zatwierdzania asynchronicznego została zakończona.</span><span class="sxs-lookup"><span data-stu-id="4bd63-186">Gets an indication whether the asynchronous commit operation has completed.</span></span></summary>
        <value><span data-ttu-id="4bd63-187"><see langword="true" /> Jeśli operacja została zakończona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4bd63-187"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>