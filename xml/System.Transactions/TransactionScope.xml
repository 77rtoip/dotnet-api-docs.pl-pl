<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionScope.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c72147f3ec967d71b609f35b6ae02d5cf13f169f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72147f3ec967d71b609f35b6ae02d5cf13f169f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>Makes a code block transactional.</source>
          <target state="translated">Powoduje, że blok kodu transakcyjnego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure provides both an explicit programming model based on the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class, as well as an implicit programming model using the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Transactions&gt;</ph> Infrastruktura zapewnia zarówno jawne programowania model na podstawie <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> klasy, a także niejawne programowania modelu przy użyciu <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> klasy, w którym transakcje są automatycznie zarządzane przez infrastrukturę.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>We recommend that you create implicit transactions using the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, so that the ambient transaction context is automatically managed for you.</source>
          <target state="translated">Zaleca się utworzenie niejawne transakcji za pomocą <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> klasy, tak aby kontekstu transakcja otoczenia automatycznie odbywa się.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>You should also use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> and <ph id="ph2">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</source>
          <target state="translated">Należy też używać <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> i <ph id="ph2">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> klasy dla aplikacji, które korzystają z tej samej transakcji w wielu wywołań funkcji lub wielu wywołań wątku.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on this model, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Aby uzyskać więcej informacji na ten model, zobacz <bpt id="p1">[</bpt>implementacji niejawnej transakcji przy użyciu zakresu transakcji<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> tematu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat pisania transakcyjnych aplikacji, zobacz <bpt id="p1">[</bpt>zapisywania transakcyjnych aplikacji<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Upon instantiating a <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> by the <ph id="ph2">`new`</ph> statement, the transaction manager determines which transaction to participate in.</source>
          <target state="translated">Podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> przez <ph id="ph2">`new`</ph> instrukcji, która transakcja brać udziału w określa Menedżera transakcji.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Once determined, the scope always participates in that transaction.</source>
          <target state="translated">Po określeniu zakresu zawsze uczestniczy w danej transakcji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The decision is based on two factors: whether an ambient transaction is present and the value of the <ph id="ph1">`TransactionScopeOption`</ph> parameter in the constructor.</source>
          <target state="translated">Decyzja opiera się na dwa czynniki: Określa, czy transakcja otoczenia jest obecny i ma wartość <ph id="ph1">`TransactionScopeOption`</ph> parametr w konstruktorze.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The ambient transaction is the transaction your code executes in.</source>
          <target state="translated">Transakcja otoczenia jest transakcji, który wykonuje kodu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>You can obtain a reference to the ambient transaction by calling the static <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">Odwołanie do transakcji otoczenia można uzyskać przez wywołanie metody statyczne klasy <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType&gt;</ph> właściwości <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on how this parameter is used, see the "Transaction Flow Management" section of the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Aby uzyskać więcej informacji o sposobie użycia tego parametru, zobacz sekcję "Zarządzanie przepływu transakcji" <bpt id="p1">[</bpt>implementacji niejawnej transakcji przy użyciu zakresu transakcji<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> tematu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If no exception occurs within the transaction scope (that is, between the initialization of the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object and the calling of its <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> method), then the transaction in which the scope participates is allowed to proceed.</source>
          <target state="translated">Jeśli żaden wyjątek występuje w zakresie transakcji (oznacza to, między inicjowanie <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> obiektów i wywoływania z jego <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> — metoda), a następnie transakcji, w których uczestniczy zakresu można kontynuować.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</source>
          <target state="translated">Jeśli wyjątek jest wykonywane w zakresie transakcji, transakcji, w których uczestniczy będzie można wycofać.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>When your application completes all work it wants to perform in a transaction, you should call the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> method only once to inform that transaction manager that it is acceptable to commit the transaction.</source>
          <target state="translated">Gdy aplikacja wykonuje całą pracę chce wykonać w ramach transakcji, należy wywołać <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> metody tylko raz do informowania menedżera transakcji jest można zatwierdzić transakcji.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Failing to call this method aborts the transaction.</source>
          <target state="translated">Nie można wywołać tej metody przerywa transakcję.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>A call to the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> method marks the end of the transaction scope.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> metoda oznacza koniec zakresu transakcji.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Wyjątki, które mogą występować po wywołaniu tej metody nie może mieć wpływ na transakcji.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If you modify the value of <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> inside a scope, an exception is thrown when <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> is called.</source>
          <target state="translated">Jeśli zmodyfikujesz wartość <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> wewnątrz zakresu, jest zwracany wyjątek, kiedy <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>However, at the end of the scope, the previous value is restored.</source>
          <target state="translated">Jednak na końcu zakresu, przywróceniu poprzedniej wartości.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>In addition, if you call <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</source>
          <target state="translated">Ponadto, jeśli wywołujesz <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> na <ph id="ph2">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> wewnątrz zakresu transakcji, który utworzył transakcję, transakcja jest przerywana na końcu zakresu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> klasy do definiowania bloku kodu, aby uczestniczyć w transakcji.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>This type is thread safe.</source>
          <target state="translated">Ten typ jest bezpieczny wątkowo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>This constructor creates a new transaction scope with the transaction scope option equal to <ph id="ph1">&lt;xref:System.Transactions.TransactionScopeOption.Required&gt;</ph>.</source>
          <target state="translated">Ten konstruktor tworzy nowy zakres transakcji z opcją zakresu transakcji równa <ph id="ph1">&lt;xref:System.Transactions.TransactionScopeOption.Required&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</source>
          <target state="translated">Oznacza to, że transakcji jest wymagane przez nowego zakresu i transakcja otoczenia jest używana, jeśli już istnieje.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>Otherwise, it creates a new transaction before entering the scope.</source>
          <target state="translated">W przeciwnym razie tworzy nową transakcję przed wejściem do zakresu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy i ustawia określonej transakcji jako transakcja otoczenia, dzięki czemu pracy transakcyjnej w zakresie używa tej transakcji.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Transakcja ma być ustawiona jako transakcja otoczenia, dzięki czemu pracy transakcyjnej w zakresie używa tej transakcji.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> wyliczenie opisujące czy transakcja otoczenia skojarzone z zakresu transakcji będzie przepływać przez wątek kontynuacje, korzystając z zadania lub async/await async .NET — programowanie wzorce.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy i ustawia określonej transakcji jako transakcja otoczenia, dzięki czemu pracy transakcyjnej w zakresie używa tej transakcji.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified asynchronous flow option.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy z opcją określony przepływ asynchroniczny.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy określone wymagania.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Transakcja ma być ustawiona jako transakcja otoczenia, dzięki czemu pracy transakcyjnej w zakresie używa tej transakcji.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> Po upływie którego zakresu transakcji upłynie limit czasu i przerywa transakcję.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> wyliczenie opisujące czy transakcja otoczenia skojarzone z zakresu transakcji będzie przepływać przez wątek kontynuacje, korzystając z zadania lub async/await async .NET — programowanie wzorce.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy z wartością określony limit czasu i ustawia określonej transakcji jako transakcja otoczenia, dzięki czemu pracy transakcyjnej w zakresie używa tej transakcji.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> wyliczenia, które opisują wymagania dotyczące transakcji powiązanych z tym zakresem transakcji.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionOptions" /&gt;</ph> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionOptions" /&gt;</ph> struktury, która opisuje opcje transakcji do użycia, jeśli utworzono nową transakcję.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">Jeśli istniejąca transakcja jest używany, wartość limitu czasu, w tym parametrze dotyczy zakresu transakcji.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">Jeśli przed jego usunięciu upływem tego czasu, transakcja została przerwana.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> wyliczenie opisujące czy transakcja otoczenia skojarzone z zakresu transakcji będzie przepływać przez wątek kontynuacje, korzystając z zadania lub async/await async .NET — programowanie wzorce.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> z określonych wymagań i opcji Przepływ asynchroniczny.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> wyliczenia, które opisują wymagania dotyczące transakcji powiązanych z tym zakresem transakcji.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> klasy określone wymagania.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">`transactionOptions`</ph> parametr, aby określić <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>i zakres tworzy transakcję później, nowej transakcji jest skojarzony z poziomu izolacji określony.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">Poziom izolacji jest przekazywany w wraz z transakcji, transakcja musi mieć poziom izolacji identyczne, czy jest zgłaszany wyjątek.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Complete">
          <source>Indicates that all operations within the scope are completed successfully.</source>
          <target state="translated">Wskazuje, że wszystkie operacje w zakresie zostały zakończone pomyślnie.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</source>
          <target state="translated">Po zakończeniu czy wszystkie operacje w zakresie zostały zakończone pomyślnie, należy wywołać tylko raz do tej metody do informowania menedżera transakcji, stan we wszystkich zasobów jest spójne, czy można można zatwierdzić transakcji.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>It is very good practice to put the call as the last statement in the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">Jest bardzo dobrym rozwiązaniem, Umieść wywołanie jako ostatnią instrukcją w <ph id="ph1">`using`</ph> bloku.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Aby uzyskać więcej informacji o sposobie użycia tej metody, zobacz <bpt id="p1">[</bpt>implementacji niejawnej transakcji przy użyciu zakresu transakcji<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> tematu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</source>
          <target state="translated">Nie można wywołać tej metody przerywa transakcji, ponieważ Menedżer transakcji interpretuje jako awarii systemu lub wyjątki zgłaszane w zakresie transakcji.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>However, you should also note that calling this method does not guarantee a commit of the transaction.</source>
          <target state="translated">Jednak należy pamiętać, że wywołanie tej metody nie gwarantuje zatwierdzania transakcji.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>It is merely a way of informing the transaction manager of your status.</source>
          <target state="translated">Jest tylko sposób informowania menedżera transakcji Twój status.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>After calling this method, you can no longer access the ambient transaction via the <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> property, and trying to do so results in an exception being thrown.</source>
          <target state="translated">Po wywołaniu tej metody, nie jest już dostępne transakcja otoczenia za pośrednictwem <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> właściwości i wykonać tak powoduje wyjątek.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>The actual work of commit between the resources manager happens at the <ph id="ph1">`End Using`</ph> statement if the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object created the transaction.</source>
          <target state="translated">Rzeczywistą pracę zatwierdzania między Menedżera zasobów odbywa się na <ph id="ph1">`End Using`</ph> instrukcji Jeśli <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> utworzony obiekt transakcji.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>If it did not create the transaction, the commit occurs whenever <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph> is called by the owner of the <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> object.</source>
          <target state="translated">Jeśli nie utworzył transakcji, zatwierdzanie występuje zawsze, gdy <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph> jest wywoływana przez właściciela <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object.</source>
          <target state="translated">W tym momencie Menedżera transakcji wywołuje zasobu menedżerów i informacją do zatwierdzania lub wycofywania według tego, czy ta metoda została wywołana w <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> klasy do definiowania bloku kodu, aby uczestniczyć w transakcji.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Complete">
          <source>This method has already been called once.</source>
          <target state="translated">Ta metoda została wywołana jeszcze raz.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Ends the transaction scope.</source>
          <target state="translated">Kończy się w zakresie transakcji.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Calling this method marks the end of the transaction scope.</source>
          <target state="translated">Wywołanie tej metody oznacza koniec zakresu transakcji.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>If the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object created the transaction and <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> was called on the scope, the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object attempts to commit the transaction when this method is called.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> utworzony obiekt transakcji oraz <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> została wywołana w zakresie, <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> obiektu próbuje zatwierdzić transakcji, gdy ta metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The use of the C# <ph id="ph1">`using`</ph> construction ensures that this method is called even if an exception occurs.</source>
          <target state="translated">Używanie języka C# <ph id="ph1">`using`</ph> konstrukcja zapewnia, że ta metoda jest wywoływana, nawet jeśli wystąpi wyjątek.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Wyjątki, które mogą występować po wywołaniu tej metody nie może mieć wpływ na transakcji.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This method also restores the ambient transaction to it original state.</source>
          <target state="translated">Ta metoda również przywraca transakcja otoczenia go oryginalnego stanu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>A <ph id="ph1">&lt;xref:System.Transactions.TransactionAbortedException&gt;</ph> is thrown if the transaction is not actually committed.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Transactions.TransactionAbortedException&gt;</ph> jest generowany, jeśli transakcja nie jest w rzeczywistości zatwierdzone.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This method is synchronous and blocks until the transaction has been committed or aborted.</source>
          <target state="translated">Ta metoda jest synchroniczne i blokuje dopóki transakcji została zatwierdzona lub przerwana.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</source>
          <target state="translated">W związku z tym należy bardzo ostrożnie przy użyciu tej metody w aplikacji formularzy systemu Windows (formularza systemu Windows) lub może wystąpić zakleszczenie.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</source>
          <target state="translated">Jeśli wywołanie tej metody wewnątrz jednego zdarzenia kontrolki formularza systemu Windows (na przykład kliknięcie przycisku) i używać synchroniczne <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> metodę, aby przekierować formantu do wykonania niektórych zadań interfejsu użytkownika (na przykład zmiany kolorów) w trakcie przetwarzania transakcji, nastąpi zakleszczenia.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This is because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method is synchronous and blocks the worker thread until the UI thread finishes its job.</source>
          <target state="translated">Jest to spowodowane <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> metoda synchroniczna i blokuje wątku roboczego wątku interfejsu użytkownika zakończenie swojego zadania.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</source>
          <target state="translated">Jednak w naszym scenariuszu wątku interfejsu użytkownika jest również oczekiwanie na wątku roboczego można zatwierdzić transakcji.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</source>
          <target state="translated">Wynik jest, że żaden nie jest możliwe w i zakres nieskończoność czeka na zakończenie zatwierdzania.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>You should use <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> wherever possible, because it is asynchronous and thus less prone to deadlock.</source>
          <target state="translated">Należy używać <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> zamiast <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> wszędzie tam, gdzie to możliwe, ponieważ jest asynchroniczne, a w związku z tym mniej podatna na zakleszczenie.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Aby uzyskać więcej informacji o sposobie użycia tej metody, zobacz <bpt id="p1">[</bpt>implementacji niejawnej transakcji przy użyciu zakresu transakcji<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> tematu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> klasy do definiowania bloku kodu, aby uczestniczyć w transakcji.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>