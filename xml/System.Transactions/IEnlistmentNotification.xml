<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36a329fa5a579cd92ba234295630238f8883f58d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143472" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Opisuje interfejs, który powinien być zaimplementowany przez Menedżera zasobów, aby zapewnić dwa wywołania zwrotne powiadomień o zatwierdzeniu przez Menedżera transakcji w przypadku rejestracji w celu uczestnictwa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby Menedżer zasobów mógł uczestniczyć w transakcji, musi zarejestrować się w transakcji za pomocą Menedżera transakcji. <xref:System.Transactions.Transaction> Klasa definiuje zestaw metod, których nazwy zaczynają się od `Enlist` tę funkcję, która udostępnia. Poszczególne `Enlist` metody odpowiada różnego rodzaju rejestracji, które mogą mieć Menedżera zasobów.  
  
 Ta klasa opisuje interfejs, który powinien być zaimplementowany przez Menedżera zasobów, aby zapewnić dwa wywołania zwrotne powiadomień o zatwierdzeniu przez Menedżera transakcji w przypadku rejestracji w celu uczestnictwa. Dla każdej implementacji <xref:System.Transactions.IEnlistmentNotification> interfejsu w Menedżerze zasobów należy zarejestrować ją <xref:System.Transactions.Transaction.EnlistVolatile%2A> przy użyciu metody <xref:System.Transactions.Transaction> lub <xref:System.Transactions.Transaction.EnlistDurable%2A> metody klasy, w zależności od tego, czy zasób jest trwały czy trwały. Aby uzyskać więcej informacji na temat rejestracji i 2PC, zobacz temat [Rejestrowanie zasobów jako uczestników transakcji](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) i [zatwierdzanie transakcji w ramach jednej fazy i wielu faz](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) .  
  
 Menedżer transakcji powiadamia zarejestrowany obiekt w różnych fazach protokołu zatwierdzania dwóch faz przez następujące metody.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Ta metoda zarejestrowanego obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w pierwszej fazie transakcji, gdy Menedżer transakcji prosi uczestników o to, czy może zatwierdzić tę transakcję.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Ta metoda zarejestrowanego obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została zatwierdzona.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Ta metoda zarejestrowanego obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została przerwana (jest to wycofywane).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Ta metoda zarejestrowanego obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja jest wątpliwa.|  
  
> [!NOTE]
>  Należy pamiętać, że powiadomienia mogą nie być wysyłane sekwencyjnie lub w określonej kolejności.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację tego interfejsu, a także zarejestrować obiekt jako uczestnik transakcji przy użyciu <xref:System.Transactions.Transaction.EnlistVolatile%2A> metody.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Rejestrowanie zasobów jako uczestników transakcji</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Jednofazowe i wielofazowe zatwierdzanie transakcji</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowany obiekt, który jest zatwierdzany przez transakcję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę zarejestrowanego obiektu podczas drugiej fazy zobowiązania, gdy nakazuje wszystkim uczestnikom zatwierdzenie transakcji.  
  
 Menedżer zasobów powinien wykonać każdą pracę niezbędną do zakończenia transakcji, a następnie poinformować o tym, że zakończył się <xref:System.Transactions.Enlistment.Done%2A> przez wywołanie metody `enlistment` na parametrze.  
  
 Jeśli Menedżer zasobów zakończył trwale, ale nie odpowiada przez wywoływanie <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie ma pewności, że Menedżer zasobów <xref:System.Transactions.IEnlistmentNotification.Commit%2A> odebrał wywołanie. W związku z tym Menedżer transakcji kontynuuje oczekiwanie na odpowiedź i utrzymuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> nigdy nie zostanie wywołane, ta część informacji będzie utrzymywana przez czas nieokreślony w pamięci lub w zasobach systemu. W wyniku tego nie można odzyskiwać zasobów. W przypadku transakcji rozproszonej może to spowodować zapełnienie dziennika usługi MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządzanej przez <xref:System.Transactions>program powoduje stopniowe i ciągłe zwiększenie zużycia pamięci przez proces Menedżera zasobów. W związku z tym ważne jest, aby wywołać <xref:System.Transactions.Enlistment.Done%2A> metodę, gdy Menedżer zasobów zostanie wykonany przy użyciu przygotowania do pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowany obiekt, że stan transakcji jest wątpliwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana dla zasobów lotnych, gdy Menedżer transakcji wywołał operację zatwierdzania pojedynczej fazy do pojedynczego trwałego zasobu, a następnie połączenie z trwałym zasobem zostało utracone przed pobraniem wyniku transakcji. W tym momencie nie można bezpiecznie ustalić wyniku transakcji.  
  
 Jako <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> że jest uznawany za stan końcowy transakcji, nie należy wywoływać <xref:System.Transactions.IEnlistmentNotification.Commit%2A> ani <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> po wywołaniu <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Twoja implementacja tej metody dla zasobu volatile powinna wykonywać operacje odzyskiwania lub zawierania, które są zrozumiałe dla odnośnych danych.  Musi również wywołać <xref:System.Transactions.Enlistment.Done%2A> metodę na `enlistment` parametrze w momencie zakończenia pracy.  
  
 Jeśli Menedżer zasobów zakończył trwale, ale nie odpowiada przez wywoływanie <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie ma pewności, że Menedżer zasobów <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> odebrał wywołanie. W związku z tym Menedżer transakcji kontynuuje oczekiwanie na odpowiedź i utrzymuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> nigdy nie zostanie wywołane, ta część informacji będzie utrzymywana przez czas nieokreślony w pamięci lub w zasobach systemu. W wyniku tego nie można odzyskiwać zasobów. W przypadku transakcji rozproszonej może to spowodować zapełnienie dziennika usługi MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządzanej przez <xref:System.Transactions>program powoduje stopniowe i ciągłe zwiększenie zużycia pamięci przez proces Menedżera zasobów. W związku z tym ważne jest, aby wywołać <xref:System.Transactions.Enlistment.Done%2A> metodę, gdy Menedżer zasobów zostanie wykonany przy użyciu przygotowania do pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment"><see cref="T:System.Transactions.PreparingEnlistment" /> Obiekt służący do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowany obiekt, że transakcja jest przygotowywana do zobowiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę zarejestrowanego Menedżera zasobów w fazie 1 zobowiązania, gdy prosi uczestników, czy może zatwierdzić tę transakcję.  
  
 Podczas implementowania Menedżera zasobów trwałych należy rejestrować swój rekord przygotowania w tej fazie. Rekord powinien zawierać wszystkie informacje niezbędne do przeprowadzenia odzyskiwania. Obejmuje <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> to właściwość, która jest przenoszona do Menedżera transakcji <xref:System.Transactions.TransactionManager.Reenlist%2A> w metodzie podczas odzyskiwania. Aby uzyskać więcej informacji o odzyskiwaniu, zobacz [odzyskiwanie](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Menedżer zasobów powinien ukończyć całą pracę, która musi zostać zakończona przed wywołaniem <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metody parametru, `preparingEnlistment` aby wskazać jej głos na zobowiązania. Należy upewnić się, że zostało to wykonane przed odebraniem powiadomienia fazy 2, takie jak zatwierdzenie, wycofanie lub wątpliwości. Dzieje się tak, ponieważ powiadomienia fazy 2 mogą być wbudowane w tym samym wątku, <xref:System.Transactions.PreparingEnlistment.Prepared%2A> który wywołał metodę w fazie 1. W związku z tym nie należy wykonywać żadnej pracy po <xref:System.Transactions.PreparingEnlistment.Prepared%2A> wywołaniu (na przykład zwalniać blokad), które należy wykonać przed odebraniem powiadomień fazy 2.  
  
 Możesz również wywołać metodę `preparingEnlistment` parametru, aby wskazać głos do wycofania.  
  
 Jeśli chcesz, aby obiekt miał jedynie obserwować i reagować na postęp transakcji, bez udziału w niej, implementacja tej metody powinna wywołać <xref:System.Transactions.Enlistment.Done%2A> metodę `preparingEnlistment` parametru po zakończeniu pracy. Dzięki temu Menedżer zasobów nie otrzyma żadnego powiadomienia fazy 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><see cref="T:System.Transactions.Enlistment" /> Obiekt służący do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowany obiekt, że transakcja jest wycofywana (przerwana).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę zarejestrowanego obiektu, gdy transakcja jest wycofywana (przerwana) z powodu niemożności co najmniej jednego uczestnika transakcji na zatwierdzenie transakcji.  
  
 Menedżer zasobów powinien wykonać każdą pracę niezbędną do zakończenia transakcji, a następnie poinformować o tym, że zakończył się <xref:System.Transactions.Enlistment.Done%2A> przez wywołanie metody `enlistment` na parametrze.  
  
 Jeśli Menedżer zasobów zakończył trwale, ale nie odpowiada przez wywoływanie <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie ma pewności, że Menedżer zasobów <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> odebrał wywołanie. W związku z tym Menedżer transakcji kontynuuje oczekiwanie na odpowiedź i utrzymuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> nigdy nie zostanie wywołane, ta część informacji będzie utrzymywana przez czas nieokreślony w pamięci lub w zasobach systemu. W wyniku tego nie można odzyskiwać zasobów. W przypadku transakcji rozproszonej może to spowodować zapełnienie dziennika usługi MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządzanej przez <xref:System.Transactions>program powoduje stopniowe i ciągłe zwiększenie zużycia pamięci przez proces Menedżera zasobów. W związku z tym ważne jest, aby wywołać <xref:System.Transactions.Enlistment.Done%2A> metodę, gdy Menedżer zasobów zostanie wykonany przy użyciu przygotowania do pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
