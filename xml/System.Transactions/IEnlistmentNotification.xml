<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dcde52862800efd6574c0aa26e24371b65d56c6" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744307" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>W tym artykule opisano interfejs, który Menedżera zasobów zaimplementować zapewnienie wywołania zwrotne dwóch faza zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uczestniczyć w transakcji Menedżera zasobów należy zarejestrować w transakcji za pośrednictwem Menedżera transakcji. <xref:System.Transactions.Transaction> Klasa definiuje zestaw metod, których nazwy zaczynają się od `Enlist` tę funkcję, która udostępnia. Poszczególne `Enlist` metody odpowiada różnego rodzaju rejestracji, które mogą mieć Menedżera zasobów.  
  
 Ta klasa Opisuje interfejs, który Menedżera zasobów zaimplementować zapewnienie wywołania zwrotne dwóch faza zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału. Dla każdego Menedżera zasobów implementacji <xref:System.Transactions.IEnlistmentNotification> interfejsu, należy zarejestrować go za pomocą <xref:System.Transactions.Transaction.EnlistVolatile%2A> metody lub <xref:System.Transactions.Transaction.EnlistDurable%2A> metody <xref:System.Transactions.Transaction> klasy, w zależności od tego, czy zasób jest lotnych lub trwałe. Aby uzyskać więcej informacji na temat rejestracji oraz 2PC, zobacz [rejestrowanie zasobów jako uczestników transakcji](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) i [Zatwierdzanie transakcji jednofazowe i wielofazowe](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) odpowiednio.  
  
 Menedżer transakcji powiadamia obiekt zobowiązaniom na różnych etapach protokołu dwóch faza zatwierdzania za pomocą następujących metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Ta metoda zobowiązaniom obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w pierwszej fazie transakcji, gdy Menedżer transakcji pyta uczestników, czy można zatwierdzić transakcji.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Ta metoda zobowiązaniom obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została zatwierdzona.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Ta metoda zobowiązaniom obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została przerwana, (który jest przywracana).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Ta metoda zobowiązaniom obiektu jest używana jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji Jeśli transakcja jest w stanie wątpliwości.|  
  
> [!NOTE]
>  Należy pamiętać, że powiadomienia mogą być wysyłane po kolei, czy w określonej kolejności.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację tego interfejsu, a także rejestrowanie obiektu jako uczestnika transakcji przy użyciu <xref:System.Transactions.Transaction.EnlistVolatile%2A> metody.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Rejestrowanie zasobów jako uczestników transakcji</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Jednofazowe i wielofazowe zatwierdzanie transakcji</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zobowiązaniom obiektu, że zatwierdzania transakcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę zobowiązaniom obiektu w drugiej fazie zobowiązania, gdy go powoduje, że wszyscy uczestnicy można zatwierdzić transakcji.  
  
 Menedżer zasobów powinien wykonać wszelkie prace niezbędne do zakończenia transakcji, a następnie informuje Menedżer transakcji, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metody `enlistment` parametru.  
  
 Jeśli Menedżera zasobów został zarejestrowany trwale, ale nie odpowiada, wywołując <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie wiesz, że otrzymał usługi resource manager jest <xref:System.Transactions.IEnlistmentNotification.Commit%2A> wywołania. W efekcie Menedżer transakcji przechowuje oczekiwania na odpowiedź i przechowuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie zostanie wywołana, to fragment informacji jest przechowywana wokół przez czas nieokreślony w pamięci lub zasobów całego systemu. Skutkuje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonej może to po pewnym czasie wypełnienia dzienniku MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowe i ciągłe wzrost zużycie pamięci procesu Menedżera zasobów. Dlatego jest niezwykle istotne, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metoda po zakończeniu Menedżera zasobów przy użyciu usługi przygotowania pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia obiekt zobowiązaniom stan transakcji jest w stanie wątpliwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana dla lotnych zasoby, gdy Menedżer transakcji zostało wywołane na pojedynczy zasób trwałego operacji zatwierdzania jedna faza, a następnie połączenie trwałe zasobu zostało przerwane przed pobierania wyniku transakcji. W tym momencie wyniku transakcji nie można bezpiecznie ustalić.  
  
 Jako <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> jest uważany za stan końcowy dla transakcji, nie należy wywołać <xref:System.Transactions.IEnlistmentNotification.Commit%2A> lub <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> po wywołaniu <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Implementacja tej metody dla lotnych zasobu należy wykonać niezależnie od operacji odzyskiwania lub zawierania sam na danych, których to dotyczy.  Należy także wywołać <xref:System.Transactions.Enlistment.Done%2A> metody na `enlistment` parametru po zakończeniu pracy.  
  
 Jeśli Menedżera zasobów został zarejestrowany trwale, ale nie odpowiada, wywołując <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie wiesz, że otrzymał usługi resource manager jest <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> wywołania. W efekcie Menedżer transakcji przechowuje oczekiwania na odpowiedź i przechowuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie zostanie wywołana, to fragment informacji jest przechowywana wokół przez czas nieokreślony w pamięci lub zasobów całego systemu. Skutkuje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonej może to po pewnym czasie wypełnienia dzienniku MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowe i ciągłe wzrost zużycie pamięci procesu Menedżera zasobów. Dlatego jest niezwykle istotne, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metoda po zakończeniu Menedżera zasobów przy użyciu usługi przygotowania pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">A <see cref="T:System.Transactions.PreparingEnlistment" /> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia obiekt zobowiązaniom, który transakcja jest przygotowywane zobowiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę zobowiązaniom zasobu menedżera w fazie 1 jako zobowiązanie, gdy sprawdza, czy uczestników tego, czy można zatwierdzić transakcji.  
  
 Implementując Menedżera zasobów trwałe, należy rejestrować swoje przygotowanie rekord w tej fazie. Rekord powinien zawierać wszystkie informacje wymagane do przeprowadzenia odzyskiwania. Obejmuje to <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> właściwość, która jest przekazywana do Menedżera transakcji w <xref:System.Transactions.TransactionManager.Reenlist%2A> metody podczas odzyskiwania. Aby uzyskać więcej informacji na temat odzyskiwania, zobacz [przeprowadzania odzyskiwania](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Menedżera zasobów powinno zająć całą pracę, które muszą zostać ukończone przed wywołaniem <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metody `preparingEnlistment` parametru, aby wskazać jego głos zobowiązania. Należy upewnić się, że jest to realizowane przed odbierał powiadomienia fazy 2 takie jako zatwierdzenie wycofywania lub w razie wątpliwości. Jest to spowodowane powiadomienia fazy 2 może się tak zdarzyć tekście w tym samym wątku, który wywołał <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metody w fazie 1. W efekcie nie powinien wykonać pracę po <xref:System.Transactions.PreparingEnlistment.Prepared%2A> wywołania (na przykład uwalniający blokady), które powinny być została ukończona przed odbierał powiadomienia fazy 2.  
  
 Można również wywołać metodę `preparingEnlistment` parametru, aby wskazać głos na potrzeby wycofywania.  
  
 Jeśli obiekt jedynie obserwację i reagować na postęp transakcji, bez uczestnictwa w nim implementacja tej metody należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metody `preparingEnlistment` parametru po zakończeniu pracy. W ten sposób Menedżera zasobów nie będzie odbierać powiadomień Faza 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">A <see cref="T:System.Transactions.Enlistment" /> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia obiekt zobowiązaniom, który transakcja jest wycofywana (anulowane).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę w zobowiązaniom obiektu, gdy transakcja jest wycofywana (anulowane) z powodu braku możliwości jednego lub więcej uczestników transakcji zatwierdzania transakcji.  
  
 Menedżer zasobów powinien wykonać wszelkie prace niezbędne do zakończenia transakcji, a następnie informuje Menedżer transakcji, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metody `enlistment` parametru.  
  
 Jeśli Menedżera zasobów został zarejestrowany trwale, ale nie odpowiada, wywołując <xref:System.Transactions.Enlistment.Done%2A> metody, Menedżer transakcji nie wiesz, że otrzymał usługi resource manager jest <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> wywołania. W efekcie Menedżer transakcji przechowuje oczekiwania na odpowiedź i przechowuje informacje istotne dla tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie zostanie wywołana, to fragment informacji jest przechowywana wokół przez czas nieokreślony w pamięci lub zasobów całego systemu. Skutkuje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonej może to po pewnym czasie wypełnienia dzienniku MSDTC, który zatrzymuje proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowe i ciągłe wzrost zużycie pamięci procesu Menedżera zasobów. Dlatego jest niezwykle istotne, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metoda po zakończeniu Menedżera zasobów przy użyciu usługi przygotowania pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>