<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cc94d2e8fdf95496872362fe50ab41f553e0db5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Opisuje interfejs, który Menedżer zasobów powinien implementować zapewnienie wywołania zwrotne dwie fazy zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby Menedżera zasobów do udziału w transakcji musisz zarejestrować w transakcji za pośrednictwem Menedżera transakcji. <xref:System.Transactions.Transaction> Klasa definiuje zestaw metod, których nazwy zaczynają się od `Enlist` tę funkcję, która udostępnia. Różnych `Enlist` metody odpowiadają różne rodzaje rejestracji, który mógł zostać maanger zasobów.  
  
 Ta klasa Opisuje interfejs, który Menedżer zasobów powinien implementować zapewnienie wywołania zwrotne dwie fazy zatwierdzania powiadomień dla Menedżera transakcji na rejestrowanie udziału. Dla każdego Menedżera zasobów implementacji <xref:System.Transactions.IEnlistmentNotification> interfejsu, użytkownik powinien zarejestrować za pomocą <xref:System.Transactions.Transaction.EnlistVolatile%2A> — metoda lub <xref:System.Transactions.Transaction.EnlistDurable%2A> metody <xref:System.Transactions.Transaction> klasy, w zależności od tego, czy zasób jest nietrwałe lub trwałe. Aby uzyskać więcej informacji o rejestracji i 2PC, zobacz [rejestrowanie zasobów jako uczestnicy transakcji](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) i [Zatwierdzanie transakcji w jednofazowy i wielu fazy](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) odpowiednio.  
  
 Menedżer transakcji powiadamia obiektu zarejestrowane na różnych etapach protokołu dwie fazy zatwierdzić za pomocą następujących metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w pierwszej fazie transakcji, gdy Menedżer transakcji zapyta uczestników, czy można zatwierdzić transakcji.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja zostanie zatwierdzone.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja została przerwana, (tj. przywróceniu).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Ta metoda obiektu zarejestrowane służy jako wywołanie zwrotne przez Menedżera transakcji w drugiej fazie transakcji, jeśli transakcja jest wątpliwa.|  
  
> [!NOTE]
>  Należy pamiętać, że może nie być wysyłane powiadomienia sekwencyjnie i w określonej kolejności.  
  
   
  
## Examples  
 Poniższy przykład przedstawia implementację tego interfejsu, a także rejestrowanie obiektu jako uczestnika transakcji przy użyciu <xref:System.Transactions.Transaction.EnlistVolatile%2A> metody.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowane obiekt, że transakcja zostaje zatwierdzona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje ta metoda obiektu zarejestrowane w drugiej fazie zobowiązań, gdy go powoduje, że wszystkie osoby uczestniczące w niej można zatwierdzić transakcji.  
  
 Menedżer zasobów wykonać pracę, wymagane do Zakończ transakcję, a następnie powiadamia TM, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metoda `enlistment` parametru.  
  
 Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metody jest nie wiesz, że otrzymał Menedżera zasobów Menedżera transakcji <xref:System.Transactions.IEnlistmentNotification.Commit%2A> wywołania. Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu. Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów. W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <see cref="T:System.Transactions.Enlistment" /> Obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowane obiektu, który stan transakcji jest wątpliwa.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana volatile zasobów, gdy Menedżera transakcji została wywołana w operacji przekazywania jednej fazie do pojedynczego zasobu trwałe, a następnie trwałe zasobów utracono połączenie przed pobierania wyników transakcji. W tym momencie wynik transakcji nie można bezpiecznie określić.  
  
 Jako <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> jest uważany za stan końcowy dla transakcji, należy nie wywołać <xref:System.Transactions.IEnlistmentNotification.Commit%2A> lub <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> po wywołaniu <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Twoje implementacja tej metody dla zasobu volatile należy wykonać niezależnie od siebie operacji odzyskiwania lub zawierania na odpowiednich danych.  Należy także wywołać <xref:System.Transactions.Enlistment.Done%2A> metoda na `enlistment` parametru po zakończeniu pracy.  
  
 Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metody jest nie wiesz, że otrzymał Menedżera zasobów Menedżera transakcji <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> wywołania. Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu. Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów. W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">A <see cref="T:System.Transactions.PreparingEnlistment" /> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowane obiektu przygotowanym transakcji dla zobowiązań.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołanie tej metody zasobów Menedżera podczas fazy 1 zobowiązania, gdy sprawdza, czy uczestników Określa, czy można zatwierdzić transakcji.  
  
 Podczas wdrażania Menedżera zasobów trwałe, należy rejestrować Twojej przygotowanie rekordu w tej fazie. Rekord powinien zawierać wszystkie informacje niezbędne do wykonania odzyskiwania. Obejmuje to <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> właściwość, która została przekazana do Menedżera transakcji w <xref:System.Transactions.TransactionManager.Reenlist%2A> metody podczas odzyskiwania. Aby uzyskać więcej informacji dotyczących odzyskiwania, zobacz [wykonywania odzyskiwania](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Menedżera zasobów, należy wykonać wszystkie pracy, które muszą zostać ukończone przed wywołaniem <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metody `preparingEnlistment` parametr, aby wskazać jej głos dla zobowiązań. Należy upewnić się, że jest to zrobić przed rozpoczęciem odbierania powiadomienia Faza 2 takich jak zatwierdzić wycofania lub wątpliwe. Jest to spowodowane powiadomienia Faza 2 może się zdarzyć wbudowany w tym samym wątku, który wywołał <xref:System.Transactions.PreparingEnlistment.Prepared%2A> metody w kroku 1. W efekcie nie powinien wykonać pracę po <xref:System.Transactions.PreparingEnlistment.Prepared%2A> można oczekiwać na ukończenie przed odbieranie powiadomień Faza 2 wywołania (na przykład zwolnić blokady).  
  
 Możesz także wywołać metodę `preparingEnlistment` parametr, aby wskazać głos na potrzeby wycofywania.  
  
 Jeśli chcesz obiektu jedynie przestrzegać i reagowania na postęp transakcji, bez uczestniczące w niej implementacji tej metody należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metody `preparingEnlistment` parametru po zakończeniu pracy. W ten sposób Menedżera zasobów nie otrzyma powiadomienia Faza 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">A <see cref="T:System.Transactions.Enlistment" /> obiekt używany do wysyłania odpowiedzi do Menedżera transakcji.</param>
        <summary>Powiadamia zarejestrowane obiektu, który transakcji jest wycofywana (przerwana).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Menedżer transakcji wywołuje tę metodę, zarejestrowane obiektu, gdy transakcja jest wycofywana (zostało przerwane) z powodu jednego lub więcej uczestników transakcji niemożność zatwierdzić transakcji.  
  
 Menedżer zasobów wykonać pracę, wymagane do Zakończ transakcję, a następnie powiadamia TM, który zakończył się przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metoda `enlistment` parametru.  
  
 Jeśli Menedżer zasobów został zarejestrowany trwałym, ale nie odpowiada przez wywołanie metody <xref:System.Transactions.Enlistment.Done%2A> metody jest nie wiesz, że otrzymał Menedżera zasobów Menedżera transakcji <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> wywołania. Tak Menedżer transakcji śledzi oczekiwania na odpowiedź i przechowuje informacje dotyczące tej transakcji.  Jeśli <xref:System.Transactions.Enlistment.Done%2A> jest nigdy nie wywołuje się, ta część informacji jest przechowywana wokół przez nieograniczony czas w pamięci lub zasobów całego systemu. Powoduje to zasoby nie mogą zostać odzyskane. W przypadku transakcji rozproszonych może to ostatecznie wypełnienia dziennika usługi MSDTC, który przerywa proces MSDTC. W przypadku transakcji zarządza <xref:System.Transactions>, powoduje to stopniowo i ciągłe wzrost zużycia pamięci procesu Menedżera zasobów. W związku z tym jest niezwykle ważny, należy wywołać <xref:System.Transactions.Enlistment.Done%2A> metody po wykonuje się za pomocą Menedżera zasobów z Praca przygotować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>