<Type Name="DependentTransaction" FullName="System.Transactions.DependentTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14e78653203d9978eb1016724756f6e0d100a474" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605360" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DependentTransaction : System.Transactions.Transaction, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependentTransaction extends System.Transactions.Transaction implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependentTransaction&#xA;Inherits Transaction&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependentTransaction sealed : System::Transactions::Transaction, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DependentTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2e759-101">W tym artykule opisano Sklonowanie transakcji, zapewniając gwarancji, że nie można zatwierdzić transakcji, dopóki aplikacja zawiera rest dotyczące pracy w transakcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e759-101">Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction.</span>
      </span>
      <span data-ttu-id="2e759-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e759-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e759-103"><xref:System.Transactions.DependentTransaction> Jest klonem <xref:System.Transactions.Transaction> utworzone za pomocą obiektu <xref:System.Transactions.Transaction.DependentClone%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e759-103">The <xref:System.Transactions.DependentTransaction> is a clone of a <xref:System.Transactions.Transaction> object created using the <xref:System.Transactions.Transaction.DependentClone%2A> method.</span></span>  <span data-ttu-id="2e759-104">Jedynym celem jest umożliwienie aplikacji do trybu rest i gwarantuje, że transakcja nie można zatwierdzić podczas pracy jest nadal w transakcji (na przykład na wątku roboczego).</span><span class="sxs-lookup"><span data-stu-id="2e759-104">Its sole purpose is to allow the application to come to rest and guarantee that the transaction cannot commit while work is still being performed on the transaction (for example, on a worker thread).</span></span>  
  
 <span data-ttu-id="2e759-105">Podczas pracy w ramach transakcji sklonowany finally jest gotowy do można zatwierdzić, mogą informować twórca przy użyciu transakcji <xref:System.Transactions.DependentTransaction.Complete%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2e759-105">When the work done within the cloned transaction is finally complete and ready to be committed, it can inform the creator of the transaction using the <xref:System.Transactions.DependentTransaction.Complete%2A> method.</span></span> <span data-ttu-id="2e759-106">W związku z tym można zachować spójność i poprawność danych.</span><span class="sxs-lookup"><span data-stu-id="2e759-106">Thus you can preserve the consistency and correctness of data.</span></span>  
  
 <span data-ttu-id="2e759-107"><xref:System.Transactions.DependentCloneOption> Wyliczenia służy do określania zachowania w zatwierdzeniu.</span><span class="sxs-lookup"><span data-stu-id="2e759-107">The <xref:System.Transactions.DependentCloneOption> enumeration is used to determine the behavior on commit.</span></span>  <span data-ttu-id="2e759-108">Ten formant zachowanie umożliwia aplikacji się zatrzymać, a także zapewnia obsługę współbieżności.</span><span class="sxs-lookup"><span data-stu-id="2e759-108">This behavior control allows an application to come to rest, as well as provides concurrency support.</span></span> <span data-ttu-id="2e759-109">Aby uzyskać więcej informacji o sposobie użycia tego wyliczenia, zobacz [Zarządzanie współbieżności z DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span><span class="sxs-lookup"><span data-stu-id="2e759-109">For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e759-110">Poniższy przykład przedstawia sposób tworzenia zależnych transakcji.</span><span class="sxs-lookup"><span data-stu-id="2e759-110">The following example shows you how to create a dependent transaction.</span></span>  
  
 [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2e759-111">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e759-111">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="override this.Complete : unit -&gt; unit" Usage="dependentTransaction.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2e759-112">Próbuje ukończyć transakcji zależnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e759-112">Attempts to complete the dependent transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e759-113">Tę metodę można wywołać, gdy chce informują twórca transakcji o zakończeniu pracy można można zatwierdzić transakcji, jeśli element nadrzędny jest również gotowe klon zależny.</span><span class="sxs-lookup"><span data-stu-id="2e759-113">Call this method when the dependent clone wants to inform the creator of the transaction that it has finished its work, and the transaction can be committed if the parent is also ready.</span></span>  
  
 <span data-ttu-id="2e759-114">Po wywołaniu tego wywołania nie powinny podejmować żadnych dodatkowych działań dla transakcji, lub jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2e759-114">After this call is invoked, you should not attempt any additional work on the transaction, or an exception is thrown.</span></span>  
  
 <span data-ttu-id="2e759-115">Jeśli domena aplikacji ulegnie awarii po ta metoda jest wywoływana przed zakończeniem transakcja może przerwać transakcji.</span><span class="sxs-lookup"><span data-stu-id="2e759-115">If the application domain goes down after this method is called, and before the transaction is completed, the transaction might abort.</span></span>  
  
 <span data-ttu-id="2e759-116">**Uwaga** tę metodę należy wywoływać tylko raz, okres istnienia transakcji zależnych.</span><span class="sxs-lookup"><span data-stu-id="2e759-116">**Note** This method should be called only once during the dependent transaction's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException">
          <span data-ttu-id="2e759-117">Każda próba dla dodatkowych działań dla transakcji po ta metoda jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e759-117">Any attempt for additional work on the transaction after this method is called.</span>
          </span>
          <span data-ttu-id="2e759-118">Obejmują one, takich jak wywoływanie metod <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , ani żadnych operacji serializacji dla transakcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e759-118">These include invoking methods such as <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , or any serialization operations on the transaction.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>