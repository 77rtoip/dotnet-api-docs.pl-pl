<Type Name="DependentCloneOption" FullName="System.Transactions.DependentCloneOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f8f68a80c66079a6a01aa79dc6fa94b7bcad1d50" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406021" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum DependentCloneOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DependentCloneOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentCloneOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum DependentCloneOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class DependentCloneOption" />
  <TypeSignature Language="F#" Value="type DependentCloneOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="6c950-101">Określa, jakiego rodzaju zależnych transakcji do utworzenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c950-101">Controls what kind of dependent transaction to create.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c950-102">Zależne transakcji można uzyskać za pomocą <xref:System.Transactions.Transaction.DependentClone%2A> metody z <xref:System.Transactions.DependentCloneOption> parametru kontrolowanie jakiego rodzaju zależnych transakcji do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="6c950-102">A dependent transaction can be obtained using the <xref:System.Transactions.Transaction.DependentClone%2A> method, with the <xref:System.Transactions.DependentCloneOption> parameter controlling what kind of dependent transaction to create.</span></span>  <span data-ttu-id="6c950-103">Aby uzyskać więcej informacji o sposobie użycia tego wyliczenia, zobacz [Zarządzanie współbieżności z DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span><span class="sxs-lookup"><span data-stu-id="6c950-103">For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c950-104">Poniższy przykład przedstawia sposób tworzenia zależnych transakcji.</span><span class="sxs-lookup"><span data-stu-id="6c950-104">The following example shows you how to create a dependent transaction.</span></span>  
  
 [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockCommitUntilComplete">
      <MemberSignature Language="C#" Value="BlockCommitUntilComplete" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Transactions.DependentCloneOption BlockCommitUntilComplete = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete" />
      <MemberSignature Language="VB.NET" Value="BlockCommitUntilComplete" />
      <MemberSignature Language="C++ CLI" Value="BlockCommitUntilComplete" />
      <MemberSignature Language="F#" Value="BlockCommitUntilComplete = 0" Usage="System.Transactions.DependentCloneOption.BlockCommitUntilComplete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.DependentCloneOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c950-105">Zależne transakcji blokuje procesu zatwierdzania transakcji, dopóki nie wygaśnie transakcji nadrzędnej lub <see cref="M:System.Transactions.DependentTransaction.Complete" /> jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c950-105">The dependent transaction blocks the commit process of the transaction until the parent transaction times out, or <see cref="M:System.Transactions.DependentTransaction.Complete" /> is called.</span>
          </span>
          <span data-ttu-id="6c950-106">W takim przypadku na transakcji można wykonać dodatkowe czynności i można utworzyć nowej rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c950-106">In this case, additional work can be done on the transaction and new enlistments can be created.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RollbackIfNotComplete">
      <MemberSignature Language="C#" Value="RollbackIfNotComplete" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Transactions.DependentCloneOption RollbackIfNotComplete = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete" />
      <MemberSignature Language="VB.NET" Value="RollbackIfNotComplete" />
      <MemberSignature Language="C++ CLI" Value="RollbackIfNotComplete" />
      <MemberSignature Language="F#" Value="RollbackIfNotComplete = 1" Usage="System.Transactions.DependentCloneOption.RollbackIfNotComplete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.DependentCloneOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6c950-107">Jeśli zatwierdzenie jest wywoływane dla transakcji nadrzędnej przed zależnych transakcji automatycznie przerywa transakcję <see cref="M:System.Transactions.DependentTransaction.Complete" /> jest wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c950-107">The dependent transaction automatically aborts the transaction if Commit is called on the parent transaction before <see cref="M:System.Transactions.DependentTransaction.Complete" /> is called.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>