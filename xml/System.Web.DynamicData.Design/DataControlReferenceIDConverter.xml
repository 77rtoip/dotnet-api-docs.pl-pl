<Type Name="DataControlReferenceIDConverter" FullName="System.Web.DynamicData.Design.DataControlReferenceIDConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15bd507fdc12a223afb158c22081198e9a931c33" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69140112" /></Metadata><TypeSignature Language="C#" Value="public class DataControlReferenceIDConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataControlReferenceIDConverter extends System.ComponentModel.StringConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataControlReferenceIDConverter&#xA;Inherits StringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataControlReferenceIDConverter : System::ComponentModel::StringConverter" />
  <TypeSignature Language="F#" Value="type DataControlReferenceIDConverter = class&#xA;    inherit StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0d49d-101">Tworzy kolekcję kontrolek danych z wybieraniem przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="0d49d-101">Creates a user-selectable collection of data controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d49d-102">W czasie <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> projektowania Klasa wykonuje konwersję typów formantów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="0d49d-102">At design time, the <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> class performs type conversion of the controls in the collection.</span></span> <span data-ttu-id="0d49d-103">Ta klasa jest zwykle przywoływana <xref:System.ComponentModel.TypeConverterAttribute> przez atrybut.</span><span class="sxs-lookup"><span data-stu-id="0d49d-103">This class is typically referenced by the <xref:System.ComponentModel.TypeConverterAttribute> attribute.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.StringConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataControlReferenceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataControlReferenceIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d49d-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="0d49d-104">Initializes a new instance of the <see cref="T:System.Web.DynamicData.Design.DataControlReferenceIDConverter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d49d-105">Nowe wystąpienie <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> klasy jest tworzone, gdy Klasa konwertera jest wywoływana <xref:System.ComponentModel.TypeConverterAttribute> przez atrybut.</span><span class="sxs-lookup"><span data-stu-id="0d49d-105">A new instance of the <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter> class is created when the converter class is called by a <xref:System.ComponentModel.TypeConverterAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataControlReferenceIDConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0d49d-106">Obiekt, który zawiera informacje kontekstu dla tego konwertera typów.</span><span class="sxs-lookup"><span data-stu-id="0d49d-106">An object that provides context information for this type converter.</span></span></param>
        <summary><span data-ttu-id="0d49d-107">Zwraca kolekcję dostępnych wartości kontrolnych.</span><span class="sxs-lookup"><span data-stu-id="0d49d-107">Returns a collection of available control values.</span></span></summary>
        <returns><span data-ttu-id="0d49d-108">Kolekcja zawierająca nazwy dostępnych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="0d49d-108">A collection that contains the names of the available controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d49d-109"><xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues%2A?displayProperty=nameWithType> Metoda pobiera zestaw kontrolek, które mogą być konwertowane.</span><span class="sxs-lookup"><span data-stu-id="0d49d-109">The <xref:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValues%2A?displayProperty=nameWithType> method gets the set of controls that can be converted.</span></span> <span data-ttu-id="0d49d-110">Tworzy <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> wystąpienie, które zawiera obiekty, które są prawidłowymi typami danych `context`w.</span><span class="sxs-lookup"><span data-stu-id="0d49d-110">It creates a <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance that contains objects that are valid data types in `context`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataControlReferenceIDConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0d49d-111">Obiekt, który dostarcza informacje kontekstu do tego konwertera typów.</span><span class="sxs-lookup"><span data-stu-id="0d49d-111">An object that provides context information to this type converter.</span></span></param>
        <summary><span data-ttu-id="0d49d-112">Zwraca wartość wskazującą, czy zwracane nazwy kontrolek są wyłączną listą wszystkich możliwych wartości.</span><span class="sxs-lookup"><span data-stu-id="0d49d-112">Returns a value that indicates whether the returned control names are an exclusive list of all possible values.</span></span></summary>
        <returns><span data-ttu-id="0d49d-113">Zawsze <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0d49d-113">Always <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.Design.DataControlReferenceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataControlReferenceIDConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0d49d-114">Obiekt, który dostarcza informacje kontekstu do tego konwertera typów.</span><span class="sxs-lookup"><span data-stu-id="0d49d-114">An object that provides context information to this type converter.</span></span></param>
        <summary><span data-ttu-id="0d49d-115">Zwraca wartość wskazującą, czy ten konwerter obsługuje standardowy zestaw nazw kontrolek, które można wybrać z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="0d49d-115">Returns a value that indicates whether this converter supports a standard set of control names that can be selected from the collection.</span></span></summary>
        <returns><span data-ttu-id="0d49d-116">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0d49d-116">Always <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
