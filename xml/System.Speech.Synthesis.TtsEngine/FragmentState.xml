<Type Name="FragmentState" FullName="System.Speech.Synthesis.TtsEngine.FragmentState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a28d3148684b536501b16f80cab98caa7b9a107" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69100858" /></Metadata><TypeSignature Language="C#" Value="public struct FragmentState : IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FragmentState extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
  <TypeSignature Language="VB.NET" Value="Public Structure FragmentState&#xA;Implements IEquatable(Of FragmentState)" />
  <TypeSignature Language="C++ CLI" Value="public value class FragmentState : IEquatable&lt;System::Speech::Synthesis::TtsEngine::FragmentState&gt;" />
  <TypeSignature Language="F#" Value="type FragmentState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera szczegółowe informacje o <see langword="TextFragment" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState>wystąpienia są uzyskiwane z <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> obiektów <xref:System.Speech.Synthesis.TtsEngine.TextFragment> on.  
  
 Informacje w programie <xref:System.Speech.Synthesis.TtsEngine.FragmentState> są uzyskiwane przez analizowanie atrybutów dekorowania nazwy tekstu mowy w funkcji syntezy języka Markup Language (SSML) używanej jako dane wejściowe do aparatu syntezy.  
  
 Obiekt może istnieć dla dowolnego żądania akcji syntezatora określonego przez jego <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość. <xref:System.Speech.Synthesis.TtsEngine.FragmentState> Jednak znaczenie jego elementów członkowskich może ulec zmianie w przypadku różnych akcji. Aby uzyskać więcej informacji o akcjach syntezy <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> , zobacz Aby uzyskać więcej informacji na temat określania akcji syntezatora.  
  
-   Specyfikacja i kontrola jakości wypowiadanych danych wyjściowych są w dużej mierze obsługiwane <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A>, i<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A>  
  
-   Informacje o strukturze fonetycznej, języka i LINGUIST są dostępne <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A>w <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A>, i <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int32 langId, int32 emphasis, int32 duration, class System.Speech.Synthesis.TtsEngine.SayAs sayAs, class System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FragmentState(System::Speech::Synthesis::TtsEngine::TtsEngineAction action, int langId, int emphasis, int duration, System::Speech::Synthesis::TtsEngine::SayAs ^ sayAs, System::Speech::Synthesis::TtsEngine::Prosody ^ prosody, cli::array &lt;char&gt; ^ phonemes);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.FragmentState : System.Speech.Synthesis.TtsEngine.TtsEngineAction * int * int * int * System.Speech.Synthesis.TtsEngine.SayAs * System.Speech.Synthesis.TtsEngine.Prosody * char[] -&gt; System.Speech.Synthesis.TtsEngine.FragmentState" Usage="new System.Speech.Synthesis.TtsEngine.FragmentState (action, langId, emphasis, duration, sayAs, prosody, phonemes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
        <Parameter Name="langId" Type="System.Int32" />
        <Parameter Name="emphasis" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.TtsEngine.SayAs" />
        <Parameter Name="prosody" Type="System.Speech.Synthesis.TtsEngine.Prosody" />
        <Parameter Name="phonemes" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="action">Element członkowski <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> wyliczenia, który określa akcję syntezy mowy.</param>
        <param name="langId">Identyfikator używanego języka. Odnosi się do atrybutu języka XML <c>XML: lang</c> .</param>
        <param name="emphasis">Akcent, który ma zostać zastosowany do danych wyjściowych mowy lub wstrzymania.</param>
        <param name="duration">Czas przeznaczony na wypowiadanie tekstu <see langword="TextFragment" />.</param>
        <param name="sayAs">Element członkowski <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> klasy, wskazujący typ tekstu <see langword="TextFragment" /> i poziom szczegółowości wymagany do dokładnego renderowania zawartego tekstu.  
  
Odnosi się do <c>&lt;tagu XML-&gt; as</c> w specyfikacji SSML 
Argument może być<see langword="null." /></param>
        <param name="prosody"><see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> Obiekt wskazujący charakterystykę danych wyjściowych mowy, takich jak gęstość, szybkość mówienia i głośność.  
  
Odnosi się do <c>&lt;tagu&gt; XML Prosody</c> w specyfikacji SSML</param>
        <param name="phonemes">Tablica <see langword="char" /> obiektów, która zapewnia wymowę fonetyczną dla tekstu zawartego <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />w, przy użyciu międzynarodowej specyfikacji fonetycznej (IPA).  
  
Odnosi się do <c>&lt;tagu&gt; XML fonem</c> w specyfikacji SSML.  
  
Ten argument może być <see langword="null" />.</param>
        <summary>Tworzy nowe wystąpienie <see langword="FragmentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj aplikacje nie konstruują <xref:System.Speech.Synthesis.TtsEngine.FragmentState> bezpośrednio obiektów. Zamiast tego <xref:System.Speech.Synthesis> wystąpienia są tworzone przez aplikacje przy użyciu elementów członkowskich przestrzeni nazw. <xref:System.Speech.Synthesis.TtsEngine.FragmentState>  
  
 Jeśli wartość określona `action` przez argument to <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>, wartość dostarczona przez `emphasis` argument to: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>  
  
-   W przypadku wartości dodatniej czas wstrzymania w milisekundach  
  
-   W przypadku negatywnego elementu członkowskiego <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak> wyliczenia  
  
 `action` <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>Jeśli wartość określona przez argument nie <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> `emphasis` jest argumentem, musi być typu. <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>  
  
 `duration` Jeśli wartość <xref:System.Speech.Synthesis.TtsEngine.Prosody> argumentu <xref:System.Speech.Synthesis.TtsEngine.Prosody.Duration%2A> i właściwość lub <xref:System.Speech.Synthesis.TtsEngine.Prosody> obiekt określony przez `prosody` argument różnią się, zostanie użyta wartość w obiekcie.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Międzynarodowy alfabet fonetyczny</related>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As TtsEngineAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::TtsEngineAction Action { System::Speech::Synthesis::TtsEngine::TtsEngineAction get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Speech.Synthesis.TtsEngine.TtsEngineAction" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca żądaną akcję syntezatora mowy.</summary>
        <value>Element członkowski <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> wskazujący akcję syntezy mowy żądaną przez dane wejściowe SSML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca żądany czas na potrzeby renderowania<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>Zwraca zawierającą wartość w milisekundach żądanego czasu na potrzeby <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />renderowania. <see langword="int" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emphasis">
      <MemberSignature Language="C#" Value="public int Emphasis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Emphasis" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Emphasis As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Emphasis { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Emphasis : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca instrukcje dotyczące sposobu naciskania <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
        <value>Zwraca wartość wskazującą, <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />jak wyróżnić. <see langword="int" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interpretacja <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> wartości zwracanej przez zależy od <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartości zwracanej przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość w bieżącym <xref:System.Speech.Synthesis.TtsEngine.FragmentState>.  
  
1.  Jeśli wartość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> jest<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>  
  
    -   Jeśli <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> jest dodatnia, zwrócona wartość powinna być interpretowana jako długość ciszi w milisekundach.  
  
    -   Jeśli <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> jest ujemna, zwrócona wartość powinna być interpretowana jako element członkowski <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak>.  
  
     Informacje o wyróżnieniu zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> , <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> gdy właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> jest zgodna z atrybutami `<break>` elementu SSML danych wejściowych do aparatu syntezatora mowy.  
  
2.  Dla wszystkich innych wartości <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> wartości należy interpretować jako <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
     Informacje o wyróżnieniu zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> słowa mówione odnoszą się do atrybutów `<emphasis>` elementu danych wejściowych SSML do aparatu syntezatora mowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy bieżące wystąpienie elementu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisuje ten sam <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stan, jak <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> inne wystąpienie, lub [obiekt](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) , do <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />którego można rzutować.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fragmentState.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który może być rzutowany do wystąpienia elementu<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></param>
        <summary>Określa, czy dany obiekt jest wystąpieniem <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> równym bieżącemu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />wystąpieniu.</summary>
        <returns>Zwraca <see langword="true" />, jeśli bieżące <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpienie <see cref="T:System.Object" /> i uzyskane <paramref name="obj" /> z dostarczone przez argument zawiera ten sam <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stan. Zwraca <see langword="false" /> czy bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i <paramref name="obj" /> argument nie obsługują tego samego <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość false, jeśli [obiekt](https://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) dostarczony przez `obj` argument nie może być rzutowany <xref:System.Speech.Synthesis.TtsEngine.TextFragment>na.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.FragmentState other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::FragmentState other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="fragmentState.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="other">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> tego</param>
        <summary>Określa, czy określone wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> jest równe bieżącemu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />wystąpieniu.</summary>
        <returns>Zwraca <see langword="true" />, jeśli oba <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpienia <paramref name="other" /> i, które są dostarczane przez argument opisują ten sam <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stan. Zwraca <see langword="false" /> czy bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i <paramref name="other" /> argument nie obsługują tego samego <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fragmentState.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>32-bitowa liczba całkowita ze znakiem, która jest kodem skrótu dla tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="LangId">
      <MemberSignature Language="C#" Value="public int LangId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LangId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LangId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LangId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LangId : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca język obsługiwany przez bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <value>Zwraca zawierający identyfikator dla języka używanego przez bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />. <see langword="int" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A> jest używana w przypadku Speech API systemu Windows (SAPI) i jest generowana z atrybutu "`xml:lang`" w danych wejściowych SSML do aparatu syntezatora mowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="state1 = state2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> , którego stan został opisany, jest porównywane z <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpieniem dostarczonym <paramref name="state2" /> przez argument.</param>
        <param name="state2">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> , którego stan został opisany, jest porównywane z <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpieniem dostarczonym <paramref name="state1" /> przez argument.</param>
        <summary>Określa, czy dwa wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisują ten <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> sam stan.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli oba <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> <see langword="false" /> wystąpienia i opisują ten sam <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stan, w przeciwnym razie jest zwracany. <paramref name="state2" /> <paramref name="state1" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Równoważna Metoda dla tego operatora to <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality (state1, state2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> , którego stan został opisany, jest porównywane z <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpieniem dostarczonym <paramref name="state2" /> przez argument.</param>
        <param name="state2">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> , którego stan został opisany, jest porównywane z <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpieniem dostarczonym <paramref name="state1" /> przez argument.</param>
        <summary>Określa, czy dwa wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisują różne <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> Stany.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli oba <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />wystąpienia <paramref name="state1" /> i <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> <see langword="false" /> , nie opisują tego samego stanu, w przeciwnym razie jest zwracany. <paramref name="state2" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Równoważna Metoda dla tego operatora to <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phoneme">
      <MemberSignature Language="C#" Value="public char[] Phoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char[] Phoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phoneme As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;char&gt; ^ Phoneme { cli::array &lt;char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Phoneme : char[]" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca informacje fonetyczne dla<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> Właściwość odnoszą `<phoneme>` się do tagu XML SSML danych wejściowych do aparatu syntezy.  
  
 Tablica `char` obiektów zwracanych przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> Właściwość wyraża wymowę przy użyciu międzynarodowego alfabetu fonetycznego (IPA).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363">Międzynarodowy alfabet fonetyczny</related>
      </Docs>
    </Member>
    <Member MemberName="Prosody">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.Prosody Prosody" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prosody As Prosody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::Prosody ^ Prosody { System::Speech::Synthesis::TtsEngine::Prosody ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prosody : System.Speech.Synthesis.TtsEngine.Prosody" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.Prosody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca szczegółowe informacje o skoku, współczynniku głosu i ilości danych wyjściowych mowy.</summary>
        <value>Zwraca prawidłowe wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> zawierające ustawienia skoku, liczby głosu i woluminu oraz zmiany tych ustawień na dane wyjściowe mowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.Prosody> odpowiadają `<prosody>` znacznikowi XML w specyfikacji SSML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SayAs">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.SayAs SayAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SayAs As SayAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::SayAs ^ SayAs { System::Speech::Synthesis::TtsEngine::SayAs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SayAs : System.Speech.Synthesis.TtsEngine.SayAs" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.SayAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca informacje o kontekście generowania mowy z tekstu.</summary>
        <value>Zwraca wystąpienie wartości <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> , jeśli SSML używany przez aparat syntezy mowy zawiera szczegółowe informacje o kontekście używanym do generowania mowy, w przeciwnym razie. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> odpowiadają `<say-as>` znacznikowi i jego atrybutom w specyfikacji SSML i mogą określać:  
  
-   Typ zawartości (na przykład Waluta, Data lub adres) lub konstrukcja języka reprezentowana przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość. <xref:System.Speech.Synthesis.TtsEngine.TextFragment>  
  
-   Opcjonalne informacje o formatowaniu do obsługi typu zawartości reprezentowanego przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> Właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, na przykład składnię daty.  
  
-   Szczegóły, które mają być używane podczas generowania mowy z <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwości a <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, na przykład, czy ma być jawnie renderowane interpunkcja.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
