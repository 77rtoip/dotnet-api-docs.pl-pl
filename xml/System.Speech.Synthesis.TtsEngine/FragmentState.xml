<Type Name="FragmentState" FullName="System.Speech.Synthesis.TtsEngine.FragmentState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59efe3d40c234ad3d570a3029ee55605878566f4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct FragmentState : IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FragmentState extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.FragmentState&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.FragmentState" />
  <TypeSignature Language="VB.NET" Value="Public Structure FragmentState&#xA;Implements IEquatable(Of FragmentState)" />
  <TypeSignature Language="C++ CLI" Value="public value class FragmentState : IEquatable&lt;System::Speech::Synthesis::TtsEngine::FragmentState&gt;" />
  <TypeSignature Language="F#" Value="type FragmentState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.FragmentState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera szczegółowe informacje na temat <see langword="TextFragment" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> wystąpienia są uzyskiwane z <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> na <xref:System.Speech.Synthesis.TtsEngine.TextFragment> obiektów.  
  
 Informacje zawarte w <xref:System.Speech.Synthesis.TtsEngine.FragmentState> są uzyskiwane przez analizowania atrybuty dekoracji tekstu mowy w Syntetyzowania mowy Markup Language (SSML) używane jako dane wejściowe do aparatu syntezy.  
  
 A <xref:System.Speech.Synthesis.TtsEngine.FragmentState> obiektu może istnieć dla dowolnego żądania akcji Syntezator określony przez jego <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwości. Jednak znaczenie jej elementów członkowskich może ulec zmianie przez różne akcje. Aby uzyskać więcej informacji na temat syntetyzowania akcji, zobacz <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> Aby uzyskać więcej informacji o określaniu Syntezator akcje.  
  
-   Specyfikacja i kontroli jakości rozmowy dane wyjściowe przede wszystkim jest obsługiwana za pomocą <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A>, i <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A>  
  
-   Informacje o strukturze fonetyczny, język i linguist jest dostępna za pośrednictwem <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A>, i <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int32 langId, int32 emphasis, int32 duration, class System.Speech.Synthesis.TtsEngine.SayAs sayAs, class System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FragmentState(System::Speech::Synthesis::TtsEngine::TtsEngineAction action, int langId, int emphasis, int duration, System::Speech::Synthesis::TtsEngine::SayAs ^ sayAs, System::Speech::Synthesis::TtsEngine::Prosody ^ prosody, cli::array &lt;char&gt; ^ phonemes);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.FragmentState : System.Speech.Synthesis.TtsEngine.TtsEngineAction * int * int * int * System.Speech.Synthesis.TtsEngine.SayAs * System.Speech.Synthesis.TtsEngine.Prosody * char[] -&gt; System.Speech.Synthesis.TtsEngine.FragmentState" Usage="new System.Speech.Synthesis.TtsEngine.FragmentState (action, langId, emphasis, duration, sayAs, prosody, phonemes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
        <Parameter Name="langId" Type="System.Int32" />
        <Parameter Name="emphasis" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.TtsEngine.SayAs" />
        <Parameter Name="prosody" Type="System.Speech.Synthesis.TtsEngine.Prosody" />
        <Parameter Name="phonemes" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="action">Członek <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> wyliczenie określający akcji syntezy mowy.</param>
        <param name="langId">Identyfikator języka używany. Odnosi się do pliku XML <c>XML: lang</c> atrybutu.</param>
        <param name="emphasis">Akcentu do zastosowania mowie lub pauzy.</param>
        <param name="duration">Czas przydzielony na mowy tekst <see langword="TextFragment" />.</param>
        <param name="sayAs">Członek <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> klasy i wskazujący typ tekst <see langword="TextFragment" /> i poziom szczegółowości wymagane do renderowania dokładne zawartych w niej tekstu.  Odpowiada <c> &lt;powiedzieć — jako&gt; </c> w specyfikacji SSML argument może być — znacznik XML <see langword="null." /></param>
        <param name="prosody">A <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> obiekt wskazujący właściwości mowy output, takie jak wysokość mówiąc szybkość i woluminu.  Odpowiada <c> &lt;prosody&gt; </c> w specyfikacji SSML — znacznik XML</param>
        <param name="phonemes">Tablica <see langword="char" /> obiektów, zapewniając Fonetyczne brzmienie tekstu zawartych w <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />, przy użyciu specyfikacji międzynarodowy alfabet fonetyczny (IPA).  Odpowiada <c> &lt;phoneme&gt; </c> — tag XML w specyfikacji SSML.  Ten argument może być <see langword="null" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see langword="FragmentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle, aplikacje nie bezpośrednio utworzyć <xref:System.Speech.Synthesis.TtsEngine.FragmentState> obiektów. Zamiast tego <xref:System.Speech.Synthesis.TtsEngine.FragmentState> wystąpienia są tworzone przez aplikacje przy użyciu elementów członkowskich <xref:System.Speech.Synthesis> przestrzeń nazw.  
  
 Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość określoną przez `action` argument jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>, wartość dostarczona przez `emphasis` argument to:  
  
-   Jeśli jest dodatnia, czas w milisekund wstrzymania  
  
-   Jeśli negatywną członkiem <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak> — wyliczenie  
  
 Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość określoną przez `action` argument nie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> `emphasis` argument musi być typu <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
 Jeśli wartość `duration` argumentu i <xref:System.Speech.Synthesis.TtsEngine.Prosody.Duration%2A> właściwości lub <xref:System.Speech.Synthesis.TtsEngine.Prosody> obiekt określony przez `prosody` argument różnią się od siebie, wartość <xref:System.Speech.Synthesis.TtsEngine.Prosody> obiekt jest używany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As TtsEngineAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::TtsEngineAction Action { System::Speech::Synthesis::TtsEngine::TtsEngineAction get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Speech.Synthesis.TtsEngine.TtsEngineAction" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca akcji syntezatora mowy żądanej.</summary>
        <value>Członek <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> wskazujący akcję syntezy mowy żądane przez dane wejściowe SSML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public int Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Duration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Duration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Duration : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca żądany czas w celu renderowania <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>Zwraca <see langword="int" /> zawierającą wartość milisekundy żądany czas w celu renderowania <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Emphasis">
      <MemberSignature Language="C#" Value="public int Emphasis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Emphasis" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Emphasis As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Emphasis { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Emphasis : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca instrukcje na temat wyróżnić <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
        <value>Zwraca <see langword="int" /> wartość wskazującą sposób wyróżnić <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interpretacja wartość zwrócona przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> zależy od <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość zwrócona przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwości na bieżącej <xref:System.Speech.Synthesis.TtsEngine.FragmentState>.  
  
1.  Jeśli wartość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence>  
  
    -   Jeśli <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> jest dodatnia, wartość zwracana powinny być rozumiane jako długość wyciszenia w milisekundach.  
  
    -   Jeśli <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> jest ujemna, wartość zwracana powinny być rozumiane jako element członkowski <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak>.  
  
     Informacje dotyczące nacisk zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> podczas właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence> odpowiada atrybuty `<break>` element dane wejściowe SSML aparat syntezatora mowy.  
  
2.  Dla wszystkich innych wartości <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> wartości powinny być rozumiane jako <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.  
  
     Informacje dotyczące nacisk zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A> rozmowy wyrazów odpowiada atrybuty `<emphasis>` element dane wejściowe SSML aparat syntezatora mowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisuje takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu, jak inny <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpienia lub [Object] (http://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) mogą być rzutowane na <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fragmentState.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt, który mogą być rzutowane na wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></param>
        <summary>Określa, czy dany obiekt jest wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> taki sam, jak bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <returns>Zwraca <see langword="true" />, jeśli bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i który uzyskane z [Object] (http://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) dostarczonych przez <paramref name="obj" /> argument opisano takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu. Zwraca <see langword="false" /> Jeśli bieżące <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i <paramref name="obj" /> argument nie obsługują takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwrotu wartość false, gdy [obiektu](http://msdn.microsoft.com/library/vstudio/system.object\(v=vs.110\).aspx) dostarczonych przez `obj` argumentu nie można rzutować na <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.FragmentState other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::FragmentState other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="fragmentState.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="other">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> który</param>
        <summary>Określa, czy w podanym wystąpieniu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> jest taki sam, jak bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <returns>Zwraca <see langword="true" />, jeśli obie bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i który dostarczane za pośrednictwem <paramref name="other" /> argument opisano takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu. Zwraca <see langword="false" /> Jeśli bieżące <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> i <paramref name="other" /> argument nie obsługują takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fragmentState.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>32-bitowe liczby całkowite ze znakiem jest wartość skrótu dla tego wystąpienia.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="LangId">
      <MemberSignature Language="C#" Value="public int LangId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LangId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LangId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LangId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LangId : int" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.LangId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca język obsługiwany przez bieżącą <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</summary>
        <value>Zwraca <see langword="int" /> zawierający identyfikator języka używanego przez bieżących <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A> są używane z Windows API mowy (SAPI) i zostaną wygenerowane na podstawie "`xml:lang`" atrybutu na dane wejściowe SSML aparat syntezatora mowy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="state1 = state2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> opisane stan jest porównywana wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> dostarczonych przez <c>stan2</c> argumentu.</param>
        <param name="state2">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> opisane stan jest porównywana wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> dostarczonych przez <c>stan1</c> argumentu.</param>
        <summary>Określa, czy dwa wystąpienia elementu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisuje takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli oba wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> i <paramref name="state2" />, opisano takie same <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu, w przeciwnym razie <see langword="false" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Metoda równoważne tego operatora jest <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.FragmentState state1, valuetype System.Speech.Synthesis.TtsEngine.FragmentState state2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (state1 As FragmentState, state2 As FragmentState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::FragmentState state1, System::Speech::Synthesis::TtsEngine::FragmentState state2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.FragmentState * System.Speech.Synthesis.TtsEngine.FragmentState -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality (state1, state2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state1" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
        <Parameter Name="state2" Type="System.Speech.Synthesis.TtsEngine.FragmentState" />
      </Parameters>
      <Docs>
        <param name="state1">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> opisane stan jest porównywana wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> dostarczonych przez <c>stan2</c> argumentu.</param>
        <param name="state2">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> opisane stan jest porównywana wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> dostarczonych przez <c>stan1</c> argumentu.</param>
        <summary>Określa, czy dwa wystąpienia elementu <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> opisuje różne <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli oba wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />, <paramref name="state1" /> i <paramref name="state2" />, opisano w taki sam <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> stanu, w przeciwnym razie <see langword="false" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Metoda równoważne tego operatora jest <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Equals%28System.Speech.Synthesis.TtsEngine.FragmentState%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Phoneme">
      <MemberSignature Language="C#" Value="public char[] Phoneme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char[] Phoneme" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phoneme As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;char&gt; ^ Phoneme { cli::array &lt;char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Phoneme : char[]" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca informacje dotyczące <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> właściwość odpowiada `<phoneme>` dane wejściowe SSML aparat syntezy — tag XML.  
  
 Tablica `char` obiekty zwrócone przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A> właściwości wyraża wymowy przy użyciu międzynarodowy alfabet fonetyczny (IPA).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prosody">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.Prosody Prosody" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prosody As Prosody" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::Prosody ^ Prosody { System::Speech::Synthesis::TtsEngine::Prosody ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prosody : System.Speech.Synthesis.TtsEngine.Prosody" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.Prosody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.Prosody</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca szczegółowe informacje o wysokości, mówiąc szybkości i wolumin mowie.</summary>
        <value>Zwraca prawidłową instancją <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> zawierający wysokość, mówiąc tempo i ustawień woluminu i zmiany tych ustawień dla mowie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.Prosody> odpowiada `<prosody>` w specyfikacji SSML — znacznik XML  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SayAs">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.TtsEngine.SayAs SayAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SayAs As SayAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::SayAs ^ SayAs { System::Speech::Synthesis::TtsEngine::SayAs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SayAs : System.Speech.Synthesis.TtsEngine.SayAs" Usage="System.Speech.Synthesis.TtsEngine.FragmentState.SayAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.SayAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca informacje o kontekście generacji mowy z pliku tekstowego.</summary>
        <value>Zwraca wartość <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> wystąpienia, jeśli SSML używane przez aparat syntezy mowy zawiera szczegółowe informacje o kontekście ma być używany do generowania mowy, w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje zwracane przez <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> odpowiada `<say-as>` tagu i jego atrybuty w specyfikacji SSML i może określić:  
  
-   Typ zawartości (na przykład waluty, data lub adresu) lub konstrukcji języka reprezentowany przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
-   Opcjonalne informacje dotyczące formatowania do obsługi zawartości typu reprezentowanego przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, na przykład składni daty.  
  
-   Szczegółów do użycia podczas generowania mowy <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, na przykład czy mają być jawnie renderowania znaków interpunkcyjnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>