<Type Name="TtsEngineAction" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ec69c6503276dc9c90919a47435b0f83553a93a" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686240" /></Metadata><TypeSignature Language="C#" Value="public enum TtsEngineAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TtsEngineAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum TtsEngineAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class TtsEngineAction" />
  <TypeSignature Language="F#" Value="type TtsEngineAction = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa akcję SSML (Speech synteza Markup Language), która ma zostać podjęta w <see langword="TextFragment" />przypadku renderowania danego elementu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

`TtsEngineAction`reprezentuje żądania obsługi a <xref:System.Speech.Synthesis.TtsEngine.TextFragment>. Akcje są ściśle zgodne z elementami w specyfikacji SSML i są implementowane na tekście zwracanym przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> Właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>na.  
  
 Wartość skojarzona z obiektem <xref:System.Speech.Synthesis.TtsEngine.TextFragment> jest zwracana przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwość. <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>  
  
 Przetwarzanie wartości zwracanej <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> przez właściwość jest obsługiwane przez mowę, co umożliwia wyróżnienie implementacji <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> metody w klasie pochodnej <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>. <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>  
  
   
  
## Examples  
 Poniższy przykład jest częścią niestandardowej implementacji syntezy mowy, która <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> <xref:System.Speech.Synthesis.TtsEngine.TextFragment>dziedziczy z i przy użyciu funkcji, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>i<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  
  
 Implementacja programu<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień i tworzy nową <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicę wystąpień `Speak` do przesłania do metody na źródłowym aparacie syntezy.  
  
2.  <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> Jeśli wartość wyliczeniaprzezznalezionązwłaściwościwzwracanymprzezwłaściwośćkażdegowystąpieniajestwymawiana,implementacja<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>  
  
    -   Tłumaczy amerykański Britishisms w tekst, który ma być mówiony.  
  
    -   <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> Jeśli właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> interfejsów dostarczonych<xref:System.Speech.Synthesis.TtsEngine.TtsEventId> do implementacji obsługuje typ zdarzenia, zostanie utworzony zdarzenie do kierowania miernikiem postępu syntezatora.  
  
3.  Aparat renderowania mowy jest następnie wywoływany z zmodyfikowaną <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicą.  
  
```csharp
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bookmark">
      <MemberSignature Language="C#" Value="Bookmark" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Bookmark = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark" />
      <MemberSignature Language="VB.NET" Value="Bookmark" />
      <MemberSignature Language="C++ CLI" Value="Bookmark" />
      <MemberSignature Language="F#" Value="Bookmark = 3" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Wskazuje, <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> że ma być używana jako zawartość zakładki. Odnosi się do <c>&lt;znacznika Mark&gt;</c> XML w specyfikacji SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="ParseUnknownTag">
      <MemberSignature Language="C#" Value="ParseUnknownTag" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction ParseUnknownTag = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag" />
      <MemberSignature Language="VB.NET" Value="ParseUnknownTag" />
      <MemberSignature Language="C++ CLI" Value="ParseUnknownTag" />
      <MemberSignature Language="F#" Value="ParseUnknownTag = 7" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Wskazuje, że żadna akcja nie została określona na podstawie danych wejściowych SSML. To dane wejściowe, które mogą być interpretowane lub ignorowane przez według uznania aparatu syntezy. Skojarzony <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> element to nieznany tag XML, który nie jest częścią standardu SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="Pronounce">
      <MemberSignature Language="C#" Value="Pronounce" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Pronounce = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce" />
      <MemberSignature Language="VB.NET" Value="Pronounce" />
      <MemberSignature Language="C++ CLI" Value="Pronounce" />
      <MemberSignature Language="F#" Value="Pronounce = 2" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Żąda interpretowania <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> tekstu wejściowego jako fonemów. Dokładna wymowa <see cref="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme" /> jest określana przez element członkowski <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> obiektu zwróconego <see cref="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" /> przez właściwość <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> w wystąpieniach. Odnosi się do <c>&lt;tagu XML&gt; fonem</c> w specyfikacji SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="Silence">
      <MemberSignature Language="C#" Value="Silence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Silence = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence" />
      <MemberSignature Language="VB.NET" Value="Silence" />
      <MemberSignature Language="C++ CLI" Value="Silence" />
      <MemberSignature Language="F#" Value="Silence = 1" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Wskazuje, że <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> nie zawiera tekstu, który ma być renderowany jako mowę. Czas trwania wyciszenia jest określany <see cref="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration" /> przez właściwość <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> obiektu zwracanego przez <see cref="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" /> właściwość w <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> wystąpieniach. Odnosi się do <c>&lt;&gt;</c> tagu XML wyciszenia w specyfikacji SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="Speak" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction Speak = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak" />
      <MemberSignature Language="VB.NET" Value="Speak" />
      <MemberSignature Language="C++ CLI" Value="Speak" />
      <MemberSignature Language="F#" Value="Speak = 0" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Żądania, które <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> powinny być przetwarzane i wymawiane. Jest to wartość domyślna dla <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />. Odnosi się do <c>&lt;&gt; tagu języka XML</c> w specyfikacji SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="SpellOut">
      <MemberSignature Language="C#" Value="SpellOut" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction SpellOut = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut" />
      <MemberSignature Language="VB.NET" Value="SpellOut" />
      <MemberSignature Language="C++ CLI" Value="SpellOut" />
      <MemberSignature Language="F#" Value="SpellOut = 4" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Wskazuje, że wartości tekstowe dostarczone przez <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> jej <see cref="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" /> Właściwość mają być przekazywane jako pojedyncze znaki. To renderowanie obejmuje znaki interpunkcyjne, inne niż odstępy, a także tekst alfanumeryczny. Na przykład skojarzony fragment tekstu "Word!" należy je wytłumaczyć do "w o r d wykrzyknika".</summary>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="StartParagraph" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction StartParagraph = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="StartParagraph" />
      <MemberSignature Language="C++ CLI" Value="StartParagraph" />
      <MemberSignature Language="F#" Value="StartParagraph = 6" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Wskazuje stan akapitu. Odnosi się do <c>&lt;tagu p&gt;</c> XML w specyfikacji SSML.</summary>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="StartSentence" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.TtsEngineAction StartSentence = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence" />
      <MemberSignature Language="VB.NET" Value="StartSentence" />
      <MemberSignature Language="C++ CLI" Value="StartSentence" />
      <MemberSignature Language="F#" Value="StartSentence = 5" Usage="System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.TtsEngineAction</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Wskazuje początek zdania. Odnosi się do <c>&lt;tagu s&gt;</c> XML w specyfikacji SSML.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
