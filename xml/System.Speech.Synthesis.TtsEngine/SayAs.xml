<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b1501e6dfa20c7414f4a8327115c0b94cd3c806" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69258027" /></Metadata><TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <TypeSignature Language="F#" Value="type SayAs = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o typie zawartości (na przykład waluty, daty lub adresu) lub konstrukcji językowej, która określa sposób wymawiania tekstu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <c>SayAs</c> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Speech.Synthesis.TtsEngine.SayAs> klasy są używane do pobierania lub ustawiania wartości atrybutów `say-as` elementu w znaczniku SSML. <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> <xref:System.Speech.Synthesis.SpeechSynthesizer> Właściwość używa wystąpienia do informowania o tym, jak mówić tekst zawarty we właściwości. <xref:System.Speech.Synthesis.TtsEngine.SayAs> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Detail : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość atrybutu <c>detail</c> dla elementu <c>"powiedzieć jako"</c> w języku SSML znaczników monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpieniu. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Format : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość atrybutu <c>Format</c> dla elementu <c>"powiedzieć jako"</c> w języku SSML znaczników monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpieniu. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>  
  
 Na przykład monit może zawierać frazę "czas to `<say-as interpret-as="time"> 05:00 </say-as>`".  W tym przykładzie `05:00` może być wymawiane jako "pięć rano" lub "pięć am" lub "Niestety 500". Właściwość pozwala na rozszerzanie wartości `interpret-as` atrybutu w celu określenia formatu czasu, który ma być wypowiadany. <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> Jeśli wartość `interpret-as` atrybutu to "Time: 24hour", mówimy "w <xref:System.Speech.Synthesis.SpeechSynthesizer> 500". Jeśli wartość `interpret-as` atrybutu to "Time: 12hour" <xref:System.Speech.Synthesis.SpeechSynthesizer> , mówi "pięć A M".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpretAs : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość atrybutu <c>"interpretuj jako</c> " dla elementu <c>"powiedzieć jako"</c> w języku SSML znaczników monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpieniu. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType>  
  
 Używa typu zawartości wskazanego <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> przez właściwość w celu określenia sposobu renderowania określonego tekstu. <xref:System.Speech.Synthesis.SpeechSynthesizer>  
  
 Na przykład nazwa Edgar może być wymawiana jako nazwa: "My Name to Edgar". Lub można go wyrazić za pomocą liter, jak określono `interpret-as` w atrybucie w tym zdaniu:  "My imię i `<say-as interpret-as="spell-out"> Edgar </say-as>`nazwisko" W tym przypadku <xref:System.Speech.Synthesis.SpeechSynthesizer> mówimy Edgar jako "E D G A R".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
