<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8128f5e4a29cd39063cc30944f2dccb7f74c7990" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <TypeSignature Language="F#" Value="type SayAs = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje dotyczące typu zawartości (na przykład waluty, data lub adresu) lub konstrukcji języka, określających sposób wymawiane tekstu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <c>SayAs</c> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Speech.Synthesis.TtsEngine.SayAs> klasy są używane do pobierania lub ustawiania wartości dla atrybutów `say-as` elementu w znaczniku SSML. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> Używa właściwości <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia, aby informować <xref:System.Speech.Synthesis.SpeechSynthesizer> jak mówić tekst zawarty w <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Detail : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>szczegółów</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monit.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Format : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>format</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monit.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 Na przykład wiersz może zawierać frazy "czas `<say-as interpret-as="time"> 05:00 </say-as>`".  W tym przykładzie `05:00` może być wymawiane jako "pięciu ten użytkownik" lub "pięciu AM" lub "Niestety pięciuset". <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> Właściwość umożliwia wartość `interpret-as` atrybut rozszerzony, aby określić format czasu mowy. Jeśli wartość `interpret-as` atrybutu jest "czas: 24 godziny," <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi "Niestety pięciuset". Jeśli wartość `interpret-as` atrybutu jest "czas: 12 godzin," <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi "pięć A M".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpretAs : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>zinterpretować — jako</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monit.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> właściwości w <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> Używa typu zawartości wskazywanym przez <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> właściwości, aby określić sposób renderowania określony tekst.  
  
 Na przykład nazwa Edgar może być używany jako nazwa: "Mój nazwa jest Edgar". Lub może być pisane z liter, w przypadku określenia `interpret-as` atrybut w tym: "Mój nazwa jest `<say-as interpret-as="spell-out"> Edgar </say-as>`." W takim przypadku <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi Edgar jako "E D G A R".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>