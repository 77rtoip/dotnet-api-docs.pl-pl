<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7adaff20a1e5e2d76a805492cbd9bb2ee8735c0" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52615493" /></Metadata><TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <TypeSignature Language="F#" Value="type SayAs = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje dotyczące typu zawartości (na przykład waluty, daty lub adres) lub konstrukcją języka pierwszej klasy, które określają, jak być wymawiane tekstu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <c>SayAs</c> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Speech.Synthesis.TtsEngine.SayAs> klasy są używane do pobierania lub ustawiania wartości dla atrybutów `say-as` elementem w znacznikach SSML. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> Używa właściwości <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia, aby informować <xref:System.Speech.Synthesis.SpeechSynthesizer> jak mówić tekst zawarty w <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Detail : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>szczegółów</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Format : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>format</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 Na przykład wiersz może zawierać frazę "czas jest `<say-as interpret-as="time"> 05:00 </say-as>`".  W tym przykładzie `05:00` może być wymawiane jako "pięć o'clock" lub "pięć AM" lub "oh pięciuset". <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> Właściwość umożliwia wartość `interpret-as` atrybutu można rozszerzyć, aby określić, które format godziny mówić. Jeśli wartość `interpret-as` atrybut jest "czas: 24 hour", <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi "oh pięciuset". Jeśli wartość `interpret-as` atrybut jest "czas: 12 hour", <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi "pięć A M".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpretAs : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <c>interpretacji — jako</c> atrybutu dla <c>powiedzieć — jako</c> elementu w języku znaczników SSML monitu.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia wartość <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SayAs> wystąpienia.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> Korzysta z typu zawartości, wskazywanym przez <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> własność, aby określić sposób renderowania określony tekst.  
  
 Na przykład nazwę Edgar może być wymawiane jako nazwa: "Moja nazwa jest Edgar". Lub może być pisane z liter, w przypadku określenia `interpret-as` atrybutu w to pole następujące zdanie: "Mam na imię `<say-as interpret-as="spell-out"> Edgar </say-as>`." W tym przypadku <xref:System.Speech.Synthesis.SpeechSynthesizer> mówi Edgar jako "R G D E".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>