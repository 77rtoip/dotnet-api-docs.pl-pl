<Type Name="SpeechEventInfo" FullName="System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
  <TypeSignature Language="C#" Value="public struct SpeechEventInfo : IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpeechEventInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpeechEventInfo&#xA;Implements IEquatable(Of SpeechEventInfo)" />
  <TypeSignature Language="C++ CLI" Value="public value class SpeechEventInfo : IEquatable&lt;System::Speech::Synthesis::TtsEngine::SpeechEventInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20f6f-101">Można określić typ zdarzenia i jego argumentów (jeśli istnieje) ma zostać wygenerowane jako część renderowanie tekstu na mowę przez aparat niestandardowych syntetycznych mowy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-101">Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f6f-102">Aparat syntezy niestandardowych mowy żądań generowania zdarzeń w obszarze platformy mowy podając odpowiednie <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> wystąpienie do <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> członkiem <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> aparat lokacji obiekt przekazywany do implementacji <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-102">A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20f6f-103">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-103">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-104">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-104">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-105">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-105">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-106">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-106">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-107">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-107">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-108">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-108">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="20f6f-109">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-109">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 eventId, int16 parameterType, int32 param1, native int param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Short, parameterType As Short, param1 As Integer, param2 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechEventInfo(short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int16" />
        <Parameter Name="parameterType" Type="System.Int16" />
        <Parameter Name="param1" Type="System.Int32" />
        <Parameter Name="param2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="20f6f-110">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> wskazujący rodzaj zdarzenia platformy mowy <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiekt ma obsługiwać.</span><span class="sxs-lookup"><span data-stu-id="20f6f-110">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indicating the sort of Speech platform event the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to handle.</span></span></param>
        <param name="parameterType"><span data-ttu-id="20f6f-111">Wystąpienie <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> wskazującą sposób <see langword="System.IntPtr" /> odniesienie do <c>param2</c> interpretować, a co za tym idzie, użycie <c>param1</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-111">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indicating how the <see langword="System.IntPtr" /> reference of <c>param2</c> is to be interpreted, and, by implication, the use of <c>param1</c>.</span></span></param>
        <param name="param1"><span data-ttu-id="20f6f-112">Wartość całkowita do przekazania do platformy mowy zleconą przez wystąpienie zdarzenia <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> można skonstruować jest generowany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-112">An integer value to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
 <span data-ttu-id="20f6f-113">Dokładne znaczenie ta liczba całkowita niejawnie jest określana przez wartość <c>parameterType</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-113">The exact meaning of this integer is implicitly determined by the value of <c>parameterType</c>.</span></span></param>
        <param name="param2"><span data-ttu-id="20f6f-114">A <see langword="System.IntPtr" /> wystąpienia odwołujący się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f6f-114">A <see langword="System.IntPtr" /> instance referencing an object.</span></span> <span data-ttu-id="20f6f-115">do przekazania do platformy mowy zleconą przez wystąpienie zdarzenia <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> można skonstruować jest generowany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-115">to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span></span>  
  
 <span data-ttu-id="20f6f-116">Typ, który musi odwoływać się jest jawnie zdefiniowany przez wartość <c>parameterType</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-116">The type which must be referenced is explicitly defined by the value <c>parameterType</c>.</span></span> <span data-ttu-id="20f6f-117">Wartość <see langword="System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-117">The value <see langword="System.IntPtr.Zero" />.</span></span></param>
        <summary><span data-ttu-id="20f6f-118">Odpowiednie Constucts <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-118">Constucts an appropriate <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f6f-119">Dozwolone wartości używanych dla `parameterType`, `param1`, i `param2` i ich znaczenie zależy od typu zdarzenia żądanej, określonej przez członka <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> używany do `eventId`.</span><span class="sxs-lookup"><span data-stu-id="20f6f-119">Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.</span></span>  
  
 <span data-ttu-id="20f6f-120">Aby uzyskać szczegółowe informacje na odpowiednie wartości dla `parameterType`, `param1`, i `param2`, zobacz dokumentację dla <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-120">For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span></span>  
  
 <span data-ttu-id="20f6f-121">Typ zdarzenia, które mogą być obsługiwane przez infrastrukturę platformy mowy można uzyskać za pośrednictwem <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość Syntezator aparat lokacji wykonania <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-121">The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20f6f-122">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-123">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-124">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-125">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-125">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-126">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-126">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-127">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-127">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="20f6f-128">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-128">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f6f-129">Określa, czy <c>SpeechEventInfo</c> wystąpienie jest takie samo, jak inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="20f6f-129">Determines whether a <c>SpeechEventInfo</c> instance is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="20f6f-130">Obiekt do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="20f6f-130">The object to evaluate.</span></span></param>
        <summary><span data-ttu-id="20f6f-131">Określa, czy określony obiekt jest wystąpienie <c>SpeechEventInfo</c> i taki sam, jak bieżące wystąpienie klasy <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-131">Determines whether a specified object is an instance of <c>SpeechEventInfo</c> and equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns>
          <span data-ttu-id="20f6f-132"><see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam, jak bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-132"><see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::SpeechEventInfo other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="20f6f-133"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Obiekt do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="20f6f-133">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to evaluate.</span></span></param>
        <summary><span data-ttu-id="20f6f-134">Określa, czy określonej <c>SpeechEventInfo</c> obiekt jest taki sam, jak bieżące wystąpienie klasy <c>SpeechEventInfo</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-134">Determines whether a specified <c>SpeechEventInfo</c> object is equal to the current instance of <c>SpeechEventInfo</c>.</span></span></summary>
        <returns>
          <span data-ttu-id="20f6f-135"><see langword="true" /> Jeśli <paramref name="other" /> jest taki sam, jak bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-135"><see langword="true" /> if <paramref name="other" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public short EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 EventId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short EventId { short get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f6f-136">Pobiera i ustaw zdarzenia platformy mowy którego wystąpienia <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> służy do żądania.</span><span class="sxs-lookup"><span data-stu-id="20f6f-136">Gets and set the Speech platform event which an instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="20f6f-137">Zwraca element członkowski <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> jako <see langword="short" />, wskazujący typ zdarzenia <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiekt jest do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="20f6f-137">Returns a member of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> as a <see langword="short" />, indicating the event type the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20f6f-138">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-138">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-139">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-139">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-140">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-140">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-141">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-141">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-142">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-142">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-143">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-143">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="20f6f-144">Parametry na <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, takie jak <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> służą do dziennika zdarzeń wygenerowanych przez `LogSpeechEvent` metody.</span><span class="sxs-lookup"><span data-stu-id="20f6f-144">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="20f6f-145">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-145">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f6f-146">Udostępnia wartość skrótu dla <c>SpeechEventInfo</c> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f6f-146">Provides a hash code for a <c>SpeechEventInfo</c> object.</span></span></summary>
        <returns><span data-ttu-id="20f6f-147">Wartość skrótu dla <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f6f-147">A hash code for a <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="20f6f-148"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Obiekt do porównania z <c>event2</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-148">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event2</c>.</span></span></param>
        <param name="event2"><span data-ttu-id="20f6f-149"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Obiekt do porównania z <c>Zdarzenie1</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-149">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event1</c>.</span></span></param>
        <summary><span data-ttu-id="20f6f-150">Określa, czy dwa wystąpienia elementu <c>SpeechEventInfo</c> są takie same.</span><span class="sxs-lookup"><span data-stu-id="20f6f-150">Determines whether two instances of <c>SpeechEventInfo</c> are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="20f6f-151"><see langword="true" /> Jeśli <paramref name="event1" /> jest taka sama jak <paramref name="event2" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-151"><see langword="true" /> if <paramref name="event1" /> is the same as <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="20f6f-152">Metoda równoważne tego operatora jest <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-152">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1"><span data-ttu-id="20f6f-153"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Obiekt do porównania z <c>event2</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-153">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event2</c>.</span></span></param>
        <param name="event2"><span data-ttu-id="20f6f-154"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> Obiekt do porównania z <c>Zdarzenie1</c>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-154">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event1</c>.</span></span></param>
        <summary><span data-ttu-id="20f6f-155">Określa, czy dwa wystąpienia elementu <c>SpeechEventInfo</c> nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="20f6f-155">Determines whether two instances of <c>SpeechEventInfo</c> are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="20f6f-156"><see langword="true" /> Jeśli <paramref name="event1" /> różni się od <paramref name="event2" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20f6f-156"><see langword="true" /> if <paramref name="event1" /> is different from <paramref name="event2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="20f6f-157">Metoda równoważne tego operatora jest <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-157">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param1">
      <MemberSignature Language="C#" Value="public int Param1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Param1" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Param1 { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f6f-158">Pobiera i zestaw <see langword="integer" /> wartość (<paramref name="param1" /> w konstruktorze) mają być przekazane do platformy mowy do generowania zdarzenia bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> służy do żądania.</span><span class="sxs-lookup"><span data-stu-id="20f6f-158">Gets and set the <see langword="integer" /> value (<paramref name="param1" /> in the constructor) to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="20f6f-159">Zwraca <see langword="integer" /> mają być przekazane do platformy mowy, gdy zdarzenie określony przez bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-159">Returns the <see langword="integer" /> to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f6f-160">Wymagania i znaczenie <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jednoznacznie są określane przez wartości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> i <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> właściwości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20f6f-160">The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="20f6f-161">Aby uzyskać szczegółowe informacje na temat użycia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, zobacz dokumentację dla <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-161">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20f6f-162">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-162">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-163">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-163">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-164">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-164">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-165">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-165">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-166">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-166">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-167">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-167">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="20f6f-168">Parametry na <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, takie jak <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> służą do dziennika zdarzeń wygenerowanych przez `LogSpeechEvent` metody.</span><span class="sxs-lookup"><span data-stu-id="20f6f-168">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="20f6f-169">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-169">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param2">
      <MemberSignature Language="C#" Value="public IntPtr Param2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Param2" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param2 As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Param2 { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f6f-170">Pobiera i zestaw <see langword="System.IntPtr" /> wystąpienia (<paramref name="param2" /> w konstruktorze) odwołujący się do obiektu, które mają być przekazane do platformy mowy do generowania zdarzenia bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> służy do żądania.</span><span class="sxs-lookup"><span data-stu-id="20f6f-170">Gets and set the <see langword="System.IntPtr" /> instance (<paramref name="param2" /> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span></span></summary>
        <value><span data-ttu-id="20f6f-171">Zwraca <see langword="System.IntPtr" /> odwołujący się do obiektu, które mają być przekazane do platformy mowy, gdy zdarzenie określony przez bieżące wystąpienie klasy <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-171">Returns the <see langword="System.IntPtr" /> referencing the object to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f6f-172">Wymagania dotyczące `System.IntPtr` odniesienie do <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jednoznacznie są określane przez wartości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> i <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> właściwości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20f6f-172">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="20f6f-173">Aby uzyskać szczegółowe informacje na temat użycia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, zobacz dokumentację dla <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-173">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20f6f-174">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-174">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-175">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-175">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-176">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-176">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-177">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-177">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-178">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-178">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-179">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-179">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="20f6f-180">Parametry na <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, takie jak <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> służą do dziennika zdarzeń wygenerowanych przez `LogSpeechEvent` metody.</span><span class="sxs-lookup"><span data-stu-id="20f6f-180">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="20f6f-181">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-181">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public short ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short ParameterType { short get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f6f-182">Zwraca typ danych wskazywanego przez obiekt <see langword="IntPtr" /> zwrócony przez <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parametru na bieżącej <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f6f-182">Returns the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter on the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="20f6f-183">A <see langword="short" /> wartość odpowiadającą członkiem <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> wyliczenie i wskazujący typ obiektu danych wskazywanego przez <see langword="IntPtr" /> zwrócony przez <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parametru i używany jako drugi argument dla konstruktora bieżący <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f6f-183">A <see langword="short" /> value corresponding to a member of the <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> enumeration and indicating the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter and used as the second argument for the constructor of the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f6f-184">Wymagania dotyczące `System.IntPtr` odniesienie do <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jednoznacznie są określane przez wartości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> i <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> właściwości <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20f6f-184">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="20f6f-185">Aby uzyskać szczegółowe informacje na temat użycia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, zobacz dokumentację dla <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span><span class="sxs-lookup"><span data-stu-id="20f6f-185">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20f6f-186">W poniższym przykładzie jest częścią implementacji syntezy mowy niestandardowych, dziedziczenie z <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>i przy użyciu programu <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, i <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="20f6f-186">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="20f6f-187">Implementacja <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="20f6f-187">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="20f6f-188">Odbiera tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienia i tworzy nowy tablicę <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpień, które mają być przekazane do `Speak` metody w podstawowej aparat syntezy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-188">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="20f6f-189">Jeśli <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> wartość wyliczenia przez znaleziono z <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.FragmentState> zwrócony przez <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> właściwości każdego <xref:System.Speech.Synthesis.TtsEngine.TextFragment> wystąpienie jest <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, implementacja</span><span class="sxs-lookup"><span data-stu-id="20f6f-189">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="20f6f-190">Wykonuje translację Americanism do Britishisms w tekst, który ma być używany.</span><span class="sxs-lookup"><span data-stu-id="20f6f-190">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="20f6f-191">Jeśli <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> właściwość <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfejsy do obsługi wdrożenia <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> typ zdarzenia <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> jest używane wystąpienie można utworzyć zdarzenia na wskaźnik postępu syntezatora jest tworzony dysk.</span><span class="sxs-lookup"><span data-stu-id="20f6f-191">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="20f6f-192">Parametry na <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, takie jak <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> służą do dziennika zdarzeń wygenerowanych przez `LogSpeechEvent` metody.</span><span class="sxs-lookup"><span data-stu-id="20f6f-192">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="20f6f-193">Aparat renderowania mowy nazywa się następnie z zmodyfikowanych <xref:System.Speech.Synthesis.TtsEngine.TextFragment> tablicy.</span><span class="sxs-lookup"><span data-stu-id="20f6f-193">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>