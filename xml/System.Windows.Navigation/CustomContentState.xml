<Type Name="CustomContentState" FullName="System.Windows.Navigation.CustomContentState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e44ae74e1d658dcfc7da59cb301d3e455af4bc9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69446237" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomContentState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CustomContentState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.CustomContentState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomContentState" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomContentState abstract" />
  <TypeSignature Language="F#" Value="type CustomContentState = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Navigation.CustomContentState" />umożliwia nawigowanie przez różne stany pojedynczej zawartości źródłowej bez ponownego ładowania zawartości źródłowej dla każdej kolejnej nawigacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie program <xref:System.Windows.Navigation.NavigationService> nie przechowuje wystąpienia obiektu Content w historii nawigacji. Zamiast tego <xref:System.Windows.Navigation.NavigationService> program tworzy nowe wystąpienie obiektu Content przy każdym przejściu do niego przy użyciu historii nawigacji. Takie zachowanie zostało zaprojektowane, aby uniknąć nadmiernego zużycia pamięci w przypadku, gdy są używane duże liczby i duże fragmenty zawartości. W związku z tym stan zawartości nie jest zapamiętywany z jednej nawigacji do następnej. Jednak program [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] zapewnia możliwość kojarzenia stanu niestandardowego z wpisem historii nawigacji dla zawartości.  
  
 Stan niestandardowy, który jest skojarzony z wpisem historii nawigacji, musi być klasą, <xref:System.Windows.Navigation.CustomContentState>która pochodzi od. <xref:System.Windows.Navigation.CustomContentState> Obiekt można skojarzyć z wpisem historii nawigacji, korzystając z jednej z następujących metod:  
  
-   Wywołanie **AddBackEntry**:  
  
    -   <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=nameWithType>.  
  
-   Ustawienie <xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=nameWithType> po podniesieniu jednego z następujących zdarzeń:  
  
    -   <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
-   Przez implementację <xref:System.Windows.Navigation.IProvideCustomContentState> na klasie, która chce być skojarzona z tym stanem niestandardowym.  
  
> [!NOTE]
>  W przypadku wywołania metody **AddBackEntry** należy obsłużyć zdarzenie przechodzenia lub Zaimplementuj. **** <xref:System.Windows.Navigation.IProvideCustomContentState>  
  
 Po przejściu do pozycji historia nawigacji, program sprawdza [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] , czy obiekt niestandardowy <xref:System.Windows.Navigation.CustomContentState> jest skojarzony z nim. Jeśli tak, wywołuje <xref:System.Windows.Navigation.CustomContentState.Replay%2A> , aby zezwolić obiektowi niestandardowemu <xref:System.Windows.Navigation.CustomContentState> na stosowanie stanu, który zapamiętał od poprzedniej nawigacji.  
  
 Klasa niestandardowa <xref:System.Windows.Navigation.CustomContentState> może <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> przesłonić, aby zmienić nazwę wyświetlaną dla wpisu <xref:System.Windows.Navigation.CustomContentState> historii nawigacji, do którego jest skojarzony obiekt. <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> Zwracana wartość jest widoczna z nawigowania [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] w różnych nawigatorach ([!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
 Klasa, która pochodzi z <xref:System.Windows.Navigation.CustomContentState> musi być możliwa do serializacji, co oznacza, że musi być <xref:System.SerializableAttribute>co najmniej większa i opcjonalnie zaimplementowana <xref:System.Runtime.Serialization.ISerializable>.  
  
> [!IMPORTANT]
>  W przypadku przechowywania informacji w stanie zawartości niestandardowej nie można przechowywać żadnych odwołań do wystąpienia strony, dla którego jest zapamiętywany stan, jeśli nie chcesz, aby zawartość była przechowywana w pamięci. Zapobiega to [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] występowaniu wystąpienia strony i zakłóca przeznaczenie domyślnego zachowania historii nawigacji. Jeśli to konieczne, rozważ użycie <xref:System.Windows.Controls.Page.KeepAlive%2A> zamiast tego.  
  
   
  
## Examples  
 Poniżej znajduje się przykład <xref:System.Windows.Navigation.CustomContentState> implementacji zastąpień. <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>  
  
 [!code-csharp[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomContentStateSnippets/CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]
 [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomContentStateSnippets/visualbasic/mycustomcontentstate.vb#mycustomcontentstatecode)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.NavigationService" />
    <altmember cref="T:System.Windows.Navigation.JournalEntry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomContentState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomContentState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Navigation.CustomContentState" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalEntryName">
      <MemberSignature Language="C#" Value="public virtual string JournalEntryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JournalEntryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JournalEntryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ JournalEntryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JournalEntryName : string" Usage="System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa zawartości przechowywanej w historii nawigacji. <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> Wartość jest wyświetlana z <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />i [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] nawigacji. [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</summary>
        <value><see cref="T:System.String" /> Nazwa zawartości przechowywanej w historii nawigacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpisy przechowywane w historii nawigacji z tyłu i do przodu są zwykle dostępne z przycisków nawigacji z tyłu i do przodu na pasku [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] nawigacyjnym nawigatora hosta, <xref:System.Windows.Navigation.NavigationWindow>w <xref:System.Windows.Controls.Frame>tym, [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)]lub.  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A><xref:System.String> jest wartością wyświetlaną na liście rozwijanej historia nawigacji.  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>nie musi być zastąpiony; w przeciwnym razie następujące fragmenty danych są używane do automatycznego konstruowania nazwy wpisu historii nawigacji w kolejności pierwszeństwa:  
  
-   <xref:System.Windows.Controls.Page.Title%2A>.  
  
-   <xref:System.Windows.Controls.Page.WindowTitle%2A>[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] i dla bieżącej strony  
  
-   [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Dla bieżącej strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="Replay">
      <MemberSignature Language="C#" Value="public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replay(class System.Windows.Navigation.NavigationService navigationService, valuetype System.Windows.Navigation.NavigationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Replay(System::Windows::Navigation::NavigationService ^ navigationService, System::Windows::Navigation::NavigationMode mode);" />
      <MemberSignature Language="F#" Value="abstract member Replay : System.Windows.Navigation.NavigationService * System.Windows.Navigation.NavigationMode -&gt; unit" Usage="customContentState.Replay (navigationService, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationService" Type="System.Windows.Navigation.NavigationService" />
        <Parameter Name="mode" Type="System.Windows.Navigation.NavigationMode" />
      </Parameters>
      <Docs>
        <param name="navigationService">Własność nawigatora odpowiedzialnego za zawartość, do <see cref="T:System.Windows.Navigation.CustomContentState" /> której jest stosowany. <see cref="T:System.Windows.Navigation.NavigationService" /></param>
        <param name="mode">Element <see cref="T:System.Windows.Navigation.NavigationMode" /> określający sposób, w jaki zawartość, <see cref="T:System.Windows.Navigation.CustomContentState" /> do której jest stosowana, została przetworzona.</param>
        <summary>Wywołuje się, by ponownie zastosować stan do fragmentu zawartości podczas nawigowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.CustomContentState.Replay%2A>jest wywoływana, gdy jest przechodzenie do elementu w historii nawigacji <xref:System.Windows.Navigation.CustomContentState> , do którego jest skojarzony obiekt.  
  
 Podczas wyprowadzania z <xref:System.Windows.Navigation.CustomContentState> <xref:System.Windows.Navigation.CustomContentState.Replay%2A> klasy abstrakcyjnej należy przesłonić, chociaż implementacja przesłaniania wymaga tylko metody podstawowej <xref:System.Windows.Navigation.CustomContentState.Replay%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
  </Members>
</Type>
