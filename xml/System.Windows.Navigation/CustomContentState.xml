<Type Name="CustomContentState" FullName="System.Windows.Navigation.CustomContentState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af0bde5f0473cf132dc8c94df67a536840f4e22f" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52359865" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomContentState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CustomContentState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.CustomContentState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomContentState" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomContentState abstract" />
  <TypeSignature Language="F#" Value="type CustomContentState = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Navigation.CustomContentState" /> umożliwia nawigowanie po różnych stanów pojedynczy zawartość źródłową bez ponownego ładowania zawartość źródłową dla każdej kolejnej nawigacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.Navigation.NavigationService> nie przechowuje wystąpienie obiektu zawartości w historii nawigacji. Zamiast tego <xref:System.Windows.Navigation.NavigationService> tworzy nowe wystąpienie obiektu zawartości każdorazowo jest przejście do, za pomocą historii nawigacji. To zachowanie jest przeznaczony do uniknąć zużycie zbyt dużej ilości pamięci, gdy dużą liczbą i dużych fragmentów zawartości są trwa przejście. W związku z tym stanu zawartości nie zapamiętywane jest jeden nawigacji do następnego. Jednak [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] umożliwia kojarzenie fragment stanów niestandardowych z wpisem historii nawigacji dla danej zawartości.  
  
 Stanów niestandardowych, który jest skojarzony z wpisem historii nawigacji musi być klasą, która pochodzi od klasy <xref:System.Windows.Navigation.CustomContentState>. Możesz skojarzyć <xref:System.Windows.Navigation.CustomContentState> obiektu z wpisem historii nawigacji, wykonując jedną z następujących technik:  
  
-   Wywoływanie **AddBackEntry**:  
  
    -   <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=nameWithType>.  
  
-   Ustawienie <xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=nameWithType> kiedy są wywoływane jedną z następujących zdarzeń:  
  
    -   <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
-   Implementując <xref:System.Windows.Navigation.IProvideCustomContentState> w klasie, która chce stanów niestandardowych, które ma zostać skojarzony z nim.  
  
> [!NOTE]
>  Jeśli wywołasz **AddBackEntry** metody musi obsługiwać **Navigating** zdarzenia lub zaimplementuj <xref:System.Windows.Navigation.IProvideCustomContentState>.  
  
 Gdy jest przejście z wpisem w historii nawigacji, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] sprawdza, czy niestandardowy <xref:System.Windows.Navigation.CustomContentState> obiekt jest skojarzony z nim. Jeśli tak, wywołuje <xref:System.Windows.Navigation.CustomContentState.Replay%2A> umożliwia niestandardowej <xref:System.Windows.Navigation.CustomContentState> obiektu do zastosowania go zapamiętanych z poprzedniego okienka nawigacji.  
  
 Niestandardowy <xref:System.Windows.Navigation.CustomContentState> zastępować <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> do zmiany nazwy, które pojawiają się z wpisem historii nawigacji, do którego <xref:System.Windows.Navigation.CustomContentState> obiekt jest skojarzony. Wartość która <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> zwraca jest widoczna w nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] z różnych nawigatorów ([!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
 Klasa, która pochodzi od klasy <xref:System.Windows.Navigation.CustomContentState> muszą podlegać serializacji, co oznacza, że co najmniej musi zostać rozszerzony za pomocą <xref:System.SerializableAttribute>i opcjonalnie zaimplementować <xref:System.Runtime.Serialization.ISerializable>.  
  
> [!IMPORTANT]
>  Gdy informacje są przechowywane w niestandardowy stan zawartości, nie można zapisać dowolnego odwołania do wystąpienia strony, dla której są zapamiętywanie stanie, jeśli nie chcesz, aby zawartość ma zostać zachowana w pamięci. Zapobiega to [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ze zwalnianego wystąpienie strony i zaprzeczenie celu domyślnego zachowania historii nawigacji. Jeśli trzeba to zrobić, należy rozważyć użycie <xref:System.Windows.Controls.Page.KeepAlive%2A> zamiast tego.  
  
   
  
## Examples  
 Oto przykład <xref:System.Windows.Navigation.CustomContentState> implementację, która zastępuje <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>.  
  
 [!code-csharp[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomContentStateSnippets/CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]
 [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomContentStateSnippets/visualbasic/mycustomcontentstate.vb#mycustomcontentstatecode)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.NavigationService" />
    <altmember cref="T:System.Windows.Navigation.JournalEntry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomContentState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomContentState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Navigation.CustomContentState" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalEntryName">
      <MemberSignature Language="C#" Value="public virtual string JournalEntryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JournalEntryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JournalEntryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ JournalEntryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JournalEntryName : string" Usage="System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa zawartości, która jest przechowywana w historii nawigacji. Wartość <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> są wyświetlane z <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" />, i [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</summary>
        <value>
          <see cref="T:System.String" /> Nazwa zawartość, która jest przechowywana w historii nawigacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przechowywanych w historii przeglądania do przodu i zapisy są zwykle dostępne Wstecz i do przodu listy rozwijanej przyciski nawigacji w okienku nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Nawigatora hosta, w tym <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, lub [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)].  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> jest <xref:System.String> wartość, która jest wyświetlana w nawigacji historii listę rozwijaną.  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> nie ma zostać zastąpiona; w przeciwnym razie następujących rodzajów danych są używane do konstruowania automatycznie nazwę wpisu historii nawigacji, w kolejności:  
  
-   <xref:System.Windows.Controls.Page.Title%2A>.  
  
-   <xref:System.Windows.Controls.Page.WindowTitle%2A> i [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] dla bieżącej strony  
  
-   [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] Dla bieżącej strony.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="Replay">
      <MemberSignature Language="C#" Value="public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replay(class System.Windows.Navigation.NavigationService navigationService, valuetype System.Windows.Navigation.NavigationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Replay(System::Windows::Navigation::NavigationService ^ navigationService, System::Windows::Navigation::NavigationMode mode);" />
      <MemberSignature Language="F#" Value="abstract member Replay : System.Windows.Navigation.NavigationService * System.Windows.Navigation.NavigationMode -&gt; unit" Usage="customContentState.Replay (navigationService, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationService" Type="System.Windows.Navigation.NavigationService" />
        <Parameter Name="mode" Type="System.Windows.Navigation.NavigationMode" />
      </Parameters>
      <Docs>
        <param name="navigationService">
          <see cref="T:System.Windows.Navigation.NavigationService" /> Własnością Nawigator odpowiedzialna za zawartość, do którego należy to <see cref="T:System.Windows.Navigation.CustomContentState" /> jest stosowany.</param>
        <param name="mode">A <see cref="T:System.Windows.Navigation.NavigationMode" /> , który określa sposób, w jaki zawartości, do którego <see cref="T:System.Windows.Navigation.CustomContentState" /> jest stosowane został przejście.</param>
        <summary>Wywołuje się, aby ponownie zastosować stanu do danej zawartości podczas nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.CustomContentState.Replay%2A> jest wywoływana, gdy element w historii nawigacji, który ma skojarzoną <xref:System.Windows.Navigation.CustomContentState> jest przejście obiektu.  
  
 Podczas wyprowadzania z abstrakcyjnej <xref:System.Windows.Navigation.CustomContentState> klasy <xref:System.Windows.Navigation.CustomContentState.Replay%2A> musi zostać zastąpiona, mimo że implementacja zastąpienie musi wywołać tylko base <xref:System.Windows.Navigation.CustomContentState.Replay%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
  </Members>
</Type>