<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8bd4b2bef7ec8cee36b45fcfd12498fd1d6d43e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69446087" /></Metadata><TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody, właściwości i zdarzenia do obsługi nawigacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService>hermetyzuje możliwość pobrania zawartości w kontekście nawigacji w stylu przeglądarki.  
  
 Zawartość może być dowolnego typu .NET Framework obiektów i plików HTML. Ogólnie rzecz biorąc, strony są preferowane jako sposób spakowania zawartości dla nawigacji (zobacz <xref:System.Windows.Controls.Page>).  
  
 Do zawartości można przejść, dostarczając wystąpienie obiektu i wywołując Przeciążenie <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metody, która akceptuje obiekt:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Alternatywnie można przejść do zawartości, przekazując względny lub bezwzględny identyfikator URI do jednego z <xref:System.Windows.Navigation.NavigationService.Navigate%2A> przeciążeń metody, które akceptują URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Po przejściu do zawartości przez identyfikator URI <xref:System.Windows.Navigation.NavigationService> program zwróci obiekt zawierający zawartość.  
  
 Okres istnienia nawigacji może być śledzony przez następujące zdarzenia:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Nie wszystkie zdarzenia są wywoływane za każdym razem, gdy odbywa się Nawigacja; zestaw zdarzeń, które są wywoływane, zależy od typu nawigowania (zawartość lub fragment zawartości) oraz sposobu, w jaki Nawigacja kończy się (anulowane, zatrzymane lub nie powiodło się).  
  
 Na poniższej ilustracji przedstawiono kolejność, w której są wywoływane te zdarzenia:  
  
 ![Wykres przepływu nawigacji na stronie] (~/add/media/navigationoverviewfigure11.png "Wykres przepływu nawigacji na stronie")  
  
 W trakcie lub po nawigacji program <xref:System.Windows.Navigation.NavigationService> zawiera informacje o zawartości, do której prowadzi Nawigacja, w tym identyfikator URI zawartości, do której prowadzi przechodzenie (<xref:System.Windows.Navigation.NavigationService.Source%2A>), identyfikator URI bieżącej zawartości (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>) oraz obiekt, który zawiera zawartość, która została przechodzenie do<xref:System.Windows.Navigation.NavigationService.Content%2A>().  
  
 Gdy zawartość jest przechodzenia do programu <xref:System.Windows.Navigation.NavigationService> , program rejestruje nawigację jako wpis w historii nawigacji. Wpis jest dodawany do historii nawigacji wstecznej, gdy występuje Nowa Nawigacja, przez wywołanie <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metody lub przez przejście do wpisu w historii nawigacji do przodu, przez wywołanie. <xref:System.Windows.Navigation.NavigationService.GoForward%2A> Wpis jest dodawany do przodu historia przeglądania, przechodząc do pozycji w historii nawigacji wstecznej, wywołując <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>i <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> Zgłoś, czy istnieją wpisy w historii nawigacji z tyłu i do przodu. Ponadto najnowszy wpis w historii nawigacji Wstecz można usunąć, wywołując <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>polecenie.  
  
 Domyślnie program <xref:System.Windows.Navigation.NavigationService> nie przechowuje wystąpienia obiektu Content w historii nawigacji. Zamiast tego <xref:System.Windows.Navigation.NavigationService> program tworzy nowe wystąpienie obiektu Content przy każdym przejściu do niego przy użyciu historii nawigacji. Takie zachowanie zostało zaprojektowane, aby uniknąć nadmiernego zużycia pamięci w przypadku, gdy są używane duże liczby i duże fragmenty zawartości. W związku z tym stan zawartości nie jest zapamiętywany z jednej nawigacji do następnej. Jednak WPF zawiera kilka technik, za pomocą których można przechowywać stan dla fragmentu zawartości w historii nawigacji.  
  
 Przy <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>użyciu, można także zapamiętać wiele zestawów stanu dla pojedynczego wystąpienia strony.  
  
 <xref:System.Windows.Navigation.NavigationService>jest klasą i w związku z tym nie można utworzyć wystąpienia <xref:System.Windows.Navigation.NavigationService> ; zamiast tego jest używana przez nawigatorów do włączania nawigacji. `sealed` W WPF istnieją dwa nawigatory: <xref:System.Windows.Navigation.NavigationWindow> i. <xref:System.Windows.Controls.Frame>  
  
 Wizualnie, [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] Użyj [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] jako nawigatora, aby zapewnić zintegrowane środowisko użytkownika. Jednak [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] fizycznie [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] używany <xref:System.Windows.Navigation.NavigationWindow> jakoNawigator[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] ; Właściwość uruchomiona w zwróci odwołanie do <xref:System.Windows.Navigation.NavigationWindow>i historię nawigacji, która jest zarządzana przez <xref:System.Windows.Application.MainWindow%2A> Program jest zintegrowany z historią nawigacji [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] zarządzaną w następujący sposób: <xref:System.Windows.Navigation.NavigationWindow>  
  
-   Gdy zawartość jest przechodzenia do programu przez <xref:System.Windows.Navigation.NavigationService.Navigate%2A>wywołanie <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] , <xref:System.Windows.Navigation.NavigationService.GoForward%2A> i z poziomu odpowiednich wpisów historii nawigacji, są również dodawane do [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] historii nawigacji.  
  
-   Po [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] wybraniu <xref:System.Windows.Navigation.NavigationService> pozycji w nawigacji powoduje to przejście do zawartości powiązanej z tymi wpisami lub przekazanie jej do niej. [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]  
  
> [!NOTE]
>  Program <xref:System.Windows.Controls.Frame> może zapewnić własną historię nawigacji lub użyć historii nawigacji dla nawigatora, który je obsługuje. Jeśli <xref:System.Windows.Controls.Frame> program udostępnia swoją własną historię przeglądania, może wyświetlić własną nawigację [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] w celu nawigowania po wpisach w historii nawigacji. te wpisy nie są dodawane do historii nawigacji nawigatora hosta (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame> <xref:System.Windows.Controls.Frame.JournalOwnership%2A>, [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) i w związku z tym nie można przechodzić do obszaru nawigacyjnego [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] każdego (zobacz).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Windows.Navigation.CustomContentState" /> Obiekt, który reprezentuje stan zdefiniowany przez aplikację, który jest skojarzony z określoną częścią zawartości.</param>
        <summary>Dodaje wpis do historii nawigacji wstecznej, która zawiera <see cref="T:System.Windows.Navigation.CustomContentState" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState> i<xref:System.Windows.Navigation.IProvideCustomContentState> służą do zapamiętania wielu zestawów stanu dla bieżącej zawartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="state" />jest <see langword="null" />, <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />a obiekt nie jest zwracany z. <see cref="T:System.Windows.Navigation.CustomContentState" /></exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy w historii przeglądania wstecz istnieje co najmniej jeden wpis.</summary>
        <value><see langword="true" />Jeśli istnieje co najmniej jeden wpis w historii nawigacji wstecznej; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>Aby określić, czy w historii przeglądania wstecz istnieje co najmniej jeden wpis. Ta właściwość powinna być sprawdzana przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A>metody <xref:System.Windows.Navigation.NavigationService.GoBack%2A> ; jeśli jest wywoływana i nie ma żadnych wpisów w historii nawigacji <xref:System.InvalidOperationException> wstecznej, zgłaszany jest wyjątek.  
  
> [!NOTE]
>  Jeśli historia nawigacji jest udostępniana przez wiele nawigatorów (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), najnowszy wpis w historii nawigacji wstecznej może nie zostać dodany przez <xref:System.Windows.Navigation.NavigationService> dla bieżącego nawigatora.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu.</summary>
        <value><see langword="true" />Jeśli istnieje co najmniej jeden wpis w historii przeglądania do przodu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>Aby określić, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu. Ta właściwość powinna być sprawdzana przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A>metody <xref:System.Windows.Navigation.NavigationService.GoForward%2A> ; jeśli jest wywoływana i nie ma żadnych wpisów w historii nawigacji <xref:System.InvalidOperationException> do przodu, zgłaszany jest wyjątek.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do obiektu, który zawiera bieżącą zawartość.</summary>
        <value>Obiekt, który jest odwołaniem do obiektu, który zawiera bieżącą zawartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość można ustawić na jeden z dwóch sposobów:  
  
-   Bezpośrednio, przez ustawienie go na odwołanie do obiektu.  
  
-   Pośrednio, wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Ustawienie <xref:System.Windows.Navigation.NavigationService> Inicjuje nową nawigację; ponieważ nawigacja jest asynchroniczna, <xref:System.Windows.Navigation.NavigationService.Content%2A> nie zwraca wartości, jeśli zostanie ona zbadana natychmiast po ustawieniu.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI zawartości, do której ostatnio przeszedłł dostęp.</summary>
        <value>W przypadku zawartości, do której ostatnio przeszedł dostęp, w przypadku przechodzenia do programu przy użyciu identyfikatora URI; <see langword="null" />w przeciwnym razie. <see cref="T:System.Uri" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> właściwości nie jest zmieniana, dopóki Nawigacja do innego identyfikatora URI nie została ukończona pomyślnie.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>można ustawić za pomocą identyfikatora URI tylko dla fragmentu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po rozpoczęciu nawigacji do fragmentu zawartości, który występuje natychmiast, jeśli żądany fragment znajduje się w bieżącej zawartości lub po załadowaniu [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] zawartości źródłowej, jeśli żądany fragment znajduje się w innej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie fragment zawartości to zawartość, która jest zawarta w nazwanym <xref:System.Windows.UIElement>, który <xref:System.Windows.UIElement> jest <xref:System.Windows.FrameworkElement.Name%2A> atrybutem ustawionym, np.:  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Przechodzenie do [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] fragmentu przez podanie identyfikatora URI z sufiksem w następującym formacie:  
  
 \#*FragmentName*  
  
 Poniżej przedstawiono przykład identyfikatora URI, który odwołuje się do fragmentu zawartości:  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 Po załadowaniu strony źródłowej ( <xref:System.Windows.Navigation.NavigationService.LoadCompleted> po wystąpieniu zdarzenia) rozpoczyna się Nawigacja po fragmentach <xref:System.Windows.Navigation.NavigationService> i próbuje zlokalizować [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragment. Jeśli fragment zostanie znaleziony, <xref:System.Windows.Navigation.NavigationService> nakazuje nawigatorowi zawartości (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) wyświetlić fragment. [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] Jeśli musisz zmienić to zachowanie, możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> , aby zapewnić własne zachowanie nawigacji fragmentu. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation><xref:System.Windows.Navigation.FragmentNavigationEventArgs> przekazuje parametr, który udostępnia właściwości, które są przydatne do tego celu, w tym:  
  
-   Nawigator, który jest właścicielem tej usługi nawigacji<xref:System.Windows.Navigation.NavigationWindow>( <xref:System.Windows.Controls.Frame>,).  
  
-   Nazwa fragmentu.  
  
 Możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> , aby zastąpić domyślną implementację fragmentacji WPF własną implementacją niestandardową. W takim przypadku należy ustawić <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> `true`wartość. w przeciwnym razie stosowane jest domyślne zachowanie przetwarzania fragmentów WPF.  
  
 Należy unikać bezpośredniego inicjowania nawigacji z poziomu <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> programu obsługi zdarzeń. Ponieważ <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> jest wywoływany podczas istniejącego nawigowania, inicjowanie nowej nawigacji <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> z programu obsługi zdarzeń tworzy zagnieżdżoną <xref:System.ExecutionEngineException> nawigację, która może spowodować zgłoszenie. Zamiast tego można pośrednio zainicjować nawigację, tworząc asynchroniczny element roboczy przy użyciu <xref:System.Windows.Threading.Dispatcher>.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, wywołuje <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
> [!IMPORTANT]
>  Nawigacja fragmentów nie jest obsługiwana w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] przypadku luźnych stron ( [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] pliki `Page` tylko do znaczników, które są elementami głównymi) w następujących przypadkach:  
>   
>  • Podczas przechodzenia do fragmentu na luźnej [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] stronie.  
>   
>  • Podczas nawigowania z luźnej [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony do fragmentu na innej luźnej [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] stronie.  
>   
>  Jednak luźna [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strona może przechodzić do własnych fragmentów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> , aby zapewnić niestandardowe zachowanie nawigacji dla fragmentów. W takim przypadku przykład otwiera stronę błędu [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] , jeśli fragment na stronie źródłowej [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] nie zostanie znaleziony.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Zawartość <see cref="T:System.Windows.DependencyObject" /> w zawartości hostowanej przez nawigatora.</param>
        <summary>Pobiera odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> elementu nawigatora, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />element.</summary>
        <returns>Odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> nawigatora, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />; może być <see langword="null" /> w niektórych przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigator ma <xref:System.Windows.Navigation.NavigationService> , który obsługuje nawigację po zawartości. WPF ma dwa nawigatory: <xref:System.Windows.Navigation.NavigationWindow> i <xref:System.Windows.Controls.Frame>. Aby przetwarzać żądania nawigacji i zarządzać okresem istnienia nawigacji, Nawigator używa usługi nawigacji WPF, która jest <xref:System.Windows.Navigation.NavigationService> implementowana jako Klasa. Zawartość hostowana przez nawigatora może uzyskać odwołanie do nawigatora <xref:System.Windows.Navigation.NavigationService> przez <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> wywołanie metody.  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>zwraca `null` ,`dependencyObject`gdy:  
  
-   <xref:System.Windows.Navigation.NavigationWindow>Jest.  
  
-   <xref:System.Windows.Controls.Frame> To:  
  
    1.  Jest hostowana przez inny Nawigator.  
  
    2.  Właściwość ma ustawioną wartość <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>. <xref:System.Windows.Controls.Frame.JournalOwnership%2A>  
  
-   Nie jest częścią zawartości hostowanej przez nawigatora.  
  
 WPF oferuje dwa skróty do uzyskiwania odwołania do <xref:System.Windows.Navigation.NavigationService>:  
  
-   Przetworzoną nawigację do elementu <xref:System.Windows.Controls.Page> <xref:System.Windows.Controls.Page> można uzyskać od samego siebie, pobierając wartość jej <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.Navigation.NavigationService>  
  
-   Do, który jest używany <xref:System.Windows.Controls.Frame> przez program do nawigacji procesu, można uzyskać dostęp przez <xref:System.Windows.Controls.Frame.NavigationService%2A> pobranie wartości właściwości. <xref:System.Windows.Navigation.NavigationService>  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak <xref:System.Windows.Controls.UserControl> można pobrać usługę nawigacji, wywołując <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>metodę.  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="dependencyObject" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przechodzi do ostatniego wpisu w historii nawigacji Wstecz, jeśli istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A> <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> właściwości można przeprowadzić inspekcję, aby określić, czy istnieją wpisy w historii nawigacji wstecznej.  
  
   
  
## Examples  
 Poniższy przykład przechodzi do najnowszego wpisu w historii nawigacji Wstecz, jeśli taki istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoBack" />jest wywoływana, gdy nie ma żadnych wpisów w historii nawigacji wstecznej.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przejdź do ostatniego wpisu w historii przeglądania do przodu, jeśli istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A> <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> właściwości można przeprowadzić inspekcję, aby określić, czy istnieją wpisy w historii przeglądania do przodu.  
  
   
  
## Examples  
 Poniższy przykład przechodzi do ostatniego wpisu w historii nawigacji do przodu, jeśli taki istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoForward" />jest wywoływana, gdy nie ma żadnych wpisów w historii przeglądania do przodu.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po załadowaniu, przeanalizowaniu i rozpoczęciu renderowania zawartości, do której została przetworzona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli musisz <xref:System.Windows.Navigation.NavigationService.LoadCompleted> poznać odpowiednie informacje dotyczące żądania nawigacji po zakończeniu ładowania, możesz je obsłużyć. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiektu, który jest przesyłany <xref:System.Windows.Navigation.NavigationService.LoadCompleted> do programu obsługi zdarzeń, i zawiera:  
  
-   Zawartość i jej identyfikator URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacja została zainicjowana przez wywołanie <xref:System.Windows.Navigation.NavigationService.Navigate%2A> albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A>lub.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted>nie jest uruchamiany, gdy nie można znaleźć lub załadować strony źródłowej, w której jest <xref:System.Windows.Navigation.NavigationService.NavigationFailed> zgłaszany przypadek.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, wywołuje <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.LoadCompleted>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przejdź asynchronicznie do określonej zawartości źródłowej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, do której chcesz przejść.</param>
        <summary>Nawiguj asynchronicznie do zawartości zawartej w obiekcie.</summary>
        <returns><see langword="true" />Jeśli nawigacja nie została anulowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>przejdzie do <xref:System.Object> określonego przez `root` jeśli spełnione są następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostało anulowane.  
  
-   Można utworzyć żądanie sieci Web <xref:System.Windows.Navigation.NavigationService.Navigating>(zobacz).  
  
 Jeśli `root` <xref:System.Windows.Navigation.NavigationService.Content%2A>jest `null`, istniejąca zawartość () jest wyczyszczona.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web może zostać wyświetlony wyjątek sieci Web (na przykład 404: Nie znaleziono pliku). Takie wyjątki można obsługiwać z programu <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przejść do <xref:System.Windows.Controls.Page> obiektu zawierającego drzewo zawartości źródłowej.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Uri" /> Obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <summary>Przejdź asynchronicznie do zawartości, która jest określona przez identyfikator URI.</summary>
        <returns><see langword="true" />Jeśli nawigacja nie została anulowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `source` może być w sieci Web [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] lub prawidłowym identyfikatorem URI pakietu (zobacz [identyfikatory URI pakietu w WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>spowoduje przejście do identyfikatora URI określonego przez `source` jeśli spełnione są następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostało anulowane.  
  
-   Można utworzyć żądanie sieci Web <xref:System.Windows.Navigation.NavigationService.Navigating>(zobacz).  
  
 Jeśli `source` <xref:System.Windows.Navigation.NavigationService.Content%2A>jest `null`, istniejąca zawartość () jest wyczyszczona.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web może zostać wyświetlony wyjątek sieci Web (na przykład 404: Nie znaleziono pliku). Takie wyjątki można obsługiwać z programu <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 Możesz użyć <xref:System.Windows.Navigation.NavigationService.Navigate%2A> , aby przejść do fragmentu zawartości. Jeśli zawartość identyfikowana przez identyfikator URI jest bieżącą zawartością, nie zostanie pobrana ponownie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przejść do identyfikatora URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, do której chcesz przejść.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które mają być używane do przetwarzania podczas nawigowania.</param>
        <summary>Przejdź asynchronicznie do zawartości zawartej w obiekcie i przekaż obiekt zawierający dane, które mają być używane do przetwarzania podczas nawigowania.</summary>
        <returns><see langword="true" />Jeśli nawigacja nie została anulowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma takie samo zachowanie jak <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, chociaż obiekt jest przenoszona zamiast identyfikatora URI.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przejść do <xref:System.Windows.Controls.Page> obiektu zawierającego zawartość źródłową i przekazywać stan nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Uri" /> Obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które mają być używane do przetwarzania podczas nawigowania.</param>
        <summary>Przejdź asynchronicznie do zawartości źródłowej znajdującej się w identyfikatorze URI i przekaż obiekt zawierający dane, które mają być używane do przetwarzania podczas nawigowania.</summary>
        <returns><see langword="true" />Jeśli nawigacja nie została anulowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ nawigacja jest asynchroniczna, możliwe jest jednoczesne wykonywanie wielu nawigacji. Na przykład, jeśli na jednej stronie znajdują się dwie ramki podrzędne, obie ramki mogą być przeszukiwane. W takim przypadku różne zdarzenia nawigacji, które są wywoływane przez <xref:System.Windows.Navigation.NavigationService> program, mogą być wywoływane wiele razy, po jednym dla każdej części zawartości, która jest przenoszona do, a niekoniecznie w kolejności, w której zażądano nawigacji. W związku z tym, jeśli określone żądanie nawigacji wymaga przetworzenia danych specyficznych dla poszczególnych żądań, nie może użyć danych dostępnych dla wszystkich żądań nawigacji. Zamiast tego można użyć `navigationState` , aby przekazać dane do przetwarzania nawigacji, które są specyficzne dla jednego żądania nawigacji.  
  
 Następujące argumenty zdarzeń zapewniają dostęp do stanu nawigacji:  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A>(przeszedł do <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzenia).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A>(przeszedł do <xref:System.Windows.Navigation.NavigationService.Navigated>programu <xref:System.Windows.Navigation.NavigationService.NavigationStopped> <xref:System.Windows.Navigation.NavigationService.LoadCompleted> obsługi zdarzeń).  
  
   
  
## Examples  
 Poniższy przykład demonstruje przechodzenie do identyfikatora URI i przekazywanie stanu nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Uri" /> Obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które mają być używane do przetwarzania podczas nawigowania.</param>
        <param name="sandboxExternalContent">Pobierz zawartość do piaskownicy zabezpieczeń częściowej relacji zaufania (z domyślnym zestawem stref internetowych, jeśli <see langword="true" />. Wartość domyślna to <see langword="false" />.</param>
        <summary>Przejdź asynchronicznie do zawartości źródłowej znajdującej się w identyfikatorze URI, przekaż obiekt zawierający Stan nawigacji do przetwarzania podczas nawigowania i zawartość w piaskownicy.</summary>
        <returns><see langword="true" />Jeśli nawigacja nie została anulowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest tylko dla aplikacji autonomicznych [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] i zawartości.  
  
 Ta metoda ma takie samo zachowanie jak <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>i rozszerza je przez zagwarantowanie, że pobierana zawartość jest umieszczana w piaskownicy zabezpieczeń częściowej relacji zaufania (z domyślnym zestawem stref internetowych — Zobacz temat [zabezpieczenia częściowej relacji zaufania WPF ](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy znaleziono zawartość, do której nastąpi przejście, i jest ona dostępna z <see cref="P:System.Windows.Navigation.NavigationService.Content" /> właściwości, chociaż może nie zakończyć ładowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest obsługiwane <xref:System.Windows.Navigation.NavigationService.Navigated> , jeśli konieczne jest odnalezienie odpowiednich informacji dotyczących żądania nawigacji po rozpoczęciu pobierania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiektu, który jest przesyłany <xref:System.Windows.Navigation.NavigationService.Navigated> do programu obsługi zdarzeń, i zawiera:  
  
-   Strona źródłowa. Gdy <xref:System.Windows.Navigation.NavigationService.Navigated> jest wywoływany, co najmniej część [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] drzewa strony źródłowej została przeanalizowana i dołączona do kontroli zawartości docelowej.  
  
-   Żądany identyfikator URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacja została zainicjowana przez wywołanie <xref:System.Windows.Navigation.NavigationService.Navigate%2A> albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A>lub.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated>nie jest uruchamiany, gdy nie można znaleźć lub załadować strony źródłowej, w której jest <xref:System.Windows.Navigation.NavigationService.NavigationFailed> zgłaszany przypadek.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, wywołuje <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.Navigated>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zażądaniu nowej nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating>jest zgłaszane w przypadku żądania nowej nawigacji, ale przed zażądaniem zawartości źródłowej, w tym:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A>jest wywoływana.  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A>lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A> jest wywoływana (lub wpis jest wybierany z nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Przechodzenie do fragmentu zawartości.  
  
 Można je <xref:System.Windows.Navigation.NavigationService.Navigating> obsłużyć, jeśli konieczne jest odnalezienie odpowiednich informacji dotyczących żądania nawigacji przed rozpoczęciem nawigacji. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigatingCancelEventArgs> obiektu, który jest przesyłany <xref:System.Windows.Navigation.NavigationService.Navigating> do programu obsługi zdarzeń.  
  
 Obiekt dla nawigacji jest tworzony i dostępny <xref:System.Windows.Navigation.NavigatingCancelEventArgs> z parametru; ponieważ rzeczywiste żądanie nie zostało wykonane w tym momencie, można ponownie skonfigurować <xref:System.Net.WebRequest> obiekt, w razie potrzeby. <xref:System.Net.WebRequest>  
  
 Możesz również obsłużyć <xref:System.Windows.Navigation.NavigatingCancelEventArgs> Anuluj nawigację, jeśli jest to <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> wymagane, ustawiając wartość na true. Jeśli anulujesz nawigację, nie zostaną zgłoszone żadne inne zdarzenia nawigacji.  
  
> [!NOTE]
>  Jeśli aplikacja jest hostowana w przeglądarce, nie można uniemożliwić użytkownikowi nawigowania po aplikacji przez anulowanie <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzenia.  
  
 Po przejściu pierwszej części zawartości do elementu nawigatora (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) Każda z nich nie jest dodawana do historii nawigacji. Jeśli musisz zapisać informacje o stanie dotyczące zawartości, z której się odchodzi, możesz dodać stan do wpisu dziennika dla tej zawartości, ustawiając <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> <xref:System.Windows.Navigation.CustomContentState> obiekt.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.Navigating>, wywołuje <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.Navigating> w celu wykrycia, czy żądanie odświeżenia zawartości statycznej zostało wykonane, a jeśli tak, to w celu anulowania żądania.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po wystąpieniu błędu podczas nawigowania do wymaganej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebException> Gdy lub<xref:System.IO.IOException> jest generowany<xref:System.Windows.Navigation.NavigationService.NavigationFailed> podczas nawigacji, zdarzenie jest zgłaszane. <xref:System.Windows.Navigation.NavigationService.NavigationFailed>został przekazaną <xref:System.Windows.Navigation.NavigationFailedEventArgs> , która hermetyzuje informacje o wyjątku i szczegółach nawigacji, która spowodowała wyjątek.  
  
 Gdy wyjątek jest spowodowany niepomyślną nawigacją i jest nieobsługiwany, następujące zdarzenia są zgłaszane w podanej kolejności:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType>lub <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Jeśli Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) jest hostowany przez jeden lub więcej nawigatorów, `NavigationFailed` nie jest wywoływany na żadnym z nich.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje okresowo podczas pobierania, aby zapewnić informacje o postępie nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress><xref:System.Windows.Navigation.NavigationProgressEventArgs> przekazuje następujące informacje o postępie:  
  
-   Liczba bajtów pobranych do tej pory (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).  
  
-   Łączna liczba bajtów do pobrania (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>jest uruchamiany jednokrotnie dla każdego 1024 bajtów pobranych zawartości i jeszcze więcej, jeśli liczba pozostałych bajtów jest większa niż 1024 bajtów. Z tego powodu obsługa <xref:System.Windows.Navigation.NavigationService.NavigationProgress> zapewnia przydatny sposób śledzenia i wyświetlania postępu bieżącego pobierania.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>nie zostanie zgłoszony w niektórych przypadkach, na przykład wtedy, gdy ta sama zawartość jest przenoszona do lub gdy fragment zawartości jest przenoszony do zawartości, która jest aktualnie załadowana (to jest wartość <xref:System.Windows.Navigation.NavigationService.Content%2A> właściwości).  
  
 Podczas przechodzenia do skompilowanego zasobu XAML, końcowe <xref:System.Windows.Navigation.NavigationService.NavigationProgress> zdarzenie może nie zostać zgłoszone. Oznacza to, że po zakończeniu pobierania Ostatnia raportowana <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> wartość nie może być <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> równa wartości. Obsłuż <xref:System.Windows.Navigation.NavigationService.LoadCompleted> zdarzenie, które ma zostać powiadomione po zakończeniu nawigacji.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, wywołuje <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationProgress>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> wywoływana jest metoda lub gdy jest wymagana Nowa Nawigacja, gdy bieżąca nawigacja jest w toku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest obsługiwane <xref:System.Windows.Navigation.NavigationService.NavigationStopped> , jeśli konieczne jest odnalezienie odpowiednich informacji dotyczących żądania nawigacji po zatrzymaniu pobierania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiektu, który jest przesyłany <xref:System.Windows.Navigation.NavigationService.NavigationStopped> do programu obsługi zdarzeń, i zawiera:  
  
-   Żądany identyfikator URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacja została zainicjowana przez wywołanie <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>lub.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> wywołuje <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, wywołuje <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> również<xref:System.Windows.Application> zdarzenie dla obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationStopped>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje bieżącą zawartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżąca zawartość (określona przez wartość <xref:System.Windows.Navigation.NavigationService.Source%2A> właściwości) zostanie ponownie przejdzie do programu, program <xref:System.Windows.Navigation.NavigationService> nie pobierze zawartości ponownie. Aby wymusić <xref:System.Windows.Navigation.NavigationService> ponowne przechodzenie do zawartości, wywołaj <xref:System.Windows.Navigation.NavigationService.Refresh%2A>polecenie.  
  
 Należy pamiętać, że jeśli aktualna zawartość jest przechodzenia do ponownie, niezależnie <xref:System.Windows.Navigation.NavigationService.Navigate%2A> od <xref:System.Windows.Navigation.NavigationService.Refresh%2A>tego, czy przez wywołanie lub, nowy wpis nie zostanie dodany do historii przeglądania.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa najnowszą pozycję dziennika z historii wstecz.</summary>
        <returns><see cref="T:System.Windows.Navigation.JournalEntry" /> Najnowsza w historii nawigacji Wstecz, jeśli istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli co najmniej dwie nawigatory (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) współdzielą tę samą historię przeglądania, jeden Nawigator <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> może użyć do pobrania wpisu historii nawigacji wstecznej dla nawigacji, która miała miejsce w innym Nawigatorze.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI bieżącej zawartości lub identyfikator URI nowej zawartości, do której obecnie trwa nawigacja.</summary>
        <value>A <see cref="T:System.Uri" /> , który zawiera identyfikator URI bieżącej zawartości lub zawartość, do której obecnie trwa nawigacja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę właściwość na inny identyfikator URI niż aktualnie wyświetlany, Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) nawiguje do określonego identyfikatora URI.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A>jest ustawiona na zawartość załadowana z identyfikatora URI, do którego prowadzi przejście, chyba że nawigacja zostanie anulowana.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A>można ustawić za pomocą identyfikatora URI tylko do fragmentu i może być ustawiony na `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza dalsze pobieranie zawartości dla bieżącego żądania nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A>może być wywoływana <xref:System.Windows.Navigation.NavigationService.Navigate%2A> zaraz po powrocie i kończy nawigację, która jest w toku w ramkach podrzędnych.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> Wywołanie metody<xref:System.Windows.Navigation.NavigationService.NavigationStopped> wywołuje zdarzenie.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A>musi być wywoływana w tym samym wątku, który zainicjował nawigację.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób zatrzymania ładowania.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>
