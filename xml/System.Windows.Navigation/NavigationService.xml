<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d082dd7c9628002f1da7a6e1f97b52c5dbf6533" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694149" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody, właściwości i zdarzeń do obsługi nawigacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> hermetyzuje możliwość pobierania zawartości w kontekście nawigacji stylu przeglądarki.  
  
 Zawartości mogą być dowolnego typu obiektu .NET Framework i pliki HTML. Ogólnie rzecz biorąc, strony są jednak preferowany sposób zawartość pakietu do nawigacji (zobacz <xref:System.Windows.Controls.Page>).  
  
 Zawartość może zostać przesłane do, zapewniając wystąpienia obiektu i wywoływanie przeciążenia <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metodę, która przyjmuje obiekt:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Alternatywnie zawartość może zostać przesłane do przez przekazanie względny lub bezwzględny identyfikator URI do jednego z <xref:System.Windows.Navigation.NavigationService.Navigate%2A> przeciążenia metody, które akceptuje identyfikator URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Gdy zawartość jest przejście przez identyfikator URI, <xref:System.Windows.Navigation.NavigationService> zwraca obiekt, który zawiera zawartość.  
  
 Okres istnienia Nawigacja można śledzić za pomocą następujących zdarzeń:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Nie wszystkie zdarzenia są wywoływane za każdym razem wystąpieniem nawigacji; zestaw zdarzeń, które są wywoływane zależy od typu nawigacji, która występuje (fragmentu zawartości lub zawartości) i jak zakończeniu nawigacji (anulowane, zatrzymana lub nie powiodła się).  
  
 Na poniższym rysunku przedstawiono sekwencję, w którym te zdarzenia są generowane:  
  
 ![Schemat blokowy nawigacji strony](~/add/media/navigationoverviewfigure11.png "schematu blokowego nawigacji strony")  
  
 Podczas lub po nawigacji <xref:System.Windows.Navigation.NavigationService> zawiera informacje o zawartości, do którego następuje, łącznie z identyfikatora URI zawartości do (<xref:System.Windows.Navigation.NavigationService.Source%2A>), identyfikator URI bieżącej zawartości (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>), a obiekt, który zawiera zawartość, która została przejście (<xref:System.Windows.Navigation.NavigationService.Content%2A>).  
  
 Gdy zawartość jest przejście do, <xref:System.Windows.Navigation.NavigationService> rejestruje nawigacji jako wpis w historii nawigacji. Wpis jest dodawany do utworzenia kopii historii nawigacji po wystąpieniu nowego nawigacji, wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metody, lub przechodząc do zapisu w historii przeglądania do przodu, wywołując <xref:System.Windows.Navigation.NavigationService.GoForward%2A>. Wpis jest dodany do historii przeglądania do przodu przechodząc historii nawigacji do wpisu w ponownie przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> i <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> raportu, czy istnieją wpisy na spód i historii przeglądania do przodu, odpowiednio. Ponadto najnowszych wpis na spód historii nawigacji można usunąć przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.  
  
 Domyślnie <xref:System.Windows.Navigation.NavigationService> wystąpienia obiektu zawartości nie są zapisywane w historii nawigacji. Zamiast tego <xref:System.Windows.Navigation.NavigationService> tworzy nowe wystąpienie obiektu zawartości zawsze jest przejście do, za pomocą historii nawigacji. To zachowanie jest przeznaczona do uniknąć zużycie pamięci zbyt dużą liczbą i duże zawartości są trwa przejście. W związku z tym stanu zawartości nie jest zapamiętany z jednego nawigacji do następnego. Jednak WPF oferuje kilka technik, za pomocą których można przechowywać fragment stanu dla elementu zawartości, w historii nawigacji.  
  
 Przy użyciu <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, należy również pamiętać o wiele zestawów stanu dla jednej strony wystąpienia.  
  
 <xref:System.Windows.Navigation.NavigationService> jest `sealed` klasy i dlatego nie można utworzyć wystąpienia; zamiast tego <xref:System.Windows.Navigation.NavigationService> jest używany przez nawigatorów, które umożliwiają nawigowanie. Na platformie WPF, istnieją dwie nawigatorów: <xref:System.Windows.Navigation.NavigationWindow> i <xref:System.Windows.Controls.Frame>.  
  
 Efekty wizualne [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] użyj [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] jako navigator, aby zapewnić zintegrowane środowisko. Fizycznie, jednak [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] rzeczywiście używane <xref:System.Windows.Navigation.NavigationWindow> jako Nawigatora; <xref:System.Windows.Application.MainWindow%2A> właściwość [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] w [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] zwraca odwołanie do <xref:System.Windows.Navigation.NavigationWindow>i historii nawigacji, który jest zarządzany przez <xref:System.Windows.Navigation.NavigationWindow> jest zintegrowany z historią nawigacji, który jest zarządzany przez [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] w następujący sposób:  
  
-   Gdy zawartość jest przejście przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, i <xref:System.Windows.Navigation.NavigationService.GoForward%2A> z poziomu [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] wpisów historii nawigacji odpowiednich zostaną także dodane do [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] historii nawigacji.  
  
-   Gdy wpisy w [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] w przypadku wybrania [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] powoduje, że <xref:System.Windows.Navigation.NavigationService> do nawigacji Wstecz lub do przodu do zawartości, która jest skojarzona z zapisów.  
  
> [!NOTE]
>  A <xref:System.Windows.Controls.Frame> można podać własną historią przeglądania lub historii nawigacji Nawigatora, który go obsługuje. Jeśli <xref:System.Windows.Controls.Frame> udostępnia swoją własną historią przeglądania można wyświetlić jego własnej nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] poruszać się po wpisów w historii nawigacji; te wpisy nie zostały dodane do historii nawigacji Nawigatora hosta (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) i w rezultacie nie można przejść z nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] każdego (zobacz <xref:System.Windows.Controls.Frame.JournalOwnership%2A>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> obiekt, który reprezentuje stan zdefiniowane przez aplikację, skojarzony z określonego elementu zawartości.</param>
        <summary>Dodaje wpis do historii nawigacji, który zawiera kopię <see cref="T:System.Windows.Navigation.CustomContentState" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState>, i <xref:System.Windows.Navigation.IProvideCustomContentState> służą do zapamiętania wiele zestawów stanu dla bieżącej zawartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> jest <see langword="null" />, a <see cref="T:System.Windows.Navigation.CustomContentState" /> nie zwróciła obiekt <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieje co najmniej jeden wpis w historii nawigacji Wstecz.</summary>
        <value>
          <see langword="true" /> Jeśli istnieje co najmniej jeden wpis w historii nawigacji Wstecz; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> Aby ustalić, czy istnieje co najmniej jeden wpis w historii nawigacji Wstecz. Tej właściwości należy sprawdzić przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A>; Jeśli <xref:System.Windows.Navigation.NavigationService.GoBack%2A> nazywa się i nie ma żadnych wpisów w historii nawigacji Wstecz <xref:System.InvalidOperationException> jest generowany.  
  
> [!NOTE]
>  który jeśli historii nawigacji jest współużytkowany przez wielu nawigatorów (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), najbardziej ostatni wpis na spód historii nawigacji mogą nie zostać dodane przez <xref:System.Windows.Navigation.NavigationService> dla bieżącego nawigatora.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu.</summary>
        <value>
          <see langword="true" /> Jeśli istnieje co najmniej jeden wpis w historii przeglądania do przodu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> Aby ustalić, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu. Tej właściwości należy sprawdzić przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A>; Jeśli <xref:System.Windows.Navigation.NavigationService.GoForward%2A> nazywa się i nie ma żadnych wpisów w historii przeglądania do przodu <xref:System.InvalidOperationException> jest generowany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do obiektu zawierającego bieżącej zawartości.</summary>
        <value>Obiekt jest odwołaniem do obiektu zawierającego bieżącej zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość można ustawić w jeden z dwóch sposobów:  
  
-   Bezpośrednio ustawiając go na odwołanie do obiektu.  
  
-   Pośrednio, wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Ustawienie <xref:System.Windows.Navigation.NavigationService> inicjuje nowy nawigacji; ponieważ Nawigacja jest asynchroniczne, <xref:System.Windows.Navigation.NavigationService.Content%2A> nie zwracać wartości, jeśli sprawdzana jest natychmiast po ich ustawiania.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI zawartości, która została ostatnio przejście.</summary>
        <value>A <see cref="T:System.Uri" /> dla zawartości, która została ostatnio przejście, jeśli nawigować do przy użyciu identyfikatora URI; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> właściwość nie zostanie zmieniona, aż inny identyfikator URI nawigacji zakończyła się pomyślnie.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> można ustawić za pomocą tylko do fragmentu identyfikatora URI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy nawigacji do fragmentu zawartości rozpoczyna się, co następuje, jeśli żądanego fragmentu w bieżącej zawartości lub po źródło [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] zawartość została załadowana, jeśli żądanego fragmentu znajduje się w innej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie fragmentu zawartości jest zawartości to znaczy zawarty w nazwanym <xref:System.Windows.UIElement>, która jest <xref:System.Windows.UIElement> którego <xref:System.Windows.FrameworkElement.Name%2A> atrybut zostanie ustawiony, np:  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Przejdź do [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] fragmentu, podając identyfikator URI z sufiksem w następującym formacie:  
  
 \#*FragmentName*  
  
 Poniżej przedstawiono przykład identyfikator URI, który odwołuje się do fragmentu zawartości:  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 Po załadowaniu źródłowej strony (po <xref:System.Windows.Navigation.NavigationService.LoadCompleted> zdarzenia), rozpocznie się nawigacji do fragmentu i <xref:System.Windows.Navigation.NavigationService> próbuje zlokalizować [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragmentu. Jeśli [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragmentu zostanie znaleziony, <xref:System.Windows.Navigation.NavigationService> nakazuje Nawigator zawartości (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) do wyświetlenia w fragmencie. Jeśli potrzebujesz zmienić to zachowanie, może obsługiwać <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zapewniające własne fragmentu nawigacji. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> jest przekazywany <xref:System.Windows.Navigation.FragmentNavigationEventArgs> parametr, który udostępnia właściwości, które są przydatne w tym celu, w tym:  
  
-   Nawigator, który jest właścicielem tej usługi nawigacji (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Nazwa fragmentu.  
  
 Może obsłużyć <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zastąpić domyślną implementację fragmentu WPF z implementacją niestandardowych. Jeśli tak zrobisz, musisz ustawić <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> do `true`; w przeciwnym razie fragmentu WPF domyślnego zachowania przetwarzania została zastosowana.  
  
 Należy unikać bezpośredniego inicjowania nawigacji z poziomu <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> obsługi zdarzeń. Ponieważ <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> jest wywoływane podczas istniejących nawigacji, inicjowanie nowych nawigacji z <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zagnieżdżonej nawigacji, który może powodować tworzy program obsługi zdarzeń <xref:System.ExecutionEngineException> zostanie wygenerowany. Zamiast tego należy pośrednio mogą inicjować nawigacji przez utworzenie asynchroniczne elementu przy użyciu <xref:System.Windows.Threading.Dispatcher>.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, również zgłasza <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
> [!IMPORTANT]
>  Fragment nawigacji nie jest obsługiwana dla luźne [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] stron (tylko kod znaczników [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] pliki z `Page` jako element główny) w następujących przypadkach:  
>   
>  • Podczas nawigowania do fragmentu w utracić [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony.  
>   
>  • Podczas nawigowania z utracić [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony do fragmentu w innym utracić [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony.  
>   
>  Jednak utracić [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony można przejść do jego własnej fragmenty.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zapewniające niestandardowych fragmentu nawigacji. W takim przypadku przykładzie otwiera błąd [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] Jeśli fragmentu w źródle [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] nie odnaleziono strony.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Windows.DependencyObject" /> w zawartości, która jest hostowana przez nawigatora.</param>
        <summary>Pobiera odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> dla navigator, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> dla navigator, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />; może być <see langword="null" /> w niektórych przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigator ma <xref:System.Windows.Navigation.NavigationService> obsługująca nawigację po zawartości. WPF ma dwa nawigatorów: <xref:System.Windows.Navigation.NavigationWindow> i <xref:System.Windows.Controls.Frame>. Przetwarzanie żądania nawigacji i zarządzanie okresem istnienia nawigacji, navigator korzysta z usługi nawigacji WPF, które zostało zaimplementowane jako <xref:System.Windows.Navigation.NavigationService> klasy. Zawartość, która jest hostowana przez nawigatora można odwołać się do navigator <xref:System.Windows.Navigation.NavigationService> przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> metody.  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> Zwraca `null` podczas `dependencyObject`:  
  
-   Jest <xref:System.Windows.Navigation.NavigationWindow>.  
  
-   Jest <xref:System.Windows.Controls.Frame> który:  
  
    1.  Jest hostowana przez inną nawigatora.  
  
    2.  Ma jego <xref:System.Windows.Controls.Frame.JournalOwnership%2A> ustawioną właściwość <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>.  
  
-   Nie jest częścią zawartość, która jest hostowana przez nawigatora.  
  
 WPF oferuje dwa skróty uzyskania odwołanie do <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> Który przetwarzane nawigacji do <xref:System.Windows.Controls.Page> są dostępne z <xref:System.Windows.Controls.Page> sam pobierając zaletą jego <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Windows.Navigation.NavigationService> Używany przez <xref:System.Windows.Controls.Frame> przetworzyć nawigacji można uzyskać, sprawdzając pobierania wartości <xref:System.Windows.Controls.Frame.NavigationService%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób <xref:System.Windows.Controls.UserControl> można pobrać usługi nawigacji przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>.  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przechodzi do ostatniego wpisu na spód historii nawigacji, jeśli istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> właściwości mogą być kontrolowane do ustalenia, czy są wpisy w historii nawigacji Wstecz.  
  
   
  
## Examples  
 Poniższy przykład przechodzi do ostatniego wpisu na spód historii nawigacji, jeśli taka istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> jest wywoływane, gdy nie ma żadnych wpisów w historii nawigacji Wstecz.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przejdź do ostatniego zapisu w historii przeglądania do przodu, jeśli istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> właściwości mogą być kontrolowane do ustalenia, czy są wpisy w historii przeglądania do przodu.  
  
   
  
## Examples  
 Poniższy przykład powoduje przejście do najnowszych wpis w historii przeglądania do przodu, jeśli taka istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> jest wywoływane, gdy nie ma żadnych wpisów w historii przeglądania do przodu.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość, która została przejście został załadowany, przeanalizować i zostało uruchomione renderowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługi <xref:System.Windows.Navigation.NavigationService.LoadCompleted> Aby odnaleźć stosowne informacje dotyczące żądania nawigacji po zakończeniu obciążenia. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.LoadCompleted> obsługi zdarzeń i obejmuje:  
  
-   Zawartość i jego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> nie jest wywoływane, gdy nie można odnaleźć lub załadować, w którym to przypadku źródłowej strony <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest wywoływane.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, również zgłasza <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.LoadCompleted>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przejdź asynchronicznie do zawartości określonego źródła.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, aby przejść do.</param>
        <summary>Przejdź asynchronicznie do zawartości, który jest zawarty w obiekcie.</summary>
        <returns>
          <see langword="true" /> Jeśli nie jest anulowana Nawigacja; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> przejdzie do <xref:System.Object> określonego przez `root` jeśli są spełnione następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostało anulowane.  
  
-   Żądanie sieci web (zobacz <xref:System.Windows.Navigation.NavigationService.Navigating>) mogą być tworzone.  
  
 Jeśli `root` jest `null`, istniejąca zawartość (<xref:System.Windows.Navigation.NavigationService.Content%2A>) jest wyczyszczone.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web, może się pojawić wyjątek sieci Web (na przykład 404: nie można odnaleźć pliku). Takie wyjątki od może obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do <xref:System.Windows.Controls.Page> obiekt zawierający drzewa zawartości źródłowej.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt inicjowany z identyfikatora URI dla żądanej zawartości.</param>
        <summary>Przejdź asynchronicznie do zawartości, który jest określony przez identyfikator URI.</summary>
        <returns>
          <see langword="true" /> Jeśli nie jest anulowana Nawigacja; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `source` może być sieci Web [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] lub pakiecie prawidłowy identyfikator URI (zobacz [identyfikatorów URI pakietu na platformie WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> przejdzie do określony przez identyfikator URI `source` jeśli są spełnione następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostało anulowane.  
  
-   Żądanie sieci web (zobacz <xref:System.Windows.Navigation.NavigationService.Navigating>) mogą być tworzone.  
  
 Jeśli `source` jest `null`, istniejąca zawartość (<xref:System.Windows.Navigation.NavigationService.Content%2A>) jest wyczyszczone.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web, może się pojawić wyjątek sieci Web (na przykład 404: nie można odnaleźć pliku). Takie wyjątki od może obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 Można użyć <xref:System.Windows.Navigation.NavigationService.Navigate%2A> do nawigacji do fragmentu zawartości. Jeśli zawartość identyfikowanej przez URI jest bieżący, nie została pobrana ponownie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do identyfikatora URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, aby przejść do.</param>
        <param name="navigationState">Obiekt zawierający dane służący do przetworzenia podczas nawigacji.</param>
        <summary>Asynchronicznie przejdź do zawartości, która znajduje się za pomocą obiektu i przekazać obiekt, który zawiera dane służący do przetworzenia podczas nawigacji.</summary>
        <returns>
          <see langword="true" /> Jeśli nie jest anulowana Nawigacja; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zachowanie jest takie samo jak <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, mimo że obiekt jest przekazywany zamiast identyfikatora URI.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do <xref:System.Windows.Controls.Page> obiekt zawierający źródło zawartości i przekazywanie Stan nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt inicjowany z identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt zawierający dane służący do przetworzenia podczas nawigacji.</param>
        <summary>Przejdź asynchronicznie do źródła zawartości znajdującej się na identyfikator URI i przekazać obiekt, który zawiera dane do zastosowania w przypadku przetwarzania podczas nawigacji.</summary>
        <returns>
          <see langword="true" /> Jeśli nie jest anulowana Nawigacja; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ nawigacji są asynchroniczne, istnieje możliwość, że wiele nawigacji być w toku w tym samym czasie. Na przykład jeśli istnieją dwie ramki podrzędnych na jednej stronie, zarówno ramki można nawigować. W tym przypadku różnych zdarzeń nawigacji, które zostały zgłoszone przez <xref:System.Windows.Navigation.NavigationService> może być zgłoszono wiele razy, po jednej dla każdego z nich zawartości, którą użytkownik opuszcza się i niekoniecznie, wystąpiło nawigacji. W związku z tym jeśli żądania nawigacji konkretnego musi przetwarzać dane, które są specyficzne dla poszczególnych żądań, nie można użyć danych, która jest dostępna dla wszystkich żądań nawigacji. Zamiast tego można użyć `navigationState` do przekazywania danych do nawigacji przetwarzania, które są specyficzne dla żądania nawigacji jeden.  
  
 Następujące argumenty zdarzenia zapewniają dostęp do Stan nawigacji:  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (przekazany do <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzeń).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (przekazany do <xref:System.Windows.Navigation.NavigationService.Navigated>, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, <xref:System.Windows.Navigation.NavigationService.LoadCompleted> procedury obsługi zdarzeń).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, przechodząc do identyfikatora URI i przekazywanie Stan nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt inicjowany z identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt zawierający dane służący do przetworzenia podczas nawigacji.</param>
        <param name="sandboxExternalContent">Pobieranie zawartości w izolowanym częściowej relacji zaufania (przy użyciu domyślnego Internet strefy zestaw uprawnień, jeśli <see langword="true" />. Wartość domyślna to <see langword="false" />.</param>
        <summary>Przejdź asynchronicznie do źródła zawartości znajdującej się na identyfikator URI, przekaż obiekt zawierający Stan nawigacji dla przetwarzania podczas nawigacji, a piaskownica zawartości.</summary>
        <returns>
          <see langword="true" /> Jeśli nie jest anulowana Nawigacja; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona tylko dla aplikacji autonomicznych i [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] zawartości.  
  
 Ta metoda wykazuje zachowania <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, i rozszerza on przez zapewnienie, że zawartość, która jest pobierany jest umieszczany w izolowanym częściowej relacji zaufania (domyślny zestaw stref internetowych uprawnień — zobacz [WPF częściowej relacji zaufania Zabezpieczenia](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik opuszcza do zawartości zostały znalezione i jest dostępny w <see cref="P:System.Windows.Navigation.NavigationService.Content" /> właściwości, mimo że nie może zakończyć się ładowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługi <xref:System.Windows.Navigation.NavigationService.Navigated> Chcąc wykrywania stosowne informacje dotyczące żądania nawigacji, gdy pobieranie rozpocznie się. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.Navigated> obsługi zdarzeń i obejmuje:  
  
-   Strona źródłowa. Gdy <xref:System.Windows.Navigation.NavigationService.Navigated> jest zgłaszane, część źródłowej strony [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] drzewa ma został przeanalizowany i dołączone do zawartości formantu docelowego.  
  
-   Żądanego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> nie jest wywoływane, gdy nie można odnaleźć lub załadować, w którym to przypadku źródłowej strony <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest wywoływane.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, również zgłasza <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.Navigated>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wymagany jest nowy nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> jest wywoływane, gdy wymagany jest nowy nawigacji, jednak przed źródło zawartości jest wymagana, łącznie z:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> jest wywoływana.  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A> nosi nazwę (lub po wybraniu pozycji z Nawigacja [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Fragmentu zawartości jest przejście.  
  
 Obsługi <xref:System.Windows.Navigation.NavigationService.Navigating> Aby odnaleźć stosowne informacje dotyczące żądania nawigacji przed rozpoczęciem nawigowania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigatingCancelEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.Navigating> obsługi zdarzeń.  
  
 A <xref:System.Net.WebRequest> nawigacji został utworzony i dostępnym dla obiekt <xref:System.Windows.Navigation.NavigatingCancelEventArgs> parametru; ponieważ rzeczywistego żądania nie zostały wprowadzone w tym momencie, można ponownie skonfigurować <xref:System.Net.WebRequest> obiektu, jeśli to konieczne.  
  
 Również obsługiwać <xref:System.Windows.Navigation.NavigatingCancelEventArgs> anulować nawigacji, jeśli jest to wymagane przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> na wartość true. Jeśli anulujesz nawigacji pojawienia się żadne zdarzenia nawigacji.  
  
> [!NOTE]
>  Jeśli aplikacja jest obsługiwana w przeglądarce, nie można uniemożliwić użytkownikowi z wyjściem aplikacji anulując <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzeń.  
  
 Po pierwszym element zawartości jest przejście przez nawigatora (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), zawartość, która jest opuszczeniu każdego z nich zostanie dodany do historii nawigacji. Musisz zapisać informacje o zawartości są przechodzenie od, można dodać stan wpisu dziennika dla tej zawartości, ustawiając <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> z <xref:System.Windows.Navigation.CustomContentState> obiektu.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.Navigating>, również zgłasza <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.Navigating> do wykrywania, czy wykonano żądania, aby odświeżyć zawartość statyczną, a jeśli tak, aby anulować żądanie.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wystąpi błąd podczas nawigowania do żądanej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy albo <xref:System.Net.WebException> lub <xref:System.IO.IOException> jest generowany podczas nawigacji, <xref:System.Windows.Navigation.NavigationService.NavigationFailed> zdarzenia. <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest przekazywany <xref:System.Windows.Navigation.NavigationFailedEventArgs> który hermetyzuje informacje o wyjątku i szczegóły nawigacji, który spowodował wyjątek.  
  
 Gdy wyjątek wynikiem nawigacji nie powiodło się i nie jest obsługiwany, następujące zdarzenia są generowane w podanej kolejności:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> lub <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Jeśli navigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) znajduje się co najmniej jeden nawigatorów, `NavigationFailed` nie jest wywoływane na każdym z nich.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje okresowo podczas pobierania i udostępnia informacje o postępie nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> jest przekazywany <xref:System.Windows.Navigation.NavigationProgressEventArgs> który udostępnia następujące informacje o postępie:  
  
-   Liczba bajtów do tej pory pobrane (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).  
  
-   Łączna liczba bajtów do pobrania (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> jest wywoływane po dla każdego 1024 bajty zawartości pobrane i ponownie liczba pozostałych bajtów jest kiedykolwiek mniej niż 1024 bajty. Z tego powodu obsługi <xref:System.Windows.Navigation.NavigationService.NavigationProgress> oferuje wygodny sposób śledzenia i wyświetlić postęp pobierania bieżącej.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> nie będzie uruchamiany w niektórych przypadkach, takich jak Jeśli przejście jest sam element zawartości lub gdy fragmentu zawartości jest przejście do zawartości, który jest aktualnie załadowany (czyli wartość <xref:System.Windows.Navigation.NavigationService.Content%2A> właściwości).  
  
 Podczas nawigowania do skompilowanych zasobu XAML, ostatecznych <xref:System.Windows.Navigation.NavigationService.NavigationProgress> nie może zostać zgłoszone zdarzenie. Oznacza to, że po zakończeniu pobierania ostatniego zgłoszone <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> wartość nie może być równa <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> wartość. Obsługa <xref:System.Windows.Navigation.NavigationService.LoadCompleted> zdarzenie zgłaszane po zakończeniu nawigacji.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, również zgłasza <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.NavigationProgress>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> metoda jest wywoływana lub gdy wymagane jest nowe nawigacji w trakcie bieżącego nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługi <xref:System.Windows.Navigation.NavigationService.NavigationStopped> należy odnaleźć stosowne informacje dotyczące żądania nawigacji po zatrzymaniu pobierania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.NavigationStopped> obsługi zdarzeń i obejmuje:  
  
-   Żądanego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, również zgłasza <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> zdarzenia w <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób obsługi <xref:System.Windows.Navigation.NavigationService.NavigationStopped>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje bieżącej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżący zawartości (określony przez wartość <xref:System.Windows.Navigation.NavigationService.Source%2A> właściwości) jest przejście ponownie, <xref:System.Windows.Navigation.NavigationService> nie ponownie pobrać zawartość. Aby wymusić <xref:System.Windows.Navigation.NavigationService> ponownie przejść do zawartości, należy wywołać <xref:System.Windows.Navigation.NavigationService.Refresh%2A>.  
  
 Należy pamiętać, że jeśli bieżącej zawartości jest ponownie, przejście czy przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Refresh%2A>, nowy wpis nie zostanie dodany do historii nawigacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa ostatniej pozycji dziennika z tyłu historii.</summary>
        <returns>Najnowsza <see cref="T:System.Windows.Navigation.JournalEntry" /> w historii nawigacji Wstecz, jeśli istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli co najmniej dwa nawigatorów (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) udostępnianie tego samego historii nawigacji, można użyć jeden Nawigator <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> można pobrać z wpisem historii nawigacji Wstecz dla nawigacji, które miało miejsce w innym nawigatora.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI bieżącej zawartości lub identyfikator URI nowej zawartości, która jest obecnie trwa przejście do.</summary>
        <value>A <see cref="T:System.Uri" /> zawiera identyfikator URI dla bieżącej zawartości lub zawartość, która jest obecnie trwa przejście do.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest ustawiona na inny identyfikator URI niż aktualnie wyświetlane, Nawigatora (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) powoduje przejście do określonego identyfikatora URI.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> ustawiono zawartości, który jest ładowany z identyfikatora URI, który jest przejście do, chyba że nawigacji zostało anulowane.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> można ustawić za pomocą tylko do fragmentu identyfikatora URI i może być ustawiony na `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatrzymuje dalsze pobieranie zawartości dla bieżącego żądania nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> można wywołać natychmiast <xref:System.Windows.Navigation.NavigationService.Navigate%2A> zwraca i zatrzymuje nawigacji, który jest w toku w ramkach podrzędnych.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 Wywoływanie <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> metoda zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationStopped> zdarzeń.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> musi zostać wywołany w tym samym wątku, który zainicjował nawigacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób zatrzymać ładowanie.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>