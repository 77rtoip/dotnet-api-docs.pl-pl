<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ada487929a3270b8b3a3f316486ea10531a71ff1" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39762302" /></Metadata><TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody, właściwości i zdarzeń do obsługi nawigacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> hermetyzuje możliwość pobrania zawartości w ramach kontekstu nawigacyjne myszą.  
  
 Zawartość może być dowolnego typu obiektu .NET Framework i pliki HTML. Ogólnie rzecz biorąc, strony są jednak preferowaną jako sposób na zawartość pakietu do nawigacji (zobacz <xref:System.Windows.Controls.Page>).  
  
 Zawartość można nastąpi przejście, zapewniając wystąpienie obiektu i wywoływania przeciążenia <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metodę, która przyjmuje obiekt:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Alternatywnie zawartości można nastąpi przejście, przekazując względny lub bezwzględny identyfikator URI do jednego z <xref:System.Windows.Navigation.NavigationService.Navigate%2A> przeciążenia metody, które akceptuje identyfikator URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Gdy zawartość jest przejście przez identyfikator URI, <xref:System.Windows.Navigation.NavigationService> zwróci obiekt, który zawiera zawartość.  
  
 Okres istnienia nawigacji można śledzić za pośrednictwem następujących zdarzeń:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Nie wszystkie zdarzenia są wywoływane za każdym razem, wystąpieniem nawigacji; zestaw zdarzeń, które są wywoływane zależy od rodzaju nawigacji, który występuje (fragment zawartości lub zawartości) i jak kończy nawigacji (anulowane, zatrzymana lub niepowodzeniem).  
  
 Na poniższym rysunku przedstawiono sekwencję, w którym te zdarzenia są wywoływane:  
  
 ![Schemat blokowy nawigacji strony](~/add/media/navigationoverviewfigure11.png "schematu blokowego nawigacji strony")  
  
 W trakcie lub po nawigacji <xref:System.Windows.Navigation.NavigationService> zawiera informacje o zawartości, do którego następuje, łącznie z identyfikatora URI zawartości do (<xref:System.Windows.Navigation.NavigationService.Source%2A>), identyfikator URI zawartości bieżącej (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>) i obiekt, który zawiera zawartość, która została przejście (<xref:System.Windows.Navigation.NavigationService.Content%2A>).  
  
 Gdy zawartość jest kierowana do <xref:System.Windows.Navigation.NavigationService> rejestruje nawigacji jako wpis w historii nawigacji. Wpis zostanie dodany do ponownie historii nawigacji, gdy wystąpi nową nawigację, wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A> metody lub przechodząc do zapisu w historii przeglądania do przodu, wywołując <xref:System.Windows.Navigation.NavigationService.GoForward%2A>. Wpis zostanie dodany do historii przeglądania do przodu, przechodząc do wpisu w ponownie historii nawigacji przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> i <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> raportu, czy istnieją wpisy w Wstecz i historii przeglądania do przodu, odpowiednio. Ponadto najnowszy wpis na spód historii nawigacji można usunąć, wywołując <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.  
  
 Domyślnie <xref:System.Windows.Navigation.NavigationService> nie przechowuje wystąpienie obiektu zawartości w historii nawigacji. Zamiast tego <xref:System.Windows.Navigation.NavigationService> tworzy nowe wystąpienie obiektu zawartości każdorazowo jest przejście do, za pomocą historii nawigacji. To zachowanie jest przeznaczony do uniknąć zużycie zbyt dużej ilości pamięci, gdy dużą liczbą i dużych fragmentów zawartości są trwa przejście. W związku z tym stanu zawartości nie zapamiętywane jest jeden nawigacji do następnego. Jednak WPF zapewnia kilka technik, które można przechowywać element stanu element zawartości w historii nawigacji.  
  
 Za pomocą <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, można również Pamiętaj, że wiele zestawów stanie w przypadku pojedynczej strony.  
  
 <xref:System.Windows.Navigation.NavigationService> jest `sealed` klasy i dlatego nie można utworzyć wystąpienia; zamiast tego <xref:System.Windows.Navigation.NavigationService> jest używany przez nawigatorów, które umożliwiają nawigowanie. W środowisku WPF istnieją dwa nawigatorów: <xref:System.Windows.Navigation.NavigationWindow> i <xref:System.Windows.Controls.Frame>.  
  
 Wizualnie [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] użyj [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] jako Nawigator, aby zapewnić zintegrowane środowisko. Fizycznie, jednak [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] rzeczywiście używane <xref:System.Windows.Navigation.NavigationWindow> jako Nawigator; <xref:System.Windows.Application.MainWindow%2A> właściwość [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] działające w [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] zwraca odwołanie do <xref:System.Windows.Navigation.NavigationWindow>i historię nawigacji, który jest zarządzany przez <xref:System.Windows.Navigation.NavigationWindow> jest zintegrowana z historią nawigacji, który jest zarządzany przez [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] w następujący sposób:  
  
-   Gdy zawartość jest przejście przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, i <xref:System.Windows.Navigation.NavigationService.GoForward%2A> z poziomu [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] wpisów historii odpowiednie nawigacji są również dodawane do [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] historii nawigacji.  
  
-   Gdy wpisy w [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] w przypadku wybrania [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] powoduje, że <xref:System.Windows.Navigation.NavigationService> Przejdź wstecz lub do przodu do zawartości, który jest skojarzony z tymi wpisami.  
  
> [!NOTE]
>  Element <xref:System.Windows.Controls.Frame> można podać własną historią przeglądania lub historii nawigacji Nawigatora, który ją obsługuje. Jeśli <xref:System.Windows.Controls.Frame> zawiera własną historią przeglądania, może on wyświetlać swój własny nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] przechodzenie przez wpisy w historii nawigacji; te wpisy nie są dodawane do historii nawigacji Nawigatora hosta (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) i w związku z tym, nie może być przejście z okienka nawigacji [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] każdego z nich (zobacz <xref:System.Windows.Controls.Frame.JournalOwnership%2A>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">Element <see cref="T:System.Windows.Navigation.CustomContentState" /> obiektu, który reprezentuje stan zdefiniowane przez aplikację, który jest skojarzony z konkretne zawartości.</param>
        <summary>Dodaje wpis do historii nawigacji, który zawiera kopię <see cref="T:System.Windows.Navigation.CustomContentState" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState>, i <xref:System.Windows.Navigation.IProvideCustomContentState> służą do zapamiętania wiele zestawów stanu dla bieżącej zawartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="state" /> jest <see langword="null" />, a <see cref="T:System.Windows.Navigation.CustomContentState" /> obiektu nie są zwracane z <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieje co najmniej jeden wpis w historii przeglądania do tyłu.</summary>
        <value><see langword="true" /> Jeśli istnieje co najmniej jeden wpis w historii przeglądania do tyłu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> Aby ustalić, czy istnieje co najmniej jeden wpis w historii przeglądania do tyłu. Tę właściwość, należy sprawdzić przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A>; Jeśli <xref:System.Windows.Navigation.NavigationService.GoBack%2A> nazywa się i nie ma żadnych wpisów w historii przeglądania do tyłu <xref:System.InvalidOperationException> zgłaszany.  
  
> [!NOTE]
>  Jeśli w historii nawigacji jest współużytkowany przez wielu nawigatorów (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), maksymalnie ostatni wpis tworzenie kopii historii nawigacji mogły nie zostać dodane przez <xref:System.Windows.Navigation.NavigationService> dla bieżącego navigator.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu.</summary>
        <value><see langword="true" /> Jeśli istnieje co najmniej jeden wpis w historii przeglądania do przodu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> Aby ustalić, czy istnieje co najmniej jeden wpis w historii przeglądania do przodu. Tę właściwość, należy sprawdzić przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A>; Jeśli <xref:System.Windows.Navigation.NavigationService.GoForward%2A> nazywa się i nie ma żadnych wpisów w historii przeglądania do przodu <xref:System.InvalidOperationException> zgłaszany.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do obiektu, który zawiera bieżącej zawartości.</summary>
        <value>Obiekt, który jest odwołaniem do obiektu, który zawiera bieżącej zawartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość można ustawić w jeden z dwóch sposobów:  
  
-   Bezpośrednio ustawiając dla niej na odwołanie do obiektu.  
  
-   Pośrednio, wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Ustawienie <xref:System.Windows.Navigation.NavigationService> inicjuje nową nawigację; ponieważ Nawigacja jest asynchroniczna, <xref:System.Windows.Navigation.NavigationService.Content%2A> nie zwraca wartości, jeśli sprawdzana jest natychmiast po ich ustawiania.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI zawartości, która została ostatnio przejście.</summary>
        <value>A <see cref="T:System.Uri" /> zawartości, która została ostatnio przejście, jeśli nawigować do przy użyciu identyfikatora URI; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> właściwość nie jest zmieniany, aż inny identyfikator URI nawigacji zakończyła się pomyślnie.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> można ustawić za pomocą tylko do fragmentu identyfikatora URI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy nawigacji do fragmentu zawartości rozpoczyna się, co następuje natychmiast, jeśli żądany fragment jest w bieżącej zawartości lub po źródła [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] zawartości został załadowany, jeśli żądany fragment znajduje się w innej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie fragmentu zawartości jest zawartość oznacza to zawartych nazwane <xref:System.Windows.UIElement>, czyli <xref:System.Windows.UIElement> którego <xref:System.Windows.FrameworkElement.Name%2A> ustawiono atrybut, na przykład:  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Przejdź do [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] fragmentu, podając identyfikator URI z sufiksem w następującym formacie:  
  
 \#*FragmentName*  
  
 Poniżej przedstawiono przykładowy identyfikator URI, który odwołuje się do fragmentu zawartości:  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 Po załadowaniu źródłowej strony (po <xref:System.Windows.Navigation.NavigationService.LoadCompleted> zdarzenie jest zgłaszane), rozpoczyna się Nawigacja fragmentów i <xref:System.Windows.Navigation.NavigationService> próbuje zlokalizować [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragmentu. Jeśli [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragment zostanie znaleziony, <xref:System.Windows.Navigation.NavigationService> powoduje, że zawartość navigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) do wyświetlenia tego fragmentu. Jeśli potrzebujesz zmienić to zachowanie, które ułatwią Ci obsługę <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zapewniające własne fragmentu nawigacji. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> jest przekazywany <xref:System.Windows.Navigation.FragmentNavigationEventArgs> parametr, który udostępnia właściwości, które są przydatne w tym celu, w tym:  
  
-   Nawigator, który jest właścicielem tej usługi nawigacji (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Nazwa fragmentu.  
  
 Może obsługiwać <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zastąpić domyślną implementację fragmentu WPF za pomocą niestandardowych implementacji. Jeśli tak zrobisz, musisz ustawić <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> do `true`; w przeciwnym razie fragmentu WPF domyślnego zachowania przetwarzania jest stosowany.  
  
 Nie należy bezpośrednio inicjowanie nawigacji z poziomu <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> programu obsługi zdarzeń. Ponieważ <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> jest wywoływane podczas nawigacji istniejących, inicjowanie nową nawigację z <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> programu obsługi zdarzeń tworzy zagnieżdżonej nawigacji, który może spowodować <xref:System.ExecutionEngineException> zostanie wygenerowany. Zamiast tego możesz pośrednio zainicjować nawigacji, tworząc asynchroniczny element roboczy używając <xref:System.Windows.Threading.Dispatcher>.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, także zgłasza <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
> [!IMPORTANT]
>  Nawigacja fragmentów nie jest obsługiwana dla luźne [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] stron (tylko znaczniki [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] pliki z `Page` jako elementu głównego) w następujących przypadkach:  
>   
>  • Podczas nawigowania do fragmentu w luźne [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony.  
>   
>  • Po przejściu z luźne [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony do fragmentu w innym luźne [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony.  
>   
>  Jednak nie będzie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] strony można przejść do jego własnej fragmentów.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> zapewniające niestandardowe fragmentu nawigacji. W takim przypadku przykład otwiera błąd [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] strony jeśli fragment w źródle [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] strona nie zostanie znaleziona.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><see cref="T:System.Windows.DependencyObject" /> w zawartości, która jest obsługiwana przez navigator.</param>
        <summary>Pobiera odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> dla navigator, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Odwołanie do <see cref="T:System.Windows.Navigation.NavigationService" /> dla navigator, którego zawartość zawiera określony <see cref="T:System.Windows.DependencyObject" />; może być <see langword="null" /> w niektórych przypadkach.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nawigator zawiera <xref:System.Windows.Navigation.NavigationService> obsługująca nawigowania po zawartości. WPF ma dwa nawigatorów: <xref:System.Windows.Navigation.NavigationWindow> i <xref:System.Windows.Controls.Frame>. Do przetwarzania żądań nawigacji i zarządzanie okresem istnienia nawigacji, Nawigator korzysta z usługi nawigacji WPF, które zostało zaimplementowane jako <xref:System.Windows.Navigation.NavigationService> klasy. Zawartość, która jest hostowana przez Nawigator można odwołać się do Nawigator <xref:System.Windows.Navigation.NavigationService> przez wywołanie metody <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> metody.  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> Zwraca `null` podczas `dependencyObject`:  
  
-   Jest <xref:System.Windows.Navigation.NavigationWindow>.  
  
-   Jest <xref:System.Windows.Controls.Frame> który:  
  
    1.  Jest obsługiwany przez inny Nawigator.  
  
    2.  Ma jego <xref:System.Windows.Controls.Frame.JournalOwnership%2A> właściwością <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>.  
  
-   Nie jest częścią zawartość, która jest hostowana przez navigator.  
  
 WPF oferuje dwa skróty nabycia odwołanie do <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> Przetwarzane, nawigację do <xref:System.Windows.Controls.Page> jest możliwy z <xref:System.Windows.Controls.Page> sam przez pobranie wartości jego <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> właściwości.  
  
-   <xref:System.Windows.Navigation.NavigationService> Używanego przez <xref:System.Windows.Controls.Frame> do przetworzenia nawigacji może zostać oceniony przez wprowadzenie wartości <xref:System.Windows.Controls.Frame.NavigationService%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób <xref:System.Windows.Controls.UserControl> można pobrać usługi nawigacji, wywołując <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>.  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyObject" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje przejście do najnowszy wpis na spód historii nawigacji, jeśli taka istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> właściwości mogą być kontrolowane do ustalenia, czy są wpisy w historii przeglądania do tyłu.  
  
   
  
## Examples  
 Poniższy przykład powoduje przejście do najnowszy wpis tworzenie kopii historii nawigacji, jeśli taka istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> jest wywoływana, gdy nie ma żadnych wpisów w historii przeglądania do tyłu.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przejdź do najnowszy wpis w historii przeglądania do przodu, jeśli taka istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed wywołaniem <xref:System.Windows.Navigation.NavigationService.GoForward%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> właściwości mogą być kontrolowane do ustalenia, czy są wpisy w historii przeglądania do przodu.  
  
   
  
## Examples  
 Poniższy przykład powoduje przejście do najnowszy wpis w historii przeglądania do przodu, jeśli taka istnieje.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> jest wywoływana, gdy nie ma żadnych wpisów w historii przeglądania do przodu.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość, która została przejście został załadowany, analizowane, a rozpoczął renderowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.LoadCompleted> Jeśli musisz odnaleźć odpowiednie informacje dotyczące żądania nawigacji po zakończeniu ładowania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.LoadCompleted> programu obsługi zdarzeń i obejmuje:  
  
-   Zawartość i jego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie metody albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> nie jest inicjowane, gdy źródłowej strony nie można odnaleźć lub załadować, w którym to przypadku <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest wywoływane.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, także zgłasza <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.LoadCompleted>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przejdź asynchronicznie do zawartości określonego źródła.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, aby przejść do.</param>
        <summary>Przejdź asynchronicznie do zawartości, która znajduje się za pomocą obiektu.</summary>
        <returns><see langword="true" /> Jeśli nie zostało anulowane nawigacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> spowoduje przejście do <xref:System.Object> określony przez `root` jeśli są spełnione następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostanie anulowane.  
  
-   Żądania sieci web (zobacz <xref:System.Windows.Navigation.NavigationService.Navigating>) mogą być tworzone.  
  
 Jeśli `root` jest `null`, istniejąca zawartość (<xref:System.Windows.Navigation.NavigationService.Content%2A>) jest wyczyszczone.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web, może pojawić się wyjątek sieci Web (na przykład 404: nie można odnaleźć pliku). Może obsługiwać wyjątków z <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do <xref:System.Windows.Controls.Page> obiekt zawierający drzewa zawartości źródłowej.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <summary>Przejdź asynchronicznie do zawartości, który jest określony przez identyfikator URI.</summary>
        <returns><see langword="true" /> Jeśli nie zostało anulowane nawigacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `source` może być sieć Web [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] lub prawidłowy identyfikator URI pakietu (zobacz [pakiet URI w WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> spowoduje przejście do określonego przez identyfikator URI `source` jeśli są spełnione następujące warunki:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Zdarzenie nie zostanie anulowane.  
  
-   Żądania sieci web (zobacz <xref:System.Windows.Navigation.NavigationService.Navigating>) mogą być tworzone.  
  
 Jeśli `source` jest `null`, istniejąca zawartość (<xref:System.Windows.Navigation.NavigationService.Content%2A>) jest wyczyszczone.  
  
> [!NOTE]
>  Podczas pobierania zawartości sieci Web, może pojawić się wyjątek sieci Web (na przykład 404: nie można odnaleźć pliku). Może obsługiwać wyjątków z <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 Możesz użyć <xref:System.Windows.Navigation.NavigationService.Navigate%2A> do nawigacji do fragmentu zawartości. Jeśli zawartość identyfikowane przez identyfikator URI jest bieżącej zawartości, nie została pobrana ponownie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do identyfikatora URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Obiekt, który zawiera zawartość, aby przejść do.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które ma być używany do przetworzenia podczas nawigacji.</param>
        <summary>Asynchronicznie przejdź do zawartości, która znajduje się za pomocą obiektu i przekazać obiekt, który zawiera dane, które ma być używany do przetworzenia podczas nawigacji.</summary>
        <returns><see langword="true" /> Jeśli nie zostało anulowane nawigacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma takie samo zachowanie jako <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, mimo że obiekt jest przekazywany zamiast identyfikatora URI.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przejść do <xref:System.Windows.Controls.Page> obiekt zawierający zawartość źródłową, a następnie przekazanie Stan nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które ma być używany do przetworzenia podczas nawigacji.</param>
        <summary>Przejdź asynchronicznie do źródła zawartości znajdującej się na identyfikator URI i przekazać obiekt, który zawiera dane, które ma być używany dla przetwarzania podczas nawigowania.</summary>
        <returns><see langword="true" /> Jeśli nie zostało anulowane nawigacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ tego są asynchroniczne, istnieje możliwość, że wiele tego być w toku, w tym samym czasie. Na przykład w przypadku dwóch ramek podrzędnych na jednej stronie, można przejść obie ramki. W tym przypadku różnych zdarzeń nawigacji, które są wywoływane przez <xref:System.Windows.Navigation.NavigationService> może być podniesione wiele razy, jeden dla każdego elementu zawartości, do którego następuje do, ale niekoniecznie, tego zażądano. W związku z tym jeśli żądanie określonej nawigacji potrzebuje do przetwarzania danych, które są specyficzne dla pojedynczego żądania, nie można użyć danych, która jest dostępna dla wszystkich żądań nawigacji. Zamiast tego można użyć `navigationState` do przekazywania danych dla nawigacji przetwarzania, który jest specyficzny dla nawigacji jednego żądania.  
  
 Następujące argumenty zdarzenia zapewniają dostęp do Stan nawigacji:  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (przekazany do <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzeń).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (przekazany do <xref:System.Windows.Navigation.NavigationService.Navigated>, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, <xref:System.Windows.Navigation.NavigationService.LoadCompleted> procedury obsługi zdarzeń).  
  
   
  
## Examples  
 Poniższy przykład demonstruje, przechodząc do identyfikatora URI i przekazanie Stan nawigacji.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> obiekt został zainicjowany przy użyciu identyfikatora URI dla żądanej zawartości.</param>
        <param name="navigationState">Obiekt, który zawiera dane, które ma być używany do przetworzenia podczas nawigacji.</param>
        <param name="sandboxExternalContent">Pobierz zawartość w izolowanym częściowej relacji zaufania (przy użyciu domyślnego internetowego strefa zestaw uprawnień, jeśli <see langword="true" />. Wartość domyślna to <see langword="false" />.</param>
        <summary>Przejdź asynchronicznie do źródła zawartości znajdującej się na identyfikator URI, przekazać obiekt zawierający Stan nawigacji dla przetwarzania podczas nawigacji i piaskownicy zawartości.</summary>
        <returns><see langword="true" /> Jeśli nie zostało anulowane nawigacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona tylko dla aplikacji autonomicznej i [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] zawartości.  
  
 Ta metoda wykazuje takie samo zachowanie jako <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, i rozszerza je, zapewniając, że zawartość, która jest pobierany jest umieszczana w izolowanym częściowej relacji zaufania (z domyślnym zestawem strefy Internet uprawnień — zobacz [częściowej relacji zaufania WPF Zabezpieczenia](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zawartość, do którego następuje do znaleziono i jest dostępny w <see cref="P:System.Windows.Navigation.NavigationService.Content" /> właściwości, mimo że nie może zakończyć się ładowanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.Navigated> Jeśli potrzebujesz do wykrywania odpowiednie informacje dotyczące żądania nawigacji, gdy rozpocznie się pobieranie. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.Navigated> programu obsługi zdarzeń i obejmuje:  
  
-   Strona źródła. Gdy <xref:System.Windows.Navigation.NavigationService.Navigated> jest wywoływane, część strony źródłowej [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] drzewa został przeanalizowany i dołączone do zawartości formantu docelowego.  
  
-   Żądanego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie metody albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Szczegóły odpowiedzi (przy użyciu <xref:System.Net.WebResponse> obiektu).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> nie jest inicjowane, gdy źródłowej strony nie można odnaleźć lub załadować, w którym to przypadku <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest wywoływane.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, także zgłasza <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.Navigated>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wymagane jest nową nawigację.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> jest wywoływane, gdy nowa Nawigacja jest wymagane, ale przed źródła zawartości jest wymagana, gdy w tym:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> jest wywoływana.  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> lub <xref:System.Windows.Navigation.NavigationService.GoForward%2A> nosi nazwę (lub nawigacji zostanie wybrany wpis [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Fragmentu zawartości jest przejście.  
  
 Możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.Navigating> Jeśli musisz odnaleźć odpowiednie informacje dotyczące żądania nawigacji przed rozpoczęciem nawigowania. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigatingCancelEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.Navigating> programu obsługi zdarzeń.  
  
 A <xref:System.Net.WebRequest> obiekt nawigacji zostanie utworzone i udostępniła <xref:System.Windows.Navigation.NavigatingCancelEventArgs> parameter; ponieważ rzeczywistego żądania nie zostały wprowadzone w tym momencie, możesz ponownie skonfigurować <xref:System.Net.WebRequest> obiektu, jeśli to konieczne.  
  
 Również obsługiwać <xref:System.Windows.Navigation.NavigatingCancelEventArgs> anulować nawigacji, jeśli jest to wymagane przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> na wartość true. Jeśli anulujesz nawigacji, Brak zdarzeń nawigacji są wywoływane.  
  
> [!NOTE]
>  Jeśli aplikacja jest hostowana w przeglądarce, możesz nie uniemożliwia użytkownikowi przechodzenia poza aplikację, anulując <xref:System.Windows.Navigation.NavigationService.Navigating> zdarzeń.  
  
 Po pierwszy element zawartości jest przejście przez navigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), każda część zawartości, która jest opuszczeniu jest dodawana do historii nawigacji. Musisz zapisać informacje o zawartości, nawigacja z stanie, można dodać stan wpisu dziennika dla tej zawartości, ustawiając <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> z <xref:System.Windows.Navigation.CustomContentState> obiektu.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.Navigating>, także zgłasza <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.Navigating> do wykrywania, czy wprowadzono żądanie, aby odświeżyć zawartość statyczną, a jeśli tak, aby anulować żądanie.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wystąpi błąd podczas nawigowania do żądanej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy albo <xref:System.Net.WebException> lub <xref:System.IO.IOException> zgłaszany podczas nawigacji <xref:System.Windows.Navigation.NavigationService.NavigationFailed> zdarzenie jest wywoływane. <xref:System.Windows.Navigation.NavigationService.NavigationFailed> jest przekazywany <xref:System.Windows.Navigation.NavigationFailedEventArgs> który hermetyzuje informacje o wyjątku i szczegóły nawigacji, który spowodował wyjątek.  
  
 Wyjątek powoduje nawigacji nie powiodło się, gdy nie jest obsługiwana, następujące zdarzenia są wywoływane w podanej kolejności:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> lub <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Jeśli navigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) jest obsługiwana przez co najmniej jeden nawigatorów, `NavigationFailed` nie jest inicjowane na każdym z nich.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje okresowo podczas pobierania i udostępnia informacje o postępie nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> jest przekazywany <xref:System.Windows.Navigation.NavigationProgressEventArgs> który udostępnia następujące informacje o postępie:  
  
-   Liczba pobranych bajtów do tej pory (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).  
  
-   Łączna liczba bajtów do pobrania (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> jest wywoływane pobrany dla każdego 1024 bajty zawartości, i drugi raz, jeśli liczba pozostałych bajtów jest nigdy nie może być mniejsza niż 1024 bajty. Z tego powodu obsługi <xref:System.Windows.Navigation.NavigationService.NavigationProgress> zapewnia wygodny sposób na śledzenie i wyświetlić postęp pobierania bieżącej.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> nie będzie uruchamiany w niektórych przypadkach, np. gdy ten sam element zawartości jest przejście, lub gdy fragmentu zawartości jest przejście na zawartości, która jest aktualnie załadowana (czyli wartość <xref:System.Windows.Navigation.NavigationService.Content%2A> właściwości).  
  
 Podczas przechodzenia do skompilowanych zasobów XAML końcowe <xref:System.Windows.Navigation.NavigationService.NavigationProgress> zdarzenia nie mogą być wywoływane. Oznacza to, że po zakończeniu pobierania ostatniego zgłoszone <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> wartość nie może być równa <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> wartość. Obsługa <xref:System.Windows.Navigation.NavigationService.LoadCompleted> zdarzeń, aby otrzymywać powiadomienia po zakończeniu nawigacji.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, także zgłasza <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.NavigationProgress>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> metoda jest wywoływana, lub gdy zażądano nową nawigację w trakcie bieżącego nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz obsłużyć <xref:System.Windows.Navigation.NavigationService.NavigationStopped> muszą odnajdywać odpowiednie informacje dotyczące żądania nawigacji podczas pobierania została zatrzymana. Te informacje są dostępne z <xref:System.Windows.Navigation.NavigationEventArgs> obiekt, który jest przekazywany do <xref:System.Windows.Navigation.NavigationService.NavigationStopped> programu obsługi zdarzeń i obejmuje:  
  
-   Żądanego identyfikatora URI.  
  
-   Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Dodatkowe dane, jeśli nawigacji zostało zainicjowane przez wywołanie metody albo <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> lub <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Gdy <xref:System.Windows.Navigation.NavigationService> zgłasza <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, także zgłasza <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> zdarzenie na <xref:System.Windows.Application> obiektu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak obsługiwać <xref:System.Windows.Navigation.NavigationService.NavigationStopped>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ponownie ładuje bieżącej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżącej zawartości (określony przez wartość <xref:System.Windows.Navigation.NavigationService.Source%2A> właściwość) jest przejście ponownie <xref:System.Windows.Navigation.NavigationService> nie ponownie pobrać zawartość. Aby wymusić <xref:System.Windows.Navigation.NavigationService> ponownie przejść do zawartości, należy wywołać <xref:System.Windows.Navigation.NavigationService.Refresh%2A>.  
  
 Należy pamiętać, że jeśli bieżącej zawartości jest ponownie, przejście czy wywołując <xref:System.Windows.Navigation.NavigationService.Navigate%2A> lub <xref:System.Windows.Navigation.NavigationService.Refresh%2A>, nowy wpis nie jest dodawana do historii nawigacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa najnowszy wpis dziennika z tyłu historii.</summary>
        <returns>Najbardziej aktualną <see cref="T:System.Windows.Navigation.JournalEntry" /> w historii przeglądania do tyłu, jeśli taka istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli co najmniej dwóch nawigatorów (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) udostępnianie tych samych historii nawigacji, można użyć jeden Nawigator <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> można pobrać z wpisem historii przeglądania do tyłu nawigacji, które miały miejsce w Nawigatorze innego.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI zawartości bieżącej lub identyfikator URI nowej zawartości, która jest aktualnie trwa przejście.</summary>
        <value>Element <see cref="T:System.Uri" /> zawierający identyfikator URI dla bieżącej zawartości lub zawartości, która obecnie jest on przejście.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest ustawiona na inny identyfikator URI niż aktualnie wyświetlane, Nawigator (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) powoduje przejście do określonego identyfikatora URI.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> jest ustawiony na zawartości, który jest ładowany z identyfikatora URI, do którego przejście, chyba że nawigacji zostało anulowane.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> można ustawić za pomocą tylko do fragmentu identyfikatora URI i może być równa `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatrzymuje dalsze pobieranie zawartości dla bieżącego żądania nawigacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> może być wywoływana zaraz <xref:System.Windows.Navigation.NavigationService.Navigate%2A> zwraca i zatrzymuje nawigacji, który jest w toku w ramki podrzędne.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 Wywoływanie <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> wywołuje metodę <xref:System.Windows.Navigation.NavigationService.NavigationStopped> zdarzeń.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> musi być wywołany w tym samym wątku, który zainicjował nawigacji.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób zatrzymać ładowanie.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>