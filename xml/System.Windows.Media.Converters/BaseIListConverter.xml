<Type Name="BaseIListConverter" FullName="System.Windows.Media.Converters.BaseIListConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a25a3384a41d0c36d309751602602febfffbf79c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69438416" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseIListConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseIListConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Converters.BaseIListConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseIListConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseIListConverter abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type BaseIListConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="abecb-101">Definiuje metody służące do <see cref="T:System.Collections.IList" /> konwertowania elementów członkowskich kolekcji na i z <see cref="T:System.String" />wystąpień.</span><span class="sxs-lookup"><span data-stu-id="abecb-101">Defines methods used to convert <see cref="T:System.Collections.IList" /> collection members to and from instances of <see cref="T:System.String" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abecb-102">Ta klasa i jej pochodne są przeznaczone do użycia przez <xref:System.Windows.Markup.Primitives.MarkupWriter> program do [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]serializacji.</span><span class="sxs-lookup"><span data-stu-id="abecb-102">This class and its derivatives are intended to be used by the <xref:System.Windows.Markup.Primitives.MarkupWriter> for serialization of [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseIListConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseIListConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abecb-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.Converters.BaseIListConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="abecb-103">Initializes a new instance of the <see cref="T:System.Windows.Media.Converters.BaseIListConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext td, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext td, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (td As ITypeDescriptorContext, t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ td, Type ^ t);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="baseIListConverter.CanConvertFrom (td, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="td" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="td"><span data-ttu-id="abecb-104">Zawiera informacje kontekstowe wymagane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-104">Provides contextual information required for conversion.</span></span></param>
        <param name="t"><span data-ttu-id="abecb-105">Typ obliczany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-105">Type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="abecb-106">Określa, czy dany typ może być konwertowany.</span><span class="sxs-lookup"><span data-stu-id="abecb-106">Determines if a given type can be converted.</span></span></summary>
        <returns><span data-ttu-id="abecb-107"><see langword="true" />Jeśli ten typ może być konwertowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="abecb-107"><see langword="true" /> if this type can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abecb-108"><xref:System.String>jest jedynym obsługiwanym typem konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-108"><xref:System.String> is the only supported type for conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="baseIListConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="abecb-109">Zawiera informacje kontekstowe wymagane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-109">Provides contextual information required for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="abecb-110">Typ obliczany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-110">Type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="abecb-111">Określa, czy dany typ może być konwertowany na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="abecb-111">Determines if a given type can be converted to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="abecb-112"><see langword="true" />Jeśli ten typ może być konwertowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="abecb-112"><see langword="true" /> if this type can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abecb-113"><xref:System.String>jest jedynym obsługiwanym typem konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-113"><xref:System.String> is the only supported type for conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext td, System.Globalization.CultureInfo ci, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext td, class System.Globalization.CultureInfo ci, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (td As ITypeDescriptorContext, ci As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ td, System::Globalization::CultureInfo ^ ci, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="baseIListConverter.ConvertFrom (td, ci, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="td" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="td"><span data-ttu-id="abecb-114">Zawiera informacje kontekstowe wymagane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-114">Provides contextual information required for conversion.</span></span></param>
        <param name="ci"><span data-ttu-id="abecb-115">Informacje kulturowe, które mają być przestrzegane podczas konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-115">Cultural information to respect during conversion.</span></span></param>
        <param name="value"><span data-ttu-id="abecb-116">Ciąg używany do konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-116">String used for conversion.</span></span></param>
        <summary><span data-ttu-id="abecb-117">Konwertuje do obsługiwanego wystąpienia <see cref="T:System.Collections.IList" />. <see cref="T:System.String" /></span><span class="sxs-lookup"><span data-stu-id="abecb-117">Converts a <see cref="T:System.String" /> to a supported instance of <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="abecb-118"><see cref="T:System.Object" /> Reprezentuje wynik konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-118">An <see cref="T:System.Object" /> that represents the result of the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abecb-119">Występuje, gdy wartość <see langword="null" /> jest i <see cref="T:System.String" />nie jest.</span><span class="sxs-lookup"><span data-stu-id="abecb-119">Occurs if value is <see langword="null" /> and not a <see cref="T:System.String" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="baseIListConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="abecb-120">Zawiera informacje kontekstowe wymagane do konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-120">Provides contextual information required for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="abecb-121">Informacje kulturowe, które mają być przestrzegane podczas konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-121">Cultural information to respect during conversion.</span></span></param>
        <param name="value"><span data-ttu-id="abecb-122">Obiekt jest oceniany pod kątem konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-122">Object being evaluated for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="abecb-123">Typ docelowy jest oceniany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="abecb-123">Destination type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="abecb-124">Konwertuje obsługiwane wystąpienie <see cref="T:System.Collections.IList" /> <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="abecb-124">Converts a supported instance of <see cref="T:System.Collections.IList" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="abecb-125">Reprezentacja <see cref="T:System.Collections.IList" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="abecb-125">String representation of the <see cref="T:System.Collections.IList" /> collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
