<Type Name="SyndicationPerson" FullName="System.ServiceModel.Syndication.SyndicationPerson">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8c858dad30f6cf622ef9fdfcd1e35911c9d6f93" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30576583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationPerson" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationPerson" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationPerson" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje autora lub współautora zawartości zespolonego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Syndication.SyndicationPerson> obiekty można dodać do kolekcji, autorów i współautorzy na <xref:System.ServiceModel.Syndication.SyndicationFeed> i <xref:System.ServiceModel.Syndication.SyndicationItem> obiektów.  
  
 Gdy do Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationPerson> jest zapisywany jako `<author>` lub `<contributor>` elementu.  
  
 Gdy do RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia jest zapisywany jako `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu. Jak <xref:System.ServiceModel.Syndication.SyndicationPerson> jest serializowany zależy od liczby <xref:System.ServiceModel.Syndication.SyndicationPerson> obiekty dodane do <xref:System.ServiceModel.Syndication.SyndicationFeed> lub <xref:System.ServiceModel.Syndication.SyndicationItem>, którą kolekcję <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia są dodawane do i wartość `SerializeExtensionAsAtom` parametr <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29>konstruktora. Jeśli istnieje tylko jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> jest dodawany do <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (lub <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) kolekcji, <xref:System.ServiceModel.Syndication.SyndicationPerson> jest serializowany do `<managingEditor>` elementu. Jeśli istnieje więcej niż jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> jest dodawany do <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (lub <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) kolekcji i `SerializeExtensionsAsAtom` ma ustawioną wartość `true`, wszystkie z <xref:System.ServiceModel.Syndication.SyndicationPerson> obiekty są serializowane do `<a10:author>` elementów. Jeśli `SerializeExtensionsAsAtom` ustawiono `false`, <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpień nie jest serializowany. Wszelkie <xref:System.ServiceModel.Syndication.SyndicationPerson> dodane do wystąpienia <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> (lub <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A>) kolekcji są serializowane tylko, jeśli `SerializeExtensionsAsAtom` ustawiono `true`, w tym przypadku są serializowane do `<a10:contributor>` elementów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania <xref:System.ServiceModel.Syndication.SyndicationPerson> do kolekcji autorów <xref:System.ServiceModel.Syndication.SyndicationFeed> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#8)]
 [!code-vb[SyndicationPerson#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#8)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson> jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson> jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationPerson (System.ServiceModel.Syndication.SyndicationPerson source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationPerson source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationPerson(System::ServiceModel::Syndication::SyndicationPerson ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationPerson" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> Wystąpienia zainicjować nowego wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> klasy z określonym wystąpieniem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Adres e-mail osoby.</param>
        <summary>Inicjuje nowy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia z określonym adresem e-mail.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tego konstruktora.  
  
 [!code-csharp[SyndicationPerson#2](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#2)]
 [!code-vb[SyndicationPerson#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email, string name, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email, string name, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String, name As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email, System::String ^ name, System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Adres e-mail osoby.</param>
        <param name="name">Nazwa osoby.</param>
        <param name="uri">Identyfikator URI strony sieci Web danej osoby.</param>
        <summary>Inicjuje nowy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia z określonym adresem e-mail, nazwę i identyfikator URI (Uniform Resource).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tego konstruktora.  
  
 [!code-csharp[SyndicationPerson#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#3)]
 [!code-vb[SyndicationPerson#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozszerzenia atrybutu <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Słownik, który zawiera kolekcję atrybutów rozszerzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W modelu obiektu syndykacji umożliwia dodanie atrybutów niestandardowych do <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia. Można dodać wszystkie prawidłowe wartości atrybutu XML /.  
  
 Podczas serializacji Atom 1.0, żadnych niestandardowych atrybutów i wartości są zapisywane jako atrybut w `<author>` lub `<contributor>` elementów. Podczas serializacji, aby RSS 2.0, żadnych niestandardowych atrybutów i wartości są zapisywane jako atrybut w `<managingEditor>`, `<a10:contributor>`, lub `<a10:author>` elementów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania rozszerzenia atrybutu <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#9)]
 [!code-vb[SyndicationPerson#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#9)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> kolekcji jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#4](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#4)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> kolekcji jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#5](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationPerson Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię istniejącego <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia sposób klonowania <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#14](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#14)]
 [!code-vb[SyndicationPerson#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozszerzenia elementu <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> zawiera rozszerzenia elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W modelu obiektu syndykacji pozwala dodać niestandardowe elementy XML do <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia. Tak długo, jak przestrzeń nazw elementu zawierającego przestrzeni nazw różni się od, można dodać żadnych prawidłowym elementem XML.  
  
 Podczas serializacji Atom 1.0, dowolnego elementu niestandardowego są zapisywane jako element XML w `<author>` lub `<contributor>` elementu.  
  
 Podczas serializacji, aby RSS 2.0, dowolnego elementu niestandardowego są zapisywane jako element XML w `<managingEditor>`, `<a10:contributor>`, lub `<a10:author>` elementów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania rozszerzenia elementu <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#10)]
 [!code-vb[SyndicationPerson#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#10)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> kolekcji jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#6](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#6)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> kolekcji jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#7](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberSignature Language="VB.NET" Value="Public Property Email As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Email { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia adres e-mail <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Adres e-mail osoby.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy do Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationPerson> właściwości są zapisywane jako `<email>` elementu. `<email>` Element jest wyświetlany w `<author>` lub `<contributor>` elementu kolekcji, które (autorów lub współautorzy) są zależne od <xref:System.ServiceModel.Syndication.SyndicationPerson> jest dodawany do.  
  
 Gdy seryjny RSS 2.0, ta wartość zostanie zapisany jako `<a10:email>` elementu. `<a10:email>` Element jest wyświetlany w `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu. Jeśli istnieje tylko jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<email>` element jest zapisywany w ramach `<managingEditor>` elementu. Jeśli istnieje więcej niż jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<email>` element jest zapisywany w ramach `<a10:author>` elementu. Jeśli <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji współautorzy `<email>` element jest zapisywany w ramach `<a10:contributor>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania adres e-mail <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#11)]
 [!code-vb[SyndicationPerson#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#11)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia nazwę <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Nazwa osoby.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy do Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> właściwości są zapisywane jako `<name>` elementu. `<name>` Element jest wyświetlany w `<author>` lub `<contributor>` elementu kolekcji, które (autorów lub współautorzy) są zależne od <xref:System.ServiceModel.Syndication.SyndicationPerson> jest dodawany do.  
  
 Gdy do RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> właściwości są zapisywane jako `<a10:name>` elementu. `<a10:name>` Element jest wyświetlany w `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu. Jeśli istnieje tylko jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<a10:name>` element jest zapisywany w ramach `<managingEditor>` elementu. Jeśli istnieje więcej niż jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<a10:name>` element jest zapisywany w ramach `<a10:author>` elementu. Jeśli <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji współautorzy `<a10:name>` element jest zapisywany w ramach `<a10:contributor>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania nazwy <xref:System.ServiceModel.Syndication.SyndicationPerson>.  
  
 [!code-csharp[SyndicationPerson#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#12)]
 [!code-vb[SyndicationPerson#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#12)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu.</param>
        <param name="ns">Przestrzeń nazw elementu.</param>
        <param name="value">Ten atrybut można przeanalizować.</param>
        <param name="version">Wersja zespolonego do użycia podczas analizy.</param>
        <summary>Próbuje przeanalizować rozszerzenie atrybutu.</summary>
        <returns>Wartość, która określa, czy rozszerzenie atrybutu przeanalizowany pomyślnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atrybut rozszerzenia są atrybutów niestandardowych, które nie są zdefiniowane przez specyfikacje Atom 1.0 lub RSS 2.0. Są one serializowane jako atrybut `<author>` lub `<contributor>` elementu Atom 1.0 lub `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu RSS 2.0. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę deserializacji rozszerzenia atrybutu niestandardowego. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationPerson> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany atrybut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Nieprawidłowy kod XML podczas odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Do odczytu.</param>
        <param name="version">Syndykacja wersję do użycia podczas analizowania.</param>
        <summary>Próbuje przeanalizować element rozszerzenia.</summary>
        <returns>Wartość, która określa, czy element rozszerzenia przeanalizowany pomyślnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element rozszerzenia są prawidłowe elementy XML, które nie są określone w specyfikacji Atom 1.0 lub RSS 2.0. Można dodać żadnych prawidłowego elementu XML jako rozszerzenie, pod warunkiem jego przestrzeni nazw różni się od otaczającej przestrzeni nazw. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę deserializacji elementu niestandardowego rozszerzenia. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationPerson> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Nieprawidłowy kod XML podczas odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" />.</summary>
        <value>Identyfikator URI witryny sieci Web danej osoby.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy do Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> właściwości są zapisywane jako `<uri>` elementu. `<uri>` Element jest wyświetlany w `<author>` lub `<contributor>` elementu kolekcji, które (autorów lub współautorzy) są zależne od <xref:System.ServiceModel.Syndication.SyndicationPerson> jest dodawany do.  
  
 Gdy do RSS 2.0 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> właściwości są zapisywane jako `<a10:uri>` elementu. `<a10:uri>` Element jest wyświetlany w `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu. Jeśli istnieje tylko jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<a10:uri>` element jest zapisywany w ramach `<managingEditor>` elementu. Jeśli istnieje więcej niż jedna <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji, autorów `<a10:uri>` element jest zapisywany w ramach `<a10:author>` elementu. Jeśli <xref:System.ServiceModel.Syndication.SyndicationPerson> zostanie dodany do kolekcji współautorzy `<a10:uri>` element jest zapisywany w ramach `<a10:contributor>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania identyfikatora URI dla <xref:System.ServiceModel.Syndication.SyndicationPerson> wystąpienia.  
  
 [!code-csharp[SyndicationPerson#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#13)]
 [!code-vb[SyndicationPerson#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#13)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> Do zapisu.</param>
        <param name="version">Wersja zespolonego do użycia podczas zapisywania.</param>
        <summary>Zapisuje określony atrybut rozszerzeń <see cref="T:System.Xml.XmlWriter" /> za pomocą zespolonego określonej wersji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atrybut rozszerzenia są atrybutów niestandardowych, które nie są zdefiniowane przez specyfikacje Atom 1.0 lub RSS 2.0. Są one serializowane jako atrybut `<author>` lub `<contributor>` elementu Atom 1.0 lub `<managingEditor>`, `<a10:author>`, lub `<a10:contributor>` elementu RSS 2.0. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę serializacji rozszerzenia atrybutu niestandardowego. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationLink> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany atrybut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> Do zapisu.</param>
        <param name="version">Wersja zespolonego do użycia podczas zapisywania.</param>
        <summary>Zapisuje określony element rozszerzenia <see cref="T:System.Xml.XmlWriter" /> za pomocą zespolonego określonej wersji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element rozszerzenia są prawidłowe elementy XML, które nie są określone w specyfikacji Atom 1.0 lub RSS 2.0. Można dodać żadnych prawidłowego elementu XML jako rozszerzenie, pod warunkiem jego przestrzeni nazw różni się od otaczającej przestrzeni nazw. Ta metoda jest punkt rozszerzenia, która służy do obsługi serializacji elementu niestandardowego rozszerzenia. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationPerson> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>