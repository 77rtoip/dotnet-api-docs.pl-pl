<Type Name="SyndicationLink" FullName="System.ServiceModel.Syndication.SyndicationLink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcd7adae7ecadbee1c762ec234fcaf23f0a9441e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36612149" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationLink extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationLink" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationLink" />
  <TypeSignature Language="F#" Value="type SyndicationLink = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje łącze w zespolonego źródła danych lub elementów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Syndication.SyndicationLink> można dodać do <xref:System.ServiceModel.Syndication.SyndicationFeed> lub <xref:System.ServiceModel.Syndication.SyndicationItem>. Podczas serializacji Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationLink> jest zapisywany jako `<link>` elementu z <xref:System.ServiceModel.Syndication.SyndicationLink> właściwości zapisywane jako atrybuty `<link>` elementu. Gdy do RSS 2.0 pierwszy <xref:System.ServiceModel.Syndication.SyndicationLink> przy użyciu relacji wartość "alternatywny" jest zapisywany jako `<link>` elementu. Linki do dodatkowych są zapisywane jako `<a10:link>` elementów.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.ServiceModel.Syndication.SyndicationLink> klasy.  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationLink (System.ServiceModel.Syndication.SyndicationLink source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationLink source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationLink(System::ServiceModel::Syndication::SyndicationLink ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : System.ServiceModel.Syndication.SyndicationLink -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationLink" />
      </Parameters>
      <Docs>
        <param name="source">
          <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> Wystąpienie używane zainicjować nowego wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> klasy z określonym wystąpieniem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI do połączonego zasobu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> klasy z określonym <see cref="T:System.Uri" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tego konstruktora.  
  
 [!code-csharp[SyndicationLink#1](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#1)]
 [!code-vb[SyndicationLink#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri, string relationshipType, string title, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string relationshipType, string title, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri, System::String ^ relationshipType, System::String ^ title, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri * string * string * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink (uri, relationshipType, title, mediaType, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI do połączonego zasobu.</param>
        <param name="relationshipType">Typ relacji.</param>
        <param name="title">Tytuł łącza.</param>
        <param name="mediaType">Typ nośnika łącza.</param>
        <param name="length">Długość połączonej zawartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> klasy z określonym <see cref="T:System.Uri" />, typ relacji, tytuł, typ nośnika i długości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy relacji dobrze znane są następujące:  
  
-   `alternate` -Link identyfikuje alternatywnej wersji zasobów opisanego przez zawierający elementu lub źródła danych.  
  
-   `related` -Link identyfikuje zasobów związanych z zawierającego elementu lub źródła danych.  
  
-   `self` -Link identyfikuje odpowiednikiem zawierający źródło strumieniowe lub elementu zasobu.  
  
-   `enclosure` -Link identyfikuje potencjalnie duże i może wymagać specjalnej obsługi zasobu powiązanego. Ta relacja łącza jest często używane, gdy podkasty lub audio pliki są przesyłane w źródło danych.  
  
-   `via` -Link identyfikuje z zasobem, który jest źródłem informacji dostępnych w zawierający elementu lub źródła danych.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tego konstruktora.  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozszerzenia atrybut łącza.</summary>
        <value>Słownik, który zawiera kolekcję atrybutów rozszerzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> Umożliwia dodanie atrybutów niestandardowych do <xref:System.ServiceModel.Syndication.SyndicationLink>. Podczas serializacji Atom 1.0, atrybuty niestandardowe są wyświetlane w `<link>` elementu. Podczas serializacji, aby RSS 2.0, atrybuty niestandardowe są wyświetlane w `<a10:link>` elementu. Mogą być dodawane są prawidłowe atrybuty XML.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania rozszerzenia atrybut łącza zespolonego.  
  
 [!code-csharp[LooselyTypedExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#4)]
 [!code-vb[LooselyTypedExtensions#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia podstawowy identyfikator URI łącza zespolonego.</summary>
        <value>A <see cref="T:System.Uri" /> wystąpienia, które zawiera podstawowy identyfikator URI łącza zespolonego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania podstawowy identyfikator URI łącza zespolonego.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationLink Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="syndicationLink.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię bieżącego <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</summary>
        <returns>Nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia sposób tworzenia klonu łącze zespolonego.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAlternateLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nową <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy nowy <xref:System.ServiceModel.Syndication.SyndicationLink> obiektu i zestawy <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> do `alternate`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI zasobu połączonego.</param>
        <summary>Tworzy nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> obiektu z określonym <see cref="T:System.Uri" />.</summary>
        <returns>Nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć łącze alternatywny.  
  
 [!code-csharp[SyndicationLink#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#4)]
 [!code-vb[SyndicationLink#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI zasobu połączonego.</param>
        <param name="mediaType">Typ nośnika łącza.</param>
        <summary>Tworzy nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> obiektu z określonym <see cref="T:System.Uri" /> i typ nośnika.</summary>
        <returns>Nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć łącze alternatywny.  
  
 [!code-csharp[SyndicationLink#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#5)]
 [!code-vb[SyndicationLink#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaEnclosureLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink (Uri uri, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink(class System.Uri uri, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateMediaEnclosureLink(Uri ^ uri, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="static member CreateMediaEnclosureLink : Uri * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink (uri, mediaType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI zasobu połączonego.</param>
        <param name="mediaType">Typ nośnika łącza.</param>
        <param name="length">Długość połączonej zawartości.</param>
        <summary>Tworzy łącze obudowa nośnika z określonego identyfikatora URI, typ nośnika i długości.</summary>
        <returns>Nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy nowy <xref:System.ServiceModel.Syndication.SyndicationLink> obiektu i zestawy <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> do `enclosure`.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć łącza obudowa nośnika.  
  
 [!code-csharp[SyndicationLink#6](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#6)]
 [!code-vb[SyndicationLink#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSelfLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> typu relacji ustawioną <see langword="self" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy nowy <xref:System.ServiceModel.Syndication.SyndicationLink> obiektu i zestawy <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> do `self`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI do połączonego zasobu.</param>
        <summary>Tworzy nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> z określonym typem identyfikatora URI i relacji ustawioną <see langword="self" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć łącze własne.  
  
 [!code-csharp[SyndicationLink#7](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#7)]
 [!code-vb[SyndicationLink#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Identyfikator URI do połączonego zasobu.</param>
        <param name="mediaType">Typ nośnika łącza.</param>
        <summary>Tworzy nowy <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> z określonego identyfikatora URI, typ nośnika i Ustaw typ relacji <see langword="self" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć łącze własne.  
  
 [!code-csharp[SyndicationLink#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#8)]
 [!code-vb[SyndicationLink#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera rozszerzenia elementu <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
        <value>A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> zawiera rozszerzenia elementu <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element rozszerzenia są prawidłowe elementy XML, które nie są określone w specyfikacji Atom 1.0 lub RSS 2.0. Można dodać żadnych prawidłowego elementu XML jako rozszerzenie, pod warunkiem jego przestrzeni nazw różni się od otaczającej przestrzeni nazw.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania rozszerzenia elementu zespolonego łącza.  
  
 [!code-csharp[LooselyTypedExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#5)]
 [!code-vb[LooselyTypedExtensions#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetAbsoluteUri();" />
      <MemberSignature Language="F#" Value="member this.GetAbsoluteUri : unit -&gt; Uri" Usage="syndicationLink.GetAbsoluteUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera bezwzględny identyfikator URI dla <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</summary>
        <returns>A <see cref="T:System.Uri" /> wystąpienia, które zawiera bezwzględny identyfikator URI elementu <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia sposób uzyskać bezwzględny identyfikator URI elementu zespolonego łącze.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64 with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia w bajtach długość połączonego zasobu.</summary>
        <value>Długość połączonego zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji Atom 1.0 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> właściwości są zapisywane jako `length` atrybutu w `<link>` elementu.  
  
 Gdy do RSS 2.0 ta wartość zostanie zapisany jako `length` atrybutu `<a10:link>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania długość łącze zespolonego.  
  
  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> właściwości jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> właściwości jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia typ nośnika połączonego zasobu.</summary>
        <value>Typ nośnika połączonego zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy do Atom 1.0 ta wartość zostanie zapisany jako `type` atrybutu w `<link>` elementu. Gdy do RSS 2.0 ta wartość zostanie zapisany jako `type` atrybutu w `<a10:link>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania typ nośnika łącze zespolonego.  
  
  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> właściwości jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> właściwości jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia typ relacji połączonego zasobu.</summary>
        <value>Typ relacji połączonego zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy relacji dobrze znane są następujące:  
  
-   `alternate` -Link identyfikuje alternatywnej wersji zasobów opisanego przez zawierający elementu lub źródła danych.  
  
-   `related` -Link identyfikuje zasobów związanych z zawierającego elementu lub źródła danych.  
  
-   `self` -Link identyfikuje odpowiednikiem zawierający źródło strumieniowe lub elementu zasobu.  
  
-   `enclosure` -Link identyfikuje potencjalnie duże i może wymagać specjalnej obsługi zasobu powiązanego. Ta relacja łącza jest często używane, gdy podkasty lub audio pliki są przesyłane w źródło danych.  
  
-   `via` -Link identyfikuje z zasobem, który jest źródłem informacji dostępnych w zawierający elementu lub źródła danych.  
  
 Podczas serializacji Atom 1.0 ta wartość jest zapisywany jako `rel` atrybutu `<link>` elementu. Podczas serializacji, aby RSS 2.0, ta wartość jest zapisywany jako `rel` atrybutu w `<a10:link>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania typ relacji łącza zespolonego.  
  
  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> właściwości jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> właściwości jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia tytuł połączonego zasobu.</summary>
        <value>Nazwa zasobu połączonego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji Atom 1.0 ta wartość jest zapisywany jako `title` atrybutu w `<link>` elementu.  
  
 Gdy do RSS 2.0 tytuł jest zapisywany jako `title` atrybutu w `<a10:link>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania tytuł łącze zespolonego.  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> właściwości jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> właściwości jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationLink.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu.</param>
        <param name="ns">Przestrzeń nazw elementu.</param>
        <param name="value">Ten atrybut można przeanalizować.</param>
        <param name="version">Wersja zespolonego do użycia podczas analizy.</param>
        <summary>Próbuje przeanalizować rozszerzenie atrybutu.</summary>
        <returns>Wartość, która określa, czy rozszerzenie atrybutu przeanalizowany pomyślnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atrybut rozszerzenia są atrybutów niestandardowych, które nie są zdefiniowane przez specyfikacje Atom 1.0 lub RSS 2.0. Są one serializowane jako atrybut `<link`> elementu. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę deserializacji rozszerzenia atrybutu niestandardowego. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationLink> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany atrybut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Nieprawidłowy kod XML podczas odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationLink.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Do odczytu.</param>
        <param name="version">Syndykacja wersję do użycia podczas analizowania.</param>
        <summary>Próbuje przeanalizować element rozszerzenia.</summary>
        <returns>Wartość, która określa, czy element rozszerzenia przeanalizowany pomyślnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element rozszerzenia są prawidłowe elementy XML, które nie są określone w specyfikacji Atom 1.0 lub RSS 2.0. Można dodać żadnych prawidłowego elementu XML jako rozszerzenie, pod warunkiem jego przestrzeni nazw różni się od otaczającej przestrzeni nazw. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę deserializacji elementu niestandardowego rozszerzenia. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationLink> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Nieprawidłowy kod XML podczas odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia identyfikator URI dla połączonych zasobów.</summary>
        <value>A <see cref="T:System.Uri" /> wystąpienia, który zawiera identyfikator URI dla połączonych zasobów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji Atom 1.0 ta wartość jest zapisywany jako `href` atrybutu w `<link>` elementu.  
  
 Podczas serializacji, aby RSS 2.0, ta wartość jest zapisywany jako `href` atrybutu w `<a10:link>` elementu.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawiania identyfikatora URI łącza zespolonego.  
  
  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> właściwości jest serializowany Atom 1.0.  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 Poniżej przedstawiono XML jak <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> właściwości jest serializowany RSS 2.0.  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> Do zapisu.</param>
        <param name="version">Wersja zespolonego do użycia podczas zapisywania.</param>
        <summary>Zapisuje określony atrybut rozszerzeń <see cref="T:System.Xml.XmlWriter" /> za pomocą zespolonego określonej wersji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atrybut rozszerzenia są atrybutów niestandardowych, które nie są zdefiniowane przez specyfikacje Atom 1.0 lub RSS 2.0. Są one serializowane jako atrybut `<link>` elementu. Ta metoda jest punkt rozszerzenia, który umożliwia obsługę serializacji rozszerzenia atrybutu niestandardowego. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationLink> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany atrybut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlReader" /> Do zapisu.</param>
        <param name="version">Wersja zespolonego do użycia podczas zapisywania.</param>
        <summary>Zapisuje określony element rozszerzenia <see cref="T:System.Xml.XmlWriter" /> za pomocą zespolonego określonej wersji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element rozszerzenia są prawidłowe elementy XML, które nie są określone w specyfikacji Atom 1.0 lub RSS 2.0. Można dodać żadnych prawidłowego elementu XML jako rozszerzenie, pod warunkiem jego przestrzeni nazw różni się od otaczającej przestrzeni nazw. Ta metoda jest punkt rozszerzenia, która służy do obsługi serializacji elementu niestandardowego rozszerzenia. Aby to zrobić, musi pochodzić z klasy <xref:System.ServiceModel.Syndication.SyndicationLink> i przesłonić tę metodę. Ta metoda jest wywoływana dla wszystkich rozszerzeń nierozpoznany element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>