<Type Name="BinaryWriter" FullName="System.IO.BinaryWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd725d2ff791bd98de6fbbfa825469547776be40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455544" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit BinaryWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.BinaryWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryWriter : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f5ecc-101">Zapisuje typów pierwotnych w pliku binarnego do strumienia i obsługuje ciągi zapisu przy użyciu określonego kodowania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5ecc-101">Writes primitive types in binary to a stream and supports writing strings in a specific encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-102"><xref:System.IO.BinaryWriter> Klasa dostarcza metody, które upraszczają zapisywania typów pierwotnych danych do strumienia.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-102">The <xref:System.IO.BinaryWriter> class provides methods that simplify writing primitive data types to a stream.</span></span> <span data-ttu-id="f5ecc-103">Na przykład można użyć <xref:System.IO.BinaryWriter.Write%2A> metody do zapisu do strumienia jako wartość jednobajtowych wartość logiczną.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-103">For example, you can use the <xref:System.IO.BinaryWriter.Write%2A> method to write a Boolean value to the stream as a one-byte value.</span></span> <span data-ttu-id="f5ecc-104">Klasa zawiera metody zapisu, które obsługują różne typy danych.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-104">The class includes write methods that support different data types.</span></span>  
  
 <span data-ttu-id="f5ecc-105">Po utworzeniu nowego wystąpienia <xref:System.IO.BinaryWriter> klasy, podaj strumienia do zapisu, a opcjonalnie można określić typu kodowania i czy należy pozostawić strumienia Otwórz po disposing <xref:System.IO.BinaryWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-105">When you create a new instance of the <xref:System.IO.BinaryWriter> class, you provide the stream to write to, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="f5ecc-106">Jeśli nie określisz typ kodowania, używane jest UTF-8.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-106">If you do not specify an encoding type, UTF-8 is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f5ecc-107">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-107">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="f5ecc-108">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-108">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="f5ecc-109">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-109">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="f5ecc-110">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-110">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="f5ecc-111">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-111">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="f5ecc-112">Klasy pochodne mogą przesłaniać metody tej klasy, aby dać kodowanie znaków na unikatowy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-112">A derived class can override the methods of this class to give unique character encodings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-113">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-113">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy, która zapisuje do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-114">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BinaryWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy, która zapisuje do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-115">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class that writes to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-116">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-116">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="f5ecc-117">Strumień danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-117">The output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy oparte na określonego strumienia i przy użyciu kodowania UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-118">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and using UTF-8 encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-119">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-120">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-120">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-121">Strumień nie obsługuje operacji zapisu lub jest już zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-121">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-122">
            <paramref name="output" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-122">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.UTF8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="f5ecc-123">Strumień danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-123">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f5ecc-124">Znak kodowanie do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-124">The character encoding to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy na podstawie określonego strumienia i kodowania znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-125">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-126">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-126">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-127">Strumień nie obsługuje operacji zapisu lub jest już zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-127">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-128">
            <paramref name="output" /> lub <paramref name="encoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-128">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryWriter (System.IO.Stream output, System.Text.Encoding encoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output, class System.Text.Encoding encoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryWriter(System::IO::Stream ^ output, System::Text::Encoding ^ encoding, bool leaveOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="output">
          <span data-ttu-id="f5ecc-129">Strumień danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-129">The output stream.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="f5ecc-130">Znak kodowanie do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-130">The character encoding to use.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="f5ecc-131">
            <see langword="true" /> Aby pozostaw otwarte po strumienia <see cref="T:System.IO.BinaryWriter" /> obiekt jest usunięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-131">
              <see langword="true" /> to leave the stream open after the <see cref="T:System.IO.BinaryWriter" /> object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy na podstawie określonego strumienia i kodowanie znaków, i opcjonalnie pozostawia strumienia Otwórz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-132">Initializes a new instance of the <see cref="T:System.IO.BinaryWriter" /> class based on the specified stream and character encoding, and optionally leaves the stream open.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-133">Strumień nie obsługuje operacji zapisu lub jest już zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-133">The stream does not support writing or is already closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-134">
            <paramref name="output" /> lub <paramref name="encoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-134">
              <paramref name="output" /> or <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.BinaryWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-135">Pobiera zasadniczy strumień dla <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-135">Gets the underlying stream of the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5ecc-136">Zasadniczy strumień skojarzone z <see langword="BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-136">The underlying stream associated with the <see langword="BinaryWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-137">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-137">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-138">Poniższy przykładowy kod przedstawia sposób odczytywania i zapisywania `Double` danych pamięci przy użyciu <xref:System.IO.BinaryReader> i `BinaryWriter` klasy nad <xref:System.IO.MemoryStream> klasy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-138">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="f5ecc-139">`MemoryStream` tylko odczytywać i zapisywać `Byte` danych.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-139">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-140">Zamyka bieżące <see cref="T:System.IO.BinaryWriter" /> i podstawowego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-140">Closes the current <see cref="T:System.IO.BinaryWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-141">Ta implementacja `Close` wywołania <xref:System.IO.BinaryWriter.Dispose%2A> metody przekazywanie `true` wartość.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-141">This implementation of `Close` calls the <xref:System.IO.BinaryWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="f5ecc-142">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.IO.BinaryWriter.Flush%2A> lub `Close`.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-142">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.BinaryWriter.Flush%2A> or `Close`.</span></span> <span data-ttu-id="f5ecc-143">Ustawienie <xref:System.IO.StreamWriter.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-143">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f5ecc-144">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-144">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f5ecc-145">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-145">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-146">Zwalnia zasoby używane przez <see cref="T:System.IO.BinaryWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-146">Releases the resources used by the <see cref="T:System.IO.BinaryWriter" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-147">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.IO.BinaryWriter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-147">Releases all resources used by the current instance of the <see cref="T:System.IO.BinaryWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f5ecc-148">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-148">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-149">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.IO.BinaryWriter" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-149">Releases the unmanaged resources used by the <see cref="T:System.IO.BinaryWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-150">Czyści wszystkie bufory dla bieżącego składnika zapisywania i powoduje, że wszystkie buforowane dane są zapisywane w podstawowej urządzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-150">Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-151">Wszystkie klasy pochodne powinny przesłaniać `Flush` aby upewnić się, że wszystkie buforowane dane są przesyłane do strumienia.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-151">All derived classes should override `Flush` to ensure that all buffered data is sent to the stream.</span></span>  
  
 <span data-ttu-id="f5ecc-152">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać `Flush` lub <xref:System.IO.BinaryWriter.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-152">Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.BinaryWriter.Close%2A>.</span></span> <span data-ttu-id="f5ecc-153">Ustawienie <xref:System.IO.StreamWriter.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-153">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="f5ecc-154">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-154">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="f5ecc-155">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-155">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="f5ecc-156">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-156">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.BinaryWriter Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.BinaryWriter Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As BinaryWriter " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::BinaryWriter ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.BinaryWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-157">Określa <see cref="T:System.IO.BinaryWriter" /> z nie magazynu zapasowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-157">Specifies a <see cref="T:System.IO.BinaryWriter" /> with no backing store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-158">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OutStream;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.IO.Stream OutStream" />
      <MemberSignature Language="DocId" Value="F:System.IO.BinaryWriter.OutStream" />
      <MemberSignature Language="VB.NET" Value="Protected OutStream As Stream " />
      <MemberSignature Language="C++ CLI" Value="protected: System::IO::Stream ^ OutStream;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-159">Przechowuje źródłowego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-159">Holds the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-160">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-160">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public virtual long Seek (int offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 Seek(int32 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Seek (offset As Integer, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long Seek(int offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="f5ecc-161">Przesunięcie bajtów, względem <c>pochodzenia</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-161">A byte offset relative to <c>origin</c>.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="f5ecc-162">Pola <see cref="T:System.IO.SeekOrigin" /> wskazujący punkt odniesienia, z którego ma zostać uzyskany nowe położenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-162">A field of <see cref="T:System.IO.SeekOrigin" /> indicating the reference point from which the new position is to be obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-163">Ustawia położenie w obrębie bieżącego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-163">Sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5ecc-164">Pozycja z bieżącego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-164">The position with the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-165">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-165">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-166">Poniższy przykład zapisuje szereg wartości w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-166">The following example writes a series of byte values to a file.</span></span> <span data-ttu-id="f5ecc-167">W przykładzie użyto <xref:System.IO.BinaryWriter.Seek%2A> na przechodzenie do różnych lokalizacji w pliku, a następnie zapisuje dane bajtów znacznika <xref:System.IO.BinaryWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-167">The example uses <xref:System.IO.BinaryWriter.Seek%2A> to move to various locations in the file, and then writes marker bytes by using the <xref:System.IO.BinaryWriter.Write%2A> method.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CPP/source3.cpp#5)]
 [!code-csharp[System.IO.BinaryReaderWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source3.cs#5)]
 [!code-vb[System.IO.BinaryReaderWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source3.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-168">Wskaźnik plik został przeniesiony do nieprawidłowej lokalizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-168">The file pointer was moved to an invalid location.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-169">
            <see cref="T:System.IO.SeekOrigin" /> Wartość jest nieprawidłowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-169">The <see cref="T:System.IO.SeekOrigin" /> value is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f5ecc-170">Zapisuje wartość bieżącego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-170">Writes a value to the current stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-171">
            <see langword="Boolean" /> Wartość do zapisania (0 lub 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-171">The <see langword="Boolean" /> value to write (0 or 1).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-172">Zapisuje jednobajtowych <see langword="Boolean" /> wartość do bieżącego strumienia z reprezentujący 0 <see langword="false" /> i 1 reprezentujący <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-172">Writes a one-byte <see langword="Boolean" /> value to the current stream, with 0 representing <see langword="false" /> and 1 representing <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-173">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-173">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-174">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-174">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-175">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-175">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-176">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-176">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-177">Niepodpisane bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-177">The unsigned byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-178">Zapisuje bieżący strumień bajtu bez znaku i zmienia pozycję strumienia przez jednego bajtu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-178">Writes an unsigned byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-179">Z powodu konfliktów formatowania danych z następujących kodowań za pomocą tej metody nie jest zalecane:</span><span class="sxs-lookup"><span data-stu-id="f5ecc-179">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="f5ecc-180">UTF-7</span><span class="sxs-lookup"><span data-stu-id="f5ecc-180">UTF-7</span></span>  
  
-   <span data-ttu-id="f5ecc-181">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="f5ecc-181">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="f5ecc-182">ISCII</span><span class="sxs-lookup"><span data-stu-id="f5ecc-182">ISCII</span></span>  
  
 <span data-ttu-id="f5ecc-183">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-183">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-184">Poniższy przykład kodu pokazuje sposób zapisywania danych binarnych jako magazynu zapasowego przy użyciu pamięci, a następnie sprawdź, czy dane zostały poprawnie zapisane.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-184">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-185">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-185">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-186">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-186">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f5ecc-187">Tablica bajtów zawierająca dane do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-187">A byte array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-188">Zapisuje tablicę bajtów do źródłowego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-188">Writes a byte array to the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-189">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-189">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-190">Poniższy przykład kodu pokazuje sposób zapisywania danych binarnych jako magazynu zapasowego przy użyciu pamięci, a następnie sprawdź, czy dane zostały poprawnie zapisane.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-190">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-191">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-191">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-192">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-192">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-193">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-193">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="f5ecc-194">Znak Unicode z systemem innym niż zastępcza, do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-194">The non-surrogate, Unicode character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-195">Zapisuje bieżący strumień znaków Unicode i zmienia pozycję bieżącego strumienia zgodnie z <see langword="Encoding" /> używane i konkretnym znaki są zapisywane do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-195">Writes a Unicode character to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-196">Z powodu konfliktów formatowania danych z następujących kodowań za pomocą tej metody nie jest zalecane:</span><span class="sxs-lookup"><span data-stu-id="f5ecc-196">Because of data formatting conflicts, using this method with the following encodings is not recommended:</span></span>  
  
-   <span data-ttu-id="f5ecc-197">UTF-7</span><span class="sxs-lookup"><span data-stu-id="f5ecc-197">UTF-7</span></span>  
  
-   <span data-ttu-id="f5ecc-198">ISO-2022-JP</span><span class="sxs-lookup"><span data-stu-id="f5ecc-198">ISO-2022-JP</span></span>  
  
-   <span data-ttu-id="f5ecc-199">ISCII</span><span class="sxs-lookup"><span data-stu-id="f5ecc-199">ISCII</span></span>  
  
 <span data-ttu-id="f5ecc-200">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-200">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 <span data-ttu-id="f5ecc-201">Znaki dwuskładnikowe Unicode muszą być zapisywane w tym samym wywołaniu razem jako pary indywidualnie.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-201">Unicode surrogate characters must be written out as pairs together in the same call, not individually.</span></span> <span data-ttu-id="f5ecc-202">Jeśli wymagana jest obsługa Znaki dwuskładnikowe w aplikacji, rozważ użycie tablicy znaków i <xref:System.IO.BinaryWriter.Write%2A> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-202">If you require support for surrogate pairs in your application, consider using a character array and the <xref:System.IO.BinaryWriter.Write%2A> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-203">Poniższy przykład kodu pokazuje, jak na odczytywanie i zapisywanie danych przy użyciu pamięci jako magazynu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-203">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-204">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-204">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-205">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-205">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-206">
            <paramref name="ch" /> jest część znaku dwuskładnikowego pojedynczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-206">
              <paramref name="ch" /> is a single surrogate character.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f5ecc-207">Tablica znaków, zawierający dane do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-207">A character array containing the data to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-208">Zapisuje bieżący strumień tablicy znaków i zmienia pozycję bieżącego strumienia zgodnie z <see langword="Encoding" /> używane i konkretnym znaki są zapisywane do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-208">Writes a character array to the current stream and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-209">W poniższej tabeli wymieniono przykłady inne typowe i powiązanych zadań we/wy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-209">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f5ecc-210">Aby to zrobić...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-210">To do this...</span></span>|<span data-ttu-id="f5ecc-211">Zobacz przykład w tym temacie...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-211">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f5ecc-212">Utwórz plik tekstowy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-212">Create a text file.</span></span>|[<span data-ttu-id="f5ecc-213">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-213">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-214">Zapis do pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-214">Write to a text file.</span></span>|[<span data-ttu-id="f5ecc-215">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-215">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-216">Odczyt z pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-216">Read from a text file.</span></span>|[<span data-ttu-id="f5ecc-217">Instrukcje: odczytywanie tekstu z pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-217">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f5ecc-218">Dołączanie tekstu do pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-218">Append text to a file.</span></span>|[<span data-ttu-id="f5ecc-219">Instrukcje: otwieranie pliku dziennika i dołączanie do niego</span><span class="sxs-lookup"><span data-stu-id="f5ecc-219">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-220">Uzyskać rozmiaru pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-220">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-221">Pobierz atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-221">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-222">Ustawianie atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-222">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-223">Określ, czy plik istnieje.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-223">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-224">Odczyt z pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-224">Read from a binary file.</span></span>|[<span data-ttu-id="f5ecc-225">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-225">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f5ecc-226">Zapis do pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-226">Write to a binary file.</span></span>|[<span data-ttu-id="f5ecc-227">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-227">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-228">Poniższy przykład kodu pokazuje, jak na odczytywanie i zapisywanie danych przy użyciu pamięci jako magazynu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-228">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-229">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-229">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-230">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-230">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-231">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-231">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Decimal value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-232">Wartość dziesiętna do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-232">The decimal value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-233">Zapisuje wartość dziesiętną bieżący strumień i zmienia pozycję strumienia przez szesnastu bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-233">Writes a decimal value to the current stream and advances the stream position by sixteen bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-234">W poniższej tabeli wymieniono przykłady inne typowe i powiązanych zadań we/wy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-234">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f5ecc-235">Aby to zrobić...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-235">To do this...</span></span>|<span data-ttu-id="f5ecc-236">Zobacz przykład w tym temacie...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-236">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f5ecc-237">Utwórz plik tekstowy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-237">Create a text file.</span></span>|[<span data-ttu-id="f5ecc-238">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-238">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-239">Zapis do pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-239">Write to a text file.</span></span>|[<span data-ttu-id="f5ecc-240">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-240">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-241">Odczyt z pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-241">Read from a text file.</span></span>|[<span data-ttu-id="f5ecc-242">Instrukcje: odczytywanie tekstu z pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-242">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f5ecc-243">Dołączanie tekstu do pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-243">Append text to a file.</span></span>|[<span data-ttu-id="f5ecc-244">Instrukcje: otwieranie pliku dziennika i dołączanie do niego</span><span class="sxs-lookup"><span data-stu-id="f5ecc-244">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-245">Uzyskać rozmiaru pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-245">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-246">Pobierz atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-246">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-247">Ustawianie atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-247">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-248">Określ, czy plik istnieje.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-248">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-249">Odczyt z pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-249">Read from a binary file.</span></span>|[<span data-ttu-id="f5ecc-250">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-250">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f5ecc-251">Zapis do pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-251">Write to a binary file.</span></span>|[<span data-ttu-id="f5ecc-252">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-252">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-253">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-253">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-254">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-254">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-255">Wartość zmiennoprzecinkowa ośmiu bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-255">The eight-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-256">Zapisuje bieżący strumień 8 bajtową wartość zmiennoprzecinkową i zmienia pozycję strumienia przez 8 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-256">Writes an eight-byte floating-point value to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-257">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-257">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-258">Poniższy przykładowy kod przedstawia sposób odczytywania i zapisywania `Double` danych pamięci przy użyciu <xref:System.IO.BinaryReader> i `BinaryWriter` klasy nad <xref:System.IO.MemoryStream> klasy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-258">The following code example shows how to read and write `Double` data to memory by using the <xref:System.IO.BinaryReader> and `BinaryWriter` classes on top of the <xref:System.IO.MemoryStream> class.</span></span> <span data-ttu-id="f5ecc-259">`MemoryStream` tylko odczytywać i zapisywać `Byte` danych.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-259">`MemoryStream` only reads and writes `Byte` data.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-260">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-260">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-261">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-261">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-262">2 bajtowych całkowita do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-262">The two-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-263">Zapisuje bieżący strumień dwubajtowego całkowita i zmienia pozycję strumienia przez dwa bajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-263">Writes a two-byte signed integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-264">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-264">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-265">W poniższej tabeli wymieniono przykłady inne typowe i powiązanych zadań we/wy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-265">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="f5ecc-266">Aby to zrobić...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-266">To do this...</span></span>|<span data-ttu-id="f5ecc-267">Zobacz przykład w tym temacie...</span><span class="sxs-lookup"><span data-stu-id="f5ecc-267">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="f5ecc-268">Utwórz plik tekstowy.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-268">Create a text file.</span></span>|[<span data-ttu-id="f5ecc-269">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-269">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-270">Zapis do pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-270">Write to a text file.</span></span>|[<span data-ttu-id="f5ecc-271">Instrukcje: zapisywanie tekstu w pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-271">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="f5ecc-272">Odczyt z pliku tekstowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-272">Read from a text file.</span></span>|[<span data-ttu-id="f5ecc-273">Instrukcje: odczytywanie tekstu z pliku</span><span class="sxs-lookup"><span data-stu-id="f5ecc-273">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="f5ecc-274">Dołączanie tekstu do pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-274">Append text to a file.</span></span>|[<span data-ttu-id="f5ecc-275">Instrukcje: otwieranie pliku dziennika i dołączanie do niego</span><span class="sxs-lookup"><span data-stu-id="f5ecc-275">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-276">Uzyskać rozmiaru pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-276">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-277">Pobierz atrybuty pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-277">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-278">Ustawianie atrybutów pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-278">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-279">Określ, czy plik istnieje.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-279">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="f5ecc-280">Odczyt z pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-280">Read from a binary file.</span></span>|[<span data-ttu-id="f5ecc-281">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-281">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="f5ecc-282">Zapis do pliku binarnego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-282">Write to a binary file.</span></span>|[<span data-ttu-id="f5ecc-283">Instrukcje: odczyt i zapis we właśnie utworzonym pliku danych</span><span class="sxs-lookup"><span data-stu-id="f5ecc-283">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-284">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-284">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-285">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-285">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-286">4 bajtowych całkowita do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-286">The four-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-287">Zapisuje bieżący strumień całkowita 4 bajtowych i zmienia pozycję strumienia przez cztery bajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-287">Writes a four-byte signed integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-288">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-288">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-289">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-289">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-290">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-290">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-291">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-291">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-292">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-292">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-293">8 bajtowych całkowita do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-293">The eight-byte signed integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-294">Zapisuje bieżący strumień 8 bajtowych liczbę całkowitą ze znakiem i zmienia pozycję strumienia przez 8 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-294">Writes an eight-byte signed integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-295">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-295">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-296">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-296">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-297">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-297">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-298">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-298">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-299">Podpisem bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-299">The signed byte to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-300">Zapisuje bieżący strumień bajtu ze znakiem i zmienia pozycję strumienia przez jednego bajtu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-300">Writes a signed byte to the current stream and advances the stream position by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-301">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-301">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-302">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-302">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-303">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-303">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-304">4 bajtowych liczb zmiennoprzecinkowych wartość do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-304">The four-byte floating-point value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-305">Zapisuje bieżący strumień 4 bajtową wartość zmiennoprzecinkową i zmienia pozycję strumienia przez cztery bajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-305">Writes a four-byte floating-point value to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-306">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-306">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-307">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-307">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-308">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-308">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-309">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-309">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-310">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-310">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-311">Wartość do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-311">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-312">Zapisuje ciąg prefiks długości tego strumienia w bieżącym kodowanie <see cref="T:System.IO.BinaryWriter" />i zwiększa bieżącej pozycji strumienia zgodnie z kodowanie używane i określonych znaków są zapisywane do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-312">Writes a length-prefixed string to this stream in the current encoding of the <see cref="T:System.IO.BinaryWriter" />, and advances the current position of the stream in accordance with the encoding used and the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-313">Prefiks długości oznacza, że ta metoda najpierw zapisuje długość ciągu, w bajtach, gdy zakodowane za pomocą <xref:System.IO.BinaryWriter> wystąpienia bieżącego kodowania w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-313">Length-prefixed means that this method first writes the length of the string, in bytes, when encoded with the <xref:System.IO.BinaryWriter> instance's current encoding to the stream.</span></span> <span data-ttu-id="f5ecc-314">Ta wartość jest zapisywany jako liczba całkowita bez znaku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-314">This value is written as an unsigned integer.</span></span> <span data-ttu-id="f5ecc-315">Ta metoda następnie zapisuje wybranej liczby bajtów do strumienia.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-315">This method then writes that many bytes to the stream.</span></span>  
  
 <span data-ttu-id="f5ecc-316">Na przykład ciąg "A" ma długość 1, ale gdy zakodowane za pomocą UTF-16; długość jest 2 bajty, więc wartość napisana prefiks jest równa 2, 3 bajtów są zapisywane do strumienia, w tym prefiks.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-316">For example, the string "A" has a length of 1, but when encoded with UTF-16; the length is 2 bytes, so the value written in the prefix is 2, and 3 bytes are written to the stream, including the prefix.</span></span>  
  
 <span data-ttu-id="f5ecc-317">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-317">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-318">Poniższy przykład kodu demonstruje sposób przechowywania i pobierania ustawień aplikacji w pliku.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-318">The following code example demonstrates how to store and retrieve application settings in a file.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-319">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-319">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-320">
            <paramref name="value" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-320">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-321">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-321">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-322">Całkowitą bez znaku dwubajtowego do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-322">The two-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-323">Zapisuje bieżący strumień liczbę całkowitą bez znaku dwubajtowego i zmienia pozycję strumienia przez dwa bajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-323">Writes a two-byte unsigned integer to the current stream and advances the stream position by two bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-324">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-324">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-325">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-325">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-326">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-326">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-327">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-327">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-328">4 bajtowych całkowitą bez znaku do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-328">The four-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-329">Zapisuje bieżący strumień 4 bajtowych liczbę całkowitą bez znaku i zmienia pozycję strumienia przez cztery bajty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-329">Writes a four-byte unsigned integer to the current stream and advances the stream position by four bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-330">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-330">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-331">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-331">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-332">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-332">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-333">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-333">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-334">8 bajtowa liczba całkowita bez znaku do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-334">The eight-byte unsigned integer to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-335">Zapisuje bieżący strumień całkowitą bez znaku ośmiu bajtów i zmienia pozycję strumienia przez 8 bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-335">Writes an eight-byte unsigned integer to the current stream and advances the stream position by eight bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-336">`BinaryWriter` przechowuje ten typ danych format little endian.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-336">`BinaryWriter` stores this data type in little endian format.</span></span>  
  
 <span data-ttu-id="f5ecc-337">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-337">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-338">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-338">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-339">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-339">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="f5ecc-340">Tablica bajtów zawierająca dane do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-340">A byte array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f5ecc-341">Punkt początkowy w <c>buforu</c> pod którym ma rozpocząć się zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-341">The starting point in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f5ecc-342">Liczba bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-342">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-343">Zapisuje bieżący strumień region tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-343">Writes a region of a byte array to the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-344">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-344">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-345">Poniższy przykład kodu pokazuje sposób zapisywania danych binarnych jako magazynu zapasowego przy użyciu pamięci, a następnie sprawdź, czy dane zostały poprawnie zapisane.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-345">The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.</span></span>  
  
 [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-346">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-346">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-347">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-347">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5ecc-348">
            <paramref name="index" /> lub <paramref name="count" /> jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-348">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-349">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-349">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-350">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-350">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (chars As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f5ecc-351">Tablica znaków, zawierający dane do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-351">A character array containing the data to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f5ecc-352">Punkt początkowy w <c>znaków</c> z której ma rozpocząć się zapis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-352">The starting point in <c>chars</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f5ecc-353">Liczba znaków, jaka ma zostać zapisana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-353">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-354">Zapisuje bieżący strumień części tablicy znaków i zmienia bieżącej pozycji strumienia zgodnie z <see langword="Encoding" /> używane i prawdopodobnie konkretnym znaki są zapisywane do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-354">Writes a section of a character array to the current stream, and advances the current position of the stream in accordance with the <see langword="Encoding" /> used and perhaps the specific characters being written to the stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-355">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-355">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5ecc-356">Poniższy przykład kodu pokazuje, jak na odczytywanie i zapisywanie danych przy użyciu pamięci jako magazynu zapasowego.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-356">The following code example shows how to read and write data using memory as a backing store.</span></span>  
  
 [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]
 [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]
 [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f5ecc-357">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-357">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f5ecc-358">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-358">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5ecc-359">
            <paramref name="index" /> lub <paramref name="count" /> jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-359">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-360">Wystąpi błąd We/Wy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-360">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-361">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-361">The stream is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Write7BitEncodedInt">
      <MemberSignature Language="C#" Value="protected void Write7BitEncodedInt (int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Write7BitEncodedInt(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Write7BitEncodedInt (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Write7BitEncodedInt(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f5ecc-362">Liczba całkowita 32-bitowej do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-362">The 32-bit integer to be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5ecc-363">Zapisuje 32-bitową liczbę całkowitą w postaci skompresowanej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-363">Writes a 32-bit integer in a compressed format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5ecc-364">Wartość całkowita `value` parametru jest zapisywany siedem bitów w czasie, począwszy od siedmiu najmniej znaczących bitów.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-364">The integer of the `value` parameter is written out seven bits at a time, starting with the seven least-significant bits.</span></span> <span data-ttu-id="f5ecc-365">Wysokobitowe bajtu wskazuje, czy istnieją większej liczby bajtów do zapisania po tym.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-365">The high bit of a byte indicates whether there are more bytes to be written after this one.</span></span>  
  
 <span data-ttu-id="f5ecc-366">Jeśli `value` zmieści się w bitach siedmiu zajmuje tylko jednego bajtu miejsca.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-366">If `value` will fit in seven bits, it takes only one byte of space.</span></span> <span data-ttu-id="f5ecc-367">Jeśli `value` nie mieści się w siedmiu bitów dużej szybkości jest ustawiony na pierwszy bajt i zapisany. `value` następnie zostanie przesunięty siedem bitów, a następne są zapisywane bajtów.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-367">If `value` will not fit in seven bits, the high bit is set on the first byte and written out. `value` is then shifted by seven bits and the next byte is written.</span></span> <span data-ttu-id="f5ecc-368">Ten proces jest powtarzany, dopóki nie została zapisana cała liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="f5ecc-368">This process is repeated until the entire integer has been written.</span></span>  
  
 <span data-ttu-id="f5ecc-369">Aby uzyskać listę typowe zadania we/wy, zobacz [typowe zadania we/wy](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f5ecc-369">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.EndOfStreamException">
          <span data-ttu-id="f5ecc-370">Osiągnięto koniec strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-370">The end of the stream is reached.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f5ecc-371">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-371">The stream is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="f5ecc-372">Strumień jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5ecc-372">The stream is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>