<Type Name="WindowsRuntimeStorageExtensions" FullName="System.IO.WindowsRuntimeStorageExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7117ac69b62dffd00f62f8eced9b6b4c1957db0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69242650" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStorageExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera metody <see cref="T:Windows.Storage.IStorageFile" /> rozszerzające interfejsów i <see cref="T:Windows.Storage.IStorageFolder" /> w środowisko wykonawcze systemu Windows podczas tworzenia aplikacji do sklepu Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Te metody rozszerzające są dostępne tylko w przypadku tworzenia aplikacji do sklepu Windows. Metody zapewniają wygodne sposoby otwierania plików do odczytu lub zapisu w aplikacjach ze sklepu Windows. Nie utworzysz wystąpienia `WindowsRuntimeStorageExtensions` klasy. zamiast tego należy używać tych metod z wystąpień <xref:Windows.Storage.IStorageFile> interfejsów i <xref:Windows.Storage.IStorageFolder> .

Klasa zawiera dwie metody, które zwiększają <xref:Windows.Storage.IStorageFile> się w celu odczytu lub zapisu: `WindowsRuntimeStorageExtensions`

  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)>

Klasa WindowsRuntimeStorageExtensions zawiera dwie metody, które zwiększają <xref:Windows.Storage.IStorageFolder> się w celu odczytu i zapisu:
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)>

## Examples

Poniższy przykład pokazuje, jak otworzyć plik w danych aplikacji jako <xref:System.IO.Stream> w aplikacji ze sklepu Windows i zapisać go przy użyciu wystąpienia <xref:System.IO.StreamWriter> klasy. Następnie odczytuje zawartość pliku przy użyciu wystąpienia <xref:System.IO.StreamReader> klasy.

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

W następnym przykładzie pokazano kod XAML, który jest skojarzony z poprzednim przykładem. 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateSafeFileHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy i zwraca odwołanie do bezpiecznego dojścia do pliku dla wystąpienia Metoda IStorage, które jest rozszerzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

W przypadku aktualizacji z rocznicą systemu Windows 10 nowe interfejsy zostały <xref:Windows.Storage.IStorageFolder> dodane <xref:Windows.Storage.IStorageFile> do i umożliwiają tworzenie standardowego dojścia do pliku `IStorageFolderHandleAccess` Win32 `IStorageItemHandleAccess`: i. Grupa metod rozszerzających korzysta `Create` z metod tych interfejsów. `CreateSafeFileHandle`

Kluczową zaletą interfejsu API jest dostęp do brokera `SafeFileHandle`. Jest to ważne znaczenie, jeśli <xref:System.IO.FileStream> chcesz utworzyć <xref:Windows.Storage.IStorageItem> około lub <xref:Windows.Storage.IStorageFolder> w trakcie korzystania z programu w kontenerze [aplikacji](https://docs.microsoft.com/en-us/windows/win32/secauthz/appcontainer-isolation). W przypadku uruchamiania w kontenerze aplikacji aplikacje mają bardzo ograniczone prawa dostępu do plików. Elementy, takie jak foldery obrazów i dokumentów, wymagają dostępu do natywnego uchwytu `RuntimeBroker.exe`plików za pośrednictwem programu, ponieważ sam proces aplikacji nie ma uprawnień do większości plików. Ten interfejs API Pobiera dojście proxy. Jeśli dostęp do folderów danych użytkownika lub za pomocą selektora plików, ten interfejs API powinien być zawsze <xref:System.IO.FileStream>używany do tworzenia. Użycie ścieżki często <xref:System.AccessViolationException> zgłasza się w tych przypadkach.

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode) As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeFileHandle ^ CreateSafeFileHandle(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Bieżące wystąpienie folderu magazynu.</param>
        <param name="relativePath">Nazwa pliku, do którego ma zostać pobrany uchwyt.</param>
        <param name="mode">Tryb, w którym system operacyjny powinien otworzyć plik.</param>
        <summary>Tworzy Bezpieczny uchwyt plików dla pliku znajdującego się w bieżącym wystąpieniu folderu magazynu.</summary>
        <returns>Bezpieczne wystąpienie obsługi plików, jeśli operacja się powiedzie; <see langword="null" /> Jeśli <see langword="null" />konwersja <paramref name="rootDirectory" /> do IStorageFolderHandleAccess zwraca wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

W przypadku wywołania tej metody, jeśli określony tryb ma <xref:System.IO.FileMode.Append?displayProperty=nameWithType>wartość, plik zostanie otwarty z <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> uprawnieniem dostępu. W przypadku innych trybów plik zostanie otwarty z <xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> uprawnieniami dostępu.

Ponadto ta metoda spowoduje otwarcie pliku z <xref:System.IO.FileShare.Read?displayProperty=nameWithType> dostępem do udostępniania strumieni <xref:System.IO.FileOptions.None?displayProperty=nameWithType> i zaawansowanymi opcjami tworzenia pliku.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" />jest <see langword="null" />.

—lub—

<paramref name="relativePath" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFile windowsRuntimeFile, System.IO.FileAccess access = System.IO.FileAccess.ReadWrite, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFile windowsRuntimeFile, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFile,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (windowsRuntimeFile As IStorageFile, Optional access As FileAccess = System.IO.FileAccess.ReadWrite, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFile * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (windowsRuntimeFile, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Wystąpienie pliku magazynu.</param>
        <param name="access">Rodzaj dostępu, który ma być używany podczas otwierania pliku. Wartość domyślna to <see cref="F:System.IO.FileAccess.ReadWrite" />.</param>
        <param name="share">Rodzaj dostępu do udostępniania strumienia inne <see cref="T:System.IO.FileStream" /> obiekty mogą mieć ten sam plik. Wartość domyślna to <see cref="F:System.IO.FileShare.Read" />.</param>
        <param name="options">Opcje zaawansowane tworzenia <see cref="T:System.IO.FileStream" /> obiektu. Wartość domyślna to <see cref="F:System.IO.FileOptions.None" />.</param>
        <summary>Tworzy Bezpieczny uchwyt plików dla bieżącego wystąpienia pliku magazynu.</summary>
        <returns>Bezpieczne wystąpienie obsługi plików, jeśli operacja się powiedzie; <see langword="null" /> Jeśli <see langword="null" />konwersja <paramref name="windowsRuntimeFile" /> do IStorageItemHandleAccess zwraca wartość.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode, access As FileAccess, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Bieżące wystąpienie folderu magazynu.</param>
        <param name="relativePath">Nazwa pliku, do którego ma zostać pobrany uchwyt.</param>
        <param name="mode">Tryb, w którym system operacyjny powinien otworzyć plik.</param>
        <param name="access">Rodzaj dostępu, który ma być używany podczas otwierania pliku.</param>
        <param name="share">Rodzaj dostępu do udostępniania strumienia inne <see cref="T:System.IO.FileStream" /> obiekty mogą mieć ten sam plik. Wartość domyślna to <see cref="F:System.IO.FileShare.Read" />.</param>
        <param name="options">Opcje zaawansowane tworzenia <see cref="T:System.IO.FileStream" /> obiektu. Wartość domyślna to <see cref="F:System.IO.FileOptions.None" />.</param>
        <summary>Tworzy Bezpieczny uchwyt plików dla pliku znajdującego się w bieżącym wystąpieniu folderu magazynu.</summary>
        <returns>Bezpieczne wystąpienie obsługi plików, jeśli operacja się powiedzie; <see langword="null" /> Jeśli <see langword="null" />konwersja <paramref name="rootDirectory" /> do IStorageFolderHandleAccess zwraca wartość.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" />jest <see langword="null" />.

—lub—

<paramref name="relativePath" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Obiekt środowisko wykonawcze systemu Windows <see cref="T:Windows.Storage.IStorageFile" /> , z którego ma zostać odczytany.</param>
        <summary>Pobiera strumień do odczytu z określonego pliku.</summary>
        <returns>Zadanie, które reprezentuje asynchroniczną operację odczytu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> W Visual Basic i C#można wywołać tę metodę jako metodę wystąpienia dla dowolnego obiektu typu <xref:Windows.Storage.IStorageFile>. Gdy w celu wywołania tej metody jest używana składnia metody wystąpienia, należy pominąć pierwszy parametr. Aby uzyskać więcej informacji, zobacz [metody rozszerzania (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) lub [metodyC# rozszerzenia (Przewodnik programowania)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Poniższy przykład pokazuje, jak otworzyć plik jako <xref:System.IO.Stream> w aplikacji ze sklepu Windows i odczytać jego zawartość przy użyciu wystąpienia <xref:System.IO.StreamReader> klasy.

[!code-csharp[windowsruntimestorageextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestorageextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage.xaml.vb#2)]

W następnym przykładzie pokazano kod XAML, który jest skojarzony z poprzednim przykładem. 

[!code-xaml[windowsruntimestorageextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" />jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Nie można otworzyć lub pobrać pliku jako strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (rootDirectory As IStorageFolder, relativePath As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFolder * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync (rootDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Obiekt środowisko wykonawcze systemu Windows <see cref="T:Windows.Storage.IStorageFile" /> , który zawiera plik, z którego ma zostać odczytany.</param>
        <param name="relativePath">Ścieżka względem folderu głównego do pliku, z którego ma zostać odczytany.</param>
        <summary>Pobiera strumień do odczytu z pliku w określonym folderze nadrzędnym.</summary>
        <returns>Zadanie, które reprezentuje asynchroniczną operację odczytu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> W Visual Basic i C#można wywołać tę metodę jako metodę wystąpienia dla dowolnego obiektu typu IStorageFolder. Gdy w celu wywołania tej metody jest używana składnia metody wystąpienia, należy pominąć pierwszy parametr. Aby uzyskać więcej informacji, zobacz [metody rozszerzania (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) lub [metodyC# rozszerzenia (Przewodnik programowania)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Poniższy przykład pokazuje, jak otworzyć plik jako <xref:System.IO.Stream> w aplikacji ze sklepu Windows i odczytać jego zawartość przy użyciu wystąpienia <xref:System.IO.StreamReader> klasy.

[!code-csharp[windowsruntimestorageextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestorageextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage2.xaml.vb#4)]

W następnym przykładzie pokazano kod XAML, który jest skojarzony z poprzednim przykładem. 

[!code-xaml[windowsruntimestorageextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" />lub <paramref name="relativePath" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" />jest pusty lub zawiera tylko białe znaki.</exception>
        <exception cref="T:System.IO.IOException">Nie można otworzyć lub pobrać pliku jako strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Obiekt środowisko wykonawcze systemu Windows <see cref="T:Windows.Storage.IStorageFile" /> , do którego ma zostać zapisany.</param>
        <summary>Pobiera strumień do zapisu w określonym pliku.</summary>
        <returns>Zadanie, które reprezentuje asynchroniczny zapis operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> W Visual Basic i C#można wywołać tę metodę jako metodę wystąpienia dla dowolnego obiektu typu <xref:Windows.Storage.IStorageFile>. Gdy w celu wywołania tej metody jest używana składnia metody wystąpienia, należy pominąć pierwszy parametr. Aby uzyskać więcej informacji, zobacz [metody rozszerzania (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) lub [metodyC# rozszerzenia (Przewodnik programowania)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Poniższy przykład pokazuje, jak otworzyć plik jako <xref:System.IO.Stream> w aplikacji ze sklepu Windows i zapisać go przy użyciu wystąpienia <xref:System.IO.StreamReader> klasy.

[!code-csharp[windowsruntimestorageextensions#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml.cs#6)]
[!code-vb[windowsruntimestorageextensions#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage3.xaml.vb#6)]

W następnym przykładzie pokazano kod XAML, który jest skojarzony z poprzednim przykładem. 

[!code-xaml[windowsruntimestorageextensions#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml#5)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" />jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Nie można otworzyć lub pobrać pliku jako strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, Windows.Storage.CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype Windows.Storage.CreationCollisionOption creationCollisionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, Windows::Storage::CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFolder * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync (rootDirectory, relativePath, creationCollisionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="creationCollisionOption" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Obiekt środowisko wykonawcze systemu Windows <see cref="T:Windows.Storage.IStorageFile" /> , który zawiera plik do zapisu.</param>
        <param name="relativePath">Ścieżka względem folderu głównego, do pliku, w którym ma zostać zapisany.</param>
        <param name="creationCollisionOption">Wartość wyliczenia <see cref="T:Windows.Storage.CreationCollisionOption" /> środowisko wykonawcze systemu Windows, która określa zachowanie, które ma być używane, gdy nazwa tworzonego pliku jest taka sama jak nazwa istniejącego pliku.</param>
        <summary>Pobiera strumień do zapisu w pliku w określonym folderze nadrzędnym.</summary>
        <returns>Zadanie, które reprezentuje asynchroniczny zapis operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> W Visual Basic i C#można wywołać tę metodę jako metodę wystąpienia dla dowolnego obiektu typu <xref:Windows.Storage.IStorageFolder>. Gdy w celu wywołania tej metody jest używana składnia metody wystąpienia, należy pominąć pierwszy parametr. Aby uzyskać więcej informacji, zobacz [metody rozszerzania (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) lub [metodyC# rozszerzenia (Przewodnik programowania)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

Poniższy przykład pokazuje, jak otworzyć plik jako <xref:System.IO.Stream> w aplikacji ze sklepu Windows i zapisać go przy użyciu wystąpienia <xref:System.IO.StreamReader> klasy.

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

W następnym przykładzie pokazano kod XAML, który jest skojarzony z poprzednim przykładem. 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" />lub <paramref name="relativePath" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" />jest pusty lub zawiera tylko białe znaki.</exception>
        <exception cref="T:System.IO.IOException">Nie można otworzyć lub pobrać pliku jako strumienia.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
