<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemoryStream.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c02ca3cbe99f600c2f813c7c537dac714efc08b5b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02ca3cbe99f600c2f813c7c537dac714efc08b5b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryStream">
          <source>Creates a stream whose backing store is memory.</source>
          <target state="translated">Tworzy strumień, którego magazynu zapasowego jest pamięci.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>The current position of a stream is the position at which the next read or write operation could take place.</source>
          <target state="translated">Bieżąca pozycja strumień jest pozycji, jaką następnej operacja odczytu lub zapisu może mieć miejsce.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>The current position can be retrieved or set through the <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> method.</source>
          <target state="translated">Bieżące położenie można pobrać lub ustawić za pomocą <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> is created, the current position is set to zero.</source>
          <target state="translated">Gdy nowe wystąpienie klasy <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> utworzeniu bieżące położenie jest ustawiony na zero.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>Memory streams created with an unsigned byte array provide a non-resizable stream of the data.</source>
          <target state="translated">Strumienie pamięci utworzone za pomocą tablicy bajtu bez znaku Podaj bez zmienny rozmiar strumienia danych.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>When using a byte array, you can neither append to nor shrink the stream, although you might be able to modify the existing contents depending on the parameters passed into the constructor.</source>
          <target state="translated">Korzystając z tablicy bajtów, nie można dołączyć do ani zmniejszać strumienia, mimo że można zmodyfikować istniejącą zawartość w zależności od parametrów przekazanych do konstruktora.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>Empty memory streams are resizable, and can be written to and read from.</source>
          <target state="translated">Strumienie pusty pamięci są o zmiennych rozmiarach i można zapisane i odczytywać.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>If a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> object is added to a ResX file or a .resources file, call the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A&gt;</ph> method at runtime to retrieve it.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> obiekt jest dodawany do pliku ResX lub plik .resources, należy wywołać <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A&gt;</ph> metody w czasie wykonywania, można go pobrać.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>If a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> object is serialized to a resource file it will actually be serialized as an <ph id="ph2">&lt;xref:System.IO.UnmanagedMemoryStream&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> serializowany jest obiekt do pliku zasobów będą wykonywane szeregowo faktycznie jako <ph id="ph2">&lt;xref:System.IO.UnmanagedMemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>This behavior provides better performance, as well as the ability to get a pointer to the data directly, without having to go through <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> methods.</source>
          <target state="translated">To zachowanie zapewnia lepszą wydajność, a także możliwość otrzymywać wskaźnik do danych bezpośrednio, bez konieczności przechodzenia przez <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.MemoryStream">
          <source>The following code example shows how to read and write data using memory as a backing store.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, jak na odczytywanie i zapisywanie danych przy użyciu pamięci jako magazynu zapasowego.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.IO.MemoryStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class with an expandable capacity initialized to zero.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy o pojemności rozwijania zainicjować od zera.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> properties are all set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, I <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> właściwości są ustawione <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor">
          <source>The capacity of the current stream automatically increases when you use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph> method to set the length to a value larger than the capacity of the current stream.</source>
          <target state="translated">Pojemność bieżący strumień automatycznie zwiększany, gdy używasz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph> metodę, aby ustawić długości na wartość większa niż pojemność bieżąca strumienia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor">
          <source>This constructor exposes the underlying stream, which <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> returns.</source>
          <target state="translated">Ten konstruktor przedstawia podstawową strumienia, który <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zwraca.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>The array of unsigned bytes from which to create the current stream.</source>
          <target state="translated">Tablica bajtów bez znaku, z którym ma zostać utworzony bieżący strumień.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>Initializes a new non-resizable instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class based on the specified byte array.</source>
          <target state="translated">Inicjuje nowe wystąpienie bez zmienny rozmiar <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy oparte na określonej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> properties are all set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, I <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> właściwości są ustawione <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> is set to the length of the specified byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> jest równa długości określonej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>The new stream can be written to, but is not resizable.</source>
          <target state="translated">Nowy strumień można zapisać, ale nie jest zmieniana.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>The length of the stream cannot be set to a value greater than the initial length of the specified byte array; however, the stream can be truncated (see <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</source>
          <target state="translated">Długość strumienia nie można ustawić na wartość większa niż długość początkowej określonej tablicy bajtów; jednak może być obcinana strumienia (zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source>This constructor does not expose the underlying stream.</source>
          <target state="translated">Ten konstruktor nie ujawnia źródłowego strumienia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> throws <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zgłasza wyjątek <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>The initial size of the internal array in bytes.</source>
          <target state="translated">Początkowy rozmiar tablicy wewnętrznej w bajtach.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class with an expandable capacity initialized as specified.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy o pojemności rozwijania zainicjowany jako określony.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> properties are all set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, I <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> właściwości są ustawione <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>The capacity automatically increases when you use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph> method to set the length to a value larger than the capacity of the current stream.</source>
          <target state="translated">Pojemność automatycznie zwiększany, gdy używasz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph> metodę, aby ustawić długości na wartość większa niż pojemność bieżąca strumienia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>Except for a <ph id="ph1">`MemoryStream`</ph> constructed with a byte[] parameter, write operations at the end of a <ph id="ph2">`MemoryStream`</ph> expand the <ph id="ph3">`MemoryStream`</ph>.</source>
          <target state="translated">Z wyjątkiem <ph id="ph1">`MemoryStream`</ph> utworzone z parametrem typu byte [], operacje na końcu zapisu <ph id="ph2">`MemoryStream`</ph> rozwiń <ph id="ph3">`MemoryStream`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>This constructor exposes the underlying stream that <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> returns.</source>
          <target state="translated">Ten konstruktor przedstawia podstawową strumienia, który <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zwraca.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>The array of unsigned bytes from which to create this stream.</source>
          <target state="translated">Tablica bajtów bez znaku, z którym ma zostać utworzony ten obiekt stream.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>The setting of the <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property, which determines whether the stream supports writing.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> właściwość, która określa, czy strumień obsługuje zapis.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>Initializes a new non-resizable instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class based on the specified byte array with the <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property set as specified.</source>
          <target state="translated">Inicjuje nowe wystąpienie bez zmienny rozmiar <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy oparte na określonej tablicy bajtów z <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> zestaw określonej właściwości.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> properties are both set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> właściwości są ustawione na <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> is set to the length of the specified byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> jest równa długości określonej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>The length of the stream cannot be set to a value greater than the initial length of the specified byte array; however, the stream can be truncated (see <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</source>
          <target state="translated">Długość strumienia nie można ustawić na wartość większa niż długość początkowej określonej tablicy bajtów; jednak może być obcinana strumienia (zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source>This constructor does not expose the underlying stream.</source>
          <target state="translated">Ten konstruktor nie ujawnia źródłowego strumienia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> throws <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zgłasza wyjątek <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The array of unsigned bytes from which to create this stream.</source>
          <target state="translated">Tablica bajtów bez znaku, z którym ma zostać utworzony ten obiekt stream.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The index into <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which the stream begins.</source>
          <target state="translated">Indeks do <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> od którego rozpoczyna się strumienia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the stream in bytes.</source>
          <target state="translated">Długość strumienia w bajtach.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Initializes a new non-resizable instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class based on the specified region (index) of a byte array.</source>
          <target state="translated">Inicjuje nowe wystąpienie bez zmienny rozmiar <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> klasy oparte na wybranym regionie (indeks) tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> properties are all set to <ph id="ph4">`true`</ph>, but the capacity cannot be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph>, I <ph id="ph3">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> właściwości są ustawione <ph id="ph4">`true`</ph>, ale nie można zmienić pojemność.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> is set to <ph id="ph2">`count`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> ustawiono <ph id="ph2">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the stream cannot be set to a value greater than the initial length of the specified byte array; however, the stream can be truncated (see <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</source>
          <target state="translated">Długość strumienia nie można ustawić na wartość większa niż długość początkowej określonej tablicy bajtów; jednak może być obcinana strumienia (zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>This constructor does not expose the underlying stream.</source>
          <target state="translated">Ten konstruktor nie ujawnia źródłowego strumienia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> throws <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zgłasza wyjątek <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>However, you can write to the stream.</source>
          <target state="translated">Jednak można zapisać do strumienia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Długość buforu pomniejszona o <ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The array of unsigned bytes from which to create this stream.</source>
          <target state="translated">Tablica bajtów bez znaku, z którym ma zostać utworzony ten obiekt stream.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The index in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which the stream begins.</source>
          <target state="translated">Indeks w <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> od którego rozpoczyna się strumienia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The length of the stream in bytes.</source>
          <target state="translated">Długość strumienia w bajtach.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The setting of the <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property, which determines whether the stream supports writing.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> właściwość, która określa, czy strumień obsługuje zapis.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>Initializes a new non-resizable instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class based on the specified region of a byte array, with the <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property set as specified.</source>
          <target state="translated">Inicjuje nowe wystąpienie bez zmienny rozmiar <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> na podstawie określonego regionu tablicy bajtów z <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> zestaw określonej właściwości.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> properties are both set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> właściwości są ustawione na <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> is set to <ph id="ph2">`count`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> ustawiono <ph id="ph2">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The length of the stream cannot be set to a value greater than the initial length of the specified byte array; however, the stream can be truncated (see <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</source>
          <target state="translated">Długość strumienia nie można ustawić na wartość większa niż długość początkowej określonej tablicy bajtów; jednak może być obcinana strumienia (zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>This constructor does not expose the underlying stream.</source>
          <target state="translated">Ten konstruktor nie ujawnia źródłowego strumienia.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> throws <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> zgłasza wyjątek <ph id="ph2">&lt;xref:System.UnauthorizedAccessException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>However, you can write to the stream if <ph id="ph1">`writable`</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Jednak można pisać do strumienia Jeśli <ph id="ph1">`writable`</ph> jest <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> are negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Długość buforu pomniejszona o <ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The array of unsigned bytes from which to create this stream.</source>
          <target state="translated">Tablica bajtów bez znaku, z którym ma zostać utworzony ten obiekt stream.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The index into <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which the stream begins.</source>
          <target state="translated">Indeks do <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> od którego rozpoczyna się strumienia.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The length of the stream in bytes.</source>
          <target state="translated">Długość strumienia w bajtach.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The setting of the <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property, which determines whether the stream supports writing.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> właściwość, która określa, czy strumień obsługuje zapis.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable <ph id="ph2">&lt;see cref="M:System.IO.MemoryStream.GetBuffer" /&gt;</ph>, which returns the unsigned byte array from which the stream was created; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby włączyć <ph id="ph2">&lt;see cref="M:System.IO.MemoryStream.GetBuffer" /&gt;</ph>, która zwraca tablicę bajtu bez znaku, z której strumień został utworzony, a w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class based on the specified region of a byte array, with the <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> property set as specified, and the ability to call <ph id="ph3">&lt;see cref="M:System.IO.MemoryStream.GetBuffer" /&gt;</ph> set as specified.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> na podstawie określonego regionu tablicy bajtów z <ph id="ph2">&lt;see cref="P:System.IO.MemoryStream.CanWrite" /&gt;</ph> zestaw właściwości określone oraz możliwość wywołania <ph id="ph3">&lt;see cref="M:System.IO.MemoryStream.GetBuffer" /&gt;</ph> ustawić określone.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> properties are both set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.CanRead%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IO.MemoryStream.CanSeek%2A&gt;</ph> właściwości są ustawione na <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> is set to <ph id="ph2">`count`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> ustawiono <ph id="ph2">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The new stream instance can be written to, but the <ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> of the underlying byte array cannot be changed.</source>
          <target state="translated">Można zapisać nowe wystąpienie strumienia, ale <ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph> podstawowej bajtu tablicy nie można zmienić.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The length of the stream cannot be set to a value greater than the initial length of the specified byte array; however, the stream can be truncated (see <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</source>
          <target state="translated">Długość strumienia nie można ustawić na wartość większa niż długość początkowej określonej tablicy bajtów; jednak może być obcinana strumienia (zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
          <source>The buffer length minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">Długość buforu pomniejszona o <ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.CanRead">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">Pobiera wartość wskazującą, czy bieżący strumień obsługuje odczytu.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream is open.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli strumień jest otwarty.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanRead">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support reading, calls to the <ph id="ph2">&lt;xref:System.IO.MemoryStream.Read%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.MemoryStream.ReadByte%2A&gt;</ph> methods throw a <ph id="ph4">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Jeśli klasą pochodną <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> nie obsługuje operacji odczytu, wywołań <ph id="ph2">&lt;xref:System.IO.MemoryStream.Read%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.IO.MemoryStream.ReadByte%2A&gt;</ph> throw metody <ph id="ph4">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanRead">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Jeśli strumień jest zamknięty, ta właściwość zwraca <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.CanSeek">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">Pobiera wartość wskazującą, czy bieżący strumień obsługuje operacji wyszukiwania.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream is open.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli strumień jest otwarty.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanSeek">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support seeking, calls to <ph id="ph2">&lt;xref:System.IO.MemoryStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream.Position%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> throw a <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Jeśli klasą pochodną <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> nie obsługuje wyszukiwania, wywołań <ph id="ph2">&lt;xref:System.IO.MemoryStream.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.MemoryStream.SetLength%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream.Position%2A&gt;</ph>, i <ph id="ph5">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> throw <ph id="ph6">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanSeek">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Jeśli strumień jest zamknięty, ta właściwość zwraca <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.CanWrite">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">Pobiera wartość wskazującą, czy bieżący strumień obsługuje zapisu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the stream supports writing; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli strumienia obsługuje zapis; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanWrite">
          <source>If a class derived from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> does not support writing, a call to <ph id="ph2">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> throws a <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Jeśli klasą pochodną <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> nie obsługuje zapisywania wywołanie <ph id="ph2">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>, lub <ph id="ph4">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> zgłasza <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.CanWrite">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Jeśli strumień jest zamknięty, ta właściwość zwraca <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Capacity">
          <source>Gets or sets the number of bytes allocated for this stream.</source>
          <target state="translated">Pobiera lub ustawia liczbę bajtów przydzielonych do tego strumienia.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Capacity">
          <source>The length of the usable portion of the buffer for the stream.</source>
          <target state="translated">Długość części można używać buforu dla tego strumienia.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Capacity">
          <source><ph id="ph1">`Capacity`</ph> is the buffer length for system-provided byte arrays.</source>
          <target state="translated"><ph id="ph1">`Capacity`</ph> to długość buforu dla tablic bajtowych dostarczane przez system.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Capacity">
          <source><ph id="ph1">`Capacity`</ph> cannot be set to a value less than the current length of the stream.</source>
          <target state="translated"><ph id="ph1">`Capacity`</ph> Nie można ustawić na wartość mniejszą niż bieżąca długość strumienia.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Capacity">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Capacity">
          <source>A capacity is set that is negative or less than the current length of the stream.</source>
          <target state="translated">Pojemności ma wartość ujemną lub mniejsza niż bieżąca długość strumienia.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Capacity">
          <source>The current stream is closed.</source>
          <target state="translated">Bieżący strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Capacity">
          <source><ph id="ph1">&lt;see langword="set" /&gt;</ph> is invoked on a stream whose capacity cannot be modified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="set" /&gt;</ph> jest wywoływana w strumieniu, której pojemność nie może być modyfikowany.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>The stream to which the contents of the current stream will be copied.</source>
          <target state="translated">Strumień, do którego zostaną skopiowane zawartość bieżącego strumienia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>The size, in bytes, of the buffer.</source>
          <target state="translated">Rozmiar w bajtach buforu.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>This value must be greater than zero.</source>
          <target state="translated">Ta wartość musi być większa niż zero.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token do monitorowania żądań anulowania.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously reads all the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.</source>
          <target state="translated">Asynchronicznie odczytuje wszystkich bajtów z bieżącego strumienia i zapisuje je w innej strumienia, przy użyciu określony rozmiar buforu i anulowania tokenu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous copy operation.</source>
          <target state="translated">Zadanie reprezentujące operację asynchroniczną kopiowania.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffersize" /&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffersize" /&gt;</ph> ma wartość ujemną lub wartość zero.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>Either the current stream or the destination stream is disposed.</source>
          <target state="translated">Strumień docelowy albo bieżący strumień jest usunięty.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <source>The current stream does not support reading, or the destination stream does not support writing.</source>
          <target state="translated">Bieżący strumień nie obsługuje operacji odczytu lub strumień docelowy nie obsługuje zapisywania.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana przez metodę publiczną <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> — metoda i <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.MemoryStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> wywołuje chronioną metodę <ph id="ph2">&lt;xref:System.IO.MemoryStream.Dispose%2A&gt;</ph> metody z <ph id="ph3">`disposing`</ph> ustawiono parametr <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.MemoryStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> wywołuje <ph id="ph2">&lt;xref:System.IO.MemoryStream.Dispose%2A&gt;</ph> z <ph id="ph3">`disposing`</ph> ustawioną <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.MemoryStream&gt;</ph> references.</source>
          <target state="translated">Gdy <ph id="ph1">`disposing`</ph> parametr jest <ph id="ph2">`true`</ph>, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <ph id="ph3">&lt;xref:System.IO.MemoryStream&gt;</ph> odwołania.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Ta metoda wywołuje <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> metody każdego odwołuje się do obiektu.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> można wywoływać wielokrotnie przez inne obiekty.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.MemoryStream.Dispose(System.Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see cref="M:System.IO.MemoryStream.Dispose(System.Boolean)" /&gt;</ph> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.MemoryStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu wdrażania <ph id="ph1">&lt;see cref="M:System.IO.MemoryStream.Dispose(System.Boolean)" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>implementacja metody Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> i <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Flush">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.IO.Stream.Flush" /&gt;</ph> method so that no action is performed.</source>
          <target state="translated">Zastępuje <ph id="ph1">&lt;see cref="M:System.IO.Stream.Flush" /&gt;</ph> metody, aby nie wykonano żadnej akcji.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Flush">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Flush">
          <source>Because any data written to a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> object is written into RAM, this method is redundant.</source>
          <target state="translated">Ponieważ wszystkie dane zapisane <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> obiektu są zapisywane w pamięci RAM, ta metoda jest nadmiarowy.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token do monitorowania żądań anulowania.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Asynchronously clears all buffers for this stream, and monitors cancellation requests.</source>
          <target state="translated">Asynchronicznie usuwa wszystkie bufory dla tego strumienia i monitorowanie żądań anulowania.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">Zadanie reprezentujące asynchroniczną operację opróżniania.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Because any data written to a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> object is written into RAM, this method is redundant.</source>
          <target state="translated">Ponieważ wszystkie dane zapisane <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> obiektu są zapisywane w pamięci RAM, ta metoda jest nadmiarowy.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli operacja została anulowana przed ukończeniem działania, zwrócone zadania zawiera <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> wartość <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>You can create a cancellation token by creating an instance of the <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> class and passing the <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> property as the <ph id="ph3">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Token anulowania można utworzyć przez utworzenie wystąpienia <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> klasy i przekazywanie <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> właściwość jako <ph id="ph3">`cancellationToken`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Strumień został usunięty.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>Returns the array of unsigned bytes from which this stream was created.</source>
          <target state="translated">Zwraca tablicę bajtów bez znaku, z których ten strumień został utworzony.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>The byte array from which this stream was created, or the underlying array if a byte array was not provided to the <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> constructor during construction of the current instance.</source>
          <target state="translated">Tablica bajtów, z którego ten strumień został utworzony lub tablica bazowa, jeśli nie podano tablicy bajtów <ph id="ph1">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph> Konstruktor podczas konstruowania bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>Note that the buffer contains allocated bytes which might be unused.</source>
          <target state="translated">Należy pamiętać, że bufor zawiera przydzielonych bajtów, które mogą być nieużywane.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>For example, if the string "test" is written into the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> object, the length of the buffer returned from <ph id="ph2">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> is 256, not 4, with 252 bytes unused.</source>
          <target state="translated">Na przykład, jeśli w ciągu "test" są zapisywane <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> obiektu, długość buforu zwrócony z <ph id="ph2">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> to 256, nie 4 z 252 nieużywanych bajtów.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>To obtain only the data in the buffer, use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.ToArray%2A&gt;</ph> method; however, <ph id="ph2">&lt;xref:System.IO.MemoryStream.ToArray%2A&gt;</ph> creates a copy of the data in memory.</source>
          <target state="translated">Aby uzyskać dane w buforze, użyj <ph id="ph1">&lt;xref:System.IO.MemoryStream.ToArray%2A&gt;</ph> metody; jednak <ph id="ph2">&lt;xref:System.IO.MemoryStream.ToArray%2A&gt;</ph> tworzy kopię danych w pamięci.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>The buffer can also be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Można też buforu <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>To create a <ph id="ph1">`MemoryStream`</ph> instance with a publicly visible buffer, use <ph id="ph2">&lt;xref:System.IO.MemoryStream.%23ctor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.MemoryStream.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.MemoryStream.%23ctor%28System.Int32%29&gt;</ph>.</source>
          <target state="translated">Aby utworzyć <ph id="ph1">`MemoryStream`</ph> wystąpienia o widocznego publicznie buforu, użyj <ph id="ph2">&lt;xref:System.IO.MemoryStream.%23ctor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.MemoryStream.%23ctor%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph>, lub <ph id="ph4">&lt;xref:System.IO.MemoryStream.%23ctor%28System.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>If the current stream is resizable, two calls to this method do not return the same array if the underlying byte array is resized between calls.</source>
          <target state="translated">Jeśli bieżący strumień jest o zmiennych rozmiarach, dwa wywołania tej metody nie mają tej samej tablicy Jeśli rozmiaru między wywołaniami podstawowej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.Capacity%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>This method works when the memory stream is closed.</source>
          <target state="translated">Ta metoda działa po zamknięciu strumienia pamięci.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.GetBuffer">
          <source>The <ph id="ph1">&lt;see langword="MemoryStream" /&gt;</ph> instance was not created with a publicly visible buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MemoryStream" /&gt;</ph> Wystąpienie nie zostało utworzone z buforu, widocznego publicznie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Length">
          <source>Gets the length of the stream in bytes.</source>
          <target state="translated">Pobiera długość strumienia w bajtach.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Length">
          <source>The length of the stream in bytes.</source>
          <target state="translated">Długość strumienia w bajtach.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Length">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Length">
          <source>The stream is closed.</source>
          <target state="translated">Strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Position">
          <source>Gets or sets the current position within the stream.</source>
          <target state="translated">Pobiera lub ustawia bieżącą pozycję w strumieniu.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Position">
          <source>The current position within the stream.</source>
          <target state="translated">Bieżąca pozycja w strumieniu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.MemoryStream.Position">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Position">
          <source>The position is set to a negative value or a value greater than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Pozycja jest ustawiona wartość ujemną lub wartość większą niż <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.IO.MemoryStream.Position">
          <source>The stream is closed.</source>
          <target state="translated">Strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept> - 1) replaced by the characters read from the current stream.</source>
          <target state="translated">Po powrocie z tej metody zawiera określonej tablicy bajtów z wartością pomiędzy <bpt id="p1">&lt;c&gt;</bpt>przesunięcie<ept id="p1">&lt;/c&gt;</ept> i (<bpt id="p2">&lt;c&gt;</bpt>przesunięcie<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>liczba<ept id="p3">&lt;/c&gt;</ept> - 1) zastępowaną przez znaki odczytany z bieżącego strumienia.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing data from the current stream.</source>
          <target state="translated">Zerze przesunięcie w <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> od którego należy zacząć przechowywanie danych z bieżącego strumienia.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Maksymalna liczba bajtów do odczytania.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a block of bytes from the current stream and writes the data to a buffer.</source>
          <target state="translated">Odczytuje blok bajtów ze strumienia bieżącego i zapisuje dane w buforze.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes written into the buffer.</source>
          <target state="translated">Całkowita liczba bajtów zapisanych w buforze.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached before any bytes are read.</source>
          <target state="translated">Może to być mniejsza niż żądana liczba bajtów podanej liczby bajtów nie są obecnie dostępne, czy są zero, jeśli osiągnięto koniec strumienia przed wszystkich bajtów do odczytu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the first byte in <ph id="ph2">`buffer`</ph> to which data from the current stream is written.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> Parametru zapewnia przesunięcie pierwszego bajtu w <ph id="ph2">`buffer`</ph> danych z bieżący strumień jest zapisywane.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`count`</ph> parameter gives the maximum number of bytes to read from the current stream.</source>
          <target state="translated"><ph id="ph1">`count`</ph> Parametru zapewnia maksymalną liczbę bajtów do odczytania strumienia bieżącego.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">Zwrócona wartość jest rzeczywista liczba bajtów odczytanych lub zero, jeśli zostanie osiągnięty koniec strumienia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the read operation is successful, the current position within the stream advances by the number of bytes read.</source>
          <target state="translated">Jeśli operacja odczytu zakończy się pomyślnie, bieżącą pozycję w strumieniu przechodzi przez liczbę bajtów do odczytu.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">Jeśli wystąpi wyjątek, bieżącą pozycję w strumieniu nie jest zmieniany.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Read`</ph> method will return zero only if the end of the stream is reached.</source>
          <target state="translated"><ph id="ph1">`Read`</ph> Metoda zwróci wartość zero, tylko wtedy, gdy zostanie osiągnięty koniec strumienia.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>In all other cases, <ph id="ph1">`Read`</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">We wszystkich innych przypadkach <ph id="ph1">`Read`</ph> ma zawsze wartość co najmniej jednego bajtu ze strumienia przed zwróceniem.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>By definition, if no data is available from the stream upon a call to <ph id="ph1">`Read`</ph>, the <ph id="ph2">`Read`</ph> method returns zero (the end of the stream is reached automatically).</source>
          <target state="translated">Zgodnie z definicją, jeśli dane są niedostępne ze strumienia po wywołaniu <ph id="ph1">`Read`</ph>, <ph id="ph2">`Read`</ph> metoda zwraca wartość zero (Osiągnięto koniec strumienia jest automatycznie).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">Implementacja jest bezpłatna do zwrócenia mniej bajtów niż żądana, nawet jeżeli nie osiągnięto koniec strumienia.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Use <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> for reading primitive data types.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> do odczytywania typy pierwotne danych.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the byte array specified in the <ph id="ph1">`buffer`</ph> parameter is the underlying buffer returned by the <ph id="ph2">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> method, the array contents are overwritten, and no exception is thrown.</source>
          <target state="translated">Jeśli tablica bajtów jest określona w <ph id="ph1">`buffer`</ph> parametr jest podstawowym buforu zwrócony przez <ph id="ph2">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> metody zawartości tablicy zostaną zastąpione, a nie wyjątek.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> subtracted from the buffer length is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> odjęta od długości buforu jest mniejszy niż <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current stream instance is closed.</source>
          <target state="translated">Bieżące wystąpienie strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write the data into.</source>
          <target state="translated">Bufor zapisu danych do.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data from the stream.</source>
          <target state="translated">Przesunięcie bajtów w <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> jaką rozpocząć pisanie danych ze strumienia.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">Maksymalna liczba bajtów do odczytania.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token do monitorowania żądań anulowania.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">Asynchronicznie odczytuje sekwencję bajtów ze strumienia bieżącego zmienia pozycję w strumieniu przez liczbę bajtów odczytanych i monitoruje żądań anulowania.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">Zadanie reprezentujące asynchroniczną operacji odczytu.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The value of the <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parametr zawiera całkowitą liczbę bajtów odczytanych w buforze.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">Wartość wyniku może być mniejsza niż żądana liczba bajtów Liczba dostępnych bajtów jest mniejsza niż żądany numer, czy może być 0 (zero), jeśli osiągnięto koniec strumienia.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli operacja została anulowana przed ukończeniem działania, zwrócone zadania zawiera <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> wartość <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You can create a cancellation token by creating an instance of the <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> class and passing the <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> property as the <ph id="ph3">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Token anulowania można utworzyć przez utworzenie wystąpienia <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> klasy i przekazywanie <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> właściwość jako <ph id="ph3">`cancellationToken`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Suma <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest większa niż długość buforu.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support reading.</source>
          <target state="translated">Strumień nie obsługuje odczytu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Strumień został usunięty.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">Strumień jest obecnie używany przez poprzednią operację odczytu.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadByte">
          <source>Reads a byte from the current stream.</source>
          <target state="translated">Odczytuje bajt z bieżącego strumienia.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadByte">
          <source>The byte cast to a <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, or -1 if the end of the stream has been reached.</source>
          <target state="translated">Bajt rzutować <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, lub wartość -1, jeśli osiągnięto koniec strumienia.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadByte">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.ReadByte%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadByte">
          <source>If the read operation is successful, the current position within the stream is advanced by one byte.</source>
          <target state="translated">Jeśli operacja odczytu zakończy się pomyślnie, bieżącą pozycję w strumieniu jest zaawansowane przez jednego bajtu.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadByte">
          <source>If an exception occurs, the current position within the stream is unchanged.</source>
          <target state="translated">Jeśli wystąpi wyjątek, bieżącą pozycję w strumieniu jest bez zmian.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ReadByte">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ReadByte">
          <source>The current stream instance is closed.</source>
          <target state="translated">Bieżące wystąpienie strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the stream.</source>
          <target state="translated">Nowa pozycja w strumieniu.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This is relative to the <bpt id="p1">&lt;c&gt;</bpt>loc<ept id="p1">&lt;/c&gt;</ept> parameter, and can be positive or negative.</source>
          <target state="translated">Jest to względem <bpt id="p1">&lt;c&gt;</bpt>loc<ept id="p1">&lt;/c&gt;</ept> parametru i może być liczbą dodatnią lub ujemną.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>, which acts as the seek reference point.</source>
          <target state="translated">Wartości typu <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>, który działa jako punkt odniesienia wyszukiwania.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position within the current stream to the specified value.</source>
          <target state="translated">Ustawia położenie w obrębie bieżącego strumienia z podaną wartością.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the stream, calculated by combining the initial reference point and the offset.</source>
          <target state="translated">Nowa pozycja w strumieniu obliczany przez połączenie punktu początkowego odniesienia i przesunięcie.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.Seek%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">Wyszukiwanie w dowolne miejsce powyżej długość strumienia jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Do not use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> method to determine the new position in the stream if the <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> was initialized with a non-zero offset.</source>
          <target state="translated">Nie używaj <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> metodę, aby określić nowy pozycją w strumieniu, czy <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> został zainicjowany z niezerowym przesunięciu.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If you do, <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> will return an inaccurate value.</source>
          <target state="translated">Jeśli to zrobisz, <ph id="ph1">&lt;xref:System.IO.MemoryStream.Seek%2A&gt;</ph> zwróci wartość niedokładne.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.Position%2A&gt;</ph> property to get the new position of the stream.</source>
          <target state="translated">Zamiast tego należy użyć <ph id="ph1">&lt;xref:System.IO.MemoryStream.Position%2A&gt;</ph> właściwości do pobrania nowego pozycji strumienia.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking is attempted before the beginning of the stream.</source>
          <target state="translated">Wyszukiwanie nastąpiła przed początkiem strumienia.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>There is an invalid <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</source>
          <target state="translated">Istnieje nieprawidłowy <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> caused an arithmetic overflow.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> spowodowało przepełnienie arytmetyczne.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The current stream instance is closed.</source>
          <target state="translated">Bieżące wystąpienie strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>The value at which to set the length.</source>
          <target state="translated">Wartość, której można ustawić długości.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>Sets the length of the current stream to the specified value.</source>
          <target state="translated">Ustawia długość bieżący strumień do określonej wartości.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.SetLength%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>If the specified value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">Jeśli określona wartość jest mniejsza niż bieżąca długość strumienia, zostanie obcięta strumienia.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>If after the truncation the current position within the stream is past the end of the stream, the <ph id="ph1">&lt;xref:System.IO.MemoryStream.ReadByte%2A&gt;</ph> method returns -1, the <ph id="ph2">&lt;xref:System.IO.MemoryStream.Read%2A&gt;</ph> method reads zero bytes into the provided byte array, and <ph id="ph3">&lt;xref:System.IO.MemoryStream.Write%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.MemoryStream.WriteByte%2A&gt;</ph> methods append specified bytes at the end of the stream, increasing its length.</source>
          <target state="translated">Jeśli po obcinania bieżącą pozycję w strumieniu znajduje się poza koniec strumienia, <ph id="ph1">&lt;xref:System.IO.MemoryStream.ReadByte%2A&gt;</ph> metoda zwraca wartość -1, <ph id="ph2">&lt;xref:System.IO.MemoryStream.Read%2A&gt;</ph> metoda odczytuje zero bajtów w tablicy bajtów podana i <ph id="ph3">&lt;xref:System.IO.MemoryStream.Write%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.IO.MemoryStream.WriteByte%2A&gt;</ph> metody dołączania określony bajtów na koniec strumienia, zwiększyć jego długość.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>If the specified value is larger than the current capacity and the stream is resizable, the capacity is increased, and the current position within the stream is unchanged.</source>
          <target state="translated">Jeśli określona wartość jest większa niż pojemność bieżąca i strumień jest o zmiennych rozmiarach, zwiększają wydajność i bieżącą pozycję w strumieniu jest bez zmian.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>If the length is increased, the contents of the stream between the old and the new length are initialized to zeros.</source>
          <target state="translated">Po zwiększeniu długość zawartości strumienia między stary i nowy długości są inicjowane do zera.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>A <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> instance must support writing for this method to work.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> wystąpienie musi obsługiwać zapis dla tej metody do pracy.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.IO.MemoryStream.CanWrite%2A&gt;</ph> właściwości w celu określenia, czy bieżące wystąpienie obsługuje zapis.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>The current stream is not resizable and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is larger than the current capacity.</source>
          <target state="translated">Bieżący strumień nie jest zmieniana i <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większy niż pojemność bieżąca.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source>The current stream does not support writing.</source>
          <target state="translated">Bieżący strumień nie obsługuje zapisywania.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is negative or is greater than the maximum length of the <ph id="ph2">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph>, where the maximum length is(<ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> - origin), and origin is the index into the underlying buffer at which the stream starts.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ma wartość ujemną lub jest większa niż maksymalna długość <ph id="ph2">&lt;see cref="T:System.IO.MemoryStream" /&gt;</ph>, gdzie jest maksymalną długość (<ph id="ph3">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> -pochodzenia), i pochodzenia jest indeksem w buforze podstawowej, w którym rozpoczyna się strumienia.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ToArray">
          <source>Writes the stream contents to a byte array, regardless of the <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.Position" /&gt;</ph> property.</source>
          <target state="translated">Zapisuje zawartość strumienia do tablicy typu byte, niezależnie od tego <ph id="ph1">&lt;see cref="P:System.IO.MemoryStream.Position" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.ToArray">
          <source>A new byte array.</source>
          <target state="translated">Nowe tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>This method omits unused bytes in <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> from the array.</source>
          <target state="translated">Ta metoda umożliwia pominięcie nieużywanych bajtów w <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> z tablicy.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>To get the entire buffer, use the <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> method.</source>
          <target state="translated">Aby uzyskać cały buforu, użyj <ph id="ph1">&lt;xref:System.IO.MemoryStream.GetBuffer%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>This method returns a copy of the contents of the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> as a byte array.</source>
          <target state="translated">Ta metoda zwraca kopię zawartości <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> jako tablicę bajtów.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>If the current instance was constructed on a provided byte array, a copy of the section of the array to which this instance has access is returned.</source>
          <target state="translated">Jeśli bieżące wystąpienie zostało utworzone na tablicę bajtów podana, jest zwracana kopię sekcji tablicy, do której to wystąpienie ma dostęp.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>See the <ph id="ph1">&lt;xref:System.IO.MemoryStream.%23ctor%2A&gt;</ph> constructor for details.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.IO.MemoryStream.%23ctor%2A&gt;</ph> konstruktora, aby uzyskać szczegółowe informacje.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.ToArray">
          <source>This method works when the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> is closed.</source>
          <target state="translated">Ta metoda działa w przypadku <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> jest zamknięty.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
          <source>The byte array segment from which this stream was created.</source>
          <target state="translated">Tablica bajtów segmentu, z którego ten strumień został utworzony.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
          <source>Returns the array of unsigned bytes from which this stream was created.</source>
          <target state="translated">Zwraca tablicę bajtów bez znaku, z których ten strumień został utworzony.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
          <source>The return value indicates whether the conversion succeeded.</source>
          <target state="translated">Zwracana wartość wskazuje, czy konwersja powiodła się.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the conversion was successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli konwersja powiodła się. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to write data from.</source>
          <target state="translated">Bufor zapisywania danych z.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">Zerze przesunięcie w <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> jaką należy zacząć kopiowanie bajtów do bieżącego strumienia.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Maksymalna liczba bajtów do zapisania.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a block of bytes to the current stream using data read from a buffer.</source>
          <target state="translated">Zapisuje bieżący strumień przy użyciu danych z bufora do odczytu bloku bajtów.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the first byte in <ph id="ph2">`buffer`</ph> to write from, and the <ph id="ph3">`count`</ph> parameter gives the number of bytes to write.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> Parametru zapewnia przesunięcie pierwszego bajtu w <ph id="ph2">`buffer`</ph> do zapisu i <ph id="ph3">`count`</ph> parametru zapewnia liczba bajtów do zapisania.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the current position within the stream is advanced by the number of bytes written.</source>
          <target state="translated">Jeśli operacja zapisu zakończy się pomyślnie, bieżącą pozycję w strumieniu jest zaawansowane przez liczba zapisanych bajtów.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position within the stream is unchanged.</source>
          <target state="translated">Jeśli wystąpi wyjątek, bieżącą pozycję w strumieniu jest bez zmian.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Except for a <ph id="ph1">`MemoryStream`</ph> constructed with a byte[] parameter, write operations at the end of a <ph id="ph2">`MemoryStream`</ph> expand the <ph id="ph3">`MemoryStream`</ph>.</source>
          <target state="translated">Z wyjątkiem <ph id="ph1">`MemoryStream`</ph> utworzone z parametrem typu byte [], operacje na końcu zapisu <ph id="ph2">`MemoryStream`</ph> rozwiń <ph id="ph3">`MemoryStream`</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The stream does not support writing.</source>
          <target state="translated">Strumień nie obsługuje zapisywania.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For additional information see <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The current position is closer than <ph id="ph1">&lt;paramref name="count" /&gt;</ph> bytes to the end of the stream, and the capacity cannot be modified.</source>
          <target state="translated">Bieżące położenie jest bliżej niż <ph id="ph1">&lt;paramref name="count" /&gt;</ph> bajty do końca strumienia i pojemność nie może być modyfikowany.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> subtracted from the buffer length is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> odjęta od długości buforu jest mniejszy niż <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> are negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurs.</source>
          <target state="translated">Wystąpi błąd We/Wy.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The current stream instance is closed.</source>
          <target state="translated">Bieżące wystąpienie strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write data from.</source>
          <target state="translated">Bufor zapisywania danych z.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin copying bytes to the stream.</source>
          <target state="translated">Zerze przesunięcie w <bpt id="p1">&lt;c&gt;</bpt>buforu<ept id="p1">&lt;/c&gt;</ept> z którego należy zacząć kopiowanie bajtów do strumienia.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">Maksymalna liczba bajtów do zapisania.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">Token do monitorowania żądań anulowania.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">Asynchronicznie zapisuje sekwencję bajtów do strumienia bieżącego przesuwa bieżącą pozycję w tym strumieniu przez liczba zapisanych bajtów i monitoruje żądania anulowania.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">Zadanie, które reprezentuje asynchroniczny zapis operacji.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli operacja została anulowana przed ukończeniem działania, zwrócone zadania zawiera <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> wartość <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You can create a cancellation token by creating an instance of the <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> class and passing the <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> property as the <ph id="ph3">`cancellationToken`</ph> parameter.</source>
          <target state="translated">Token anulowania można utworzyć przez utworzenie wystąpienia <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> klasy i przekazywanie <ph id="ph2">&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;</ph> właściwość jako <ph id="ph3">`cancellationToken`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated">Suma <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> i <ph id="ph2">&lt;paramref name="count" /&gt;</ph> jest większa niż długość buforu.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support writing.</source>
          <target state="translated">Strumień nie obsługuje zapisywania.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">Strumień został usunięty.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">Strumień jest obecnie używany przez poprzednią operację zapisu.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>The byte to write.</source>
          <target state="translated">Bajtów do zapisania.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>Writes a byte to the current stream at the current position.</source>
          <target state="translated">Zapisuje bieżący strumień w bieżącym położeniu bajt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda zastępuje <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>Except for a <ph id="ph1">`MemoryStream`</ph> constructed with a byte[] parameter, write operations at the end of a <ph id="ph2">`MemoryStream`</ph> expand the <ph id="ph3">`MemoryStream`</ph>.</source>
          <target state="translated">Z wyjątkiem <ph id="ph1">`MemoryStream`</ph> utworzone z parametrem typu byte [], operacje na końcu zapisu <ph id="ph2">`MemoryStream`</ph> rozwiń <ph id="ph3">`MemoryStream`</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>The stream does not support writing.</source>
          <target state="translated">Strumień nie obsługuje zapisywania.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>For additional information see <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>The current position is at the end of the stream, and the capacity cannot be modified.</source>
          <target state="translated">Bieżące położenie jest na końcu strumienia i pojemność nie może być modyfikowany.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <source>The current stream is closed.</source>
          <target state="translated">Bieżący strumień jest zamknięty.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <source>The stream to write this memory stream to.</source>
          <target state="translated">Strumień do tego strumienia pamięci do zapisu.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <source>Writes the entire contents of this memory stream to another stream.</source>
          <target state="translated">Zapisuje całą zawartość tego strumienia pamięci do innego strumienia.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <source>When the current stream is open, this method is equivalent to calling <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> on the underlying buffer of this stream.</source>
          <target state="translated">Gdy bieżący strumień jest otwarty, ta metoda jest odpowiednikiem wywołania <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A?displayProperty=nameWithType&gt;</ph> w buforze podstawowej tego strumienia.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <source>The current or target stream is closed.</source>
          <target state="translated">Bieżące lub docelowej strumień jest zamknięty.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>