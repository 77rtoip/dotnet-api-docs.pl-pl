<Type Name="InternalBufferOverflowException" FullName="System.IO.InternalBufferOverflowException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9844395685f967e65959c14b170cb181203da08" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52350375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InternalBufferOverflowException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit InternalBufferOverflowException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.IO.InternalBufferOverflowException" />
  <TypeSignature Language="VB.NET" Value="Public Class InternalBufferOverflowException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalBufferOverflowException : SystemException" />
  <TypeSignature Language="F#" Value="type InternalBufferOverflowException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek zgłaszany, gdy przepełnienia buforu wewnętrznego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.IO.FileSystemWatcher>, gdy użytkownik jest powiadamiany o zmiany w plikach, magazynów systemu te zmiany w buforze składnik tworzy i przekazuje do interfejsów programowania aplikacji (API). Jeśli wprowadzono wiele zmian w krótkim czasie, można łatwo z przepełnieniem buforu, wynikiem rzuceniem wyjątku, który zasadniczo utraci wszystkie zmiany. Aby uniknąć przepełnienia buforu, należy użyć <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType> i <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType> właściwości, aby odfiltrować niepożądane zmiany powiadomienia. Można również zwiększyć rozmiar buforu wewnętrznego za pośrednictwem <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType> właściwości. Jednak zwiększenie rozmiaru buforu jest kosztowne, dlatego buforu tak małej, jak to możliwe.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć FileSystemWatcher — do monitorowania zmian w plikach (tworzy, usuwa, zmienia nazwę zmiany) na dysku. W przykładzie pokazano również sposób prawidłowo odbierania powiadomienia o błędach.  
  
 [!code-csharp[FileSystemWatcher#1](~/samples/snippets/csharp/VS_Snippets_CLR/FileSystemWatcher/cs/filesystemwatcher.cs#1)]
 [!code-vb[FileSystemWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FileSystemWatcher/VB/FileSystemWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.InternalBufferOverflowException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalBufferOverflowException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.InternalBufferOverflowException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalBufferOverflowException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie domyślnego <see cref="T:System.IO.InternalBufferOverflowException" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te konstruktory są używane przez składnik oznaczającego błąd. Je stosować wyłącznie wtedy, jeśli rozszerzenie klasy lub .NET Framework. Ten wyjątek wskazuje przepełnienie buforu wewnętrznego, a użytkownicy powinno zająć odpowiednie kroki w kod, aby upewnić się, że odzyskuje prawidłowo. Przyczyna tego przeciążenia jest często zbyt dużej liczby zmian w krótkim czasie, powodując przepełnienia buforu wewnętrzne powiadomienie. Aby rozwiązać ten problem, należy użyć <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType> i <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType> powiadomienia o zmianie właściwości, aby odfiltrować niepożądane. Można również zwiększyć rozmiar buforu wewnętrznego za pośrednictwem <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType> właściwości. Jednak zwiększenie rozmiaru buforu jest kosztowne, dlatego buforu tak małej, jak to możliwe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalBufferOverflowException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.InternalBufferOverflowException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalBufferOverflowException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.IO.InternalBufferOverflowException : string -&gt; System.IO.InternalBufferOverflowException" Usage="new System.IO.InternalBufferOverflowException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat dla wyjątku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.InternalBufferOverflowException" /> określone klasy z komunikatem o błędzie do wyświetlenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te konstruktory są używane przez składnik oznaczającego błąd. Je stosować wyłącznie wtedy, jeśli rozszerzenie klasy lub .NET Framework. Ten wyjątek wskazuje przepełnienie buforu wewnętrznego, a użytkownicy powinno zająć odpowiednie kroki w kod, aby upewnić się, że odzyskuje prawidłowo. Przyczyna tego przeciążenia jest często zbyt dużej liczby zmian w krótkim czasie, powodując przepełnienia buforu wewnętrzne powiadomienie. Aby rozwiązać ten problem, należy użyć <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType> i <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType> powiadomienia o zmianie właściwości, aby odfiltrować niepożądane. Można również zwiększyć rozmiar buforu wewnętrznego za pośrednictwem <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType> właściwości. Jednak zwiększenie rozmiaru buforu jest kosztowne, dlatego buforu tak małej, jak to możliwe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalBufferOverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalBufferOverflowException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IO.InternalBufferOverflowException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IO.InternalBufferOverflowException" Usage="new System.IO.InternalBufferOverflowException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Informacje o wymaganych do zserializowania obiektu T:System.IO.InternalBufferOverflowException.</param>
        <param name="context">Źródło i miejsce docelowe serializowanym strumieniu skojarzony z obiektem T:System.IO.InternalBufferOverflowException.</param>
        <summary>Inicjuje nowe puste wystąpienie elementu <see cref="T:System.IO.InternalBufferOverflowException" /> klasę, która jest możliwy do serializacji, przy użyciu określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" /> obiektów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalBufferOverflowException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalBufferOverflowException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.IO.InternalBufferOverflowException : string * Exception -&gt; System.IO.InternalBufferOverflowException" Usage="new System.IO.InternalBufferOverflowException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat dla wyjątku.</param>
        <param name="inner">Wewnętrzny wyjątek.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.InternalBufferOverflowException" /> klasie z atrybutem komunikat do wyświetlenia i wygenerowanego określony wyjątek wewnętrzny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te konstruktory są używane przez składnik oznaczającego błąd. Je stosować wyłącznie wtedy, jeśli rozszerzenie klasy lub .NET Framework. Ten wyjątek wskazuje przepełnienie buforu wewnętrznego, a użytkownicy powinno zająć odpowiednie kroki w kod, aby upewnić się, że odzyskuje prawidłowo. Przyczyna tego przeciążenia jest często zbyt dużej liczby zmian w krótkim czasie, powodując przepełnienia buforu wewnętrzne powiadomienie. Aby rozwiązać ten problem, należy użyć <xref:System.IO.FileSystemWatcher.NotifyFilter%2A?displayProperty=nameWithType> i <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A?displayProperty=nameWithType> powiadomienia o zmianie właściwości, aby odfiltrować niepożądane. Można również zwiększyć rozmiar buforu wewnętrznego za pośrednictwem <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A?displayProperty=nameWithType> właściwości. Jednak zwiększenie rozmiaru buforu jest kosztowne, dlatego buforu tak małej, jak to możliwe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
  </Members>
</Type>