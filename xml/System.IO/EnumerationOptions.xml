<Type Name="EnumerationOptions" FullName="System.IO.EnumerationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58778ec585c1b5f5dbdb49f601f01dc3681004ca" /><Meta Name="ms.sourcegitcommit" Value="6845874ed1101d071f7fab3f359117b4718bf105" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/01/2019" /><Meta Name="ms.locfileid" Value="68710791" /></Metadata><TypeSignature Language="C#" Value="public class EnumerationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions" />
  <TypeSignature Language="F#" Value="type EnumerationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f44a6-101">Inicjuje nowe wystąpienie <see cref="T:System.IO.EnumerationOptions" /> klasy z zalecanymi opcjami domyślnymi.</span><span class="sxs-lookup"><span data-stu-id="f44a6-101">Initializes a new instance of the <see cref="T:System.IO.EnumerationOptions" /> class with the recommended default options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesToSkip">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes AttributesToSkip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes AttributesToSkip" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributesToSkip As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes AttributesToSkip { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.AttributesToSkip : System.IO.FileAttributes with get, set" Usage="System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-102">Pobiera lub ustawia atrybuty do pominięcia.</span><span class="sxs-lookup"><span data-stu-id="f44a6-102">Gets or sets the attributes to skip.</span></span> <span data-ttu-id="f44a6-103">Wartość domyślna to <c>GetFileAttributes. Hidden | . System</c>.</span><span class="sxs-lookup"><span data-stu-id="f44a6-103">The default is <c>FileAttributes.Hidden | FileAttributes.System</c>.</span></span></summary>
        <value><span data-ttu-id="f44a6-104">Atrybuty do pominięcia.</span><span class="sxs-lookup"><span data-stu-id="f44a6-104">The attributes to skip.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.IO.EnumerationOptions.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-105">Pobiera lub ustawia sugerowany rozmiar buforu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="f44a6-105">Gets or sets the suggested buffer size, in bytes.</span></span> <span data-ttu-id="f44a6-106">Wartość domyślna to 0 (brak sugestii).</span><span class="sxs-lookup"><span data-stu-id="f44a6-106">The default is 0 (no suggestion).</span></span></summary>
        <value><span data-ttu-id="f44a6-107">Rozmiar buforu.</span><span class="sxs-lookup"><span data-stu-id="f44a6-107">The buffer size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="f44a6-108">Nie wszystkie platformy używają buforów przyznanych przez użytkownika, a niektóre wymagają stałych buforów lub bufora z wystarczającą ilością miejsca do zwrócenia pełnego wyniku.</span><span class="sxs-lookup"><span data-stu-id="f44a6-108">Not all platforms use user allocated buffers, and some require either fixed buffers or a buffer that has enough space to return a full result.</span></span> <span data-ttu-id="f44a6-109">Jeden scenariusz, w którym ta opcja jest przydatna, jest z wyliczeniem udostępniania zdalnego w systemie Windows.</span><span class="sxs-lookup"><span data-stu-id="f44a6-109">One scenario where this option is useful is with remote share enumeration on Windows.</span></span> <span data-ttu-id="f44a6-110">Posiadanie dużego buforu może spowodować lepszą wydajność, ponieważ więcej wyników może być wsadowych przez sieć (na przykład za pośrednictwem udziału sieciowego).</span><span class="sxs-lookup"><span data-stu-id="f44a6-110">Having a large buffer may result in better performance as more results can be batched over the wire (for example, over a network share).</span></span>
<span data-ttu-id="f44a6-111">Na przykład bufor "Large" ma wartość 16 KB.</span><span class="sxs-lookup"><span data-stu-id="f44a6-111">A "large" buffer, for example, would be 16K.</span></span> <span data-ttu-id="f44a6-112">Typowa to 4K.</span><span class="sxs-lookup"><span data-stu-id="f44a6-112">Typical is 4K.</span></span>
            
<span data-ttu-id="f44a6-113">Sugerowany rozmiar buforu nie będzie używany, jeśli nie ma znaczenia dla natywnych interfejsów API na bieżącej platformie lub jeśli będzie zbyt mały, aby uzyskać co najmniej jeden wynik.</span><span class="sxs-lookup"><span data-stu-id="f44a6-113">The suggested buffer size will not be used if it has no meaning for the native APIs on the current platform or if it would be too small for getting at least a single result.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreInaccessible">
      <MemberSignature Language="C#" Value="public bool IgnoreInaccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreInaccessible" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreInaccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreInaccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreInaccessible : bool with get, set" Usage="System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-114">Pobiera lub ustawia wartość wskazującą, czy pominąć pliki lub katalogi w przypadku odmowy dostępu (na przykład <see cref="T:System.UnauthorizedAccessException" /> lub <see cref="T:System.Security.SecurityException" />).</span><span class="sxs-lookup"><span data-stu-id="f44a6-114">Gets or sets a value that indicates whether to skip files or directories when access is denied (for example, <see cref="T:System.UnauthorizedAccessException" /> or <see cref="T:System.Security.SecurityException" />).</span></span> <span data-ttu-id="f44a6-115">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f44a6-115">The default is <see langword="true" />.</span></span></summary>        
        <value><span data-ttu-id="f44a6-116"><see langword="true" />Aby pominąć innacessible pliki lub katalogi; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f44a6-116"><see langword="true" /> to skip innacessible files or directories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCasing">
      <MemberSignature Language="C#" Value="public System.IO.MatchCasing MatchCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchCasing MatchCasing" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCasing As MatchCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchCasing MatchCasing { System::IO::MatchCasing get(); void set(System::IO::MatchCasing value); };" />
      <MemberSignature Language="F#" Value="member this.MatchCasing : System.IO.MatchCasing with get, set" Usage="System.IO.EnumerationOptions.MatchCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-117">Pobiera lub ustawia zachowanie dopasowywania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="f44a6-117">Gets or sets the case matching behavior.</span></span></summary>
        <value><span data-ttu-id="f44a6-118">Jedna z wartości wyliczenia, która wskazuje zachowanie dopasowywania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="f44a6-118">One of the enumeration values that indicates the case matching behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="f44a6-119">W przypadku interfejsów API, które umożliwiają określanie wyrażenia dopasowania, ta właściwość pozwala określić zachowanie dopasowywania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="f44a6-119">For APIs that allow specifying a match expression, this property allows you to specify the case matching behavior.</span></span>
<span data-ttu-id="f44a6-120">Wartość domyślna to dopasowanie wartości domyślnych platformy, które są wydobyć od rozróżnienia wielkości liter w folderze tymczasowym.</span><span class="sxs-lookup"><span data-stu-id="f44a6-120">The default is to match platform defaults, which are gleaned from the case sensitivity of the temporary folder.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public System.IO.MatchType MatchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchType MatchType" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchType" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchType As MatchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchType MatchType { System::IO::MatchType get(); void set(System::IO::MatchType value); };" />
      <MemberSignature Language="F#" Value="member this.MatchType : System.IO.MatchType with get, set" Usage="System.IO.EnumerationOptions.MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-121">Pobiera lub ustawia typ dopasowania.</span><span class="sxs-lookup"><span data-stu-id="f44a6-121">Gets or sets the match type.</span></span></summary>
        <value><span data-ttu-id="f44a6-122">Jedna z wartości wyliczenia, która wskazuje typ dopasowania.</span><span class="sxs-lookup"><span data-stu-id="f44a6-122">One of the enumeration values that indicates the match type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="f44a6-123">W przypadku interfejsów API, które umożliwiają określanie wyrażenia dopasowania, ta właściwość pozwala określić sposób interpretowania wyrażenia dopasowania.</span><span class="sxs-lookup"><span data-stu-id="f44a6-123">For APIs that allow specifying a match expression, this property allows you to specify how to interpret the match expression.</span></span>
<span data-ttu-id="f44a6-124">Wartość domyślna to proste dopasowanie, gdzie "\*" ma zawsze 0 lub więcej znaków i "?" jest pojedynczym znakiem.</span><span class="sxs-lookup"><span data-stu-id="f44a6-124">The default is simple matching where '\*' is always 0 or more characters and '?' is a single character.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurseSubdirectories">
      <MemberSignature Language="C#" Value="public bool RecurseSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecurseSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurseSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecurseSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecurseSubdirectories : bool with get, set" Usage="System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-125">Pobiera lub ustawia wartość wskazującą, czy należy powtarzać w podkatalogach podczas wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f44a6-125">Gets or sets a value that indicates whether to recurse into subdirectories while enumerating.</span></span> <span data-ttu-id="f44a6-126">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f44a6-126">The default is <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="f44a6-127"><see langword="true" />Aby rekursywnie w podkatalogach; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f44a6-127"><see langword="true" /> to recurse into subdirectories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnSpecialDirectories">
      <MemberSignature Language="C#" Value="public bool ReturnSpecialDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnSpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnSpecialDirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnSpecialDirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnSpecialDirectories : bool with get, set" Usage="System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f44a6-128">Pobiera lub ustawia wartość wskazującą, czy mają być zwracane specjalne wpisy katalogu "." i "..".</span><span class="sxs-lookup"><span data-stu-id="f44a6-128">Gets or sets a value that indicates whether to return the special directory entries "." and "..".</span></span></summary>
        <value><span data-ttu-id="f44a6-129"><see langword="true" />Aby zwrócić specjalne wpisy katalogu "." i ".."; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f44a6-129"><see langword="true" /> to return the special directory entries "." and ".."; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
