<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00e1ee40f9cb5a0fa1f81d91caedb1ebf4d03f93" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36558514" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia abstrakcyjną klasę podstawową dla odczytu, zapisu i usuwania plików cookie sesji klienta HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) używa wystąpienia <xref:System.IdentityModel.Services.CookieHandler> klasy do odczytu, zapisu i usuwania plików cookie lub plików cookie, które zawierają <xref:System.IdentityModel.Tokens.SessionSecurityToken> na kliencie protokołu HTTP. Plik cookie (lub pliki cookie w przypadku, gdy tokenu sesji jest podzielone między kilka plików cookie) zawierający sesji token nosi nazwę pliku cookie sesji.  
  
 Windows Identity Foundation (WIF) jest dostarczany z wywołuje program obsługi podzielony plik cookie do obsługi plików cookie, która jest implementowany przez <xref:System.IdentityModel.Services.ChunkedCookieHandler> klasy. Podzielony plik cookie obsługi zostaje tokenu sesji między co najmniej jeden plików cookie w zależności od rozmiaru określonego fragmentu. Ten serwer ma spełnia ograniczenia rozmiaru poszczególnych plików cookie narzucone przez wiele przeglądarek.  
  
 Może pochodzić od <xref:System.IdentityModel.Services.CookieHandler> do tworzenia własnych obsługi plików cookie. Jeśli tak zrobisz, konieczne jest przesłonięcie <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>, i <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> metody służące do wykonywania faktyczną pracę usuwanie, odczytywanie i zapisywanie pliku cookie sesji. Te metody zwykle odczytu pliku cookie z <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> kolekcji i zapisu lub usuwania plików cookie przez <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> kolekcji. <xref:System.Web.HttpContext> Obiektu za pomocą którego można uzyskać dostępu do żądania i odpowiedzi jest dostępne jako parametr do każdego z tych metod. Oprócz wymaganych metod, można opcjonalnie zastąpić inne właściwości metody wirtualne udostępniane przez <xref:System.IdentityModel.Services.CookieHandler> klasę, aby dostosować zachowanie programu obsługi.  
  
 Kilka właściwości są udostępniane przez <xref:System.IdentityModel.Services.CookieHandler> klasy, która określa domyślne zachowanie i właściwości dla pliku cookie sesji. <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, I <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości Podaj nazwę podstawową dla pliku cookie, domeny, w którym jest poprawna i ścieżkę, w którym są przechowywane na kliencie. <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> Właściwość określa, czy plik cookie jest dostępny do skryptów po stronie klienta. <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> Właściwość określa, czy plik cookie powinny być przekazywane tylko za pośrednictwem bezpiecznego połączenia (HTTPS). Jeśli ustawiona, <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> właściwość jest używana do ustawiania czas wygaśnięcia trwałe sesje, którego sesje, które są poprawne, nawet po zamknięciu przeglądarki. Wszystkie te właściwości mają równoważne właściwości, które zwykle są ustawione na podstawowych <xref:System.Web.HttpCookie> obiektu (lub obiektów) za pomocą metod "core" obsługi. Aby uzyskać więcej informacji, zobacz dokumentację dla każdej właściwości.  
  
 Program obsługi plików cookie, który jest używany przez Menedżera kont zabezpieczeń może być określony w konfiguracji za pomocą [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) elementu. Obsługi plików cookie, ustawione przez ten element może być modyfikowany w delegata zdarzenia dla <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> ustawić lub bezpośrednio za pomocą uzyskać dostępu do zdarzeń lub <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 Poniższy przykład konfiguruje się SAM do użycia niestandardowego pliku cookie obsługi typu `MyNamespace.MyCustomCookieHandler`.  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Metoda wywoływana z konstruktorów w klasach pochodnych zainicjować <see cref="T:System.IdentityModel.Services.CookieHandler" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa plik cookie skojarzone z bieżącym żądaniem z domyślnej nazwy domeny i ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa, domeny i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <summary>Usuwa plik cookie skojarzone z bieżącego żądania, który jest określonej nazwy domyślnej domeny i ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domeny i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Usuwa plik cookie skojarzone z bieżącym żądaniem z domyślnej nazwy domeny i ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa, domeny i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Usuwa plik cookie skojarzone z określonego żądania, który jest określonej nazwy domyślnej domeny i ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domeny i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka do pliku cookie.</param>
        <param name="domain">Domeny pliku cookie</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania</param>
        <summary>Usuwa plik cookie skojarzone z określonego żądania, która ma określoną nazwę, ścieżkę i domeny.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie</param>
        <param name="path">Ścieżka do pliku cookie</param>
        <param name="domain">Domeny pliku cookie</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej usuwa plik cookie skojarzone z określonego żądania, która ma określoną nazwę, domeny i ścieżkę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążone <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> metody wykonują rzeczywistą pracę usunięcia pliku cookie. <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> Metody zapewni, że nazwa i ścieżka są ciągami niezerowymi i niepustymi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy przesłonić tę metodę. Implementacja jest całkowicie do projektanta. W przypadku typowej implementacji Zastąp określony plik cookie w <see cref="P:System.Web.HttpResponse.Cookies" /> kolekcji z pliku cookie, który ma <see langword="null" /> data i czas wygaśnięcia ustawionej wcześniej niż bieżący czas; mimo to nie jest wymagane.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domenę używać plików cookie.</summary>
        <value>Domena używać plików cookie. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odpowiada <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `domain` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy plik cookie powinien być ukryty ze skryptu klienta.</summary>
        <value>
          <see langword="true" /> Jeśli plik cookie powinien być ukryty z skrypt po stronie klienta; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa, czy flagi "HttpOnly" jest emitowany nagłówka Set-Cookie napisane przez obsługę plików cookie. Niektóre przeglądarki sieci web honorować tej flagi, przechowując skryptu po stronie klienta, dostęp do wartości pliku cookie.  
  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `hideFromScript` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">Podstawowy adres URL żądania.</param>
        <param name="targetUri">Adres URL do dopasowania</param>
        <summary>Jeśli domena docelowa jest w obrębie domeny pliku cookie, ścieżka docelowa jest w ścieżce pliku cookie pasuje do wielkości liter części ścieżki pliku cookie.</summary>
        <returns>Zwraca <see cref="T:System.String" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę podstawową napisane przez obsługę plików cookie.</summary>
        <value>Nazwa podstawowego uwierzytelniania plików cookie. Wartość domyślna to "FedAuth".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `name` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia <see langword="null" /> lub wartość pustą.</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę wirtualną napisane przez obsługę plików cookie.</summary>
        <value>Ścieżka wirtualna. Wartość domyślna to katalog główny aplikacji ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `path` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia <see langword="null" /> lub wartość pustą.</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Okres istnienia trwały sesji. Jeśli zero, są zawsze używane sesje przejściowej.</summary>
        <value>Okres istnienia sesji. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Biletów trwały sesji są przechowywane w plikach cookie, co oznacza, że sesji logowania może nadal po zamknięciu i otworzyć ponownie przeglądarkę sieci web.  
  
 Ta właściwość jest używana do ustawienia <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `persistentSessionLifetime` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określono wartość, która jest mniejsza od zera.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje skojarzone z bieżącego żądania, który ma domyślną nazwę pliku cookie.</summary>
        <returns>Wartość pliku cookie lub <see langword="null" /> Jeżeli nie znaleziono pliku cookie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku cookie jest określona przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do odczytu.</param>
        <summary>Odczytuje skojarzone z bieżącego żądania, która ma określoną nazwę pliku cookie.</summary>
        <returns>Wartość pliku cookie lub <see langword="null" /> Jeżeli nie znaleziono pliku cookie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Odczytuje plik cookie skojarzone z bieżącym żądaniem z domyślnej nazwy domeny i ścieżki.</summary>
        <returns>Wartość pliku cookie lub <see langword="null" /> Jeżeli nie znaleziono pliku cookie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku cookie jest określona przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do odczytu.</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Odczytuje plik cookie skojarzone z określonego żądania, który jest określonej nazwy domyślnej domeny i ścieżki.</summary>
        <returns>Wartość pliku cookie lub <see langword="null" /> Jeżeli nie znaleziono pliku cookie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, odczytuje plik cookie z określoną nazwą i który jest skojarzony z określonego żądania.</summary>
        <returns>Wartość pliku cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążone <xref:System.IdentityModel.Services.CookieHandler.Read%2A> metody wykonują rzeczywistą pracę odczytywania pliku cookie. <xref:System.IdentityModel.Services.CookieHandler.Read%2A> Metody sprawdzi, czy `name` jest niepusty ciąg.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy przesłonić tę metodę. Implementacja jest całkowicie do projektanta. W przypadku typowej implementacji odczytywać dane pliku cookie z <see cref="P:System.Web.HttpRequest.Cookies" /> kolekcji, jednak nie jest to wymagane.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy plik cookie ma być używany tylko z protokołu SSL.</summary>
        <value>
          <see langword="true" /> Jeśli plik cookie powinien być używany tylko przez połączenie SSL; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa, czy flaga "Secure" nagłówka Set-Cookie jest emitowany żadnych plików cookie zapisywane. Jeśli ta wartość jest `true`, sesji plików cookie tylko będą dostępne za pośrednictwem protokołu HTTPS.  
  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwości mogą być inicjowane przez określenie `requireSSL` atrybutu [ &lt;cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) element w konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="isPersistent">
          <see langword="true" /> Jeśli plik cookie jest trwałe; <see langword="false" /> Jeśli plik cookie jest tylko do sesji, oznacza to, że tylko ważne do przeglądarki na kliencie jest zamknięty.</param>
        <param name="tokenExpirationTime">Czas wygaśnięcia tokenu źródłowego.</param>
        <summary>Zapisuje plik cookie skojarzone z bieżącego żądania, która ma określoną wartość trwałości i czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `isPersistent` parametr jest `false`, czas wygaśnięcia pliku cookie ma ustawioną wartość <xref:System.DateTime.MinValue?displayProperty=nameWithType>. Jeśli `isPersistent` parametr jest `true`, czas wygaśnięcia pliku cookie jest ustawiony na wartość <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> właściwość, o ile nie jest `null` lub, jeśli <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> właściwość jest `null`, czas wygaśnięcia jest ustawiony na wartość `tokenExpirationTime` parametru.  
  
 Nazwa pliku cookie, domeny i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>, i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A>. Określa, czy plik cookie mają być wysyłane tylko za pośrednictwem protokołu SSL jest określona przez <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> właściwości oraz tego, czy plik cookie powinien być ukryty ze skryptów po stronie klienta jest określona przez <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie, lub <see cref="F:System.DateTime.MinValue" /> dla cookie sesji (tylko do sesji).</param>
        <summary>Zapisuje plik cookie skojarzone z bieżącego żądania, która ma określoną nazwę, wartość oraz czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domeny pliku cookie i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A>. Określa, czy plik cookie mają być wysyłane tylko za pośrednictwem protokołu SSL jest określona przez <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> właściwości oraz tego, czy plik cookie powinien być ukryty ze skryptów po stronie klienta jest określona przez <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie, lub <see cref="F:System.DateTime.MinValue" /> dla cookie sesji (tylko do sesji).</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Zapisuje plik cookie skojarzone z określonego żądania, która ma określoną nazwę, wartość oraz czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domeny pliku cookie i ścieżka są określane przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określona przez <xref:System.Web.HttpContext.Current%2A>. Określa, czy plik cookie mają być wysyłane tylko za pośrednictwem protokołu SSL jest określona przez <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> właściwości oraz tego, czy plik cookie powinien być ukryty ze skryptów po stronie klienta jest określona przez <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka do pliku cookie</param>
        <param name="domain">Domeny pliku cookie</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie, lub <see cref="F:System.DateTime.MinValue" /> dla cookie sesji (tylko do sesji).</param>
        <param name="requiresSsl">
          <see langword="true" /> Jeśli plik cookie powinien być używany tylko przez połączenie SSL; w przeciwnym razie <see langword="false" />.</param>
        <param name="hideFromClientScript">
          <see langword="true" /> Jeśli plik cookie powinien być ukryty z skrypt po stronie klienta; w przeciwnym razie <see langword="false" />.</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Zapisuje plik cookie skojarzone z określonego żądania, który ma określoną nazwę, wartość, domeny, ścieżkę, czas wygaśnięcia i widoczności.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka do pliku cookie</param>
        <param name="domain">Domeny pliku cookie</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie, lub <see cref="F:System.DateTime.MinValue" /> dla cookie sesji (tylko do sesji).</param>
        <param name="secure">
          <see langword="true" /> Jeśli plik cookie powinien być używany tylko przez połączenie SSL; w przeciwnym razie <see langword="false" />.</param>
        <param name="httpOnly">
          <see langword="true" /> Jeśli plik cookie powinien być ukryty z skrypt po stronie klienta; w przeciwnym razie <see langword="false" />.</param>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje plik cookie skojarzone z określonego żądania, która ma określoną nazwę, wartość, domeny, ścieżka, czas wygaśnięcia, trwałości i widoczności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążone <xref:System.IdentityModel.Services.CookieHandler.Write%2A> metody wykonują rzeczywistą pracę zapisu pliku cookie. <xref:System.IdentityModel.Services.CookieHandler.Write%2A> Metody zagwarantuje, że `value` jest tablicą bajtów pusty i że `name` i `path` są ciągami niezerowymi i niepustymi.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy przesłonić tę metodę. Implementacja jest całkowicie do projektanta. W przypadku typowych wdrożeniach zapisane dane pliku cookie <see cref="P:System.Web.HttpResponse.Cookies" /> kolekcji, jednak nie jest to wymagane. Większość parametry metody są zazwyczaj używane do ustawiania właściwości równoważne na co najmniej jednym <see cref="T:System.Web.HttpCookie" /> obiektów.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>