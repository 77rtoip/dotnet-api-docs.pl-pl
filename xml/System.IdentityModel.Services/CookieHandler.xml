<Type Name="CookieHandler" FullName="System.IdentityModel.Services.CookieHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0d8d93dfd53ba9ba1ab337c386225511369a89eb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69283067" /></Metadata><TypeSignature Language="C#" Value="public abstract class CookieHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CookieHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.CookieHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CookieHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CookieHandler abstract" />
  <TypeSignature Language="F#" Value="type CookieHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia abstrakcyjną klasę bazową do odczytywania, zapisywania i usuwania plików cookie sesji na kliencie HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 (Sam) używa wystąpienia <xref:System.IdentityModel.Services.CookieHandler> klasy do odczytywania, zapisywania i usuwania plików cookie <xref:System.IdentityModel.Tokens.SessionSecurityToken> lub plików cookie, które zawierają informacje na temat klienta http. <xref:System.IdentityModel.Services.SessionAuthenticationModule> Plik cookie (lub pliki cookie, w przypadku których token sesji jest podzielony na kilka plików cookie) zawierający token sesji jest znany jako plik cookie sesji.  
  
 Platforma Windows Identity Foundation (WIF) jest dostarczana z obsługą plików cookie o nazwie procedura obsługi plików cookie, <xref:System.IdentityModel.Services.ChunkedCookieHandler> która jest implementowana przez klasę. Program obsługi plików cookie podzielony na fragmenty dzieli token sesji na jeden lub więcej plików cookie zgodnie z określonym rozmiarem fragmentu. Jest to zgodne z ograniczeniami rozmiaru poszczególnych plików cookie narzuconych przez wiele przeglądarek.  
  
 Można <xref:System.IdentityModel.Services.CookieHandler> utworzyć własne procedury obsługi plików cookie. Po wykonaniu tej <xref:System.IdentityModel.Services.CookieHandler.DeleteCore%2A>czynności należy zastąpić metody,, <xref:System.IdentityModel.Services.CookieHandler.ReadCore%2A>i <xref:System.IdentityModel.Services.CookieHandler.WriteCore%2A> , aby wykonać rzeczywistą, czytelną i zapisanie pliku cookie sesji. Metody te zwykle odczytują plik cookie z <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> kolekcji i zapisują lub usuwają pliki <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> cookie za pośrednictwem kolekcji. <xref:System.Web.HttpContext> Obiekt, za pomocą którego można uzyskać dostęp do żądania i odpowiedzi, jest podawany jako parametr do każdej z tych metod. Oprócz wymaganych metod można opcjonalnie zastąpić inne właściwości metod wirtualnych uwidocznionych przez klasę, <xref:System.IdentityModel.Services.CookieHandler> aby dostosować zachowanie programu obsługi.  
  
 <xref:System.IdentityModel.Services.CookieHandler> Klasa, która określa domyślne zachowanie i właściwości pliku cookie sesji, udostępnia kilka właściwości. Właściwości <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> i<xref:System.IdentityModel.Services.CookieHandler.Path%2A> podają podstawową nazwę pliku cookie, domenę, w której jest ona prawidłowa, oraz ścieżkę, w ramach której jest przechowywana na komputerze klienckim. <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> Właściwość określa, czy plik cookie jest dostępny dla skryptów po stronie klienta. <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> Właściwość określa, czy plik cookie powinien być przekazywany tylko za pośrednictwem protokołu Secure (https). W <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> przypadku ustawienia właściwość służy do ustawiania czasu wygaśnięcia dla sesji trwałych, czyli dla sesji, które pozostaną ważne nawet po zamknięciu przeglądarki. Wszystkie te właściwości mają równoważne właściwości, które zwykle są ustawiane dla obiektu <xref:System.Web.HttpCookie> bazowego (lub obiektów) przez metody "Core" procedury obsługi. Aby uzyskać więcej informacji, zobacz dokumentację dla każdej właściwości.  
  
 Program obsługi plików cookie, który jest używany przez sam sam, można określić w konfiguracji [ &lt;za&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) pomocą elementu cookieHandler. Procedurę obsługi plików cookie ustawioną przez ten element można zmodyfikować w delegatze zdarzenia dla <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> zdarzenia lub można ją ustawić lub uzyskać do niej dostęp bezpośrednio <xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A?displayProperty=nameWithType> za pomocą właściwości.  
  
   
  
## Examples  
 Poniższy przykład konfiguruje SAM do korzystania z niestandardowej procedury obsługi plików cookie typu `MyNamespace.MyCustomCookieHandler`.  
  
```xml  
<cookieHandler mode="Custom">  
    <customCookieHandler type="MyNamespace.MyCustomCookieHandler, MyAssembly" />  
</cookieHandler>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ChunkedCookieHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookieHandler&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CookieHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CookieHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wywoływana z konstruktorów w klasach pochodnych w <see cref="T:System.IdentityModel.Services.CookieHandler" /> celu zainicjowania klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="cookieHandler.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa plik cookie skojarzony z bieżącym żądaniem z domyślną nazwą, domeną i ścieżką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa, domena i ścieżka są określone przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości. Żądanie jest określone przez<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Delete : string -&gt; unit" Usage="cookieHandler.Delete name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <summary>Usuwa plik cookie skojarzony z bieżącym żądaniem, który ma określoną nazwę i domyślną domenę i ścieżkę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domena i ścieżka są określone przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> właściwości i. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Żądanie jest określone przez<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Usuwa plik cookie skojarzony z bieżącym żądaniem z domyślną nazwą, domeną i ścieżką.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa, domena i ścieżka są określone przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>i <xref:System.IdentityModel.Services.CookieHandler.Path%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Usuwa plik cookie skojarzony z określonym żądaniem, który ma określoną nazwę i domyślną domenę i ścieżkę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domena i ścieżka są określone przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> właściwości i. <xref:System.IdentityModel.Services.CookieHandler.Path%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Delete : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Delete (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka do pliku cookie.</param>
        <param name="domain">Domena pliku cookie</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania</param>
        <summary>Usuwa plik cookie skojarzony z określonym żądaniem o określonej nazwie, ścieżce i domenie.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteCore">
      <MemberSignature Language="C#" Value="protected abstract void DeleteCore (string name, string path, string domain, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteCore(string name, string path, string domain, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeleteCore (name As String, path As String, domain As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeleteCore(System::String ^ name, System::String ^ path, System::String ^ domain, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DeleteCore : string * string * string * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.DeleteCore (name, path, domain, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie</param>
        <param name="path">Ścieżka pliku cookie</param>
        <param name="domain">Domena pliku cookie</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, program usuwa plik cookie skojarzony z określonym żądaniem o określonej nazwie, domenie i ścieżce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążonych <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> metod, aby wykonać rzeczywistą ilość pracy usuwającej plik cookie. <xref:System.IdentityModel.Services.CookieHandler.Delete%2A> Metody zapewniają, że nazwa i ścieżka nie są pustymi ciągami.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić tę metodę. Implementacja jest w całości deweloperem. W typowym przypadku implementacje zastępują określony plik cookie w <see cref="P:System.Web.HttpResponse.Cookies" /> kolekcji, z plikiem cookie <see langword="null" /> zawierającym dane i czas wygaśnięcia, który jest ustawiony wcześniej niż bieżący czas, ale nie jest to wymagane.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public virtual string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domenę używaną dla plików cookie.</summary>
        <value>Domena używana na potrzeby plików cookie. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType> Odpowiada właściwości.  
  
 Właściwość można zainicjować, określając `domain` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfdc127f-8d94-4566-8bef-f583c6ae7398">&lt;cookieHandler&gt;</related>
      </Docs>
    </Member>
    <Member MemberName="HideFromClientScript">
      <MemberSignature Language="C#" Value="public virtual bool HideFromClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideFromClientScript" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HideFromClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HideFromClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideFromClientScript : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy plik cookie powinien być ukryty przed skryptem klienta.</summary>
        <value><see langword="true" />Jeśli plik cookie powinien być ukryty przed skryptem klienta; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa, czy flaga "HttpOnly" jest emitowana w nagłówku Set-cookie dla plików cookie pisanych przez program obsługi. Niektóre przeglądarki sieci Web uznają tę flagę, zachowując skrypt po stronie klienta do uzyskiwania dostępu do wartości cookie.  
  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.HttpOnly%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwość można zainicjować, określając `hideFromScript` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCookiePath">
      <MemberSignature Language="C#" Value="public virtual string MatchCookiePath (Uri baseUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MatchCookiePath(class System.Uri baseUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchCookiePath (baseUri As Uri, targetUri As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MatchCookiePath(Uri ^ baseUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="abstract member MatchCookiePath : Uri * Uri -&gt; string&#xA;override this.MatchCookiePath : Uri * Uri -&gt; string" Usage="cookieHandler.MatchCookiePath (baseUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUri">Podstawowy adres URL żądania.</param>
        <param name="targetUri">Adres URL do dopasowania</param>
        <summary>Jeśli domena docelowa znajduje się w domenie plików cookie, a ścieżka docelowa znajduje się w ścieżce pliku cookie, dopasuj wielkość liter w części ścieżki pliku cookie.</summary>
        <returns>Zwraca <see cref="T:System.String" />wartość.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę podstawową dla plików cookie pisanych przez program obsługi.</summary>
        <value>Nazwa podstawowa, która ma być używana dla plików cookie. Wartość domyślna to "FedAuth".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Name%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwość można zainicjować, określając `name` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia <see langword="null" /> lub pustej wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.IdentityModel.Services.CookieHandler.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę wirtualną dla plików cookie pisanych przez program obsługi.</summary>
        <value>Ścieżka wirtualna. Domyślnie jest to katalog główny aplikacji ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Path%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwość można zainicjować, określając `path` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia <see langword="null" /> lub pustej wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="PersistentSessionLifetime">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; PersistentSessionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PersistentSessionLifetime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;TimeSpan&gt; PersistentSessionLifetime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentSessionLifetime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Okres istnienia sesji trwałych. Jeśli wartość jest równa zero, sesje przejściowe są zawsze używane.</summary>
        <value>Okres istnienia sesji. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bilety dla sesji trwałych są przechowywane w plikach cookie opartych na plikach, co oznacza, że sesja logowania może być kontynuowana po zamknięciu i ponownym otwarciu przeglądarki sieci Web.  
  
 Ta właściwość służy do ustawiania <xref:System.Web.HttpCookie.Expires%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwość można zainicjować, określając `persistentSessionLifetime` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona jest wartość mniejsza od zera.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read();" />
      <MemberSignature Language="F#" Value="member this.Read : unit -&gt; byte[]" Usage="cookieHandler.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje plik cookie skojarzony z bieżącym żądaniem o nazwie domyślnej.</summary>
        <returns>Wartość cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku cookie jest określana przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A> właściwość. Żądanie jest określone przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Read : string -&gt; byte[]" Usage="cookieHandler.Read name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do odczytania.</param>
        <summary>Odczytuje plik cookie skojarzony z bieżącym żądaniem o określonej nazwie.</summary>
        <returns>Wartość cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądanie jest określone przez<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Odczytuje plik cookie skojarzony z bieżącym żądaniem z domyślną nazwą, domeną i ścieżką.</summary>
        <returns>Wartość cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa pliku cookie jest określana przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public byte[] Read (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Read(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Read(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Read : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.Read (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do odczytania.</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Odczytuje plik cookie skojarzony z określonym żądaniem, który ma określoną nazwę i domyślną domenę i ścieżkę.</summary>
        <returns>Wartość cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadCore">
      <MemberSignature Language="C#" Value="protected abstract byte[] ReadCore (string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ReadCore(string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadCore (name As String, context As HttpContext) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::Byte&gt; ^ ReadCore(System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ReadCore : string * System.Web.HttpContext -&gt; byte[]" Usage="cookieHandler.ReadCore (name, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, odczytuje plik cookie o określonej nazwie i skojarzony z określonym żądaniem.</summary>
        <returns>Wartość cookie lub <see langword="null" /> Jeśli plik cookie nie został znaleziony</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążonych <xref:System.IdentityModel.Services.CookieHandler.Read%2A> metod, aby wykonać rzeczywistą ilość pracy odczytywania pliku cookie. Metody zapewniają, że `name` jest niepustym ciągiem. <xref:System.IdentityModel.Services.CookieHandler.Read%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić tę metodę. Implementacja jest w całości deweloperem. W typowym przypadku implementacje odczytują dane plików cookie z <see cref="P:System.Web.HttpRequest.Cookies" /> kolekcji, jednak nie jest to wymagane.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RequireSsl">
      <MemberSignature Language="C#" Value="public virtual bool RequireSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSsl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequireSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequireSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSsl : bool with get, set" Usage="System.IdentityModel.Services.CookieHandler.RequireSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy plik cookie ma być używany tylko z protokołem SSL.</summary>
        <value><see langword="true" />Jeśli plik cookie powinien być używany tylko za pośrednictwem połączenia SSL; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa, czy flaga "Secure" w nagłówku Set-Cookie jest emitowana pod kątem wszelkich zapisanych plików cookie. Jeśli ta wartość to `true`, pliki cookie sesji będą dostępne tylko za pośrednictwem protokołu HTTPS.  
  
 Ta właściwość odpowiada <xref:System.Web.HttpCookie.Secure%2A?displayProperty=nameWithType> właściwości.  
  
 Właściwość można zainicjować, określając `requireSSL` atrybut [ &lt;w elemencie cookieHandler&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md) w konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje plik cookie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, bool isPersistent, valuetype System.DateTime tokenExpirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), isPersistent As Boolean, tokenExpirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, bool isPersistent, DateTime tokenExpirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * bool * DateTime -&gt; unit" Usage="cookieHandler.Write (value, isPersistent, tokenExpirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
        <Parameter Name="tokenExpirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="isPersistent"><see langword="true" />Jeśli plik cookie jest trwały; <see langword="false" /> Jeśli plik cookie jest tylko do sesji, to jest prawidłowy tylko do momentu zamknięcia przeglądarki na kliencie.</param>
        <param name="tokenExpirationTime">Czas wygaśnięcia podstawowego tokenu.</param>
        <summary>Zapisuje plik cookie skojarzony z bieżącym żądaniem, który ma określoną wartość, trwałość i czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli parametr ma `false`wartość, czas wygaśnięcia pliku cookie jest ustawiony na <xref:System.DateTime.MinValue?displayProperty=nameWithType>. `isPersistent` `null` <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> `null`Jeśli parametrem jest `true`, czas wygaśnięcia pliku cookie jest ustawiony na wartość właściwości, jeśli nie jest lub, jeśli właściwość jest, czas wygaśnięcia jest ustawiony na wartość `isPersistent` `tokenExpirationTime` parametr.  
  
 Nazwa pliku cookie, domena i ścieżka są określone przez <xref:System.IdentityModel.Services.CookieHandler.Name%2A>właściwości, <xref:System.IdentityModel.Services.CookieHandler.Domain%2A>i. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Żądanie jest określone przez <xref:System.Web.HttpContext.Current%2A>. Bez względu na to, czy plik cookie powinien być wysyłany <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> tylko za pośrednictwem protokołu SSL, jest określany przez właściwość i czy plik cookie powinien <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> być ukryty ze skryptów po stronie klienta jest określany przez właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie lub <see cref="F:System.DateTime.MinValue" /> plik cookie sesji (tylko sesja).</param>
        <summary>Zapisuje plik cookie skojarzony z bieżącym żądaniem, który ma określoną nazwę, wartość i czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domena i ścieżka pliku cookie są określone przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> właściwości i. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Żądanie jest określone przez <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>.  Żądanie jest określone przez <xref:System.Web.HttpContext.Current%2A>. Bez względu na to, czy plik cookie powinien być wysyłany <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> tylko za pośrednictwem protokołu SSL, jest określany przez właściwość i czy plik cookie powinien <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> być ukryty ze skryptów po stronie klienta jest określany przez właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" /> lub puste.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, DateTime expirationTime, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, valuetype System.DateTime expirationTime, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, expirationTime As DateTime, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, DateTime expirationTime, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * DateTime * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, expirationTime, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie lub <see cref="F:System.DateTime.MinValue" /> plik cookie sesji (tylko sesja).</param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Zapisuje plik cookie skojarzony z określonym żądaniem, który ma określoną nazwę, wartość i czas wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domena i ścieżka pliku cookie są określone przez <xref:System.IdentityModel.Services.CookieHandler.Domain%2A> właściwości i. <xref:System.IdentityModel.Services.CookieHandler.Path%2A> Żądanie jest określone przez <xref:System.Web.HttpContext.Current%2A>. Bez względu na to, czy plik cookie powinien być wysyłany <xref:System.IdentityModel.Services.CookieHandler.RequireSsl%2A> tylko za pośrednictwem protokołu SSL, jest określany przez właściwość i czy plik cookie powinien <xref:System.IdentityModel.Services.CookieHandler.HideFromClientScript%2A> być ukryty ze skryptów po stronie klienta jest określany przez właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" /> lub puste.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] value, string name, string path, string domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, requiresSsl As Boolean, hideFromClientScript As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool requiresSsl, bool hideFromClientScript, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.Write (value, name, path, domain, expirationTime, requiresSsl, hideFromClientScript, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="requiresSsl" Type="System.Boolean" />
        <Parameter Name="hideFromClientScript" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka pliku cookie</param>
        <param name="domain">Domena pliku cookie</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie lub <see cref="F:System.DateTime.MinValue" /> plik cookie sesji (tylko sesja).</param>
        <param name="requiresSsl"><see langword="true" />Jeśli plik cookie powinien być używany tylko za pośrednictwem połączenia SSL; w przeciwnym razie. <see langword="false" /></param>
        <param name="hideFromClientScript"><see langword="true" />Jeśli plik cookie powinien być ukryty przed skryptem klienta; w przeciwnym razie. <see langword="false" /></param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Zapisuje plik cookie skojarzony z określonym żądaniem o określonej nazwie, wartości, domenie, ścieżce, czasie wygaśnięcia i widoczności.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" /> lub puste.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest <see langword="null" /> lub puste.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteCore (byte[] value, string name, string path, string domain, DateTime expirationTime, bool secure, bool httpOnly, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteCore(unsigned int8[] value, string name, string path, string domain, valuetype System.DateTime expirationTime, bool secure, bool httpOnly, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteCore (value As Byte(), name As String, path As String, domain As String, expirationTime As DateTime, secure As Boolean, httpOnly As Boolean, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteCore(cli::array &lt;System::Byte&gt; ^ value, System::String ^ name, System::String ^ path, System::String ^ domain, DateTime expirationTime, bool secure, bool httpOnly, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member WriteCore : byte[] * string * string * string * DateTime * bool * bool * System.Web.HttpContext -&gt; unit" Usage="cookieHandler.WriteCore (value, name, path, domain, expirationTime, secure, httpOnly, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
        <Parameter Name="secure" Type="System.Boolean" />
        <Parameter Name="httpOnly" Type="System.Boolean" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="value">Wartość pliku cookie.</param>
        <param name="name">Nazwa pliku cookie.</param>
        <param name="path">Ścieżka pliku cookie</param>
        <param name="domain">Domena pliku cookie</param>
        <param name="expirationTime">Czas wygaśnięcia pliku cookie lub <see cref="F:System.DateTime.MinValue" /> plik cookie sesji (tylko sesja).</param>
        <param name="secure"><see langword="true" />Jeśli plik cookie powinien być używany tylko za pośrednictwem połączenia SSL; w przeciwnym razie. <see langword="false" /></param>
        <param name="httpOnly"><see langword="true" />Jeśli plik cookie powinien być ukryty przed skryptem klienta; w przeciwnym razie. <see langword="false" /></param>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Dla żądania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje plik cookie skojarzony z określonym żądaniem o określonej nazwie, wartości, domenie, ścieżce, czasie wygaśnięcia, trwałości i widoczności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z przeciążonych <xref:System.IdentityModel.Services.CookieHandler.Write%2A> metod w celu wykonania rzeczywistej pracy zapisu pliku cookie. Metody zapewniają, że `value` jest niepustą tablicą `path` bajtów i że `name` nie są pustymi ciągami. <xref:System.IdentityModel.Services.CookieHandler.Write%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić tę metodę. Implementacja jest w całości deweloperem. W typowym przypadku implementacje zapisują dane plików cookie do <see cref="P:System.Web.HttpResponse.Cookies" /> kolekcji, jednak nie jest to wymagane. Większość parametrów metody jest zazwyczaj używana do ustawiania równoważnych właściwości dla co najmniej jednego <see cref="T:System.Web.HttpCookie" /> obiektu.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
