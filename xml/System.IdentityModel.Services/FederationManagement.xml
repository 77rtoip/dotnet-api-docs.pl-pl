<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6410a518294ac1561651ea85ff3396ecf86cd1e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39753051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationManagement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationManagement abstract sealed" />
  <TypeSignature Language="F#" Value="type FederationManagement = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody statyczne do tworzenia dokumentów metadanych Federacji i aktualizowanie konfiguracji aplikacji oparte na dokumentach w metadanych federacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat dokumentów metadanych federacji w sekcji 3 następującej specyfikacji: [Web Services Federation Language (WS-Federation) w wersji 1.2](http://go.microsoft.com/fwlink/?LinkID=210152) (http://go.microsoft.com/fwlink/?LinkID=210152).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ CreateApplicationFederationMetadata(Uri ^ applicationUri, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Metadata::DisplayClaim ^&gt; ^ claimsRequired, System::IdentityModel::Services::ApplicationType applicationType, System::Collections::ObjectModel::Collection&lt;Uri ^&gt; ^ audienceUris);" />
      <MemberSignature Language="F#" Value="static member CreateApplicationFederationMetadata : Uri * System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; * System.IdentityModel.Services.ApplicationType * System.Collections.ObjectModel.Collection&lt;Uri&gt; -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata (applicationUri, certificate, claimsRequired, applicationType, audienceUris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">Identyfikator URI aplikacji.</param>
        <param name="certificate">Certyfikat X.509 używany do podpisywania metadanych.</param>
        <param name="claimsRequired">Oświadczenia, wymagane przez aplikację.</param>
        <param name="applicationType">Jedną z <see cref="T:System.IdentityModel.Services.ApplicationType" /> wartości, które określa typ aplikacji, który opisuje metadanych. Służy do określenia punktów końcowych do utworzenia.</param>
        <param name="audienceUris">Kolekcja dopuszczalne identyfikatory URI, który może służyć do tej aplikacji.</param>
        <summary>Tworzy dokumentu XML, który zawiera metadane federacji.</summary>
        <returns>Czytnik XML, który zawiera dokument metadanych, który został utworzony przy użyciu parametrów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateIdentityProviderTrustInfo">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aktualizuje konfigurację określonej aplikacji, jeśli potrzebny, w zależności od określonego dokumentu metadanych federacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Czytnik XML, który zawiera dokumentu metadanych.</param>
        <param name="inputConfiguration">Czytnik XML zawierający konfigurację.</param>
        <param name="claimsOfferedUpdate">
          <see langword="true" /> Jeśli oświadczenia oferowana w liście powinny być aktualizowane; w przeciwnym razie <see langword="false" />.</param>
        <summary>Aktualizuje konfigurację określonej aplikacji, jeśli potrzebny, w zależności od określonego dokumentu metadanych Federacji, wartość, która określa, czy oświadczenia oferowana w liście powinien zostać zaktualizowany.</summary>
        <returns>Czytnik XML, który zawiera zaktualizowaną konfiguracją lub <see langword="null" /> Jeśli nie można zaktualizować konfiguracji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> jest <see langword="null" />.  - lub - <paramref name="inputConfiguration" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool * System.IdentityModel.Metadata.MetadataSerializer -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Czytnik XML, który zawiera dokumentu metadanych.</param>
        <param name="inputConfiguration">Czytnik XML zawierający konfigurację.</param>
        <param name="claimsOfferedUpdate">
          <see langword="true" /> Jeśli oświadczenia oferowana w liście powinny być aktualizowane; w przeciwnym razie <see langword="false" />.</param>
        <param name="metadataSerializer">Serializator za pomocą którego można odczytać metadanych usługi STS.</param>
        <summary>Aktualizuje konfigurację określonej aplikacji, jeśli potrzebny, w zależności od określonego dokumentu metadanych Federacji, wartość, która określa, czy oświadczenia oferowana w liście powinien zostać zaktualizowany. Podano także serializatora za pomocą którego można odczytać metadanych usługi tokenu (STS) zabezpieczeń.</summary>
        <returns>Czytnik XML, który zawiera zaktualizowaną konfiguracją lub <see langword="null" /> Jeśli nie można zaktualizować konfiguracji.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> jest <see langword="null" />.  - lub - <paramref name="inputConfiguration" /> jest <see langword="null" />.  - lub - <paramref name="metadataSerializer" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader *  *  -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Czytnik XML, który zawiera dokumentu metadanych.</param>
        <param name="inputConfiguration">Czytnik XML zawierający konfigurację.</param>
        <param name="newIssuerNameRegistry">Po powrocie z tej metody zawiera czytnik węzła XML, który zawiera elementy, które określają rejestru nazwy wystawcy. <see langword="null" /> Jeśli istnieje, jest określona nie rejestru nazwy wystawcy. Ten parametr jest traktowany jako niezainicjowany.</param>
        <param name="claimTypesOffered">Gdy ta metoda zwraca, zmiana listy typy oświadczeń oferowane zawiera czytnik węzła XML, który zawiera elementy, które określają nową listę. Jeśli lista nie został zmieniony, zwraca <see langword="null" />. Ten parametr jest traktowany jako niezainicjowany.</param>
        <summary>Aktualizuje konfigurację określonej aplikacji, jeśli potrzebny, w zależności od określonego dokumentu metadanych federacji. Zwraca, elementy konfiguracji dla rejestru nazwy wystawcy, a także elementy konfiguracji, aby uzyskać zaktualizowaną listę typów oświadczeń oferowane, jeśli został zaktualizowany.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> jest <see langword="null" />.  - lub - <paramref name="inputConfiguration" /><paramref name="metadataReader" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader *  *  * System.IdentityModel.Metadata.MetadataSerializer -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">Czytnik XML, który zawiera dokumentu metadanych.</param>
        <param name="inputConfiguration">Czytnik XML zawierający konfigurację.</param>
        <param name="newIssuerNameRegistry">Po powrocie z tej metody zawiera czytnik węzła XML, który zawiera elementy, które określają rejestru nazwy wystawcy. <see langword="null" /> Jeśli istnieje, jest określona nie rejestru nazwy wystawcy. Ten parametr jest traktowany jako niezainicjowany.</param>
        <param name="claimTypesOffered">Gdy ta metoda zwraca, zmiana listy typy oświadczeń oferowane zawiera czytnik węzła XML, który zawiera elementy, które określają nową listę. Jeśli lista nie został zmieniony, zwraca <see langword="null" />. Ten parametr jest traktowany jako niezainicjowany.</param>
        <param name="metadataSerializer">Serializator za pomocą którego można odczytać metadanych usługi STS.</param>
        <summary>Aktualizuje konfigurację określonej aplikacji, jeśli potrzebny, w zależności od określonego dokumentu metadanych federacji. Zwraca elementy konfiguracji dla rejestru nazwy wystawcy, a także elementy konfiguracji, aby uzyskać zaktualizowaną listę typów oświadczeń oferowane, jeśli został zaktualizowany. Podano także serializatora za pomocą którego można odczytać metadanych usługi tokenu (STS) zabezpieczeń.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> jest <see langword="null" />.  - lub - <paramref name="inputConfiguration" /> jest <see langword="null" />.  - lub - <paramref name="metadataSerializer" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>