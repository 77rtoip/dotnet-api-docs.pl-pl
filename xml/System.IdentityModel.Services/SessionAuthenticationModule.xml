<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionAuthenticationModule.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b7d2c3e066c7161e9965fffcf3d748c0a45c666c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7d2c3e066c7161e9965fffcf3d748c0a45c666c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Implements an ASP.NET module that processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">Implementuje moduł platformy ASP.NET, która przetwarza pliki cookie z sesji w scenariuszach WS-Federation.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>When present in the ASP.NET pipeline, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) processes session cookies in WS-Federation scenarios.</source>
          <target state="translated">Jeśli jest obecny w potoku ASP.NET <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) przetwarza pliki cookie z sesji w scenariuszach WS-Federation.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property to read the raw session cookie from the HTTP request and write it to the HTTP response.</source>
          <target state="translated">Używa pliku cookie program obsługi określony przez <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwości pliku cookie sesji pierwotnych z żądania HTTP do odczytywania i zapisywania jej odpowiedzi HTTP.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It uses the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that is configured for an application to deserialize the raw session cookie into <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> objects.</source>
          <target state="translated">Używa <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> skonfigurowanego do deserializacji pliku cookie sesji pierwotnych do aplikacji <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The session security token contains the claims (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) and principal (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) associated with the entity for which the request is being served.</source>
          <target state="translated">Token zabezpieczający sesji zawiera oświadczenia (<ph id="ph1">&lt;xref:System.Security.Claims.Claim&gt;</ph>) i głównej (<ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>) skojarzonego z jednostką, dla którego żądanie jest obsługiwane.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM adds its <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> event handler to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the ASP.NET pipeline.</source>
          <target state="translated">Dodaje SAM jego <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> program obsługi zdarzeń do <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> zdarzenia w potoku ASP.NET.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>This handler intercepts sign-in requests, and, if there is a session cookie, deserializes it into a session token, and sets the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties to the claims principal contained in the session token.</source>
          <target state="translated">Ten program obsługi przechwytuje żądania logowania i, jeśli istnieje plik cookie sesji deserializuje go do tokenu sesji i ustawia <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> właściwości podmiot zabezpieczeń oświadczeń zawartych w tokenie sesji.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>It invokes several of the other methods exposed by the SAM during this process.</source>
          <target state="translated">Wywołuje kilka innych metod udostępnianych przez Menedżera kont zabezpieczeń w trakcie tego procesu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method can be invoked to sign the user out of a session (for example, in a SignOut.aspx.cs code-behind file).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> Można wywołać metody logowania użytkownika z sesji (na przykład w pliku CodeBehind SignOut.aspx.cs).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The SAM exposes several events that provide access to its processing pipeline.</source>
          <target state="translated">SAM udostępnia kilka zdarzeń, które zapewniają dostęp do jego potoku przetwarzania.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> events enable you to modify session tokens that are read from cookies or created during processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> zdarzeń umożliwiają modyfikowanie tokenów sesji, które są odczytywane pliki cookie lub zostały utworzone podczas przetwarzania.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Typically, this is done to add, remove, or transform claims in the token or to adjust its expiration time.</source>
          <target state="translated">Zazwyczaj jest to realizowane dodać, usunąć lub oświadczenia w tokenie lub dostosować jego czas wygaśnięcia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> events provide hooks into the processing of sign-out requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph>, I <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> zdarzenia udostępniają punkty zaczepienia do przetwarzania żądań wylogowania.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For many scenarios, simply adding handlers for these events, often to the global.asax.cs file, will be sufficient.</source>
          <target state="translated">W różnych scenariuszach, po prostu Dodawanie programów obsługi dla tych zdarzeń, często w pliku global.asax.cs będą wystarczające.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>For more complicated scenarios, you can derive from <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> to implement a custom SAM.</source>
          <target state="translated">W przypadku bardziej złożonych scenariuszy może pochodzić od <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> do zaimplementowania niestandardowego SAM.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>To this end, many of the methods that are invoked during <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> are exposed so that you can provide custom behavior at specific stages of the session processing lifecycle.</source>
          <target state="translated">W tym celu wiele metod, które są wywoływane podczas <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> są widoczne, dzięki czemu zapewniają niestandardowe zachowanie określonego etapami cyklu przetwarzania sesji.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>You can add the SAM to the ASP.NET pipeline in a configuration file by adding it to the HTTP modules under either the <ph id="ph1">`&lt;system.webServer&gt;`</ph> element for IIS version 7 and later or under the <ph id="ph2">`&lt;system.web&gt;`</ph> element for versions prior to IIS 7.</source>
          <target state="translated">SAM można dodać do potoku platformy ASP.NET w pliku konfiguracji, dodając go do modułów HTTP pod <ph id="ph1">`&lt;system.webServer&gt;`</ph> elementu dla usług IIS w wersji 7 lub nowszej lub w obszarze <ph id="ph2">`&lt;system.web&gt;`</ph> elementu w wersjach wcześniejszych niż IIS 7.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The cookie handler used by the SAM can be configured with the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">Obsługa plików cookie używane przez Menedżera kont zabezpieczeń można skonfigurować za pomocą <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elementu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>The following XML shows how to configure the SAM in the ASP.NET pipeline.</source>
          <target state="translated">Następujący kod XML pokazano, jak skonfigurować Menedżera kont zabezpieczeń w potoku ASP.NET.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Services.SessionAuthenticationModule">
          <source>Many other elements that are present in a typical configuration are omitted here for brevity.</source>
          <target state="translated">Wiele elementów, które znajdują się w typowej konfiguracji zostały pominięte w tym miejscu do skrócenia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Services.SessionAuthenticationModule" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized to a default instance of the <ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A&gt;</ph> Właściwość jest ustawiona na <ph id="ph2">`false`</ph> i <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwość jest inicjowana na wystąpienie domyślne <ph id="ph4">&lt;xref:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler%2A&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The session security token to use to authenticate the incoming HTTP request.</source>
          <target state="translated">Token zabezpieczający sesji na potrzeby uwierzytelniania przychodzące żądanie HTTP.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to write the session cookie; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> można zapisać pliku cookie sesji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Authenticates the incoming request by validating the incoming session token.</source>
          <target state="translated">Żądanie przychodzące jest uwierzytelniany przez sprawdzania poprawności przychodzącego tokenu sesji.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>Upon successful validation, it updates the current HTTP context and thread principal with the specified  <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Po pomyślnym zweryfikowaniem aktualizuje bieżącego kontekstu HTTP i wątku podmiotu zabezpieczeń z określonym <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method is called from the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> Metoda jest wywoływana z <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> method to validate the incoming token and update the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken%2A&gt;</ph> metody w celu sprawdzenia przychodzącym tokenie i aktualizacji <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
          <source>If the <ph id="ph1">`writeCookie`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> method is invoked to write the session token to a cookie.</source>
          <target state="translated">Jeśli <ph id="ph1">`writeCookie`</ph> parametr jest <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie%2A&gt;</ph> wywoływana jest metoda można zapisać tokenu sesji do pliku cookie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>The collection of cookies in which to search.</source>
          <target state="translated">Kolekcja plików cookie wyszukiwania.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source>Determines whether a session cookie is in the specified cookie collection.</source>
          <target state="translated">Określa, czy plik cookie sesji jest w kolekcji określony plik cookie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a session cookie is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli zostanie znaleziony plik cookie sesji; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
          <source><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> is null</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="httpCookieCollection" /&gt;</ph> ma wartość null</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>Gets the active <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> for the current <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>.</source>
          <target state="translated">Pobiera aktywny <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> dla bieżącego <ph id="ph2">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
          <source>The active session security token.</source>
          <target state="translated">Token zabezpieczający aktywnej sesji.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>Gets the cookie handler that is used to read, write, and delete session cookies.</source>
          <target state="translated">Pobiera program obsługi plików cookie, który jest używany do odczytu, zapisu i usuwania plików cookie sesji.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The cookie handler.</source>
          <target state="translated">Obsługa plików cookie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property is initialized by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> Właściwość jest inicjowana przez <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>This method initializes the property based on the cookie handler specified on the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> object that is set on the <ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Ta metoda inicjuje właściwość na program obsługi plików cookie określony na podstawie <ph id="ph1">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration&gt;</ph> obiekt, który jest ustawiony na <ph id="ph2">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
          <source>You can set the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">Można ustawić programu obsługi plików cookie w pliku konfiguracji za pomocą <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elementu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The principal to be captured in the token.</source>
          <target state="translated">Podmiot zabezpieczeń do przechwycenia w tokenie.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>An application-defined context string.</source>
          <target state="translated">Ciąg kontekstu zdefiniowanym przez aplikację.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The first instant in which this token is valid.</source>
          <target state="translated">Pierwszy moment, w którym ten token jest prawidłowy.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The last instant in which this token is valid.</source>
          <target state="translated">Ostatni moment, w którym ten token jest prawidłowy.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value should be persisted by the user agent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartość powinna zostać utrwalony przez agenta użytkownika; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified parameters by using the configured session token handler.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> z określonymi parametrami przy użyciu programu obsługi tokenów skonfigurowanych sesji.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>The session token.</source>
          <target state="translated">Tokenu sesji.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Nie ma skonfigurowanej obsługi tokenu sesji prawidłowe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Brak nie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> skonfigurowane w <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> właściwości.)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie and removes it from the cache.</source>
          <target state="translated">Usuwa plik cookie sesji i usuwa go z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>Deletes the session cookie by using the cookie handler specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">Usuwa plik cookie sesji przy użyciu określonego przez program obsługi plików cookie <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
          <source>This method is called during sign-out by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana podczas wyrejestrowywania przez <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>The HTTP application object that contains this module.</source>
          <target state="translated">Obiekt aplikacji HTTP, który zawiera ten moduł.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Initializes the module and prepares it to handle events from the module's <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> application object.</source>
          <target state="translated">Inicjuje modułu i przygotowuje je do obsługi zdarzeń z modułu <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> obiektu aplikacji.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
          <source>Adds the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handlers to the <ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> events of the application object specified by the <ph id="ph5">`context`</ph> parameter.</source>
          <target state="translated">Dodaje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> obsługi do <ph id="ph3">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> i <ph id="ph4">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> zdarzeń określony przez obiekt aplikacji <ph id="ph5">`context`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the module properties based on definitions in the configuration file.</source>
          <target state="translated">Inicjuje właściwości modułu na podstawie definicji w pliku konfiguracji.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property from the handler specified in configuration by the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph> object that is set on the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Inicjuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwości z obsługi określonego w konfiguracji przez <ph id="ph2">&lt;xref:System.IdentityModel.Services.Configuration.FederationConfiguration?displayProperty=nameWithType&gt;</ph> obiekt, który jest ustawiony na <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
          <source>You can specify the cookie handler in a configuration file through the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> element.</source>
          <target state="translated">Obsługa plików cookie można określić w pliku konfiguracji za pomocą <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>cookieHandler<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/cookiehandler.md)</ept> elementu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>Gets or sets a value that specifies whether the session information (claim values, etc.) should be stored in the session cookie or whether the session content should be stored on the server side, using the cookie to store just a reference.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy informacje o sesji (wartości oświadczeń itp.) powinny być przechowywane w pliku cookie sesji lub czy zawartość sesji powinny być przechowywane po stronie serwera za pomocą pliku cookie do przechowywania tylko odwołania.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if issued cookies are in reference mode; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wystawione pliki cookie są w trybie odwołań; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, which specifies that issued cookies are not in reference mode.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, który określa, który wystawił pliki cookie nie są w trybie odwołań.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>In reference mode, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> is stored in a server-side cache (an object that derives from <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).</source>
          <target state="translated">W trybie odwołań <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> są przechowywane w pamięci podręcznej po stronie serwera (która pochodzi z obiektu <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>The issued cookie just contains a context identifier that is used to retrieve the token from the cache.</source>
          <target state="translated">Wygenerowanego pliku cookie zawiera tylko identyfikator kontekstu, która służy do pobierania tokenu z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>To operate in reference mode, Microsoft recommends providing a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and setting the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the token passed in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Do pracy w trybie odwołania, firma Microsoft zaleca zapewnienie obsługi dla <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType&gt;</ph> zdarzenia w pliku global.asax.cs i ustawienie <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> przekazana właściwość w tokenie <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
          <source>This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property on the Session Authentication Module.</source>
          <target state="translated">To zapewnia, że działa w trybie odwołań dla każdego żądania tokenu sesji i jest ich drużyna jest faworytem za pośrednictwem jedynie ustawienia <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> właściwości w Module sesji uwierzytelniania.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">Źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">Są to <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated">Obsługuje <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> zdarzenia z <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> potoku.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This method does the following:</source>
          <target state="translated">Ta metoda wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> method to read a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> from the session cookie, if one is present.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie%2A&gt;</ph> metody odczytać <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph> z pliku cookie sesji, jeśli występuje.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If a session security token cannot be read (most likely because a session has not been established), return.</source>
          <target state="translated">W przypadku sesji tokenu zabezpieczającego nie może być odczytu (najprawdopodobniej dlatego sesja nie została ustanowiona), zwraca.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived%2A&gt;</ph> metodę, aby podnieść <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides an opportunity for the token read from the cookie to be modified or for the request to be canceled.</source>
          <target state="translated">To zapewnia token do odczytu z pliku cookie do zmodyfikowania lub do można anulować żądania.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The handler can also specify that the token should be reissued, by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Program obsługi można również określić, czy token powinien zostać wydany ponownie, ustawiając <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the token is to be reissued, removes it from the cache and invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> method to raise the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event.</source>
          <target state="translated">Jeśli token ma zostać wydany ponownie, usuwa ją z pamięci podręcznej i wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated%2A&gt;</ph> metodę, aby podnieść <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This provides opportunity for the token to again be modified.</source>
          <target state="translated">Zapewnia to możliwość token ponownie zmodyfikować.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The reissue behavior can also be modified by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property in the event handler.</source>
          <target state="translated">Zachowanie wydaj ponownie może również zostać zmieniony przez ustawienie <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> właściwości w obsłudze zdarzeń.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method to authenticate the user.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metody uwierzytelniania użytkownika.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If successful, this has the effect of setting the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property to the principal that is contained in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph> property of the incoming token.</source>
          <target state="translated">Jeśli się powiedzie, skutkuje to ustawienia <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> właściwości do podmiotu zabezpieczeń, który jest zawarty w <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A?displayProperty=nameWithType&gt;</ph> właściwości przychodzącym tokenie.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>If the session has expired, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli sesja wygasła, wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> Metoda jest dodawana do obsługi dla <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType&gt;</ph> zdarzenia w <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Nie ma skonfigurowanej obsługi tokenu sesji prawidłowe.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Brak nie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> skonfigurowane w <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> właściwości.)</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The source for the event.</source>
          <target state="translated">Źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>This will be an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> object.</source>
          <target state="translated">Są to <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event from the <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> pipeline.</source>
          <target state="translated">Obsługuje <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> zdarzenia z <ph id="ph2">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> potoku.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The default implementation is empty.</source>
          <target state="translated">Domyślna implementacja jest pusta.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> handler is added to the handlers for the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> event in the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest%2A&gt;</ph> Obsługi jest dodawany do obsługi dla <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType&gt;</ph> zdarzenia w <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">Wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method.</source>
          <target state="translated">Wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method after the sign-out has been performed and the session cookie has been deleted.</source>
          <target state="translated">Ta metoda jest wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody po wylogowania zostało przeprowadzone, a plik cookie sesji zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method to perform sign-out. It is invoked before the session cookie is deleted.</source>
          <target state="translated">Ta metoda jest wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodę w celu wylogowania. Jest wywoływana przed usunięciem pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph> event.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" /&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
          <source>This method is invoked from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method if an error occurs during sign-out.</source>
          <target state="translated">Ta metoda jest wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metodę, jeśli wystąpi błąd podczas wyrejestrowywania.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The cookie, in raw form, that contains the session token.</source>
          <target state="translated">Plik cookie, w formularzu raw, który zawiera tokenu sesji.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from the specified session cookie.</source>
          <target state="translated">Odczytuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> z pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>The session token that was read from the cookie.</source>
          <target state="translated">Tokenu sesji, które zostały odczytane z pliku cookie.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Nie ma skonfigurowanej obsługi tokenu sesji prawidłowe.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Brak nie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> skonfigurowane w <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> właściwości.)</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Occurs when a session security token has been created.</source>
          <target state="translated">Występuje, gdy utworzono tokenu zabezpieczającego sesji.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify the session security token before it is written to a cookie.</source>
          <target state="translated">To zdarzenie służy do modyfikowania tokenu zabezpieczającego sesji, zanim zostaną zapisane do pliku cookie.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> Zdarzenie jest wywoływane z poziomu <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metody po tokenu sesji (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) został utworzony.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>This happens, for example, if an event handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event modifies the token.</source>
          <target state="translated">Dzieje się tak, na przykład, jeśli program obsługi zdarzeń dla <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> zdarzeń modyfikuje tokenu.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">To zdarzenie służy do modyfikowania właściwości tokenu sesji, zanim jest przekazywana dalej w tej samej potoku która służy do uwierzytelniania jednostki zgłaszającego żądanie (użytkownik).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">W obsłudze zdarzeń dostępnych token za pośrednictwem <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Po zmodyfikowaniu token, można zapewnić, że jej nie są zapisywane do pliku cookie przez ustawienie <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType&gt;</ph> właściwości <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>Unlike, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> is not a cancelable event.</source>
          <target state="translated">W przeciwieństwie do, <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> zdarzenia <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> nie jest zdarzeniem można anulować.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia funkcję obsługi <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated&gt;</ph> zdarzenia w pliku global.asax.cs aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>You must also add the handler to the event.</source>
          <target state="translated">Musisz również dodać obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Occurs when a session security token has been read from a cookie.</source>
          <target state="translated">Występuje, gdy tokenu zabezpieczającego sesji odczytane z pliku cookie.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is raised from within the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> method after a session token (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) has been successfully read from the session cookie.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> Zdarzenie jest wywoływane z poziomu <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A&gt;</ph> metody po tokenu sesji (<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>) został pomyślnie odczytany z pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You can use this event to modify properties of the session token before it is passed further along the pipeline and is used to authenticate the entity making the request (user).</source>
          <target state="translated">To zdarzenie służy do modyfikowania właściwości tokenu sesji, zanim jest przekazywana dalej w tej samej potoku która służy do uwierzytelniania jednostki zgłaszającego żądanie (użytkownik).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>One of the most common scenarios involves modifying the session expiration time (accessible through the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph> property) to override the session expiration time set in configuration through the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element.</source>
          <target state="translated">Jednym z najbardziej typowych scenariuszy obejmuje modyfikowanie czas wygaśnięcia sesji (dostępny za pośrednictwem <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType&gt;</ph> właściwości) do przesłonięcia czas wygaśnięcia sesji w konfiguracji za pomocą <ph id="ph2">`lifetime`</ph> atrybutu <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elementu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>By modifying this property on each request, you can implement a sliding session; that is, a session in which the lifetime is extended each time the user accesses the site.</source>
          <target state="translated">Modyfikowanie tej właściwości dla każdego żądania, można zaimplementować przesuwanego sesji. oznacza to sesji, w którym okres istnienia jest rozszerzony każdego czasu użytkownik uzyskuje dostęp do witryny.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>In an event handler, you can access the token through the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">W obsłudze zdarzeń dostępnych token za pośrednictwem <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>After modifying the token, you can ensure that it is written back to the cookie by setting the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Po zmodyfikowaniu token, można zapewnić, że jej nie są zapisywane do pliku cookie przez ustawienie <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie%2A?displayProperty=nameWithType&gt;</ph> do <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>Finally, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event is a cancelable event, and you can set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> to abort further processing of the request.</source>
          <target state="translated">Na koniec <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> zdarzeń jest zdarzeniem można anulować, i można ustawić <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs&gt;</ph> do przerwania. dalsze przetwarzanie żądania.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia funkcję obsługi <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived&gt;</ph> zdarzenia w pliku global.asax.cs aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>You must also add the handler to the event.</source>
          <target state="translated">Musisz również dodać obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session token from which to set the principal.</source>
          <target state="translated">Token sesji, z którego można ustawić podmiot zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Sets the principal on the <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> to the principal that is contained in the specified session token.</source>
          <target state="translated">Ustawia podmiot zabezpieczeń na <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> i <ph id="ph2">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> do podmiotu, który jest zawarty w tokenie określonej sesji.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> method and sets the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph> using the identities that are returned.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken%2A&gt;</ph> — metoda i zestawy <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> właściwości i <ph id="ph3">&lt;xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType&gt;</ph> właściwość <ph id="ph4">&lt;xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType&gt;</ph> przy użyciu tożsamości, które są zwracane.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Occurs after the user is signed out.</source>
          <target state="translated">Występuje, gdy użytkownik jest wylogowany.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just after the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Wywoływane z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody tuż po <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> wywołania metody.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">To zdarzenie nie jest gwarantowana ma być wywoływana dla każdej sesji.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Na przykład pliki cookie mogą zostać usunięte po stronie klienta, w takim przypadku to zdarzenie nigdy nie będą zgłaszane, ponieważ nie ma żadnego zdarzenia po stronie serwera do usuwania sesji.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia funkcję obsługi <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut&gt;</ph> zdarzenia w pliku global.asax.cs aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">Musisz również dodać obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Occurs before deleting the sign-in session.</source>
          <target state="translated">Występuje przed usunięciem sesji logowania.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method just before the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Wywoływane z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody tuż przed <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph> wywołania metody.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">To zdarzenie nie jest gwarantowana ma być wywoływana dla każdej sesji.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Na przykład pliki cookie mogą zostać usunięte po stronie klienta, w takim przypadku to zdarzenie nigdy nie będą zgłaszane, ponieważ nie ma żadnego zdarzenia po stronie serwera do usuwania sesji.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia funkcję obsługi <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut&gt;</ph> zdarzenia w pliku global.asax.cs aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>You must also add the handler to the event.</source>
          <target state="translated">Musisz również dodać obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Signs the current user out and raises the associated events.</source>
          <target state="translated">Bieżący użytkownik wylogowaniu i zgłasza skojarzone zdarzenia.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> methods to perform sign-out. If an exception occurs, the <ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> method is invoked to raise the <ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A&gt;</ph>, i <ph id="ph3">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut%2A&gt;</ph> metody służące do wykonywania wylogowania. Jeśli wystąpi wyjątek, <ph id="ph4">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError%2A&gt;</ph> podnieść wywoływana jest metoda <ph id="ph5">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> zdarzeń.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> object passed into the event handler for this event to cancel the sign-out and prevent the exception from being propagated to the client.</source>
          <target state="translated">Można ustawić <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> obiekt przekazany do obsługi zdarzeń dla tego zdarzenia anulować wylogowania i zapobiec wyjątek propagowanie do klienta.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>You can override this method to add application-specific behavior.</source>
          <target state="translated">Można zastąpić tę metodę, aby dodać zachowanie specyficzne dla aplikacji.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>The following code shows code for invoking the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method from a SignOut.aspx page (SignOut.aspx.cs) in an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia kod do wywoływania <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metoda ze strony SignOut.aspx (SignOut.aspx.cs) w aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Occurs when there is an error during sign-out.</source>
          <target state="translated">Występuje, gdy występuje błąd podczas wyrejestrowywania.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>Raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> method when an error occurs during sign-out.</source>
          <target state="translated">Wywoływane z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOut%2A&gt;</ph> metody, gdy wystąpi błąd podczas wyrejestrowywania.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>In an event handler, you can get the exception that resulted in the event being raised from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">W obsłudze zdarzeń można uzyskać wyjątku, który spowodował zdarzeń zgłaszanych z <ph id="ph1">&lt;xref:System.IdentityModel.Services.ErrorEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You can cancel further processing of the exception, which has the result of not propagating the exception to the client, by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Możesz anulować dalsze przetwarzanie wyjątków, które ma wynik nie propagowanie wyjątku z klientem, ustawiając <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.IdentityModel.Services.ErrorEventArgs&gt;</ph> do <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>This event is not guaranteed to be called for every session.</source>
          <target state="translated">To zdarzenie nie jest gwarantowana ma być wywoływana dla każdej sesji.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>For example, the cookies may be deleted at the client-side, in which case, this event would never be raised because there is no server-side event for deleting the session.</source>
          <target state="translated">Na przykład pliki cookie mogą zostać usunięte po stronie klienta, w takim przypadku to zdarzenie nigdy nie będą zgłaszane, ponieważ nie ma żadnego zdarzenia po stronie serwera do usuwania sesji.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>The following code shows a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> event implemented in the global.asax.cs file of an ASP.NET web application.</source>
          <target state="translated">Poniższy kod przedstawia funkcję obsługi <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError&gt;</ph> zdarzenia w pliku global.asax.cs aplikacji sieci web ASP.NET.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>You must also add the handler to the event.</source>
          <target state="translated">Musisz również dodać obsługi zdarzenia.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
          <source>A more complete example is shown in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> overview topic.</source>
          <target state="translated">Bardziej szczegółowy przykład znajduje się w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> temat.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>When this method returns, contains the session security token that was read from the session cookie.</source>
          <target state="translated">Po powrocie z tej metody zawiera tokenu zabezpieczającego sesji, które zostały odczytane z pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Attempts to read a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a session cookie and returns a value that indicates whether the session cookie was successfully read.</source>
          <target state="translated">Podejmuje próbę odczytania <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> z pliku cookie sesji i zwraca wartość wskazującą, czy pomyślnie odczytano pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the session cookie was successfully read from the request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli plik cookie sesji pomyślnie zostały odczytane z żądania; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
          <source>Reads the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property and then invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> method to read the token from the cookie.</source>
          <target state="translated">Odczytuje plik cookie przy użyciu obsługi plików cookie, która jest skonfigurowana w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwości, a następnie wywołuje <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie%2A&gt;</ph> metodę, aby odczytać tokenu z pliku cookie.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to validate.</source>
          <target state="translated">Token do sprawdzania poprawności.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validates the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> and returns its identities.</source>
          <target state="translated">Weryfikuje określony <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> i zwraca jego tożsamości.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The collection of identities that are contained in the token.</source>
          <target state="translated">Kolekcja tożsamości, które są zawarte w tokenie.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>This method is called from the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>It invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph> method of the configured session token handler to validate the token and extract its identities.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A?displayProperty=nameWithType&gt;</ph> metody programu obsługi tokenów sesji skonfigurowany do sprawdzania poprawności tokenu i Wyodrębnij jego tożsamości.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token has expired.</source>
          <target state="translated">Token utracił ważność.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token start time is not yet valid.</source>
          <target state="translated">Czas rozpoczęcia tokenu nie jest jeszcze ważny.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Nie ma skonfigurowanej obsługi tokenu sesji prawidłowe.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Brak nie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> skonfigurowane w <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> właściwości.)</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The session security token to write.</source>
          <target state="translated">Token sesji zabezpieczeń do zapisania.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the specified <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> to a session cookie.</source>
          <target state="translated">Zapisuje określony <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> do pliku cookie sesji.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Writes the cookie by using the cookie handler that is configured in the <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> property.</source>
          <target state="translated">Zapisuje plik cookie za pomocą obsługi plików cookie, która jest skonfigurowana w <ph id="ph1">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessionToken" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>There is not a valid session token handler configured.</source>
          <target state="translated">Nie ma skonfigurowanej obsługi tokenu sesji prawidłowe.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>(There is no <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> configured in the <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> property.)</source>
          <target state="translated">(Brak nie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> skonfigurowane w <ph id="ph2">&lt;see cref="P:System.IdentityModel.Configuration.IdentityConfiguration.SecurityTokenHandlers" /&gt;</ph> właściwości.)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>