<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36558382" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest moduł HTTP, który jest używany do zabezpieczania aplikacji ASP.NET, wymuszając uwierzytelnianie federacyjne ustawień na przychodzące żądania. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest głównym moduł, który program WIF oferuje gotowe do obsługi dostępu tożsamości opartej na oświadczeniach w aplikacjach ASP.NET.  
  
<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Zgłasza kilka zdarzeń, który umożliwia deweloperom ASP.NET zmienić domyślne zachowanie i kontrolować szczegółowe informacje o jak odbywa się uwierzytelnianie i przetwarzanie oświadczeń. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Podziału funkcjonalności na metody specyficzne dla zadania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Klasa implementuje moduł protokołu HTTP, znane jako moduł uwierzytelniania protokołu WS-Federation (WSFAM). WSFAM zaimplementowano gotowych Windows Identity Foundation (WIF). WSFAM jest dodawany do potoku platformy ASP.NET, tworząc wpis w pliku web.config. Pochodzi od klasy <xref:System.IdentityModel.Services.HttpModuleBase>, który implementuje <xref:System.Web.IHttpModule>. Rejestruje ze środowiskiem uruchomieniowym platformy ASP.NET do nasłuchiwania pod kątem <xref:System.Web.HttpApplication.EndRequest> i <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzenia. Nasłuchiwanie <xref:System.Web.HttpApplication.EndRequest> zdarzenia umożliwia WSFAM przekierowywać klientów na usługę tokenu zabezpieczającego (STS), aby uzyskać token zabezpieczający, gdy autoryzacja nie powiedzie się dla żądanego zasobu. Nasłuchiwanie <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzeń umożliwia WSFAM do monitorowania żądań HTTP dla odpowiedzi z usługi STS, który zawiera żądanego tokenu. Takie token jest obecny i prawidłowy, tworzy wystąpienie <xref:System.Security.Claims.ClaimsPrincipal> dla tego uwierzytelnionego użytkownika przy użyciu oświadczeń, które są obecne w tokenie.  
  
 W przypadku przy użyciu WSFAM, zarządzanie sesjami jest określany przez moduł uwierzytelniania sesji (SAM), który jest wystąpieniem elementu <xref:System.IdentityModel.Services.SessionAuthenticationModule> klasy lub klasy bazującej na tym obiekcie. SAM jest także dodawane do potoku platformy ASP.NET w pliku konfiguracji. SAM monitoruje żądania dotyczące plików cookie uwierzytelniania (sesja). W przypadku tych plików cookie obecne i prawidłowe, moduł wyodrębnia <xref:System.Security.Claims.ClaimsPrincipal> dla tego uwierzytelnionego użytkownika z <xref:System.IdentityModel.Tokens.SessionSecurityToken> i ustawia <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> właściwości i nazwę główną wątku <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości.  
  
 WSFAM zawiera:  
  
-   Dzięki możliwości dla aplikacji ASP.NET w celu oddelegowania procesów uwierzytelniania do usługi tokenu zabezpieczającego (STS), za pomocą protokołu WS-Federation. Tożsamość można federacyjnych na jeden lub więcej obszarów tożsamości i obejmują wiele usług STS.  
  
-   Tożsamość oparta na oświadczeniach dla aplikacji ASP.NET. Podczas uwierzytelniania WSFAM tworzy nazwę główną w oświadczeniach w tokenie zabezpieczającym wysyłane przez usługę STS i ustawia ten podmiot zabezpieczeń oświadczeń jako jednostka wątku. Można następnie użyć tej jednostki może wprowadzać dalszych autoryzacji, prezentacji i logiki decyzje dotyczące użytkownika, który reprezentuje kod.  
  
 WSFAM udostępnia kilka właściwości, które dostarczają domyślne parametry komunikatu do użycia w odpowiedzi na żądania logowania i wylogowania protokołu WS-Federation. Te właściwości są zwykle inicjowane z [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elementu w pliku konfiguracji. Najważniejszym z tych właściwości są następujące:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Właściwość, która określa adres usługi tokenu zabezpieczającego (STS), dla której chcesz wysyłać żądania logowania i wylogowania protokołu WS-Federation.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> Właściwość, która określa parametr wtrealm do użycia w żądań logowania dla protokołu WS-Federation. Parametr wtrealm identyfikuje sferze zabezpieczeń aplikacji jednostki uzależnionej (RP) do usługi STS.  
  
 Parametry logowania komunikatu można zmienić na podstawie danego żądania, podając delegata obsługi zdarzeń dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń.  
  
 Dwie właściwości kontrolują zachowanie modułu. Obie te właściwości są zwykle także inicjowane z `<wsFederation>` element w konfiguracji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Właściwość określa, czy moduł, należy wykonać pasywnym przekierowuje do usługi STS do uwierzytelniania.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> Właściwość określa, czy sesji ma być trwały. Jeśli ta właściwość jest ustawiona wartość true, Menedżera kont zabezpieczeń używany do zapisywania pliku cookie sesji do klienta. Kolejne żądania z klienta tego Zabronić zapewnia uwierzytelnianie przy użyciu tokenu utrwalone w pliku cookie sesji.  
  
 WSFAM zgłasza kilka zdarzeń podczas logowania i wylogowywania, które umożliwiają deweloperów platformy ASP.NET zmienić domyślne zachowanie modułu i kontrolować szczegółowe informacje o jak odbywa się uwierzytelnianie i przetwarzanie oświadczeń.  
  
 Następujące zdarzenia są wywoływane przed wysłaniem do usługi STS WS-Federation żądanie logowania:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Wywoływane, gdy pasywnym przekierowania jest włączona i autoryzacja nie powiedzie się dla żądanego zasobu.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Wywoływane tuż przed WSFAM wysyła żądanie logowania usługi WS-Federation do usługi STS. To zdarzenie służy do zmiany parametrów w żądaniu logowania.  
  
 Następujące zdarzenia są wywoływane, gdy otrzyma odpowiedź logowania (wystawiony token zabezpieczający) z usługi STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Podniesione po token zabezpieczający wysyłane przez usługę STS jest do odczytu z odpowiedzi.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Podniesione po zweryfikowaniu tokenu. To zdarzenie umożliwia filtrowanie, przekształcenie lub dodawać oświadczenia z podmiotem zabezpieczeń oświadczeń (<xref:System.Security.Claims.ClaimsPrincipal>) utworzone na podstawie tokenu zabezpieczającego.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Wywoływane tuż przed tokenu sesji (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) utworzone na podstawie oświadczenia podmiotu zabezpieczeń jest używana do ustawiania wątku jednostki i bieżącego użytkownika i jest zapisywany do pliku cookie sesji. Zapewnia możliwość modyfikowania tokenu sesji lub Włącz lub Wyłącz zapisywanie plików cookie sesji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Wywoływane na końcu uwierzytelniania tylko po użytkownik podmiotu zabezpieczeń, jak i bieżącego wątku.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Wywoływane, jeśli wystąpi wyjątek podczas logowania. Możesz anulować żądanie i zapobiec wyjątek z są zwracane do obiektu wywołującego.  
  
 Podczas logowania z sesji lub podczas przetwarzania żądania czyszczenia wylogowania protokołu WS-Federation (wsignoutcleanup1.0), wywoływane są następujące zdarzenia:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Wywoływane tylko w przypadku, przed usunięciem sesji oraz umożliwiają wykonanie czyszczenia, który może zależeć od sesji lub Anuluj wylogowania.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Podniesione po sesja została usunięta.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Wywoływane, jeśli wystąpi wyjątek podczas wylogowania. Możesz anulować wylogowania i zapobiec wyjątek z są zwracane do obiektu wywołującego.  
  
> [!NOTE]
>  Zdarzenia wylogowania nie są wywoływane, gdy wylogowywania w usługi STS, wywołując <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Istnieją dwa sposoby logowania się do usługi STS przy użyciu WSFAM. Pierwsza polega na włączenie pasywnym przekierowuje za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości. W tym przypadku, gdy autoryzacja nie powiedzie się na żądany zasób zamiast zwracanie `401:Access Denied` odpowiedź do klienta WSFAM tworzy komunikat protokołu WS-Federation żądanie logowania z jego właściwości i przekierowuje klienta do usługi STS w celu pobrania tokenu zabezpieczającego. Druga metoda jest jawnie przekierowuje klienta do usługi STS, wywołując <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metoda ze strony sieci web lub kontrolki niestandardowej w aplikacji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Metoda używa także właściwości WSFAM do konstruowania żądania logowania.  
  
 Dowolny przeciążonej <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody może służyć do Wyloguj się z sesji. Spowoduje to usunięcie pliku cookie sesji na komputerze klienckim. Wylogowywanie w protokole wiadomości WS-Federation ("wsignout1. 0") nie wysyła do usługi STS. Aby wylogowania w usługi STS, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 WSFAM obsługuje żądania czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"), usuwając jego sesji przy użyciu klienta. Jeśli nie ustawiono parametru wreply w komunikacie czyszczenia wylogowania, WSFAM zwraca obraz zielony znacznik wyboru usługą STS, która wysłała komunikat. Ta funkcja może być używana przez usługę STS jako po potwierdzeniu, że jednostki Uzależnionej ukończono jego wylogowania.  
  
 WSFAM udostępnia funkcję — na przykład jego potok przetwarzania żądania — przy użyciu kilku metod specyficzne dla zadania. Można zastąpić tych metod w klasach pochodnych w celu zmiany zachowania WSFAM.  
  
 Ma być używany, moduł muszą być dodane do potoku, tak jak następujący kod XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Po skonfigurowaniu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> wywołuje zdarzenia na różnych etapach cyklu przetwarzania żądania HTTP. Deweloperzy platformy ASP.NET może obsługiwać te zdarzenia w pliku global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez konstruktory w klasach pochodnych można zainicjować <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wauth do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Identyfikator URI, który określa typ uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wauth jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wauth nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł jest określenie, czy użytkownik powinien spowodować przekierowanie do skonfigurowanego wystawcy uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Zdarzenie jest wywoływane, gdy autoryzacja nie powiodła się dla żądania HTTP. Jest wywoływane z poziomu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegatów obsługi zdarzeń za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> metody.  
  
 Możesz ustawić <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> właściwości do kontrolowania, czy żądanie jest przekierowywane do dostawcy tożsamości. Struktura inicjuje tę właściwość, aby `false` Jeśli użytkownik ma już uwierzytelniony. W takim przypadku ustawienie dla właściwości `true` może spowodować pętlę cykliczne z usługi STS.  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Zdarzeń może służyć do modyfikowania adresu URL lub Anuluj przekierowania.  
  
 Aby obsługiwać to zdarzenie w aplikacji ASP.NET, należy utworzyć metodę o nazwie `WSFederationAuthentication_AuthorizationFailed` w pliku global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy podane żądanie HTTP jest komunikat logowania odpowiedzi protokołu WS-Federation. Jeśli komunikat jest komunikatem czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat logowania odpowiedzi są wysyłane do jednostki uzależnionej (RP) przez usługę tokenu zabezpieczającego (STS) w odpowiedzi na komunikat żądania logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądania HTTP.</param>
        <summary>Zwraca wartość wskazującą, czy podane żądanie HTTP jest komunikat logowania odpowiedzi protokołu WS-Federation. Jeśli komunikat jest komunikatem czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <returns><see langword="true" /> Jeśli określone żądanie HTTP zawiera POST formularza, w którym parametr wa jest ustawiony na "wsignout1. 0", a parametr wresult nie jest pusta, w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań, aby ustalić, czy przychodzące żądania HTTP post formularza, zawierający komunikat logowania odpowiedzi protokołu WS-Federation.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> przeciążenia z `onPage` zestaw parametrów `false` do wskazania, że wywołanie nie pochodzi podczas przetwarzania strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądania HTTP.</param>
        <param name="onPage"><see langword="true" /> Jeśli wywołanie pochodzi podczas przetwarzania żądania strony. <see langword="false" /> Jeśli obiekt wywołujący jest moduł protokołu HTTP. Ten parametr określa sposób zakończenia przetwarzania lub wysłać przekierowania, jeśli przychodzący komunikat jest komunikatem czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Zwraca wartość wskazującą, czy podane żądanie HTTP jest komunikat logowania odpowiedzi protokołu WS-Federation. Jeśli komunikat jest komunikatem czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <returns><see langword="true" /> nie jest pusta, jeśli określone żądanie HTTP zawiera post formularza, w którym parametr wa ma wartość "wsignout1. 0", a parametr wresult w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> przeciążenia, aby określić, czy przychodzące żądanie HTTP jest formą WPIS, który zawiera komunikat logowania odpowiedzi protokołu WS-Federation.  
  
 Domyślna implementacja wykonuje następujące działania:  
  
-   Jeśli żądanie przychodzące ma POST formularza, wywołuje metodę <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> metodę, aby określić, czy formularz WPIS zawiera odpowiedź logowania.  
  
-   Jeśli przychodzące żądanie nie jest POST formularza, a żądanie zawiera żądanie czyszczenia wylogowania protokołu WS-Federation (parametr wa jest "wsignoutcleanup1.0"), odbywa się czyszczenia wylogowania. W tym przypadku <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metoda jest wywoływana (z parametrem ustawionym `true` do wskazania wylogowania oczyszczania) Aby wylogować sesji. Spowoduje to również wylogowania zdarzenia, które mają zostać wywołane.  
  
     Następnie, jeśli wyrejestrowywania żądanie czyszczenia zawiera parametr wreply, klient zostanie przekierowany do adresu URL zwrócone przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> metody; w przeciwnym razie obrazu z zielonym znacznikiem wyboru są zwracane do usługi STS. Odbieranie ten obraz może służyć przez usługę STS jako potwierdzenie, że wyrejestrowywania żądanie czyszczenia został odebrany i pomyślnie przetworzona przez jednostkę Uzależnioną.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx w federacyjnych żądania logowania; Jednak moduł nie używać go podczas przetwarzania żądania rejestracji lub logowania odpowiedzi. Można ustawić go na dowolną wartość. Nie musi być unikatowa.</param>
        <param name="returnUrl">Adres URL, do której moduł powinien zwrócić po uwierzytelnieniu.</param>
        <param name="rememberMeSet">WSFAM zapisuje tę wartość w parametrze wctx w federacyjnych żądania logowania; Jednak moduł nie używać go podczas przetwarzania żądania rejestracji lub logowania odpowiedzi. Jest on ustawiany albo <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Tworzy logowania usługi WS-Federation w komunikacie żądania przy użyciu skonfigurowanych w module parametrów protokołu WS-Federation.</summary>
        <returns>Komunikat żądania logowania usługi WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy WS-Federation logowania żądania, które jest reprezentowane przez <xref:System.IdentityModel.Services.SignInRequestMessage> obiektu. Właściwości nowej <xref:System.IdentityModel.Services.SignInRequestMessage> obiektu są ustawione w następujący sposób:  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (Parametr wctx) zostaje ustalona wartość utworzone za pomocą parametrów metody.  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> Właściwość (parametr wct) jest ustawiona na bieżącą godzinę.  
  
-   Wszystkie pozostałe właściwości są ustawiane za pomocą równoważnej właściwości bieżącego wystąpienia.  
  
 Parametry przekazane do metody są używane do tworzenia wctx parametr komunikatu. Jest to ciąg o następującym formacie: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   `ru` Wartość jest równa wartości `returnUrl` parametru przekazanego do metody i określa adres URL, że moduł powinny być kierowane przez przeglądarkę następujące pomyślne uwierzytelnienie. Jest to jedyna wartość przechowywana w ciągu wctx, który jest używany przez WSFAM. Wywołuje moduł <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodę, aby wyodrębnić tę wartość z parametru wctx podczas przetwarzania odpowiedzi logowania usługi WS-Federation. Nie należy tego mylić z parametru komunikat wreply, który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwości i który dostarcza adres na jednostki Uzależnionej, do którego usługa tokenu zabezpieczającego (STS) powinny być kierowane odpowiedzi przez punkt końcowy.  
  
-   `cx` Parametr jest ustawiony na wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> właściwości. Ta właściwość jest uwidaczniana do umożliwiają skonfigurowanie wszystkich kontekstach zdefiniowanych przez aplikację, która powinna być przechowywana w ciągu wctx; jednak WSFAM nie uwidacznia metodę, aby wyodrębnić tę wartość w odpowiedzi. Jeśli wartość jest wymagane przez aplikację, musisz podać kod, aby przeanalizować składni ciągu wctx i Odczytaj tę wartość podczas przetwarzania odpowiedzi. Może to zrobić przez zastąpienie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metody.  
  
-   Ani `rm` wartość, która jest ustawiona na wartość `rememberMeSet` parametru ani `id` parametr, który jest ustawiony na wartość `uniqueId` parametru są używane przez WSFAM. Te opcje można ustawić dowolną wartość.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> Właściwość <see langword="null" /> ani być pustym ciągiem.  
  
—lub— 
<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> Właściwość <see langword="null" /> ani być pustym ciągiem.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">Adres URL usługi STS do odbierania komunikatów żądania wyrejestrowywania WS-Federation. Nie może być <see langword="null" />.</param>
        <param name="replyUrl">Adres URL do wysłania jako wartość wreply w komunikacie żądania wyrejestrowywania.</param>
        <summary>Wylogowuje na określoną usługę tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby wysłać komunikat żądania wyrejestrowywania WS-Federation do określonej usługi STS. Opcjonalnie możesz podać wartość parametru wreply w żądaniu wylogowania.  
  
 Metoda wykonuje następujące czynności:  
  
1.  Tworzy komunikat żądania wyrejestrowywania WS-Federation, przy użyciu określonych parametrów.  
  
2.  Wywołania <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metody na SAM można usunąć pliku cookie sesji.  
  
3.  Przekierowuje do usługi STS przy użyciu komunikatu żądania wylogowania z pierwszego kroku.  
  
 Brak zdarzeń wylogowania: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, lub <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> są wywoływane przez tę metodę. Można usunąć sesji bez wysyłania komunikatu żądania wylogowania do usługi STS, wywołanie jednej z przeciążonych <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody.  
  
> [!NOTE]
>  Wykonywanie pasywny wylogowania przy użyciu tokenu sesji, moduł opiera się na wartość, która została zapisana w <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> właściwości podczas logowania, aby uzyskać więcej informacji, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" /> nie jest <see langword="null" /> i nie jest bezwzględny identyfikator URI.  
  
—lub— 
 <paramref name="replyUrl" /> nie jest <see langword="null" /> i nie jest bezwzględny identyfikator URI.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="signOutUrl" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wfresh do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Żądany maksymalny wiek żądań uwierzytelniania, w ciągu kilku minut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wfresh jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wfresh nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Adres wystawcy. Adres zabezpieczenia tokenu usługi (STS), do którego należy przekierować żądania.</param>
        <param name="signOutReply">Adres URL, który określa adres aby powrócić do po wylogowania. Spowoduje to ustawienie parametru wreply żądania wyrejestrowywania. Może być <see langword="null" /> lub jest pusty, jeśli nie parametrze wreply powinny być uwzględnione w wygenerowanych żądania wyrejestrowywania. Powinna to być bezwzględnym identyfikatorem URI.</param>
        <param name="signOutQueryString">Parametry ciągu zapytania dodatkowe, które mają zostać uwzględnione w żądaniu wylogowania. Może być <see langword="null" /> lub jest pusty, jeśli brak dodatkowych jako parametry uwzględnione w wygenerowanych żądania wyrejestrowywania. Powinna to być względnym identyfikatorem URI.</param>
        <summary>Zwraca adres URL reprezentujący WS-Federation wyrejestrowywania żądanie skierowane do określonego wystawcę i zawiera parametr określony wreply i określonych dodatkowych parametrów.</summary>
        <returns>Adres URL, który zawiera WS-Federation passive wyrejestrowywania żądanie, które powstała przy użyciu określonych parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W adresie URL, który jest zwracany: podstawowy identyfikator URI jest ustawiona na `issuer`parametr wa jest ustawiony na "wsignout1. 0"; parametr wreply jest ustawiony na `signOutReply`; i parametrów określonych w `signOutQueryString` występują jako parametry ciągu zapytania dodatkowych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuer" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">Adres URL, który określa adres wynik wystawiania.</param>
        <summary>Pobiera wynik wystawiania (zazwyczaj wystawiony token), z określonego adresu URL. Jest rozpoznawana jako adres URL określony w parametrze wresultptr w komunikacie odpowiedzi logowania.</summary>
        <returns>Wynik wystawiania przywoływany przez adres URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> metody z w ramach potoku przetwarzania rozpoznać adresu URL określonego w parametrze wresultptr w komunikacie odpowiedzi logowania odebranych z usługi tokenu zabezpieczającego (STS).  
  
 Domyślnie ta metoda wyrzuca <xref:System.NotSupportedException>. Zastępuje tę metodę w klasie pochodnej do obsługi parametru wresultptr. Adres URL wskazuje wynik wystawiania, która powinna być jedną z następujących: `<wst:RequestSecurityTokenResponse>` elementu `<wst:RequestSecurityTokenResponseCollection>` elementu, odpowiedź SOAP lub protokołu SOAP `<S:Fault>` elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta metoda nie jest obsługiwana w klasie bazowej. Konieczne jest przesłonięcie go w klasie pochodnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, które zawiera formularz WPIS, który zawiera komunikat logowania odpowiedzi protokołu WS-Federation.</param>
        <summary>Pobiera adres URL strony, która pierwotnie żądaną z odpowiedzi logowania.</summary>
        <returns>Adres URL strony, która pierwotnie żądaną przez klienta. To jest adres URL (na jednostkę uzależnioną), do którego klient powinien być przekierowany z po pomyślnym zalogowaniu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań ( <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> metoda) Aby uzyskać adres URL strony uzależnionej (RP) do kierowania klienta po pomyślnym zalogowaniu. Jest to zwykle adres URL zasobu jednostki Uzależnionej, do którego klient pierwotnie żądał dostępu.  
  
 Domyślnie WSFAM zapisuje zwrotny adres URL w parametrze komunikat wctx podczas wysyłania żądania logowania usługi WS-Federation do usługi tokenu zabezpieczającego (STS). Zgodnie ze specyfikacją WS-Federation parametr wctx są zachowywane między jednostkami za pomocą których przekazuje komunikat i jest zwracany niezmienione w komunikacie logowania odpowiedzi WS-Federation, który są wysyłane przez usługę STS.  
  
 Domyślna implementacja pobiera adres URL zwracany z parametru wctx w odpowiedzi logowania. Aby uzyskać więcej informacji o formacie parametru wctx, który jest używany przez WSFAM, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje token zabezpieczający z określonego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi w logowania, z którego można odczytać tokenu.</param>
        <summary>Odczytuje token zabezpieczający z określony komunikat logowania odpowiedzi protokołu WS-Federation.</summary>
        <returns>Token zabezpieczający, który został odczytany z komunikatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> metodę, aby uzyskać token i odczytuje go przy użyciu odpowiedniego programu obsługi na podstawie programy obsługi tokenów zabezpieczających skonfigurowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z którego można odczytać tokenu.</param>
        <summary>Odczytuje token zabezpieczający z określonego żądania HTTP.</summary>
        <returns>Token zabezpieczający, który został odczytany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z potok przetwarzania żądania, aby uzyskać komunikat żądania logowania usługi WS-Federation, jako <xref:System.IdentityModel.Tokens.SecurityToken> obiektu.  
  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> metodę, aby uzyskać <xref:System.IdentityModel.Services.SignInResponseMessage> obiektu, a następnie wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> przeciążenia.  
  
 Użyj klasy pochodnej do interpretacji określonego typu żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który powinien zostać utrwalona, za pomocą pliku cookie sesji w <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> właściwości.</summary>
        <returns>Ciąg, aby zachować w pliku cookie sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Metoda jest wywoływana z potoku przetwarzania żądań, podczas przetwarzania komunikatu logowania odpowiedzi protokołu WS-Federation, można pobrać wartości do przechowywania w <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> właściwości wewnątrz pliku cookie sesji.  
  
 Można zastąpić tę metodę, aby podać wartość specyficzne dla aplikacji mają być przechowywane w pliku cookie. WSFAM nie ujawnia żadnych metod aby je pobrać wartość z pliku cookie. Należy podać logikę w aplikacji, aby odczytać wartości z pliku cookie, jeśli jest to konieczne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> Właściwość <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z którego można odczytać komunikat logowania odpowiedzi. Żądanie powinno reprezentować POST formularza.</param>
        <summary>Odczytuje <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> obiektu reprezentowanego przez określone żądanie HTTP POST formularza.</summary>
        <returns>Komunikat logowania odpowiedzi, który został utworzony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> metody w potok przetwarzania żądania, aby uzyskać komunikat odpowiedzi do logowania za pomocą formularza z żądania HTTP POST.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można odczytać komunikat logowania odpowiedzi z określonego żądania.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Wyrejestrowywania żądanie czyszczenia.</param>
        <summary>Określa adres URL, do której ma nastąpić przekierowanie podczas przetwarzania WS-Federation wylogowania oczyszczania żądania (wsignoutcleanup1.0) zawierającej parametr wreply.</summary>
        <returns>Adres URL przekierowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potoku przetwarzania żądań, aby określić adres URL do przekierowania po przetworzeniu żądania czyszczenia wylogowania protokołu WS-Federation. Jest wywoływana tylko jeśli wiadomość ma parametr wreply ( `signOutMessage` parametr ma <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> właściwość, która nie jest ani `null` ani pusta).  
  
 Domyślna implementacja sprawdza adres URL odpowiedzi zawarty w komunikacie ( <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> właściwość) względem adresu usługę tokenu zabezpieczającego (STS), który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości. Następujące warunki muszą być spełnione dla adresu URL odpowiedzi, ważność:  
  
1.  Adres URL odpowiedzi to bezwzględny adres URL.  
  
2.  Adres URL odpowiedzi ma ten sam schemat, jako Wystawca.  
  
3.  Adres URL odpowiedzi ma ten sam port jako wystawcy.  
  
4.  Adres URL odpowiedzi ma tego samego hosta, jako wystawca albo adres URL odpowiedzi określa domenę podrzędną wystawcy.  
  
 Jeśli wszystkie te warunki są spełnione, zwracany jest adres URL odpowiedzi (odpowiedź); w przeciwnym razie adres URL określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> zwracana jest właściwość.  
  
 Zastępuje tę metodę, aby zapewnić dodatkowe sprawdzanie poprawności adresu URL odpowiedzi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutMessage" /> ma <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> właściwość, która jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="signOutMessage" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyodrębnia wystawiony token z określony komunikat logowania odpowiedzi protokołu WS-Federation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi do logowania do wyodrębnienia tokenu z. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <summary>Wyodrębnia wystawiony token z określony komunikat logowania odpowiedzi protokołu WS-Federation.</summary>
        <returns>Ciąg, który zawiera kod XML, który reprezentuje wystawiony token. Jest to <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma wresult parametru w komunikacie odpowiedzi logowania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> wywoływana jest metoda próbuje pobrać token za pomocą parametru wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" /> nie zawiera token. (Nie zawierać prawidłowego parametru wresult lub wresultptr.)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi do logowania do wyodrębnienia tokenu z. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <param name="federationSerializer">Serializator WS-Federation na potrzeby zdeserializować komunikatu odpowiedzi do logowania.</param>
        <summary>Wyodrębnia wystawiony token z określony komunikat logowania odpowiedzi protokołu WS-Federation, przy użyciu określonego serializator WS-Federation.</summary>
        <returns>Ciąg, który zawiera kod XML, który reprezentuje wystawiony token. Jest to <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> elementu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru whr korzystania w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Adres dostawcy tożsamości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr Wh jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr Wh nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt aplikacji HTTP, który zawiera ten moduł.</param>
        <summary>Inicjuje moduł i przygotowuje je do obsługi zdarzeń w module [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] obiektu aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje programy obsługi dla zdarzenia potoku platformy ASP.NET, zgodnie z poniższej tabeli.  
  
|Zdarzenie|Program obsługi|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Właściwości modułu, takie jak <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , są inicjowane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje właściwości modułu na podstawie konfiguracji określonego przez <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> właściwość modułu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości modułu są inicjowane za pomocą właściwości równoważne <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> obiekt określony przez <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> właściwości.  
  
 Możesz określić ustawienia w pliku konfiguracji, za pośrednictwem [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądania HTTP.</param>
        <summary>Pobiera wartość wskazującą, czy żądanie jest komunikat logowania odpowiedzi protokołu WS-Federation.</summary>
        <returns><see langword="true" /> Jeśli żądanie jest komunikat logowania odpowiedzi protokołu WS-Federation; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potok przetwarzania żądania, aby określić, czy przychodzące żądanie HTTP jest komunikat logowania odpowiedzi protokołu WS-Federation.  
  
 Domyślna implementacja zwraca `true` Jeśli parametr wa jest "wsignin1.0" i wreq i wreqptr zarówno nie ustawiono parametrów.  
  
 Można zastąpić tę metodę w klasach pochodnych przeprowadzenie dodatkowej walidacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI, który identyfikuje zamierzony emitenta tokenu zabezpieczającego.</summary>
        <value>Identyfikator URI, który identyfikuje usługę tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana. Należy ustawić, jeśli przekierowania pasywnym są włączone. Określa adres URL usługi tokenu zabezpieczającego (STS) do którego powinny być wydawane żądania protokołu WS-Federation.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości <see langword="null" /> lub pusty ciąg.  
  
—lub— 
Występuje, próba ustaw właściwość na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> zdarzenie z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Metoda implementuje potok przetwarzania żądania usługi WS-Federation. Jest ona dodawana do <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> zdarzenia w [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> metody.  
  
 Metoda wykonuje następujące działania:  
  
1.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> metodę pozwala ustalić, czy otrzymano komunikat logowania odpowiedzi protokołu WS-Federation ("wsignin1.0"). Jeśli odpowiedź jest żądanie czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> przetworzy komunikat, kończy żądanie i przekierowuje klienta zgodnie z parametrami WS-Federation w żądaniu. Jeśli komunikat nie jest odpowiedź rejestrowania lub wyrejestrowywania żądanie czyszczenia, moduł po prostu zwraca; w przeciwnym razie wykonuje następujące kroki, aby przetworzyć odpowiedzi logowania.  
  
2.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> metodę deserializacji <xref:System.IdentityModel.Tokens.SecurityToken> obiektu z żądania.  
  
3.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> zdarzeń. Można anulować dalszego przetwarzania lub zmodyfikować token zabezpieczający odebrany w obsłudze dla tego zdarzenia. Program obsługi jest zwykle używane do modyfikowania <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> lub <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> właściwości.  
  
4.  Weryfikuje token zabezpieczający i tworzy <xref:System.Security.Claims.ClaimsPrincipal> obiektu na podstawie oświadczenia w tokenie zabezpieczającym.  
  
5.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> zdarzeń. Można anulować dalszego przetwarzania lub zmodyfikować podmiot zabezpieczeń oświadczeń programu obsługi dla tego zdarzenia.  
  
6.  Używa skonfigurowanego sesji moduł uwierzytelniania (zabezpieczeń SAM) w celu utworzenia <xref:System.IdentityModel.Tokens.SessionSecurityToken> obiektu. (Jest skonfigurowany SAM <xref:System.IdentityModel.Services.SessionAuthenticationModule> obiektu zwróconego przez <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> właściwości.) Token sesji jest tworzona przy użyciu podmiot zabezpieczeń oświadczeń zwracane w kroku 5. <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> i <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> właściwości są ustawiane za pomocą <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> i <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> właściwości <xref:System.IdentityModel.Tokens.SecurityToken> zwracane w kroku 3 i są weryfikowane względem bieżącej godziny i okres istnienia tokenu, określony przez albo <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>lub <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> właściwość <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> obiektu w kolekcji programu obsługi tokenów, używany przez WSFAM. Okres istnienia tokenu w sesji programu obsługi tokenów, może być określony w konfiguracji za pomocą [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elementu. Uwaga: <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> właściwość skonfigurowanego pod kątem SAM nie jest używany program obsługi plików cookie.  
  
7.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> metody za pomocą tokenu sesji, aby zapisać plik cookie sesji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> Pierwszy wywołuje metodę <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. Można zmienić właściwości tokenu sesji lub określić, czy plik cookie powinien być utrwalone w obsługi dla tego zdarzenia. Po wywołaniu zdarzenia metoda następnie zapisuje plik cookie przy użyciu tego Zabronić.  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Zestaw w konfiguracji nie jest używany do zapisania pliku cookie.  
  
8.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> zdarzeń.  
  
9. Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodę, aby pobrać strony jednostki Uzależnionej, do którego ma zostać przekierowany klient. Domyślnie ta metoda odczytuje zwrotny adres URL z parametru wctx w odpowiedzi logowania. Aby uzyskać więcej informacji o sposobie WSFAM przechowywania zwrotny adres URL, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegatów obsługi zdarzeń, gdy autoryzacja nie powiodła się.  
  
 Inicjuje <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> właściwości przed zgłoszeniem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> zdarzenie, aby zapobiec przekierowuje cykliczne, jeśli użytkownik ma już uwierzytelniony. Jeśli użytkownik jest już uwierzytelniony, właściwość jest inicjowana do `false` zapobiegające przekierowuje; w przeciwnym razie jest inicjowany do `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzenie z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest ignorowana, chyba że <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwość `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="e">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> zdarzenie z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jest to pusty program obsługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metoda po prostu, po usunięciu tej sesji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metoda po prostu, przed usunięciem tej sesji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodę, jeśli wystąpi wyjątek podczas przetwarzania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy moduł jest włączone, aby zainicjować przekierowania protokołu WS-Federation.</summary>
        <value><see langword="true" /> Aby włączyć przekierowuje; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł nie będzie inicjował przekierowania protokołu WS-Federation, gdy ten tryb nie jest włączone. Jeśli ta właściwość jest `true`, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość musi być ustawiona na adres URL z Usługa tokenu zabezpieczającego (STS) do której powinno zostać przekierowane obiektu wywołującego.  
  
> [!WARNING]
>  Kod aplikacji może wystawić żądań logowania dla protokołu WS-Federation jawnie za pomocą <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody, niezależnie od wartości <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy plik cookie sesji trwałe jest wystawiony na pomyślne uwierzytelnienie.</summary>
        <value><see langword="true" /> Aby wystawić plik cookie sesji trwałego; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. To zdarzenie jest wywoływane z żądania przetwarzania potoku podczas przetwarzania komunikatu protokołu WS-Federation logowania odpowiedzi z usługi tokenu zabezpieczającego (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wp ma być używany w żądaniach WS-Federation logowania ("wsignin1.0").</summary>
        <value>Adres URL, który identyfikuje zasad do użycia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr systemu wp jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wp nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wtrealm ma być używany dla protokołu WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Identyfikator URI, który identyfikuje uzależnionej (RP) do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana dla protokołu WS-Federation żądania rejestracji. Należy ustawić, jeśli przekierowania pasywnym są włączone. Identyfikator URI Określa jednostki Uzależnionej do usługi STS. (Do identyfikowania usługi STS do jednostki Uzależnionej, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości).  
  
 Wartość tej właściwości jest serializowany jako parametr ciągu zapytania wtrealm w protokole WS-Federation. Identyfikuje jednostkę Uzależnioną do usługi STS. Używane przez usługę STS do określania, jakie zasady była stosowana do wystawiania tokenów i gdzie przekierowania użytkownika po wystawiania tokenu. (Do identyfikowania usługi STS do jednostki Uzależnionej, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości <see langword="null" /> lub pusty ciąg.  
  
—lub— 
Występuje, próba ustaw właściwość na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł ma przekierowanie użytkownika do dostawcy tożsamości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można uzyskać dostęp i modyfikować żądania protokołu WS-Federation Zaloguj się przy użyciu <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> właściwości. Na przykład, można zmodyfikować <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> właściwości w komunikacie logowania dostawcy tożsamości, do którego zostanie przekierowany żądania zmiany. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Zdarzenie jest zdarzeniem można anulować, i można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `true` anulować przekierowania.  
  
 Zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metody za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metody.  
  
 Aby obsługiwać to zdarzenie w aplikacji ASP.NET, należy utworzyć metodę o nazwie `WSFederationAuthentication_RedirectingToIdentityProvider` w pliku global.asax.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania programu obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w `Application_Init` zdarzenia w pliku global.asax. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [Indeks przykładów kodu programu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod przedstawia Obsługa <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w pliku global.asax jednostki Uzależnionej. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr Wh i jeśli tak jest, ustawia ten parametr dla protokołu WS-Federation logowania żądania, które będą wysyłane do usługi STS. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [Indeks przykładów kodu programu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod przedstawia Obsługa <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w w pliku global.asax dostawcy federacyjnego usługi STS. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr Wh. Jeśli żądanie zawiera parametr Wh klient zostaje skierowany do adresów IP STS do logowania; Jeśli nie, klient zostaje skierowany w stronę odnajdowania obszaru macierzystego wybrać usługę STS protokołu IP, od którego należy zarejestrować. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [Indeks przykładów kodu programu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx w federacyjnych żądania logowania; Jednak moduł nie używać go podczas przetwarzania żądania rejestracji lub logowania odpowiedzi. Można ustawić go na dowolną wartość. Nie musi być unikatowa. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metody.</param>
        <param name="returnUrl">Adres URL, do której moduł powinien zwrócić po uwierzytelnieniu.</param>
        <param name="persist">WSFAM zapisuje tę wartość w parametrze wctx w federacyjnych żądania logowania; Jednak moduł nie używać go podczas przetwarzania żądania rejestracji lub logowania odpowiedzi. Jest on ustawiany albo <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Przekierowuje użytkownika do usługi tokenu zabezpieczającego (STS), określonego przez <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> właściwości do uzyskania tokenu zabezpieczeń przy użyciu protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody, gdy żądanie jest wystawione ze strony sieci web, przedstawione przez jednostkę uzależnioną (RP) lub z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegata obsługi zdarzeń do przeprowadzania pasywnym przekierowania do dostawcy tożsamości Błąd autoryzacji.  
  
 Parametry przekazane do metody są używane do tworzenia wctx parametr komunikatu. Jedyną istotną parametr `returnUrl` parametru. To ustawienie określa adres URL, że jednostki Uzależnionej powinny być kierowane przez przeglądarkę następujące pomyślne uwierzytelnienie. Nie należy tego mylić z parametru komunikat wreply, który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwości i który dostarcza adres na jednostki Uzależnionej, do którego usługa tokenu zabezpieczającego (STS) powinny być kierowane odpowiedzi przez punkt końcowy.  
  
 Metoda wykonuje następujące działania:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> metodę, aby upewnić się, że prawidłowy żądanie logowania mogą być wystawiane przez moduł.  
  
2.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodę, aby utworzyć żądanie logowania z właściwości skonfigurowane w module.  
  
3.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. Można anulować przekierowania lub modyfikowanie komunikatów żądania logowania programu obsługi zdarzeń dla tego zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> jest <see langword="null" /> ani być pustym ciągiem.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> jest <see langword="null" /> ani być pustym ciągiem.  
  
—lub— 
<see cref="P:System.Web.HttpContext.Current" /> Właściwość <see langword="null" /> lub jest pusty.  
  
—lub— 
<see cref="P:System.Web.HttpContext.Response" /> Kontekst zwracany przez właściwość <see cref="P:System.Web.HttpContext.Current" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Adres URL, który określa adres, w którym chcesz otrzymywać odpowiedzi z Usługa tokenu zabezpieczającego (STS) aplikacji jednostki uzależnionej (RP).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreply jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wreply nie jest zawarty w żądaniu logowania.  
  
 Parametr wreply jest używany przez usługę STS zdecydować, czy do przekierowania użytkownika po wystawiania tokenu. Nie jest zalecane dla usługi STS bezrefleksyjne używać tego adresu do przekierowania użytkownika jako takie przekierowania ma luki w zabezpieczeniach. Adres zwrotny musi można zweryfikować przez usługę STS (prawdopodobnie przez porównanie z zestawem adresy zwrotne wstępnie skonfigurowane do celów lub innej metody), aby upewnić się, że odpowiedzi są wysyłane do rozpoznawanych dobrze znanych i bezpiecznej lokalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Występuje, próba ustaw właściwość na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreq do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Żądanie wystawienia tokenu wyrażonej w postaci <see langword="&lt;wst:RequestSecurityToken&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreq jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wreq nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreqptr do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Adres URL, który określa lokalizację żądania wystawiania tokenu wyrażonej w postaci <see langword="&lt;wst:RequestSecurityToken&gt;" /> — element</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreqptr jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wreq nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Występuje, próba ustaw właściwość na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy komunikacja z usługi tokenu zabezpieczającego (STS) musi używać protokołu HTTPS.</summary>
        <value><see langword="true" /> Jeśli komunikacja z usługi STS muszą być chronione przy użyciu protokołu HTTPS. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wres do użycia w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Identyfikator URI, który identyfikuje zasób, którego uzyskiwany jest dostęp, podmiotu zależnego (RP) do do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr "wtrealm", który jest ustawiony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> właściwości powinny być używane zamiast tego parametru.  
  
 Parametr wres jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wres nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy token zabezpieczający został odebrany z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać program obsługi zdarzeń, aby zmodyfikować token, zanim zostanie on sprawdzony. W przypadku obsługi dostęp można uzyskać token zabezpieczający za pośrednictwem <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> właściwości. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Zdarzenie jest zdarzeniem można anulować, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` w obsłudze zdarzeń, aby zakończyć przetwarzanie komunikatu logowania odpowiedzi protokołu WS-Federation.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegatów obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi protokołu WS-Federation ("wsignin1.0") odebranych z usługi tokenu zabezpieczającego (STS). Jest zgłaszany po ma została przeprowadzona tokenu zabezpieczającego z wresult lub parametr wresultptr w komunikacie odpowiedzi logowania, ale zanim token zabezpieczający jest weryfikowana.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zweryfikowaniu tokenu zabezpieczającego, które zostały odebrane z usługi tokenu zabezpieczającego (STS), ale przed zabezpieczeń sesji jest tworzony token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać program obsługi zdarzeń, aby zmodyfikować jednostki utworzone podczas przetwarzania komunikatu logowania odpowiedzi protokołu WS-Federation z usługi tokenu zabezpieczającego (STS), zanim zostaną one użyte do utworzenia tokenu sesji. W przypadku obsługi, możesz uzyskać dostęp jednostki za pośrednictwem <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> właściwości. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Zdarzenie jest zdarzeniem można anulować, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` w obsłudze zdarzeń, aby zakończyć przetwarzanie komunikatu logowania odpowiedzi protokołu WS-Federation.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegatów obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi protokołu WS-Federation ("wsignin1.0") odebranych z usługi tokenu zabezpieczającego (STS). Jest wywoływane zaraz po token zabezpieczający, który został przeprowadzona z wresult lub parametr wresultptr w komunikacie odpowiedzi logowania jest zweryfikowany, a przed zabezpieczeń sesji jest tworzony token.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy token zabezpieczający sesja została utworzona na podstawie tokenu zabezpieczającego odebranych z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodać program obsługi zdarzeń, aby zmodyfikować tokenu sesji, zanim jest używane do definiowania jednostka wątku i są zapisywane w pliku cookie sesji. W przypadku obsługi dostęp można uzyskać tokenu sesji za pośrednictwem <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. Można określić, czy plik cookie sesji mają być zapisywane przez ustawienie <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> właściwości.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegatów obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi protokołu WS-Federation ("wsignin1.0") odebranych z usługi tokenu zabezpieczającego (STS). Jest wywoływane zaraz po token zabezpieczający, który został przeprowadzona z wresult lub parametr wresultptr w komunikacie odpowiedzi logowania jest zweryfikowany, a przed oświadczenia podmiot zabezpieczeń jest ustawiany na <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (i na <xref:System.Web.HttpContext.User%2A> właściwość <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Działanie sesji w trybie odwołań, firma Microsoft zaleca zapewnienie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> zdarzenia w pliku global.asax.cs i ustawienie <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> właściwość tokenu przekazanego <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. Daje to pewność, że tokenu sesji działa w trybie odwołań dla każdego żądania i jest faworytem za pośrednictwem jedynie ustawienie <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> właściwości modułu sesji uwierzytelniania.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Token zabezpieczający sesji, który został utworzony z komunikatu protokołu WS-Federation logowania odpowiedzi z usługi STS.</param>
        <param name="isSession"><see langword="true" /> Aby zapisać plik cookie, który reprezentuje sesję dołączone do odpowiedzi; w przeciwnym razie <see langword="false" />.</param>
        <summary>Ustawia podmiot zabezpieczeń wątku i opcjonalnie zapisuje plik cookie sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane z przetwarzania w potoku żądań <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegatów obsługi zdarzeń. Ta metoda wykonuje następujące czynności:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. To zdarzenie służy do zmiany tokenu sesji, zanim jest używane do definiowania jednostka wątku i zapisywane w pliku cookie sesji i określ, czy mają być zapisywane pliku cookie sesji.  
  
2.  Wywołuje <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> metody na moduł uwierzytelniania skonfigurowanego sesji (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) Aby ustawić podmiot wątku i opcjonalnie zapisu pliku cookie sesji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sessionToken" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po użytkownik jest zalogowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie zostanie opublikowana do strony logowania, formantu na stronie zostanie zgłosić to zdarzenie, a nie tego modułu.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz po usunięcie sesji podczas wylogowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas wylogowanie z sesji na jednostki uzależnionej strona (RP). Zdarzenie nie jest inicjowane, gdy to Sfederowane wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Możesz dodać program obsługi zdarzeń do wykonania dodatkowego przetwarzania, które jest wymagane przez aplikację po usunięciu plików cookie sesji.  
  
 To zdarzenie nie ma żadnej gwarancji, będzie wywoływana dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład, więc to zdarzenie może nigdy być zgłaszany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM zapisuje tę wartość w parametrze wctx w federacyjnych żądania logowania; Jednak moduł nie używać go podczas przetwarzania żądania rejestracji lub logowania odpowiedzi. Można ustawić go na dowolną wartość. Nie musi być unikatowa. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metody.</param>
        <summary>Wykonuje, zaloguj się do usługi tokenu zabezpieczającego (STS) za pośrednictwem protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodę w celu logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gest lub ustawia kontekst określonej aplikacji wartości do uwzględnienia w parametrze wctx w żądań logowania dla protokołu WS-Federation.</summary>
        <value>Wartość kontekstowi aplikacji do uwzględnienia w parametrze wctx żądań logowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metoda jest wywoływana, który jest generowany komunikat logowania zawiera parametr wctx, który ma następujący format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> są przechowywane w `cx` parametru. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> można wywołać bezpośrednio w kodzie. Jest również nazywany, kiedy WSFAM wykonuje przekierowuje pasywnym, a także gdy albo <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody lub <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metoda jest wywoływana przez kod aplikacji.  
  
 Mimo że zapisuje WSFAM <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> wartości w komunikatach żądanie logowania, jeśli wartość jest używana przez aplikację podczas przetwarzania odpowiedzi, należy podać logikę wyodrębniania go z parametru wctx w komunikacie odpowiedzi logowania.  
  
 Aby uzyskać więcej informacji o formacie i przetwarzanie parametru wctx zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane, gdy wystąpi błąd podczas logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie zostanie opublikowana do strony logowania, formantu na stronie zostanie zgłosić to zdarzenie, a nie tego modułu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed usunięciem sesji podczas wylogowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas wylogowanie z sesji na jednostki uzależnionej strona (RP). Zdarzenie nie jest inicjowane, gdy to Sfederowane wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Możesz dodać program obsługi zdarzeń do wykonania dodatkowych czynności, które są wymagane przez aplikację, przed usunięciem pliku cookie sesji. Może odczytywać <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> właściwość w obsłudze zdarzeń, aby określić, czy wylogowywania jest wynikiem odebranie komunikatu żądania czyszczenia wyrejestrowywania WS-Federation ("wsignoutcleanup1.0") z usługi tokenu zabezpieczającego (STS) lub tego, czy została zainicjowana jednostki Uzależnionej.  
  
 To zdarzenie nie ma żadnej gwarancji, będzie wywoływana dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład, więc to zdarzenie może nigdy być zgłaszany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania, który zawiera żadnych dodatkowych parametrów do wysłania w WS-Federation żądania rejestracji ("wsignin1.0").</summary>
        <value>Fragment adresu URL, który zawiera parametry dodatkowe wiadomości w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;paramN = wartośćN</c>. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do wysyłania dodatkowych parametrów w żądaniu logowania. Będą to parametry specyficzne dla aplikacji, które nie są jednego z parametrów, które są określone przez protokół WS-Federation. Aby usunąć dodatkowych parametrów z żądania ustaw właściwość na pusty ciąg.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed moduł wykonuje przekierowanie do usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation komunikat żądania logowania. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znaki spoza bieżącej sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję.  
  
 Brak komunikatu żądania wyrejestrowywania ("wsignout1. 0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znaki spoza bieżącej sesji i żądań przekierowanie z powrotem do adresu URL określonego w bieżącym żądaniu HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję, a następnie przekierowuje przeglądarkę do adresu URL określonego w bieżącym żądaniu HTTP.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> metody z `redirectUrl` zestaw parametrów do adresu URL bieżącego żądania.  
  
 Brak komunikatu żądania wyrejestrowywania ("wsignout1. 0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest"><see langword="true" /> Jeśli żądanie zostało zainicjowane przez usługę STS protokołu IP, za pomocą komunikatu żądania czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0"); w przeciwnym razie <see langword="false" />.</param>
        <summary>Wylogowuje się w bieżącej sesji i zgłasza odpowiedni zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje rzeczywistą pracę usunięcie bieżącej sesji i wywoływanie odpowiednie wylogowania zdarzeń. Metoda wykonuje następujące czynności:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> zdarzeń. Program obsługi zdarzeń można podać wszelkie niezbędne przetwarzania w przed usunięciem tej sesji. <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> Zostaje ustalona zgodnie z opisem w `isIPRequest` parametru.  
  
2.  Wywołania <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metody w Menedżerze uwierzytelniania bieżącej sesji, aby usunąć plik cookie sesji.  
  
     Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> zdarzeń.  
  
3.  Jeśli wystąpi błąd podczas przetwarzania wylogowania, wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> zdarzeń. Program obsługi zdarzeń może anulować przetwarzanie i zapobiec wyjątkowi zwracanych do obiektu wywołującego <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Możesz wywołać <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> metody z `isIPRequest` zestaw parametrów `false` się wylogować z sesji bez wykonywania przekierowania. Metoda ostatecznie jest wywoływana przez wszystkie inne przeciążona <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody (przy użyciu `isIPRequest` parametr `false`) do wykonania w Wyloguj obsługi. Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> metody z `isIPRequest` zestaw parametrów `true` się wylogować się z sesji podczas przetwarzania komunikatu czyszczenia wylogowania protokołu WS-Federation ("wsignoutcleanup1.0").  
  
 Brak komunikatu żądania wyrejestrowywania ("wsignout1. 0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego przeglądarki powinien być przekierowany po usunięciu tej sesji.</param>
        <summary>Wylogowuje się w bieżącej sesji i żądań do określonego adresu URL przekierowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję, a następnie przekierowuje przeglądarkę do określonego adresu URL.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> metody z `redirectUrl` parametru i `initiateSignoutCleanup` ustaw `false`.  
  
 Brak komunikatu żądania wyrejestrowywania ("wsignout1. 0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego przeglądarki powinien być przekierowany po wylogowania.</param>
        <param name="initiateSignoutCleanup">Zawsze wartość <see langword="false" />. Ustawienie tego parametru na <see langword="true" /> nie jest obsługiwane.</param>
        <summary>Wylogowuje się w bieżącej sesji i żądań do określonego adresu URL przekierowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję, a następnie przekierowuje przeglądarkę do określonego adresu URL.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody z `initiateSignoutCleanup` zestaw parametrów `false`.  
  
 Brak komunikatu żądania wyrejestrowywania ("wsignout1. 0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" /> nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.NotImplementedException"><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Klasy zgłasza ten wyjątek, jeśli <paramref name="initiateSignoutCleanup" /> jest <see langword="true" />. Ten parametr nie jest ustawiony na <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane, gdy wystąpi błąd podczas wyrejestrowywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas wylogowanie z sesji na jednostki uzależnionej strona (RP). Zdarzenie nie jest inicjowane, gdy to Sfederowane wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Zdarzenie jest zdarzeniem można anulować. Możesz ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość program obsługi zdarzeń, aby zapobiec wyjątek, który spowodował błąd zwracanych do inicjatora wylogowywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania, który zawiera żadnych dodatkowych parametrów do wysłania w żądaniach wylogowania protokołu WS-Federation ("wsignout1. 0").</summary>
        <value>Fragment adresu URL, który zawiera parametry dodatkowe wiadomości w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;paramN = wartośćN</c>. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutQueryString` atrybutu [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elementu w pliku konfiguracji. Jest ona przeznaczona do przechowywania wszelkie parametry specyficzne dla aplikacji do wysłania w żądaniu wylogowania protokołu WS-Federation. Aby usunąć te parametry, można ustawić właściwość na pusty ciąg.  
  
 WSFAM nie korzysta z tej właściwości bezpośrednio; Jednak aby przekazać <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodę, aby utworzyć pełne usługi WS-Federation wylogowania adresu URL, który może być następnie używane przez kod.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply, który ma być używany podczas żądania wylogowania protokołu WS-Federation ("wsignout1. 0").</summary>
        <value>Adres URL, do którego klient powinien być przekierowany przez usługę tokenu zabezpieczającego (STS) po wylogowania za pośrednictwem protokołu WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutReply` atrybutu [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elementu w pliku konfiguracji. Jest ona przeznaczona do reprezentowania wreply parametru w żądaniu wylogowania protokołu WS-Federation.  
  
 Parametr wreply jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> właściwość jest ustawiona na `null` lub pustym ciągiem, a parametr wreply nie jest zawarty w żądaniu wylogowania.  
  
 WSFAM nie korzysta z tej właściwości bezpośrednio. Jednak aby przekazać <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> wykonywania WS-Federation wylogowania z kodu lub możesz je przekazać do metody <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodę, aby utworzyć pełne usługi WS-Federation adres URL wylogowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> właściwości są nie jest pusta oraz, że jeśli <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> właściwość jest <see langword="true" />, że określone identyfikatory URI, dla <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> są zgodne z protokołu HTTPS.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> jest <see langword="null" /> ani być pustym ciągiem.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> jest <see langword="null" /> ani być pustym ciągiem.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> jest <see langword="true" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> HTTPS-niezgodne.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> jest <see langword="true" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> HTTPS-niezgodne.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> obiekt do użycia podczas deserializacji komunikatów logowania odpowiedzi protokołu WS-Federation, można pobrać tokenu wystawionego przez usługę tokenu zabezpieczającego (STS).</summary>
        <value><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Obiekt do użycia podczas deserializacji komunikatów logowania odpowiedzi protokołu WS-Federation, można pobrać tokenu wystawionego przez usługę tokenu zabezpieczającego (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
  </Members>
</Type>