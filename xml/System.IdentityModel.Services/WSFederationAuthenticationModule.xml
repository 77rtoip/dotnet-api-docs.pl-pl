<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a131cae0a9eb30df1d6a862b72b081d3ef8187e6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69282312" /></Metadata><TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest modułem http, który służy do zabezpieczania aplikacji ASP.NET przez wymuszanie ustawień uwierzytelniania federacyjnego w żądaniach przychodzących. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest to główny moduł, który WIF oferuje możliwość obsługi dostępu do tożsamości opartej na oświadczeniach w aplikacjach ASP.NET.  
  
<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Wywołuje kilka zdarzeń, dzięki którym deweloperzy ASP.NET mogą zmieniać zachowanie domyślne i kontrolować szczegóły dotyczące sposobu działania uwierzytelniania i przetwarzania oświadczeń. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Funkcje są podzielone na metody specyficzne dla zadania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Klasa implementuje moduł http znany jako moduł uwierzytelniania WS-Federation (WSFAM). WSFAM jest zaimplementowana z pola przez Windows Identity Foundation (WIF). WSFAM jest dodawany do potoku ASP.NET przez wprowadzenie wpisu w pliku Web. config. Pochodzi on z <xref:System.IdentityModel.Services.HttpModuleBase>, który implementuje <xref:System.Web.IHttpModule>. Rejestruje się w środowisku uruchomieniowym ASP.NET w celu nasłuchiwania <xref:System.Web.HttpApplication.EndRequest> zdarzeń i. <xref:System.Web.HttpApplication.AuthenticateRequest> Nasłuchiwanie <xref:System.Web.HttpApplication.EndRequest> zdarzenia umożliwia przekierowywanie klientów WSFAM do usługi tokenu zabezpieczającego (STS) w celu uzyskania tokenu zabezpieczającego, gdy autoryzacja nie powiedzie się w żądanym zasobie. Nasłuchiwanie <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzenia pozwala WSFAM monitorować żądania HTTP dotyczące odpowiedzi z usługi STS zawierającej żądany token. Gdy taki token jest obecny i prawidłowy, tworzy wystąpienie <xref:System.Security.Claims.ClaimsPrincipal> dla uwierzytelnionego użytkownika przy użyciu oświadczeń, które są obecne w tokenie.  
  
 W przypadku korzystania z WSFAM zarządzanie sesjami jest dostarczane przez moduł uwierzytelniania sesji (sam), który jest wystąpieniem <xref:System.IdentityModel.Services.SessionAuthenticationModule> klasy lub klasą pochodną. SAM jest również dodawany do potoku ASP.NET w pliku konfiguracji. SAM monitoruje żądania dla plików cookie uwierzytelniania (sesji). Gdy te pliki cookie są obecne i <xref:System.Security.Claims.ClaimsPrincipal> prawidłowe, moduł wyodrębnia dla uwierzytelnionego użytkownika <xref:System.IdentityModel.Tokens.SessionSecurityToken> z i ustawia <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> Właściwość oraz właściwości podmiotu zabezpieczeń <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> wątku.  
  
 WSFAM zapewnia:  
  
-   Możliwość aplikacji ASP.NET do uwierzytelniania za pomocą usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation. Tożsamość może być federacyjnym w jednym lub większej liczbie obszarów tożsamości i obejmuje wiele usług STS.  
  
-   Tożsamość oparta na oświadczeniach dla aplikacji ASP.NET. Podczas uwierzytelniania WSFAM kompiluje podmiot zabezpieczeń z oświadczeń w tokenie zabezpieczającym wysłanym przez usługę STS i ustawi tego podmiotu jako podmiot zabezpieczeń wątku. Następnie można użyć tego podmiotu zabezpieczeń, aby wykonać dalsze decyzje dotyczące autoryzacji, prezentacji i logiki dotyczące użytkownika, który reprezentuje w kodzie.  
  
 WSFAM uwidacznia kilka właściwości, które podają domyślne parametry komunikatów, które mają być używane na potrzeby logowania i wylogowania z usługi WS-Federation. Te właściwości są zazwyczaj inicjowane z [ &lt;elementu&gt; wsFederation](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracyjnym. Najważniejsze są następujące właściwości:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Właściwość, która określa adres usługi tokenu zabezpieczającego (STS), do której mają być wysyłane żądania logowania i wylogowywania w usłudze WS-Federation.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> Właściwość, która określa parametr wtrealm, który ma być używany w żądaniach logowania do usługi WS-Federation. Wtrealm parametr określa obszar zabezpieczeń aplikacji jednostki uzależnionej (RP) do usługi STS.  
  
 Parametry komunikatu logowania można także zmienić dla poszczególnych żądań, dostarczając delegata obsługi zdarzeń dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia.  
  
 Dwie właściwości sterują zachowaniem modułu. Obie te właściwości są również zazwyczaj inicjowane z `<wsFederation>` elementu w konfiguracji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Właściwość określa, czy moduł powinien wykonywać przekierowania pasywnego do usługi STS w celu uwierzytelniania.  
  
-   Właściwość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> określa, czy sesje mają być trwałe. Jeśli ta właściwość ma wartość true, SAM jest używany do zapisywania pliku cookie sesji na komputerze klienckim. W przypadku kolejnych żądań od klienta Menedżer SAM zapewnia uwierzytelnianie przy użyciu tokenu utrwalonego w pliku cookie sesji.  
  
 WSFAM wywołuje kilka zdarzeń podczas logowania i wylogowania, co umożliwia deweloperom ASP.NET zmianę domyślnego zachowania modułu i sterowanie szczegółowymi informacjami na temat sposobu działania uwierzytelniania i przetwarzania oświadczeń.  
  
 Następujące zdarzenia są zgłaszane przed wysłaniem żądania logowania za pomocą protokołu WS-Federation do usługi STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Uruchamiany, gdy przekierowywanie pasywne jest włączone, a autoryzacja nie powiedzie się na żądanym zasobie.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Wywoływane tuż przed wysłaniem żądania logowania WS-Federation do usługi STS przez WSFAM. To zdarzenie służy do zmiany parametrów w żądaniu logowania.  
  
 Po odebraniu odpowiedzi logowania (wystawiony token zabezpieczający) z usługi STS są zgłaszane następujące zdarzenia:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Uruchamiany tuż po odczytaniu tokenu zabezpieczającego wysłanego przez usługę STS z odpowiedzi.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Uruchamiany tuż po sprawdzeniu poprawności tokenu. To zdarzenie służy do filtrowania, przekształcania lub dodawania oświadczeń do podmiotu zabezpieczeń oświadczeń (<xref:System.Security.Claims.ClaimsPrincipal>) utworzonego na podstawie tokenu zabezpieczającego.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Wywoływane tuż przed tokenem sesji (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) utworzonym z podmiotu zabezpieczeń oświadczeń służy do ustawiania podmiotu zabezpieczeń wątku i bieżącego użytkownika i jest zapisywana w pliku cookie sesji. Umożliwia modyfikowanie tokenu sesji lub Włączanie lub wyłączanie zapisywania pliku cookie sesji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Uruchamiany po zakończeniu uwierzytelniania zaraz po ustawieniu podmiotu zabezpieczeń wątku i bieżącego użytkownika.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Uruchamiany, jeśli wystąpi wyjątek podczas logowania. Możesz anulować żądanie i uniemożliwić powrót wyjątku do obiektu wywołującego.  
  
 Podczas wylogowywania z sesji lub podczas przetwarzania żądania oczyszczenia przy użyciu usługi WS-Federation (wsignoutcleanup 1.0) są zgłaszane następujące zdarzenia:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Uruchamiany tuż przed usunięciem sesji, aby umożliwić wykonanie dowolnego oczyszczania, które może zależeć od sesji lub anulowanie wylogowania.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Uruchamiany tuż po usunięciu sesji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Uruchamiany, jeśli wystąpi wyjątek podczas wylogowywania. Możesz anulować wylogowywanie i zapobiec zwracaniu wyjątku do obiektu wywołującego.  
  
> [!NOTE]
>  Zdarzenia wylogowania nie są zgłaszane podczas wylogowywania się z usługi STS przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Istnieją dwa sposoby logowania się do usługi STS przy użyciu usługi WSFAM. Pierwszy polega na umożliwieniu przekierowania pasywnego za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości. W takim przypadku, gdy autoryzacja nie powiedzie się w żądanym zasobie `401:Access Denied` , a nie zwraca odpowiedzi do klienta, WSFAM kompiluje komunikat żądania logowania protokołu WS-Federation z jego właściwości i przekierowuje klienta do usługi STS w celu pobrania tokenu zabezpieczającego. Drugi sposób polega na jawnym przekierowaniu klienta do usługi STS przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody ze strony sieci Web lub kontrolki niestandardowej w aplikacji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Metoda używa również właściwości WSFAM do skonstruowania żądania logowania.  
  
 Do wylogowania z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> sesji można użyć dowolnej z przeciążonych metod. Spowoduje to usunięcie pliku cookie sesji na komputerze klienckim. Nie powoduje wysłania do usługi STS komunikatu o wylogowaniu WS-Federation ("wsignout 1.0"). Aby wylogować się w usłudze STS, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 WSFAM obsługuje żądania oczyszczenia logowania za pomocą usługi WS-Federation ("wsignoutcleanup 1.0"), usuwając jego sesję z klientem. Jeśli parametr wreply w komunikacie o czyszczeniu wylogowania nie jest ustawiony, WSFAM zwraca obraz zielonego znacznika wyboru do usługi STS, która wysłała wiadomość. Ta funkcja może być używana przez usługę STS jako potwierdzenie, że składnik RP zakończył wylogowanie.  
  
 WSFAM udostępnia swoją funkcjonalność — na przykład proces przetwarzania żądania przez kilka metod specyficznych dla zadań. Można zastąpić te metody w klasach pochodnych, aby zmienić zachowanie WSFAM.  
  
 Aby można było użyć modułu, należy dodać go do potoku, jak w poniższym kodzie XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Po skonfigurowaniu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> zdarzenia wzbudzają na różne etapy przetwarzania żądania HTTP. ASP.NET deweloperzy mogą obsługiwać te zdarzenia w pliku Global. asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez konstruktory w klasach pochodnych, <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> aby zainicjować klasę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wauth, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Identyfikator URI, który określa typ uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wauth jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr wauth nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł ustala, czy powinien przekierować użytkownika do skonfigurowanego wystawcy w celu uwierzytelnienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Zdarzenie jest zgłaszane w przypadku niepowodzenia autoryzacji dla żądania HTTP. Jest wywoływany z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegata obsługi zdarzeń przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> metody.  
  
 Można ustawić <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> właściwość, aby kontrolować, czy żądanie jest przekierowywane do dostawcy tożsamości. Struktura inicjuje tę właściwość w `false` przypadku, gdy użytkownik został już uwierzytelniony. W takim przypadku ustawienie właściwości na `true` może spowodować pętlę cykliczną z usługą STS.  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Zdarzenia można użyć do zmodyfikowania adresu URL lub anulowania przekierowania.  
  
 Aby obsłużyć to zdarzenie w aplikacji ASP.NET, należy utworzyć metodę `WSFederationAuthentication_AuthorizationFailed` o nazwie w pliku Global. asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem odpowiedzi na logowanie do usługi WS-Federation. Jeśli komunikat jest komunikatem oczyszczania usługi WS-Federation ("wsignoutcleanup 1.0"), ta metoda przetwarza żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat odpowiedzi logowania jest wysyłany do jednostki uzależnionej (RP) przez usługę tokenu zabezpieczającego (STS) w odpowiedzi na komunikat żądania logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem odpowiedzi na logowanie do usługi WS-Federation. Jeśli komunikat jest komunikatem oczyszczania usługi WS-Federation ("wsignoutcleanup 1.0"), ta metoda przetwarza żądanie.</summary>
        <returns><see langword="true" />Jeśli określone żądanie HTTP zawiera wpis formularza, w którym parametr wa ma wartość "wsignout 1.0", a parametr jednocześnie nie jest pusty. w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań w celu ustalenia, czy przychodzące żądanie HTTP jest wpisem w postaci wpisu, który zawiera komunikat z odpowiedzią na logowanie za pomocą protokołu WS-Federation.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> `false` Przeciążenie`onPage` z ustawionym parametrem, aby wskazać, że wywołanie nie pochodziło podczas przetwarzania strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <param name="onPage"><see langword="true" />Jeśli wywołanie pochodzi z przetwarzania żądania strony. <see langword="false" />Jeśli obiekt wywołujący jest modułem HTTP. Ten parametr określa, jak przerwać przetwarzanie lub wysyłać przekierowania, jeśli komunikat przychodzący jest komunikatem oczyszczania protokołu WS-Federation ("wsignoutcleanup 1.0").</param>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem odpowiedzi na logowanie do usługi WS-Federation. Jeśli komunikat jest komunikatem oczyszczania usługi WS-Federation ("wsignoutcleanup 1.0"), ta metoda przetwarza żądanie.</summary>
        <returns><see langword="true" />Jeśli określone żądanie HTTP zawiera wpis formularza, w którym parametr wa ma wartość "wsignout 1.0", a parametr jednocześnie nie jest pusty. w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań za pośrednictwem przeciążenia, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> aby określić, czy przychodzące żądanie HTTP jest wpisem w postaci formularza zawierającego komunikat odpowiedzi logowania do usługi WS-Federation.  
  
 Implementacja domyślna wykonuje następujące czynności:  
  
-   Jeśli żądanie przychodzące jest ogłoszeniem formularza, wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> metodę, aby określić, czy wpis formularza zawiera odpowiedź logowania.  
  
-   Jeśli żądanie przychodzące nie jest WPISem POST, a żądanie zawiera żądanie oczyszczenia logowania za pomocą protokołu WS-Federation (parametr wa to "wsignoutcleanup 1.0"), jest wykonywane czyszczenie wylogowania. W takim przypadku <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> wywoływana jest metoda (z parametrem `true` ustawionym na wylogowanie się, aby wylogować się z sesji). Powoduje to również wygenerowanie zdarzeń wylogowania.  
  
     Następnie Jeśli żądanie oczyszczenia wylogowania zawiera parametr wreply, klient zostanie przekierowany do adresu URL zwróconego przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> metodę; w przeciwnym razie do usługi STS jest zwracany obraz zielonego znacznika wyboru. Otrzymanie tego obrazu może być używane przez usługę STS jako potwierdzenie, że żądanie oczyszczenia wylogowania zostało odebrane i pomyślnie przetworzone przez RP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx w żądaniu logowania przy użyciu protokołu WS-Federation. Jednak moduł nie używa go podczas przetwarzania żądań logowania lub odpowiedzi logowania. Można ustawić dowolną wartość. Nie musi być unikatowa.</param>
        <param name="returnUrl">Adres URL, na który moduł powinien zwrócić po uwierzytelnieniu.</param>
        <param name="rememberMeSet">WSFAM zapisuje tę wartość w parametrze wctx w żądaniu logowania przy użyciu protokołu WS-Federation. Jednak moduł nie używa go podczas przetwarzania żądań logowania lub odpowiedzi logowania. Można ustawić wartość <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Tworzy komunikat żądania logowania protokołu WS-Federation przy użyciu parametrów protokołu WS-Federation skonfigurowanych w module.</summary>
        <returns>Komunikat żądania logowania do usługi WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy żądanie logowania do usługi WS-Federation reprezentowane przez <xref:System.IdentityModel.Services.SignInRequestMessage> obiekt. Właściwości nowego <xref:System.IdentityModel.Services.SignInRequestMessage> obiektu są ustawiane w następujący sposób:  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> Właściwość (parametr wctx) jest ustawiona na wartość utworzoną przy użyciu parametrów metody.  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> Właściwość (parametr WCT) jest ustawiona na bieżącą godzinę.  
  
-   Wszystkie inne właściwości są ustawiane przy użyciu równoważnych właściwości bieżącego wystąpienia.  
  
 Parametry przesłane do metody są używane do tworzenia parametru komunikatu wctx. Jest to ciąg o następującym formacie: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   Wartość jest ustawiona na wartość `returnUrl` parametru przekazaną do metody i określa adres URL, który moduł powinien skierować do przeglądarki, aby po pomyślnym uwierzytelnieniu. `ru` Jest to jedyna wartość przechowywana w ciągu wctx używanym przez WSFAM. Moduł wywołuje metodę, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> aby wyodrębnić tę wartość z parametru wctx podczas przetwarzania odpowiedzi na logowanie za pomocą protokołu WS-Federation. Nie należy mylić z parametrem komunikatu wreply, który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> Właściwość i który zapewnia adres w punkcie odzyskiwania, do którego powinna kierować odpowiedź usługi tokenu zabezpieczającego (STS).  
  
-   Parametr jest ustawiony na wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> właściwości. `cx` Ta właściwość jest udostępniona, aby umożliwić ustawienie kontekstu zdefiniowanego przez aplikację, który powinien być przechowywany w ciągu wctx; jednak WSFAM nie uwidacznia metody w celu wyodrębnienia tej wartości w odpowiedzi. Jeśli wartość jest wymagana przez aplikację, należy podać kod, aby przeanalizować ciąg wctx i odczytać tę wartość podczas przetwarzania odpowiedzi. Można to osiągnąć, zastępując <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodę.  
  
-   Wartość, która jest ustawiona na wartość `rememberMeSet` parametru, ani `id` parametr, `uniqueId` który jest ustawiony na wartość parametru, jest używany przez WSFAM. `rm` Można ustawić dowolną wartość.  
  
 Metoda jest wywoływana <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> z metody. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość jest lub <see langword="null" /> jest pustym ciągiem. <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />  
  
—lub— 
Właściwość jest lub <see langword="null" /> jest pustym ciągiem. <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /></exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">Adres URL programu STS, który będzie odbierać komunikat żądania wylogowania z usługi WS-Federation. Nie może <see langword="null" />być.</param>
        <param name="replyUrl">Adres URL, który ma być wysyłany jako wartość wreply w komunikacie żądania wylogowania.</param>
        <summary>Wyloguje się z określonej usługi tokenu zabezpieczającego (STS) przy użyciu protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby wysłać komunikat żądania wylogowania protokołu WS-Federation do określonego programu STS. Opcjonalnie możesz podać wartość parametru wreply w żądaniu wylogowania.  
  
 Metoda wykonuje następujące czynności:  
  
1.  Tworzy komunikat żądania wylogowania protokołu WS-Federation przy użyciu określonych parametrów.  
  
2.  <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> Wywołuje metodę na sam, aby usunąć plik cookie sesji.  
  
3.  Przekierowuje do usługi STS przy użyciu komunikatu żądania wylogowania z pierwszego kroku.  
  
 Brak zdarzeń wylogowania: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>lub <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> są wywoływane przez tę metodę. Aby usunąć sesję bez wysyłania komunikatu żądania wylogowania do usługi STS, wywołaj jedną z przeciążonych <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metod.  
  
> [!NOTE]
>  Aby przeprowadzić wylogowanie pasywne przy użyciu tokenu sesji, moduł korzysta z wartości, która została zapisana we <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> właściwości podczas logowania. Aby uzyskać więcej informacji, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Zobacz metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutUrl" />nie <see langword="null" /> jest i nie jest bezwzględnym identyfikatorem URI.  
  
—lub— 
 <paramref name="replyUrl" />nie <see langword="null" /> jest i nie jest bezwzględnym identyfikatorem URI.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="signOutUrl" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wfresh, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Żądany maksymalny wiek żądań uwierzytelniania (w minutach).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wfresh jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, Parametr wfresh nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Adres wystawcy. Adres usługi tokenu zabezpieczającego (STS), do której należy skierować żądanie.</param>
        <param name="signOutReply">Adres URL, który określa adres, który ma zostać zwrócony po wylogowaniu. Spowoduje to ustawienie parametru wreply w żądaniu wylogowania. Może być <see langword="null" /> lub puste, jeśli nie ma żadnego parametru wreply w wygenerowanym żądaniu wylogowania. Powinien to być bezwzględny identyfikator URI.</param>
        <param name="signOutQueryString">Dodatkowe parametry ciągu zapytania do uwzględnienia w żądaniu wylogowania. Może być <see langword="null" /> lub puste, jeśli żadne dodatkowe parametry nie są uwzględnione w wygenerowanym żądaniu wylogowania. Powinien to być względny identyfikator URI.</param>
        <summary>Zwraca adres URL reprezentujący żądanie wylogowania usługi WS-Federation kierowane do określonego wystawcy i zawiera określony parametr wreply oraz określone dodatkowe parametry.</summary>
        <returns>Adres URL zawierający żądanie pasywnego wylogowania protokołu WS-Federation, które jest kompilowane przy użyciu określonych parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W zwracanym adresie URL: podstawowy identyfikator URI jest ustawiony na `issuer`; parametr wa ma wartość "wsignout 1.0"; parametr wreply jest ustawiony na `signOutReply`wartość, a parametry określone w `signOutQueryString` są obecne jako dodatkowe parametry ciągu zapytania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="issuer" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">Adres URL, który określa adres wyniku wystawienia.</param>
        <summary>Pobiera wynik wystawiania (zazwyczaj wystawiony token) z podanego adresu URL. Rozwiązuje adres URL określony w parametrze wresultptr w komunikacie odpowiedzi logowania.</summary>
        <returns>Wynik wystawiania, do którego odwołuje się adres URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> metodę z wewnątrz potoku przetwarzania, aby rozpoznać adres URL określony w parametrze wresultptr w komunikacie odpowiedzi logowania otrzymanego z usługi tokenu zabezpieczającego (STS).  
  
 Domyślnie ta metoda zgłasza <xref:System.NotSupportedException>. Zastąp tę metodę w klasie pochodnej, aby obsługiwała parametr wresultptr. Adres URL wskazuje wynik wystawiania, który powinien mieć jedną z następujących wartości: `<wst:RequestSecurityTokenResponse>` element `<wst:RequestSecurityTokenResponseCollection>` , element, odpowiedź protokołu SOAP lub element SOAP `<S:Fault>` .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta metoda nie jest obsługiwana w klasie bazowej. Należy je zastąpić w klasie pochodnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP zawierające wpis w postaci wpisu, który zawiera komunikat z odpowiedzią na logowanie za pomocą protokołu WS-Federation.</param>
        <summary>Wyodrębnia adres URL strony, która pierwotnie zażądała w odpowiedzi na logowanie.</summary>
        <returns>Adres URL strony, która początkowo żądała klientowi. Jest to adres URL (w jednostce uzależnionej), do którego klient powinien zostać przekierowany po pomyślnym logowaniu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań ( <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Metoda), aby uzyskać adres URL strony w jednostce uzależnionej (RP), aby skierować klienta do programu po pomyślnym logowaniu. Jest to zazwyczaj adres URL zasobu RP, do którego klient pierwotnie zażądał dostępu.  
  
 Domyślnie WSFAM zapisuje zwrotny adres URL wewnątrz parametru komunikatu wctx, gdy wyśle żądanie logowania za pomocą protokołu WS-Federation do usługi tokenu zabezpieczającego (STS). Zgodnie ze specyfikacją WS-Federation, parametr wctx jest zachowywany między jednostkami, za pomocą których kończy się komunikat i jest zwracany w niezmienionej postaci komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation wysyłanego przez usługę STS.  
  
 Domyślna implementacja pobiera zwrotny adres URL z parametru wctx w odpowiedzi na logowanie. Aby uzyskać więcej informacji na temat formatu parametru wctx używanego przez WSFAM, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje token zabezpieczający z określonego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi logowania, z którego ma zostać odczytany token.</param>
        <summary>Odczytuje token zabezpieczający z określonego komunikatu odpowiedzi logowania federacyjnego protokołu WS.</summary>
        <returns>Token zabezpieczający, który został odczytany z wiadomości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja domyślna wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> metodę w celu uzyskania tokenu i odczytuje ją przy użyciu odpowiedniego programu obsługi ze skonfigurowanych programów obsługi tokenów zabezpieczających.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z którego ma zostać odczytany token.</param>
        <summary>Odczytuje token zabezpieczający z określonego żądania HTTP.</summary>
        <returns>Odczytany token zabezpieczający.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z potoku przetwarzania żądań w celu pobrania komunikatu żądania logowania protokołu WS-Federation jako <xref:System.IdentityModel.Tokens.SecurityToken> obiektu.  
  
 Implementacja domyślna wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> metodę w celu <xref:System.IdentityModel.Services.SignInResponseMessage> pobrania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> obiektu, a następnie wywołuje przeciążenie.  
  
 Użyj klasy pochodnej do interpretacji określonego typu żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który powinien zostać utrwalony przy użyciu pliku cookie sesji <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> we właściwości.</summary>
        <returns>Ciąg, który ma być trwały w pliku cookie sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana z potoku przetwarzania żądania podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation w celu uzyskania wartości przechowywanej <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> we właściwości w pliku cookie sesji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>  
  
 Można zastąpić tę metodę, aby podać wartość specyficzną dla aplikacji, która ma być przechowywana w pliku cookie. WSFAM nie ujawnia żadnych metod pobrania wartości z pliku cookie. Musisz podać logikę w aplikacji, aby odczytywać wartość z pliku cookie, jeśli jest to konieczne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> Właściwość jest<see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z którego ma zostać odczytany komunikat odpowiedzi logowania. Żądanie powinno reprezentować wpis formularza.</param>
        <summary><see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> Odczytuje obiekt z formularza post reprezentowane przez określone żądanie HTTP.</summary>
        <returns>Komunikat odpowiedzi logowania, który został utworzony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> metody w potoku przetwarzania żądania, aby uzyskać komunikat odpowiedzi logowania z formularza post zawartego w żądaniu HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można odczytać komunikatu odpowiedzi logowania z określonego żądania.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Żądanie oczyszczenia wylogowania.</param>
        <summary>Określa adres URL, który ma zostać przekierowany podczas przetwarzania żądania oczyszczenia w ramach usługi WS-Federation (wsignoutcleanup 1.0), które zawiera parametr wreply.</summary>
        <returns>Adres URL, do którego ma zostać przekierowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potoku przetwarzania żądań, aby określić adres URL, na który ma zostać przekierowany po przetworzeniu żądania oczyszczenia w ramach rejestracji w usłudze WS-Federation. Jest wywoływana tylko w przypadku, gdy komunikat ma parametr wreply ( `signOutMessage` parametr <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> ma właściwość, która nie jest `null` ani pusta).  
  
 Domyślna implementacja sprawdza poprawność adresu URL odpowiedzi zawartego w komunikacie <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> (właściwości) względem adresu usługi tokenu zabezpieczającego (STS) określonej <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> przez właściwość. Aby adres URL odpowiedzi był prawidłowy, muszą być spełnione następujące warunki:  
  
1.  Adres URL odpowiedzi jest bezwzględnym adresem URL.  
  
2.  Adres URL odpowiedzi ma ten sam schemat co wystawca.  
  
3.  Adres URL odpowiedzi ma ten sam port co wystawca.  
  
4.  Adres URL odpowiedzi ma tego samego hosta co wystawca lub adres URL odpowiedzi określa poddomenę wystawcy.  
  
 Jeśli wszystkie te warunki są spełnione, zwracany jest adres URL odpowiedzi (odpowiedź); w przeciwnym razie zwracany jest adres URL <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> określony przez właściwość.  
  
 Zastąp tę metodę, aby zapewnić dodatkowe sprawdzanie poprawności adresu URL odpowiedzi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="signOutMessage" />ma właściwość, która jest <see langword="null" /> lub jest pusta. <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="signOutMessage" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyodrębnia wystawiony token z określonego komunikatu odpowiedzi logowania do usługi WS-Federation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi logowania, z którego ma zostać wyodrębniony token. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <summary>Wyodrębnia wystawiony token z określonego komunikatu odpowiedzi logowania do usługi WS-Federation.</summary>
        <returns>Ciąg zawierający kod XML, który reprezentuje wystawiony token. To jest <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli w komunikacie z odpowiedzią na logowanie nie ma parametru jednocześnie, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> Metoda jest wywoływana w celu uzyskania tokenu przy użyciu parametru wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="message" />nie zawiera tokenu. (Nie zawiera poprawnego parametru jednocześnie lub wresultptr).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi logowania, z którego ma zostać wyodrębniony token. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <param name="federationSerializer">Serializator WS-Federation używany do deserializacji komunikatu odpowiedzi na logowanie.</param>
        <summary>Wyodrębnia wystawiony token z określonego komunikatu odpowiedzi usługi WS-Federation przy użyciu określonego serializatora usługi WS-Federation.</summary>
        <returns>Ciąg zawierający kod XML, który reprezentuje wystawiony token. To jest <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> element.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru WH do użycia w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Adres dostawcy tożsamości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr Wh jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr Wh nie jest uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt aplikacji HTTP, który zawiera ten moduł.</param>
        <summary>Inicjuje moduł i przygotowuje go do obsługi zdarzeń z obiektu [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] aplikacji modułu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje procedury obsługi dla zdarzeń potoku ASP.NET zgodnie z poniższą tabelą.  
  
|Zdarzenie|Jścia|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Właściwości modułu, takie jak <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , są inicjowane <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> z metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje właściwości modułu na podstawie konfiguracji określonej przez <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> Właściwość modułu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości modułu są inicjowane przy użyciu równoważnych właściwości <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> obiektu określonego <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> przez właściwość.  
  
 Możesz określić ustawienia w pliku konfiguracji za pomocą [ &lt;elementu wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <summary>Pobiera wartość wskazującą, czy określone żądanie jest komunikatem odpowiedzi logowania za pomocą protokołu WS-Federation.</summary>
        <returns><see langword="true" />Jeśli żądanie jest komunikatem z odpowiedzią na logowanie za pomocą protokołu WS-Federation; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potoku przetwarzania żądań, aby określić, czy przychodzące żądanie HTTP jest komunikatem odpowiedzi logowania do usługi WS-Federation.  
  
 Domyślna implementacja zwraca wartość `true` , jeśli parametr wa ma wartość "wsignin 1.0", a parametry wreq i wreqptr nie są ustawione.  
  
 Można zastąpić tę metodę w klasach pochodnych, aby przeprowadzić dodatkową weryfikację.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI, który identyfikuje zamierzony wystawcę tokenu zabezpieczającego.</summary>
        <value>Identyfikator URI, który identyfikuje usługę tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana. Musi być ustawiona, jeśli są włączone pasywne przekierowania. Określa adres URL usługi tokenu zabezpieczającego (STS), do której powinny zostać wystawione żądania protokołu WS-Federation.  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości na <see langword="null" /> lub pustego ciągu.  
  
—lub— 
Podjęto próbę ustawienia właściwości na wartość, która nie jest prawidłowym bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie <see cref="T:System.Web.HttpApplication" /> to obiekt.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> Obsługuje zdarzenie [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] z potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Metoda implementuje potok przetwarzania żądań WS-Federation. Jest on dodawany do <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> zdarzenia [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] w potoku przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> metodę.  
  
 Metoda wykonuje następujące czynności:  
  
1.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> Wywołuje metodę w celu ustalenia, czy Odebrano komunikat odpowiedzi logowania WS-Federation ("wsignin 1.0"). Jeśli odpowiedź to żądanie oczyszczania przy użyciu protokołu WS-Federation ("wsignoutcleanup 1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> przetwarza komunikat, kończy żądanie i przekierowuje klienta zgodnie z parametrami protokołu WS-Federation w żądaniu. Jeśli komunikat nie jest odpowiedzią na logowanie lub żądanie oczyszczenia wylogowania, moduł po prostu zwróci wartość; w przeciwnym razie wykonuje poniższe kroki, aby przetworzyć odpowiedź logowania.  
  
2.  Wywołuje metodę w celu deserializacji <xref:System.IdentityModel.Tokens.SecurityToken> obiektu z żądania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29>  
  
3.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Podnosi zdarzenie. Możesz anulować dalsze przetwarzanie lub zmodyfikować otrzymany token zabezpieczający w programie obsługi dla tego zdarzenia. Procedura obsługi jest zwykle używana do modyfikacji <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> właściwości lub. <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType>  
  
4.  Weryfikuje token zabezpieczający i tworzy <xref:System.Security.Claims.ClaimsPrincipal> obiekt z oświadczeń w tokenie zabezpieczającym.  
  
5.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Podnosi zdarzenie. Możesz anulować dalsze przetwarzanie lub zmodyfikować podmiot zabezpieczeń oświadczeń w programie obsługi dla tego zdarzenia.  
  
6.  Program używa skonfigurowanego modułu uwierzytelniania sesji (sam) do tworzenia <xref:System.IdentityModel.Tokens.SessionSecurityToken> obiektu. (Konfiguracja sam jest <xref:System.IdentityModel.Services.SessionAuthenticationModule> obiektem zwracanym <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> przez właściwość). Token sesji jest tworzony przy użyciu podmiotu zabezpieczeń oświadczeń zwróconego w kroku 5. <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> Właściwości <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> i <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> sąustawiane<xref:System.IdentityModel.Tokens.SecurityToken> przy użyciu właściwości izwracanychwkroku3isą<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> weryfikowane względem bieżącego czasu oraz okresu istnienia tokenu określonego przez <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A> lub<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Właściwość obiektuwkolekcjiobsługitokenów<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> używany przez WSFAM. Okres istnienia tokenu w obsłudze tokenów sesji można określić w konfiguracji za [ &lt;pomocą&gt; elementu sessionTokenRequirement](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) . Uwaga: <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> Właściwość w obsłudze plików cookie skonfigurowana dla elementu sam nie jest używana.  
  
7.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> Wywołuje metodę z tokenem sesji w celu zapisania pliku cookie sesji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> Metoda najpierw<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> wywołuje zdarzenie. Można zmienić właściwości tokenu sesji lub zmienić, czy plik cookie powinien zostać utrwalony w programie obsługi dla tego zdarzenia. Po wywołaniu zdarzenia Metoda zapisuje plik cookie przy użyciu SAM.  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Zestaw konfiguracji nie jest używany do zapisywania pliku cookie.  
  
8.  Wywołuje metodę w celu podniesienia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>zdarzenia. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A>  
  
9. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> Wywołuje metodę, aby uzyskać stronę RP, do której ma zostać przekierowany klient. Domyślnie ta metoda odczytuje zwrotny adres URL z parametru wctx w odpowiedzi na logowanie. Aby uzyskać więcej informacji na temat sposobu, w jaki program WSFAM przechowuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> zwrotny adres URL, zobacz metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z delegata obsługi zdarzeń, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> gdy autoryzacja zakończyła się niepowodzeniem.  
  
 Inicjuje Właściwość przed podnoszeniem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> poziomu zdarzenia, aby zapobiec przekierowaniu cyklicznemu, jeśli użytkownik został już uwierzytelniony. <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> Jeśli użytkownik jest już uwierzytelniony, właściwość jest inicjowana do `false` zapobiegania przekierowaniami; w przeciwnym razie zostanie ona zainicjowana dla. `true`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie <see cref="T:System.Web.HttpApplication" /> to obiekt.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.Web.HttpApplication.EndRequest" /> Obsługuje zdarzenie [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] z potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest ignorowane, chyba że <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwość jest `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Będzie <see cref="T:System.Web.HttpApplication" /> to obiekt.</param>
        <param name="e">Dane zdarzenia.</param>
        <summary><see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> Obsługuje zdarzenie [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] z potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jest to pusta procedura obsługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody zaraz po usunięciu sesji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody tuż przed usunięciem sesji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary><see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z metody <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> , jeśli wystąpi wyjątek podczas przetwarzania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy moduł jest włączony do inicjowania przekierowań protokołu WS-Federation.</summary>
        <value><see langword="true" />Aby włączyć przekierowania; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł nie będzie inicjować przekierowań protokołu WS-Federation, gdy ten tryb nie jest włączony. Jeśli ta właściwość ma `true`wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , właściwość musi być ustawiona na adres URL usługi tokenu zabezpieczającego (STS), do której ma zostać przekierowany obiekt wywołujący.  
  
> [!WARNING]
>  Kod aplikacji może wystawiać żądania logowania protokołu WS-Federation jawnie przy użyciu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody, niezależnie od wartości <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy trwały plik cookie sesji jest wystawiany po pomyślnym uwierzytelnieniu.</summary>
        <value><see langword="true" />Aby wystawić plik cookie sesji trwałej; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzenia. To zdarzenie jest wywoływane z potoku przetwarzania żądań podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation z usługi tokenu zabezpieczającego (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru WP, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Adres URL identyfikujący zasady do użycia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wp jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr WP nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wtrealm, który ma być używany w przypadku żądań logowania do usługi WS-Federation ("wsignin 1.0").</summary>
        <value>Identyfikator URI, który identyfikuje jednostkę uzależnioną (RP) do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to właściwość wymagana dla żądań logowania za pomocą protokołu WS-Federation. Musi być ustawiona, jeśli są włączone pasywne przekierowania. Identyfikator URI identyfikuje RP do usługi STS. (Aby zidentyfikować usługę STS do jednostki uzależnionej, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Właściwość).  
  
 Wartość tej właściwości jest serializowana jako parametr ciągu zapytania wtrealm w protokole WS-Federation. Identyfikuje RP do usługi STS. Jest on używany przez usługę STS do decydowania, jakie zasady mają być stosowane w przypadku wystawiania tokenów, oraz miejsce przekierowania użytkownika do po wystawieniu tokenu. (Aby zidentyfikować usługę STS do jednostki UZALEŻNIONej, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>Zobacz.).  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości na <see langword="null" /> lub pustego ciągu.  
  
—lub— 
Podjęto próbę ustawienia właściwości na wartość, która nie jest prawidłowym bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł przekieruje użytkownika do dostawcy tożsamości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz uzyskać dostęp do żądania logowania do usługi WS-Federation i zmodyfikować je za <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> pomocą właściwości. Na przykład możesz zmodyfikować <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> właściwość w komunikacie logowania, aby zmienić dostawcę tożsamości, do którego zostanie przekierowana żądanie. Zdarzenie jest zdarzeniem anulowania i można <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> ustawić właściwość na `true` , aby anulować przekierowanie. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>  
  
 Zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metody przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metody.  
  
 Aby obsłużyć to zdarzenie w aplikacji ASP.NET, należy utworzyć metodę `WSFederationAuthentication_RedirectingToIdentityProvider` o nazwie w pliku Global. asax.  
  
   
  
## Examples  
 Poniższy kod pokazuje, jak dodać procedurę obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia `Application_Init` w zdarzeniu w pliku Global. asax. Kod jest pobierany z `FederationForWebApps` przykładu. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [indeks przykładowego kodu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod pokazuje procedurę obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w pliku Global. asax modułu RP. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr Wh, a jeśli tak, ustawia ten parametr na żądanie logowania za pomocą protokołu WS-Federation, które zostanie wysłane do usługi STS. Kod jest pobierany z `FederationForWebApps` przykładu. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [indeks przykładowego kodu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod pokazuje procedurę obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w pliku Global. asax usługi STS dostawcy federacyjnego. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr Wh. Jeśli żądanie zawiera parametr Wh, klient jest kierowany do protokołu IP-STS na potrzeby logowania. w przeciwnym razie klient jest kierowany do strony odnajdowania obszaru macierzystego, aby wybrać adres IP-STS, na którym ma się zalogować. Kod jest pobierany z `FederationForWebApps` przykładu. Aby uzyskać więcej informacji na temat tego przykładu, zobacz [indeks przykładowego kodu WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx w żądaniu logowania przy użyciu protokołu WS-Federation. Jednak moduł nie używa go podczas przetwarzania żądań logowania lub odpowiedzi logowania. Można ustawić dowolną wartość. Nie musi być unikatowa. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metodę.</param>
        <param name="returnUrl">Adres URL, na który moduł powinien zwrócić po uwierzytelnieniu.</param>
        <param name="persist">WSFAM zapisuje tę wartość w parametrze wctx w żądaniu logowania przy użyciu protokołu WS-Federation. Jednak moduł nie używa go podczas przetwarzania żądań logowania lub odpowiedzi logowania. Można ustawić wartość <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Przekierowuje użytkownika do usługi tokenu zabezpieczającego (STS) określonej przez <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> właściwość w celu uzyskania tokenu zabezpieczającego przy użyciu protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana z metody, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> gdy żądanie zostało wystawione ze strony sieci Web prezentowanej przez jednostkę uzależnioną ( <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> RP) lub przez delegata obsługi zdarzeń w celu przeprowadzenia pasywnego przekierowania do dostawcy tożsamości na <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Błąd autoryzacji.  
  
 Parametry przesłane do metody są używane do tworzenia parametru komunikatu wctx. Jedynym znaczącym parametrem jest `returnUrl` parametr. Określa adres URL, który jednostka UZALEŻNIONa powinna kierować do przeglądarki, aby po pomyślnym uwierzytelnieniu. Nie należy mylić z parametrem komunikatu wreply, który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> Właściwość i który zapewnia adres w punkcie odzyskiwania, do którego powinna kierować odpowiedź usługi tokenu zabezpieczającego (STS).  
  
 Metoda wykonuje następujące czynności:  
  
1.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> Wywołuje metodę, aby upewnić się, że w module można wydać prawidłowe żądanie logowania.  
  
2.  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Wywołuje metodę w celu utworzenia żądania logowania ze wszystkich właściwości skonfigurowanych w module.  
  
3.  Wywołuje metodę w celu podniesienia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>zdarzenia. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> Możesz anulować przekierowanie lub zmodyfikować komunikat żądania logowania w programie obsługi zdarzeń dla tego zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />jest <see langword="null" /> lub ciągiem pustym.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />jest <see langword="null" /> lub ciągiem pustym.  
  
—lub— 
<see cref="P:System.Web.HttpContext.Current" /> Właściwość jest<see langword="null" /> lub pusta.  
  
—lub— 
Właściwość kontekstu zwróconego przez <see cref="P:System.Web.HttpContext.Current" /> ma wartość lub <see langword="null" /> jest pusta. <see cref="P:System.Web.HttpContext.Response" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Adres URL identyfikujący adres, pod którym aplikacja jednostki uzależnionej (RP) chce otrzymywać odpowiedzi z usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreply jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreply nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>  
  
 Parametr wreply jest używany przez usługę STS do decydowania, gdzie należy przekierować użytkownika po wystawieniu tokenu. Nie zaleca się, aby usługa STS nie korzystała z tego adresu w celu przekierowania użytkownika, ponieważ takie przekierowanie ma luki w zabezpieczeniach. Adres odpowiedzi musi być zweryfikowany przez usługę STS (prawdopodobnie przez porównanie do zestawu wstępnie skonfigurowanych adresów odpowiedzi dla celów lub innej metody), aby upewnić się, że odpowiedź jest wysyłana do zrozumiałej znanej i bezpiecznej lokalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości na wartość, która nie jest prawidłowym bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreq, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Żądanie wystawiania tokenów wyrażone jako <see langword="&lt;wst:RequestSecurityToken&gt;" /> element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreq jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreq nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreqptr, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Adres URL określający lokalizację żądania wystawiania tokenów wyrażonego jako <see langword="&lt;wst:RequestSecurityToken&gt;" /> element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreqptr jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreq nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości na wartość, która nie jest prawidłowym bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy komunikacja z usługą tokenu zabezpieczającego (STS) musi korzystać z protokołu HTTPS.</summary>
        <value><see langword="true" />Jeśli komunikacja z usługą STS musi być zabezpieczona przy użyciu protokołu HTTPS; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wres, który ma być używany w żądaniach logowania WS-Federation ("wsignin 1.0").</summary>
        <value>Identyfikator URI, który identyfikuje dostęp do zasobu, jednostki uzależnionej (RP) do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast tego parametru należy użyć parametru wtrealm, który <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> jest ustawiany przez właściwość.  
  
 Parametr wres jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pusty ciąg, Parametr wres nie zostanie uwzględniony w żądaniu logowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A>  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po odebraniu tokenu zabezpieczającego z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać procedurę obsługi zdarzeń, aby zmodyfikować token przed jego zweryfikowaniem. W programie obsługi zdarzeń można uzyskać dostęp do tokenu zabezpieczającego za <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> pomocą właściwości. Zdarzenie jest zdarzeniem do anulowania, można <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> ustawić właściwość na `true` w programie obsługi zdarzeń, aby zakończyć przetwarzanie komunikatu odpowiedzi logowania do usługi WS-Federation. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>  
  
 To zdarzenie jest wywoływane z wnętrza <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegata obsługi zdarzeń podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation ("wsignin 1.0") otrzymanego z usługi tokenu zabezpieczającego (STS). Jest on wywoływany tuż po przeprowadzeniu deserializacji tokenu zabezpieczającego z jednocześnie lub parametru wresultptr w komunikacie odpowiedzi logowania, ale przed zweryfikowaniem tokenu zabezpieczającego.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po sprawdzeniu tokenu zabezpieczającego otrzymanego z usługi tokenu zabezpieczającego (STS), ale przed utworzeniem tokenu zabezpieczeń sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać procedurę obsługi zdarzeń, aby zmodyfikować podmiot zabezpieczeń utworzony podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation z usługi tokenu zabezpieczającego (STS), zanim zostanie on użyty do utworzenia tokenu sesji. W programie obsługi zdarzeń można uzyskać dostęp do podmiotu zabezpieczeń za <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> pomocą właściwości. Zdarzenie jest zdarzeniem do anulowania, można <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> ustawić właściwość na `true` w programie obsługi zdarzeń, aby zakończyć przetwarzanie komunikatu odpowiedzi logowania do usługi WS-Federation. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>  
  
 To zdarzenie jest wywoływane z wnętrza <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegata obsługi zdarzeń podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation ("wsignin 1.0") otrzymanego z usługi tokenu zabezpieczającego (STS). Jest on wywoływany tuż po sprawdzeniu tokenu zabezpieczającego, który został przeszeregowany z jednocześnie lub parametru wresultptr w komunikacie odpowiedzi logowania, a przed utworzeniem tokenu zabezpieczeń sesji.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy token zabezpieczający sesji został utworzony na podstawie tokenu zabezpieczającego otrzymanego z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać procedurę obsługi zdarzeń, aby zmodyfikować token sesji przed użyciem go do ustawienia podmiotu zabezpieczeń wątku i jest zapisywana w pliku cookie sesji. W programie obsługi zdarzeń dostęp do tokenu sesji można uzyskać za pomocą <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. Można określić, czy plik cookie sesji ma być zapisany przez ustawienie <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> właściwości.  
  
 To zdarzenie jest wywoływane z wnętrza <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegata obsługi zdarzeń podczas przetwarzania komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation ("wsignin 1.0") otrzymanego z usługi tokenu zabezpieczającego (STS). Jest on wywoływany tuż po sprawdzeniu tokenu zabezpieczającego, który został deserializowany z jednocześnie lub parametru wresultptr w komunikacie odpowiedzi logowania, a przed ustawieniem <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> podmiotu zabezpieczeń oświadczeń (i <xref:System.Web.HttpContext.User%2A> właściwością <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Aby działały sesje w trybie referencyjnym, firma Microsoft zaleca dostarczenie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> procedury obsługi dla zdarzenia w pliku Global.asax.cs i <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> ustawienie właściwości dla tokenu przesłanego we <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. Zapewni to, że token sesji działa w trybie odwołania dla każdego żądania i jest preferowany tylko przez ustawienie <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> właściwości w module uwierzytelniania sesji.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Token zabezpieczeń sesji, który został utworzony na podstawie komunikatu odpowiedzi logowania za pomocą protokołu WS-Federation z usługi STS.</param>
        <param name="isSession"><see langword="true" />Aby napisać plik cookie reprezentujący sesję dołączoną do odpowiedzi; w przeciwnym razie. <see langword="false" /></param>
        <summary>Ustawia podmiot zabezpieczeń wątku i opcjonalnie zapisuje plik cookie sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z potoku przetwarzania żądań zaimplementowanego <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> w delegatze obsługi zdarzeń. Ta metoda wykonuje następujące czynności:  
  
1.  Wywołuje metodę w celu podniesienia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>zdarzenia. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> Można użyć tego zdarzenia, aby zmodyfikować token sesji przed jego użyciem do ustawienia podmiotu zabezpieczeń wątku i zapisania go w pliku cookie sesji i określić, czy plik cookie sesji ma zostać zapisany.  
  
2.  Wywołuje metodę na skonfigurowanym module uwierzytelniania sesji (<xref:System.IdentityModel.Services.SessionAuthenticationModule>), aby ustawić podmiot zabezpieczeń wątku i opcjonalnie zapisać plik cookie sesji. <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sessionToken" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zalogowaniu się użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie jest ogłaszane na stronie logowania, formant na stronie spowoduje zgłoszenie tego zdarzenia, a nie tego modułu.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz po usunięciu sesji podczas wylogowywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metody z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> wewnątrz metody podczas wylogowywania z sesji w jednostce uzależnionej (RP). Zdarzenie nie zostało zgłoszone podczas logowania federacyjnego za pomocą <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Możesz dodać procedurę obsługi zdarzeń, aby wykonać dodatkowe przetwarzanie, które jest potrzebne aplikacji po usunięciu pliku cookie sesji.  
  
 To zdarzenie nie jest gwarantowane do wywołania dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład dlatego, że to zdarzenie nigdy nie zostanie zgłoszone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM zapisuje tę wartość w parametrze wctx w żądaniu logowania przy użyciu protokołu WS-Federation. Jednak moduł nie używa go podczas przetwarzania żądań logowania lub odpowiedzi logowania. Można ustawić dowolną wartość. Nie musi być unikatowa. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metodę.</param>
        <summary>Wykonuje logowanie do usługi tokenu zabezpieczającego (STS) za pomocą protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja domyślna wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodę w celu przeprowadzenia logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość kontekstu specyficzną dla aplikacji, która ma zostać uwzględniona w parametrze wctx w żądaniach logowania za pomocą protokołu WS-Federation.</summary>
        <value>Wartość kontekstu specyficznego dla aplikacji, która ma zostać uwzględniona w parametrze wctx dla żądań logowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy metoda jest wywoływana, wygenerowany komunikat logowania zawiera parametr wctx o następującym formacie: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> jest przechowywana `cx` w parametrze. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>można wywołać bezpośrednio z kodu. Jest również wywoływana, gdy WSFAM wykonuje przekierowania pasywnego, a także wtedy, gdy <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Metoda <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> lub metoda jest wywoływana przez kod aplikacji.  
  
 Mimo że WSFAM zapisuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> wartość w komunikatach żądania logowania, jeśli wartość jest używana przez aplikację podczas przetwarzania odpowiedzi, należy zapewnić logikę wyodrębniania z parametru wctx w komunikacie dotyczącym logowania.  
  
 Aby uzyskać więcej informacji na temat formatu i przetwarzania parametru wctx, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, gdy wystąpi błąd podczas logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie jest ogłaszane na stronie logowania, formant na stronie spowoduje zgłoszenie tego zdarzenia, a nie tego modułu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed usunięciem sesji podczas wylogowywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metody z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> wewnątrz metody podczas wylogowywania z sesji w jednostce uzależnionej (RP). Zdarzenie nie zostało zgłoszone podczas logowania federacyjnego za pomocą <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Można dodać procedurę obsługi zdarzeń, aby wykonać dodatkowe przetwarzanie, które jest potrzebne aplikacji przed usunięciem pliku cookie sesji. Można odczytać <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> właściwość w programie obsługi zdarzeń, aby określić, czy wylogowanie jest wynikiem odebrania komunikatu żądania oczyszczenia logowania protokołu WS-Federation ("wsignoutcleanup 1.0") z usługi tokenu zabezpieczającego (STS) lub od tego, czy został on zainicjowany RP.  
  
 To zdarzenie nie jest gwarantowane do wywołania dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład dlatego, że to zdarzenie nigdy nie zostanie zgłoszone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania zawierający wszystkie dodatkowe parametry, które mają być wysłane w żądaniach logowania za pomocą protokołu WS-Federation ("wsignin 1.0").</summary>
        <value>Fragment adresu URL, który zawiera dodatkowe parametry komunikatu w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;paramN = valueN</c>. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do wysyłania dodatkowych parametrów w żądaniu logowania. Mogą to być parametry specyficzne dla aplikacji, które nie są jednym z parametrów określonych przez protokół WS-Federation. Aby usunąć dodatkowe parametry z żądania, ustaw właściwość na pusty ciąg.  
  
 To ustawienie można zastąpić dla każdego żądania HTTP przez dodanie procedury obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia. To zdarzenie jest wywoływane tuż przed przekierowaniem modułu do usługi tokenu zabezpieczającego (STS) przy użyciu komunikatu żądania logowania WS-Federation. Usługa STS jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> .</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wylogowuje z bieżącej sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję.  
  
 Brak komunikatu żądania wylogowania ("wsignout 1.0") do usługi tokenu zabezpieczającego (STS). Aby wylogować się w usłudze STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rejestruje bieżącą sesję i żąda przekierowania z powrotem do adresu URL określonego w bieżącym żądaniu HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję i przekierowuje przeglądarkę z powrotem do adresu URL określonego w bieżącym żądaniu HTTP.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> Wywołuje metodę `redirectUrl` z parametrem ustawionym na adres URL bieżącego żądania.  
  
 Brak komunikatu żądania wylogowania ("wsignout 1.0") do usługi tokenu zabezpieczającego (STS). Aby wylogować się w usłudze STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest"><see langword="true" />Jeśli żądanie zostało zainicjowane przez protokół IP-STS za pośrednictwem komunikatu żądania oczyszczania usługi WS-Federation ("wsignoutcleanup 1.0"); w przeciwnym razie. <see langword="false" /></param>
        <summary>Rejestruje bieżącą sesję i wywołuje odpowiednie zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje rzeczywistą ilość pracy, usuwając bieżącą sesję i wywołując odpowiednie zdarzenia wylogowania. Metoda wykonuje następujące czynności:  
  
1.  Wywołuje metodę w celu podniesienia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>zdarzenia. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> Program obsługi zdarzeń może zapewnić wszelkie niezbędne przetwarzanie przed usunięciem sesji. Właściwość jest ustawiana zgodnie `isIPRequest` z parametrem. <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType>  
  
2.  <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> Wywołuje metodę w Menedżerze uwierzytelniania bieżącej sesji, aby usunąć plik cookie sesji.  
  
     Wywołuje metodę w celu podniesienia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>zdarzenia. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>  
  
3.  Jeśli wystąpi błąd podczas przetwarzania wylogowania, wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metodę w celu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> podniesienia zdarzenia. Procedura obsługi zdarzeń może anulować przetwarzanie i uniemożliwić zwrócenie wyjątku do obiektu wywołującego<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Można wywołać <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> metodę `isIPRequest` z parametrem ustawionym `false` na wylogowanie się z sesji bez przekierowania. Metoda jest ostatecznie wywoływana przez wszystkie inne przeciążone <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody ( `isIPRequest` z parametrem ustawionym na `false`), aby wykonać obsługę wylogowywania. Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> metody `isIPRequest` z parametrem ustawionym `true` na wylogowanie się z sesji podczas przetwarzania komunikatu oczyszczania usługi WS-Federation ("wsignoutcleanup 1.0").  
  
 Brak komunikatu żądania wylogowania ("wsignout 1.0") do usługi tokenu zabezpieczającego (STS). Aby wylogować się w usłudze STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego powinna zostać przekierowana przeglądarka po usunięciu sesji.</param>
        <summary>Rejestruje bieżącą sesję i żąda przekierowania z powrotem do określonego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję i przekierowuje przeglądarkę z powrotem do określonego adresu URL.  
  
 Wywołuje metodę z parametrem i z `initiateSignoutCleanup` zestawem `false`. `redirectUrl` <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Brak komunikatu żądania wylogowania ("wsignout 1.0") do usługi tokenu zabezpieczającego (STS). Aby wylogować się w usłudze STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" />nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego powinna zostać przekierowana przeglądarka po wylogowaniu.</param>
        <param name="initiateSignoutCleanup">Zawsze ustawiony <see langword="false" />. Ustawienie tego parametru na <see langword="true" /> nie jest obsługiwane.</param>
        <summary>Rejestruje bieżącą sesję i żąda przekierowania z powrotem do określonego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącą sesję i przekierowuje przeglądarkę z powrotem do określonego adresu URL.  
  
 Wywołuje metodę z zestawem `false`parametrów. `initiateSignoutCleanup` <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>  
  
 Brak komunikatu żądania wylogowania ("wsignout 1.0") do usługi tokenu zabezpieczającego (STS). Aby wylogować się w usłudze STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="redirectUrl" />nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.NotImplementedException">Klasa <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> zgłasza ten wyjątek, jeśli <paramref name="initiateSignoutCleanup" /> jest <see langword="true" />. Nie ustawiaj tego parametru na <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uruchamiany, gdy wystąpi błąd podczas wylogowywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metody z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> wewnątrz metody podczas wylogowywania z sesji w jednostce uzależnionej (RP). Zdarzenie nie zostało zgłoszone podczas logowania federacyjnego za pomocą <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Zdarzenie jest zdarzeniem anulowania. Można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość w programie obsługi zdarzeń, aby zapobiec wystąpieniu wyjątku, który spowodował zwrócenie błędu do inicjatora wylogowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania zawierający wszystkie dodatkowe parametry, które mają zostać wysłane w żądaniach wylogowania usługi WS-Federation ("wsignout 1.0").</summary>
        <value>Fragment adresu URL, który zawiera dodatkowe parametry komunikatu w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;paramN = valueN</c>. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutQueryString` atrybutu [ &lt;elementu wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracyjnym. Ma on zawierać wszystkie parametry specyficzne dla aplikacji, które mają być wysyłane w żądaniu wylogowania usługi WS-Federation. Aby usunąć te parametry, można ustawić właściwość na pusty ciąg.  
  
 WSFAM nie korzysta bezpośrednio z tej właściwości; można jednak przekazać ją do <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metody, aby utworzyć kompletny adres URL logowania do usługi WS-Federation, który będzie mógł być używany przez swój kod.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> .</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply do użycia podczas żądań wylogowania z usługi WS-Federation ("wsignout 1.0").</summary>
        <value>Adres URL, na który klient powinien zostać przekierowany przez usługę tokenu zabezpieczającego (STS) po zalogowaniu się za pomocą protokołu WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutReply` atrybutu [ &lt;elementu wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracyjnym. Jest on przeznaczony do reprezentowania parametru wreply w żądaniu wylogowania do usługi WS-Federation.  
  
 Parametr wreply jest opcjonalny. Jeśli właściwość jest ustawiona na `null` lub pustego ciągu, parametr wreply nie zostanie uwzględniony w żądaniu wylogowania. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A>  
  
 WSFAM nie korzysta bezpośrednio z tej właściwości. Można jednak przekazać go do <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody podczas przeprowadzania logowania za pośrednictwem protokołu WS-Federation z kodu lub przekazać go <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> do metody w celu utworzenia kompletnego adresu URL logowania do usługi WS-Federation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> , czy właściwości i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> są niepuste i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> , jeśli właściwość jest <see langword="true" />, że identyfikatory URI określone dla i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> są zgodne z protokołem HTTPS.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />jest <see langword="null" /> lub ciągiem pustym.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />jest <see langword="null" /> lub ciągiem pustym.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />jest <see langword="true" /> i<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> nie jest zgodny z protokołem HTTPS.  
  
—lub— 
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />jest <see langword="true" /> i<see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> nie jest zgodny z protokołem HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> , który będzie używany podczas deserializacji komunikatów odpowiedzi logowania za pomocą protokołu WS-Federation w celu uzyskania tokenu wystawionego przez usługę tokenu zabezpieczającego (STS).</summary>
        <value>Obiekt <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> , który ma być używany podczas deserializacji komunikatów odpowiedzi logowania za pomocą protokołu WS-Federation w celu uzyskania tokenu wystawionego przez usługę tokenu zabezpieczającego (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> .</exception>
      </Docs>
    </Member>
  </Members>
</Type>
