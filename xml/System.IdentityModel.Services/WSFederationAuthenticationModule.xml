<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="90ede996a35309e03f389ae47ae8c35ec3d5ce60" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest moduł protokołu HTTP, który służy do zabezpieczania aplikacji ASP.NET, wymuszając uwierzytelnianie federacyjne ustawień na żądań przychodzących. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Jest głównym moduł, który oferuje WIF fabrycznej do obsługi dostępu na podstawie oświadczeń tożsamości w aplikacji ASP.NET.  
  
 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Wywołuje kilka zdarzeń, dzięki czemu deweloperzy ASP.NET zmianę domyślnego zachowania i sterowanie szczegóły jak odbywa się uwierzytelnianie i przetwarzanie oświadczeń. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Funkcji jest podzielony na metody specyficzne dla zadania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> Klasa implementuje moduł protokołu HTTP, znane jako moduł uwierzytelniania protokołu WS-Federation (WSFAM). WSFAM zaimplementowano fabrycznej Windows Identity Foundation (WIF). WSFAM jest dodawany do potoku platformy ASP.NET, tworząc wpis w pliku web.config. Dziedziczy <xref:System.IdentityModel.Services.HttpModuleBase>, który implementuje <xref:System.Web.IHttpModule>. Rejestruje ze środowiskiem uruchomieniowym ASP.NET w celu nasłuchiwania <xref:System.Web.HttpApplication.EndRequest> i <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzenia. Nasłuchiwanie <xref:System.Web.HttpApplication.EndRequest> zdarzeń, umożliwia WSFAM przekierowywać klientów na usługę tokenu zabezpieczającego (STS) do uzyskania tokenu zabezpieczającego, gdy autoryzacja nie powiedzie się do żądanego zasobu. Nasłuchiwanie <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzeń umożliwia WSFAM do monitorowania żądań HTTP na odpowiedź z usługi STS, który zawiera żądanego tokenu. Takie token jest obecny i prawidłowe, tworzy wystąpienie <xref:System.Security.Claims.ClaimsPrincipal> dla tego uwierzytelnionego użytkownika za pomocą oświadczeń, które znajdują się w tokenie.  
  
 Używając WSFAM sesji zarządzania są dostarczane przez moduł uwierzytelniania sesji (SAM), który jest wystąpieniem programu <xref:System.IdentityModel.Services.SessionAuthenticationModule> klasy, lub pochodzić od niego. SAM jest także dodawane do potoku platformy ASP.NET w pliku konfiguracji. SAM monitoruje żądania dotyczące plików cookie uwierzytelniania (sesja). Jeśli te pliki cookie są obecne i prawidłowe, moduł wyodrębnia <xref:System.Security.Claims.ClaimsPrincipal> dla tego uwierzytelnionego użytkownika z <xref:System.IdentityModel.Tokens.SessionSecurityToken> i ustawia <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> właściwości i podstawowe wątku <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości.  
  
 WSFAM zawiera:  
  
-   Zdolność do zewnętrzny uwierzytelniania usługę tokenu zabezpieczającego (STS) za pomocą protokołu WS-Federation aplikacji ASP.NET. Federacja jest między co najmniej jeden obszarów tożsamości i obejmują STSs wiele tożsamości.  
  
-   Tożsamość opartego na oświadczeniach dla aplikacji ASP.NET. Podczas uwierzytelniania WSFAM kompilacje podmiot zabezpieczeń oświadczeń w tokenie zabezpieczającym wysyłane przez usługę STS i ustawia podmiot zabezpieczeń tego oświadczenia jako podmiot zabezpieczeń wątku. Następnie można tego podmiotu zabezpieczeń podjęcie dalszych autoryzacji, prezentacji i logiki decyzje dotyczące użytkownika, który reprezentuje w kodzie.  
  
 WSFAM udostępnia kilka właściwości, które dostarcza domyślne parametry komunikatu do użycia w odpowiedzi na żądania logowania i wylogowywania WS-Federation. Te właściwości są zwykle inicjowane z [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracji. Najważniejsze te właściwości są:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> Właściwość, która określa adres usługi tokenu zabezpieczającego (STS) do przesyłania żądań logowania i wylogowywania WS-Federation.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> Właściwość, która określa parametr wtrealm do użycia w WS-Federation żądań logowania. Parametr wtrealm identyfikuje obszar zabezpieczeń jednostki uzależnionej aplikacji firm (RP) do usługi STS.  
  
 Parametry logowania komunikat można także zmienić na podstawie danego żądania przez zapewnienie obiektu delegowanego obsługi zdarzeń dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń.  
  
 Dwie właściwości kontrolują zachowanie modułu. Obu tych właściwości są zwykle także inicjowane z `<wsFederation>` element w konfiguracji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> Właściwość określa, czy do uwierzytelniania modułu należy wykonać pasywnym przekierowuje do usługi STS.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> Właściwość określa, czy sesji ma być trwały. Jeśli ta właściwość ma wartość PRAWDA, SAM jest używana podczas zapisu pliku cookie sesji do klienta. Kolejne żądania z klienta SAM zapewnia uwierzytelnianie przy użyciu tokenu utrwalone w pliku cookie sesji.  
  
 WSFAM podnosi kilka zdarzeń podczas logowania i wylogowywania, co umożliwia deweloperów platformy ASP.NET zmianę domyślnego zachowania modułu i sterowanie szczegóły jak odbywa się uwierzytelnianie i przetwarzanie oświadczeń.  
  
 Następujące zdarzenia są wywoływane przed wysłaniem do serwera STS protokołu WS-Federation żądania logowania:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Wywoływane, gdy włączono przekierowanie pasywnego i autoryzacja nie powiedzie się do żądanego zasobu.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Wywoływane bezpośrednio przed WSFAM wysyła WS-Federation żądania logowania do usługi STS. To zdarzenie służy do zmiany parametrów w żądaniu logowania.  
  
 Następujące zdarzenia są zgłaszane po odebraniu odpowiedzi logowania (wystawiony token zabezpieczający) z usługi STS:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Wywoływane tuż po tokenu zabezpieczającego wysyłane przez usługę STS jest do odczytu z odpowiedzi.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Wywoływane tuż po zweryfikowaniu tokenu. To zdarzenie służy do filtrowania, Przekształć lub dodawanie oświadczenia do podmiot zabezpieczeń oświadczeń (<xref:System.Security.Claims.ClaimsPrincipal>) utworzone na podstawie tokenu zabezpieczającego.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Wywoływane bezpośrednio przed tokenu sesji (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) utworzone na podstawie oświadczenia podmiotu zabezpieczeń jest używany do ustawiania główny wątek i bieżącego użytkownika i jest zapisywany w pliku cookie sesji. Zapewnia możliwość modyfikacji tokenu sesji lub Włącz lub wyłącz zapisywania pliku cookie sesji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Wywoływane na końcu uwierzytelniania tylko po użytkownika głównym i bieżącego wątku.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Wywoływane w przypadku wystąpienia wyjątku podczas logowania. Możesz anulować żądanie i zapobiec wyjątek zwracanych do obiektu wywołującego.  
  
 Podpisując poza sesji lub podczas przetwarzania żądania czyszczenia wylogowania WS-Federation (wsignoutcleanup1.0) wywoływane są następujące zdarzenia:  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Wywoływane bezpośrednio przed zamknięciem sesji jest usuwana, aby włączyć można wykonać oczyszczania, który może być zależna od sesji lub anulować wylogowania.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Wywoływane zaraz po usunięciu sesji.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Wywoływane w przypadku wystąpienia wyjątku podczas wyrejestrowywania. Możesz anulować wylogowania i zapobiec wyjątek zwracanych do obiektu wywołującego.  
  
> [!NOTE]
>  Wylogowania zdarzenia nie są wywoływane po wylogowaniu się na usługi STS przez wywołanie metody <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Istnieją dwa sposoby zalogowanie się do usługi tokenu Zabezpieczającego przy użyciu WSFAM. Pierwsza to przez włączenie pasywnym przekierowuje za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości. W takim przypadku, gdy autoryzacja nie powiedzie się do żądanego zasobu zamiast zwracanie `401:Access Denied` odpowiedzi do klienta, WSFAM tworzy komunikat żądania logowania WS-Federation z jego właściwości i przekierowuje klienta do usługi STS można pobrać tokenu zabezpieczającego. Drugim sposobem jest jawnie przekierowuje klienta do usługi STS przez wywołanie metody <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody z kontrolki niestandardowej w aplikacji lub strony sieci web. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> Metoda również używa właściwości WSFAM do utworzenia żądania logowania.  
  
 Żadnego z przeciążone <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metod można użyć, aby wylogować się z sesją. Spowoduje to usunięcie pliku cookie sesji na komputerze klienckim. Do usługi STS nie wysyła komunikat wylogowania WS-Federation ("wsignout1.0"). W celu wylogowania w usługi STS, należy użyć <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 WSFAM obsługuje żądania czyszczenia wylogowania WS-Federation ("wsignoutcleanup1.0"), przez usunięcie jego sesji z klientem. Jeśli nie ustawiono parametru wreply w komunikacie oczyszczania wylogowania, WSFAM zwraca obraz zielony znacznik wyboru do usługi STS wysłanych wiadomości. Ta funkcja może być używana przez usługę STS jako potwierdzenia, że RP ukończono jego wylogowania.  
  
 WSFAM udostępnia jego funkcje — na przykład jego żądanie przetwarzania potoku — za pomocą kilku metod specyficzne dla zadania. Można zastąpić tych metod w klasach pochodnych, aby zmienić zachowanie WSFAM.  
  
 Mają być używane, moduł musi zostać dodany do potoku jak następujący kod XML:  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Po skonfigurowaniu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> informuje o zdarzeniach na różnych etapach przetwarzania żądania HTTP. Deweloperów platformy ASP.NET może obsługiwać te zdarzenia w pliku global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez konstruktorów w klasach pochodnych zainicjować <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wauth do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Identyfikator URI, który określa typ uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wauth jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wauth nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł jest określenie, czy powinien spowodować przekierowanie użytkownika do skonfigurowanych wystawców do uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> Zdarzenie jest zgłaszane, gdy autoryzacja nie powiodła się dla żądania HTTP. Jest wywoływane z poziomu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> obiektu delegowanego obsługi zdarzeń za pomocą wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> metody.  
  
 Można ustawić <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> właściwości do kontrolowania, czy żądanie jest przekierowywane do dostawcy tożsamości. Platformę inicjuje tę właściwość, aby `false` Jeśli użytkownik został już uwierzytelniony. W takim przypadku ustawienie właściwości `true` może spowodować pętlę cykliczną z usługi STS.  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Zdarzenia można zmodyfikować adres URL lub Anuluj przekierowania.  
  
 Obsługa tego zdarzenia w aplikacji ASP.NET, Utwórz metodę o nazwie `WSFederationAuthentication_AuthorizationFailed` w pliku global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem protokołu WS-Federation logowania odpowiedzi. Jeśli komunikat jest komunikatem oczyszczania wylogowania WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat odpowiedzi logowania są wysyłane do jednostki uzależnionej (RP) przez usługę tokenu zabezpieczającego (STS) w odpowiedzi na komunikat żądania logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem protokołu WS-Federation logowania odpowiedzi. Jeśli komunikat jest komunikatem oczyszczania wylogowania WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <returns>
          <see langword="true" /> Jeśli określone żądanie HTTP zawiera POST formularza, w którym parametr wa jest ustawiony na "wsignout1.0", a parametr wresult nie jest pusty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań, aby ustalić, czy przychodzące żądanie HTTP post formularza, który zawiera komunikat odpowiedzi logowania WS-Federation.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> przeciążenia z `onPage` zestaw parametrów `false` aby wskazać, że wywołanie nie pochodzi podczas przetwarzania strony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <param name="onPage">
          <see langword="true" /> Jeśli wywołanie pochodzi podczas przetwarzania żądania strony. <see langword="false" /> Jeśli element wywołujący jest moduł protokołu HTTP. Ten parametr określa, jak zakończyć przetwarzania lub wysłać przekierowania, jeśli przychodzący komunikat jest komunikatem wylogowania oczyszczania WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Zwraca wartość wskazującą, czy określone żądanie HTTP jest komunikatem protokołu WS-Federation logowania odpowiedzi. Jeśli komunikat jest komunikatem oczyszczania wylogowania WS-Federation ("wsignoutcleanup1.0"), ta metoda przetwarza żądanie.</summary>
        <returns>
          <see langword="true" /> Jeśli określone żądanie HTTP zawiera post formularza, w której parametr wa jest ustawiony na "wsignout1.0", a parametr wresult nie jest pusty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> przeciążenia, aby ustalić, czy przychodzące żądanie HTTP POST, który zawiera komunikat odpowiedzi logowania WS-Federation formularza.  
  
 Domyślna implementacja wykonuje następujące działania:  
  
-   Jeśli żądanie przychodzące jest formularz POST, wywołuje metodę <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> metodę, aby określić, czy POST formularza zawiera znak w odpowiedzi.  
  
-   Jeśli żądania przychodzącego, jeśli nie jest formularzem POST, a żądanie zawiera żądanie czyszczenia wylogowania WS-Federation (parametr wa jest "wsignoutcleanup1.0"), przeprowadzane jest oczyszczanie wylogowania. W takim przypadku <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> wywołania metody (z parametrem ustawioną `true` wskazująca wylogowania oczyszczania) Aby wylogować się z sesją. Powoduje to również wylogowania zdarzenia, które mają być zgłaszane.  
  
     Następnie jeśli wylogowania żądania czyszczenia zawiera parametr wreply, klient zostanie przekierowany do adresu URL zwrócone przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> metody; w przeciwnym razie zwracany jest obraz zielony znacznik wyboru do usługi STS. Po otrzymaniu tego obrazu można przez usługę STS jako potwierdzenie, że wylogowania żądanie oczyszczania zostało odebrane i pomyślnie przetworzone przez RP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx rejestracja WS-Federation w żądaniu; Jednak moduł nie używa ich podczas przetwarzania żądań logowania lub logowania odpowiedzi. Możesz ustawić dowolną wartość. Nie muszą być unikatowe.</param>
        <param name="returnUrl">Adres URL, do której moduł powinien zwrócić podczas uwierzytelniania.</param>
        <param name="rememberMeSet">WSFAM zapisuje tę wartość w parametrze wctx rejestracja WS-Federation w żądaniu; Jednak moduł nie używa ich podczas przetwarzania żądań logowania lub logowania odpowiedzi. Można ją ustawić albo <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Tworzy znak WS-Federation w komunikacie żądania przy użyciu parametrów WS-Federation skonfigurowane w module.</summary>
        <returns>Komunikat żądania logowania WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy WS-Federation logowania żądanie reprezentowanego przez <xref:System.IdentityModel.Services.SignInRequestMessage> obiektu. Właściwości nowego <xref:System.IdentityModel.Services.SignInRequestMessage> obiektu są ustawione w następujący sposób:  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> Właściwość (parametr wctx) ma ustawioną wartość utworzone przy użyciu parametrów metody.  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> Właściwość (parametr wct) jest ustawiona na bieżącą godzinę.  
  
-   Wszystkie inne właściwości są ustawiane przy użyciu równoważne właściwości bieżącego wystąpienia.  
  
 Parametry przekazane do metody są używane do tworzenia parametru komunikat wctx. Jest to ciąg o następującym formacie: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   `ru` Wartość jest równa wartości `returnUrl` parametr przekazany do metody i określa adres URL, że moduł powinny być kierowane przez przeglądarkę, aby następujące pomyślne uwierzytelnienie. Jest to jedyna wartość przechowywana w ciągu wctx, który jest używany przez WSFAM. Wywołania modułu <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodę, aby wyodrębnić tej wartości z parametru wctx podczas przetwarzania WS-Federation logowania odpowiedzi. Go nie należy mylić z parametrem komunikat wreply jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwości i zapewniające adres, pod planu odzyskiwania, z którym usługa tokenu zabezpieczającego (STS) powinny być kierowane odpowiedzi.  
  
-   `cx` Parametr ma ustawioną wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> właściwości. Ta właściwość jest narażony na umożliwiają skonfigurowanie żadnego kontekstu zdefiniowanym przez aplikację, które mają być przechowywane w ciągu wctx; jednak WSFAM nie ujawnia metody wyodrębnić tę wartość w odpowiedzi. Jeśli wartość jest wymagane przez aplikację, musisz podać kod, aby przeanalizować składni ciągu wctx i odczytać tę wartość podczas przetwarzania odpowiedzi. Może to zrobić przez zastąpienie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metody.  
  
-   Ani `rm` wartość, która jest ustawiona na wartość `rememberMeSet` parametru ani `id` parametr, który ma ustawioną wartość `uniqueId` parametru są używane przez WSFAM. Te opcje można ustawić dowolną wartość.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> Właściwość jest <see langword="null" /> lub ciąg pusty.  
  
 —lub—  
  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> Właściwość jest <see langword="null" /> lub ciąg pusty.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">Adres URL STS komunikat żądania wylogowania WS-Federation. Nie może być <see langword="null" />.</param>
        <param name="replyUrl">Adres URL, który można wysłać jako wartość wreply w komunikacie żądania wylogowania.</param>
        <summary>Wylogowuje na określonym usługę tokenu zabezpieczającego (STS) za pomocą protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody, aby wysłać wiadomość WS-Federation wylogowania żądania do określonej usługi STS. Opcjonalnie możesz podać wartość parametru wreply w żądaniu wylogowania.  
  
 Metoda wykonuje następujące czynności:  
  
1.  Tworzy komunikat żądania wylogowania WS-Federation przy użyciu określonych parametrów.  
  
2.  Wywołania <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metoda SAM można usunąć pliku cookie sesji.  
  
3.  Przekierowuje do usługi STS za pomocą komunikatu żądania wylogowania w pierwszym kroku.  
  
 Brak zdarzeń wylogowania: <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, lub <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> są wywoływane przez tę metodę. Można usunąć sesji bez wysyłania komunikatu żądania wylogowania do usługi STS, wywoływanie jednego z przeciążone <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody.  
  
> [!NOTE]
>  Aby wykonać pasywny wylogowania przy użyciu tokenu sesji, moduł opiera się na wartości, które były przechowywane w <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> właściwości podczas logowania, aby uzyskać więcej informacji, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> nie jest <see langword="null" /> i nie jest bezwzględnym identyfikatorem URI.  
  
 —lub—  
  
 <paramref name="replyUrl" /> nie jest <see langword="null" /> i nie jest bezwzględnym identyfikatorem URI.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wfresh do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Żądany maksymalny wiek żądania uwierzytelniania w minutach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wfresh jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wfresh nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Adres wystawcy. Adres zabezpieczenia tokenu usługi (STS), do którego należy przekierować żądania.</param>
        <param name="signOutReply">Adres URL, który określa adres, aby powrócić do po wylogowania. Spowoduje to ustawienie parametru wreply wylogowania żądania. Może być <see langword="null" /> lub jest pusty, jeśli żadnego parametru wreply powinny być uwzględnione w wygenerowanym żądanie wylogowania. Powinno to być bezwzględnym identyfikatorem URI.</param>
        <param name="signOutQueryString">Parametrów ciągu zapytania dodatkowe, które mają zostać uwzględnione w żądaniu wylogowania. Może być <see langword="null" /> lub jest pusty, jeśli jest to dodatkowe nie są uwzględnione w wygenerowanym żądanie wylogowania parametry. Powinno to być względnym identyfikatorem URI.</param>
        <summary>Zwraca adres URL reprezentujący WS-Federation wylogowania żądania skierowane do określonego wystawcę i zawiera parametr wreply określony oraz podane dodatkowe parametry.</summary>
        <returns>Adres URL, który zawiera WS-Federation passive wylogowania żądanie skompilowanego przy użyciu określonych parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W adresie URL, który jest zwracany: podstawowy identyfikator URI ma ustawioną wartość `issuer`parametr wa jest ustawiony na "wsignout1.0"; ustawiono parametr wreply `signOutReply`; i parametrów określonych w `signOutQueryString` występują jako parametrów ciągu zapytania dodatkowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">Adres URL, który określa adres wynik wystawiania.</param>
        <summary>Pobiera wynik wystawiania (zazwyczaj wystawiony token) z określonym adresem URL. Rozpoznaje adres URL określony w parametrze wresultptr w komunikacie odpowiedzi logowania.</summary>
        <returns>Wynik wystawiania przywoływany przez adres URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływane przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> metody w potoku przetwarzania do rozpoznania adresu URL określonego w parametrze wresultptr w komunikacie odpowiedzi logowania odbierane z usługi tokenu zabezpieczającego (STS).  
  
 Domyślnie ta metoda zgłasza <xref:System.NotSupportedException>. Zastępuje tę metodę w klasie pochodnej do obsługi parametru wresultptr. Adres URL wskazuje wynik wystawiania, który powinien być jednym z następujących czynności: `<wst:RequestSecurityTokenResponse>` elementu `<wst:RequestSecurityTokenResponseCollection>` elementu, odpowiedź SOAP lub SOAP `<S:Fault>` elementu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ta metoda nie jest obsługiwana w klasie podstawowej. Należy go zastąpić w klasie pochodnej.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, które zawiera formularz POST, który zawiera komunikat odpowiedzi logowania WS-Federation.</param>
        <summary>Pobiera adres URL strony, która pierwotnie zażądano z logowania w odpowiedzi.</summary>
        <returns>Adres URL strony, który został pierwotnie żądanego przez klienta. To jest adres URL (na jednostkę uzależnioną) do której powinien przekierowany klient po pomyślnym logowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z potoku przetwarzania żądań ( <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> metody) Aby uzyskać adres URL strony na jednostkę uzależnioną (RP), aby przekierować klienta po pomyślnym zalogowaniu. Jest to zwykle adres URL zasobu planu odzyskiwania, z którym klient pierwotnie żądał dostępu.  
  
 Domyślnie WSFAM zapisuje zwrotny adres URL w parametrze komunikat wctx podczas wysyłania żądania logowania WS-Federation do usługi tokenu zabezpieczającego (STS). Zgodnie ze specyfikacją WS-Federation parametru wctx są zachowywane między jednostek za pomocą których wiadomości przekazuje i jest zwrócony bez zmian w komunikacie logowania odpowiedzi WS-Federation, który jest wysyłany przez usługę STS.  
  
 Domyślna implementacja pobiera adres URL zwracany z parametru wctx w odpowiedzi logowania. Aby uzyskać więcej informacji na temat formatu parametr wctx, który jest używany przez WSFAM, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje token zabezpieczający z określonego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi w logowania, z której mają być odczytywane tokenu.</param>
        <summary>Odczytuje token zabezpieczający z określonego komunikatu logowania odpowiedzi WS-Federation.</summary>
        <returns>Token zabezpieczający, który został odczytany z komunikatu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> metody, aby uzyskać token i odczytuje go za pomocą obsługi odpowiedniego z obsługi tokenu zabezpieczeń skonfigurowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z której mają być odczytywane tokenu.</param>
        <summary>Odczytuje token zabezpieczający z określonego żądania HTTP.</summary>
        <returns>Token zabezpieczający, który został odczytany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z potoku przetwarzania żądań na komunikat żądania logowania WS-Federation jako <xref:System.IdentityModel.Tokens.SecurityToken> obiektu.  
  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> metodę, aby pobrać <xref:System.IdentityModel.Services.SignInResponseMessage> obiekt, a następnie wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> przeciążenia.  
  
 Interpretować określonego typu żądania przy użyciu klasy pochodnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ciąg, który powinien zostać utrwalony z pliku cookie sesji w <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> właściwości.</summary>
        <returns>Ciąg w pliku cookie sesji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> Metoda jest wywoływana z potoku przetwarzania żądań, podczas przetwarzania wiadomości WS-Federation logowania odpowiedzi można pobrać wartości, które mają być przechowywane w <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> właściwość w pliku cookie sesji.  
  
 Można zastąpić tę metodę, aby podać wartość specyficzne dla aplikacji mają być przechowywane w pliku cookie. WSFAM nie ujawnia żadnych metod do pobierania wartości z pliku cookie. Należy podać logikę w aplikacji można odczytać wartości z pliku cookie, jeśli jest to potrzebne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> Jest właściwość <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie HTTP, z której mają być odczytywane komunikat odpowiedzi logowania. Żądanie powinno reprezentować POST formularza.</param>
        <summary>Odczytuje <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> obiektu reprezentowanego przez określone żądanie HTTP POST formularza.</summary>
        <returns>Komunikat odpowiedzi logowania, który został utworzony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> metody w potoku przetwarzania żądań na komunikat odpowiedzi logowania za pomocą formularza z żądania HTTP POST.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można odczytać wiadomość logowania odpowiedzi z określonego żądania.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Wylogowania żądanie czyszczenia.</param>
        <summary>Określa adres URL, do którego należy przekierować podczas przetwarzania WS-Federation wylogowania oczyszczania żądania (wsignoutcleanup1.0) zawierającej parametr wreply.</summary>
        <returns>Adres URL przekierowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potoku przetwarzania żądań, aby określić adres URL przekierowania po przetworzeniu żądania czyszczenia wylogowania WS-Federation. Jest wywoływana tylko jeśli wiadomość ma parametr wreply ( `signOutMessage` parametr ma <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> właściwość, która nie jest ani `null` ani puste).  
  
 Domyślna implementacja weryfikuje adres URL odpowiedzi zawarty w wiadomości ( <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> właściwości) względem adresu usługę tokenu zabezpieczającego (STS), który jest określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości. Poniższe warunki muszą być spełnione dla adresu URL odpowiedzi jest nieprawidłowy:  
  
1.  Adres URL odpowiedzi jest bezwzględny adres URL.  
  
2.  Adres URL odpowiedzi ma tego samego schematu jako Wystawca.  
  
3.  Adres URL odpowiedzi ma ten sam port, jako Wystawca.  
  
4.  Adres URL odpowiedzi ma tego samego hosta, jako wystawca albo adres URL odpowiedzi określa domenę podrzędną wystawcy.  
  
 Jeśli wszystkie te warunki są spełnione, zwracany jest adres URL odpowiedzi (odpowiedź); w przeciwnym razie adres URL określony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> zwracana jest właściwość.  
  
 Przesłonić tę metodę w celu udostępnienia dodatkowych weryfikacji dla adresu URL odpowiedzi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> ma <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> właściwość, która jest <see langword="null" /> lub jest pusty.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyodrębnia wystawionego tokenu z określonego komunikatu logowania odpowiedzi WS-Federation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi logowania w celu wyodrębnienia tokenu z. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <summary>Wyodrębnia wystawionego tokenu z określonego komunikatu logowania odpowiedzi WS-Federation.</summary>
        <returns>Ciąg, który zawiera kod XML, który reprezentuje wystawionego tokenu. Jest to <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli w komunikacie logowania w odpowiedzi nie ma parametru wresult <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> metoda jest wywoływana w celu uzyskania tokenu przy użyciu parametru wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="message" /> nie zawiera tokenu. (Nie zawiera prawidłowego parametru wresult lub wresultptr.)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat odpowiedzi logowania w celu wyodrębnienia tokenu z. Odpowiedź logowania zawiera token wystawiony przez usługę STS.</param>
        <param name="federationSerializer">Serializator WS-Federation na potrzeby zdeserializować komunikatu odpowiedzi logowania.</param>
        <summary>Wyodrębnia wystawionego tokenu z określonego komunikatu logowania odpowiedzi WS-Federation przy użyciu określonego serializator WS-Federation.</summary>
        <returns>Ciąg, który zawiera kod XML, który reprezentuje wystawionego tokenu. Jest to <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> elementu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru godz. pracy do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Adres dostawcy tożsamości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr godz. pracy jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr godz. pracy nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt aplikacji HTTP, który zawiera ten moduł.</param>
        <summary>Inicjuje modułu i przygotowuje je do obsługi zdarzeń z modułu [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] obiektu aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaje obsługę zdarzeń potoku platformy ASP.NET, zgodnie z poniższą tabelą.  
  
|Zdarzenie|Program obsługi|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Właściwości modułu, takich jak <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , są inicjowane z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje właściwości modułu na podstawie konfiguracji określonego przez <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> właściwość modułu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości modułu są inicjowane przy użyciu właściwości równoważne <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> obiekt określony przez <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> właściwości.  
  
 Można określić ustawienia w pliku konfiguracji za pomocą [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Przychodzące żądanie HTTP.</param>
        <summary>Pobiera wartość wskazującą, czy określone żądanie jest komunikatem protokołu WS-Federation logowania odpowiedzi.</summary>
        <returns>
          <see langword="true" /> Jeśli żądanie jest komunikatem protokołu WS-Federation logowania odpowiedzi; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> metody w potoku przetwarzania żądań, aby ustalić, czy przychodzące żądanie HTTP jest komunikatem protokołu WS-Federation logowania odpowiedzi.  
  
 Domyślna implementacja zwraca `true` , gdy parametr wa jest "wsignin1.0" i wreq i parametrów wreqptr nie oba ustawione.  
  
 Należy przesłonić tę metodę w klasach pochodnych w celu dodatkowego zweryfikowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator URI, który identyfikuje zamierzone wystawcy tokenu zabezpieczającego.</summary>
        <value>Identyfikator URI, który identyfikuje usługę tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana. Należy ją ustawić włączenie pasywnym przekierowania. Określa adres URL usługi tokenu zabezpieczającego (STS) do którego powinien zostać wydany żądania WS-Federation.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Próba ustawioną właściwość <see langword="null" /> lub pusty ciąg.  
  
 —lub—  
  
 Występuje, próba ustawienia właściwości na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Są to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> zdarzenia z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> Metoda implementuje usługi WS-Federation żądanie przetwarzania potoku. Jest ona dodawana do <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> zdarzenia w [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> metody.  
  
 Metoda wykonuje następujące działania:  
  
1.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> metodę, aby określić, czy otrzymano komunikat odpowiedzi logowania WS-Federation ("wsignin1.0"). Jeśli odpowiedź jest żądanie czyszczenia wylogowania WS-Federation ("wsignoutcleanup1.0"), <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> przetwarza wiadomości, kończy żądanie i przekierowuje klienta zgodnie z parametrów protokołu WS-Federation w żądaniu. Jeśli wiadomość nie jest odpowiedzi rejestrowania lub wyrejestrowywania żądanie czyszczenia, po prostu zwraca modułu; w przeciwnym razie wykonuje następujące czynności, aby przetworzyć odpowiedzi logowania.  
  
2.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> metodę deserializacji <xref:System.IdentityModel.Tokens.SecurityToken> obiektu z żądania.  
  
3.  Zgłasza <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> zdarzeń. Można anulować dalszego przetwarzania lub modyfikowania tokenu zabezpieczającego odebrane w procedurze obsługi dla tego zdarzenia. Program obsługi jest zwykle używane do modyfikowania <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> lub <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> właściwości.  
  
4.  Weryfikuje token zabezpieczający i tworzy <xref:System.Security.Claims.ClaimsPrincipal> obiektu na podstawie oświadczenia w tokenie zabezpieczającym.  
  
5.  Zgłasza <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> zdarzeń. Możesz anulować dalsze przetwarzanie, lub zmodyfikować podmiot zabezpieczeń oświadczeń w procedurze obsługi dla tego zdarzenia.  
  
6.  Używa modułu skonfigurowanych sesji uwierzytelniania (zabezpieczeń SAM) w celu utworzenia <xref:System.IdentityModel.Tokens.SessionSecurityToken> obiektu. (Skonfigurowanego Menedżera kont zabezpieczeń <xref:System.IdentityModel.Services.SessionAuthenticationModule> obiektu zwróconego przez <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> właściwości.) Tokenu sesji jest tworzony przy użyciu podmiot zabezpieczeń oświadczeń zwracanej w kroku 5. <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> i <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> właściwości są ustawiane za pomocą <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> i <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> właściwości <xref:System.IdentityModel.Tokens.SecurityToken> zwracane w kroku 3 i są weryfikowane przed bieżącym czasem i okres istnienia tokenu określony przez albo <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>lub <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> właściwość <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> obiektu w kolekcji programu obsługi tokenów używany przez WSFAM. Okres istnienia tokenu w sesji programu obsługi tokenów może zostać określony w konfiguracji za pomocą [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elementu. Uwaga: <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> właściwości skonfigurowane dla Menedżera kont zabezpieczeń nie jest używany program obsługi plików cookie.  
  
7.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> metody za pomocą tokenu sesji można zapisać pliku cookie sesji. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> Metoda zgłasza pierwszy <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. Można zmienić właściwości tokenu sesji lub określić, czy plik cookie powinien utrwalone w procedurze obsługi dla tego zdarzenia. Po wywołaniu zdarzenia metody następnie zapisuje plik cookie przy użyciu Menedżera kont zabezpieczeń.  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Zestawu w konfiguracji nie jest używana podczas zapisu pliku cookie.  
  
8.  Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> zdarzeń.  
  
9. Wywołania <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> metodę, aby pobrać strony planu odzyskiwania, do którego należy przekierować klienta. Domyślnie ta metoda odczytuje zwrotny adres URL z parametru wctx w odpowiedzi logowania. Aby uzyskać więcej informacji o sposobie WSFAM przechowuje zwrotny adres URL, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegowanego obsługi zdarzeń, gdy autoryzacja nie powiodła się.  
  
 Inicjuje <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> właściwości przed zgłoszeniem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> zdarzeń, aby zapobiec przekierowuje cykliczne, jeśli użytkownik ma już uwierzytelniony. Jeśli użytkownik jest już uwierzytelniony, właściwość jest inicjowana na `false` zapobiegające przekierowuje; w przeciwnym razie wartość jest ustawiana na `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Są to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="args">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzenia z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest ignorowana, chyba że <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> jest właściwość `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Źródło zdarzenia. Są to <see cref="T:System.Web.HttpApplication" /> obiektu.</param>
        <param name="e">Dane zdarzenia.</param>
        <summary>Obsługuje <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> zdarzenia z [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] potoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jest to obsługę, która jest pusta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody zaraz po usunięciu sesji.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody bezpośrednio przed zamknięciem sesji zostanie usunięty.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metodę, jeśli wystąpi wyjątek podczas przetwarzania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy moduł jest włączony do inicjowania przekierowania protokołu WS-Federation.</summary>
        <value>
          <see langword="true" /> Aby włączyć przekierowuje; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł nie będzie inicjował przekierowania protokołu WS-Federation, gdy ten tryb nie jest włączone. Jeśli ta właściwość jest `true`, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> do adresu URL z zabezpieczeń tokenu usługi (STS) do którego mają być przekierowywane obiekt wywołujący musi być ustawiona właściwość.  
  
> [!WARNING]
>  Kod aplikacji może jawnie wystawiać WS-Federation żądań logowania za pomocą <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody, niezależnie od wartości <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy plik cookie sesji trwałe wydano dla pomyślnego uwierzytelnienia.</summary>
        <value>
          <see langword="true" /> Wystawianie pliku cookie sesji trwały; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. To zdarzenie jest wywoływane z żądanie przetwarzania potoku podczas przetwarzania wiadomości WS-Federation logowania odpowiedzi z usługi tokenu zabezpieczającego (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wp do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Adres URL, który identyfikuje zasad do użycia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wp parametr jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wp nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wtrealm do zastosowania w przypadku żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Identyfikator URI, który identyfikuje uzależnionej (RP) do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana dla żądań logowania WS-Federation. Należy ją ustawić włączenie pasywnym przekierowania. Identyfikator URI identyfikuje RP do serwera STS. (Do identyfikacji usługi STS do planu odzyskiwania, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości).  
  
 Wartość tej właściwości jest szeregowana jako parametr ciągu zapytania wtrealm protokołu WS-Federation. Identyfikuje RP do serwera STS. Jest on używany przez usługę STS decyzji o tym, jakie zasady do zastosowania dla wydawania tokenów i miejsca po wydawania tokenów nastąpi przekierowanie użytkownika do. (Do identyfikacji usługi STS do planu odzyskiwania, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Próba ustawioną właściwość <see langword="null" /> lub pusty ciąg.  
  
 —lub—  
  
 Występuje, próba ustawienia właściwości na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł ma przekierowuje użytkownika do dostawcy tożsamości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz uzyskać dostęp i modyfikować żądania WS-Federation logowania za pomocą <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> właściwości. Na przykład można zmodyfikować <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> właściwości w komunikacie logowania do dostawcy tożsamości, do którego zostanie przekierowany żądania zmiany. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> Zdarzeń jest zdarzeniem można anulować, i można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` anulować przekierowania.  
  
 Zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metody poprzez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metody.  
  
 Obsługa tego zdarzenia w aplikacji ASP.NET, Utwórz metodę o nazwie `WSFederationAuthentication_RedirectingToIdentityProvider` w pliku global.asax.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób dodawania obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w `Application_Init` zdarzenia w pliku global.asax. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji dotyczących tego przykładu, zobacz [indeksu przykładowy kod WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod przedstawia programu obsługi <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w pliku global.asax planu odzyskiwania. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr godz. pracy i jeśli tak jest, ustawia tego parametru w WS-Federation logowania żądania, które będą wysyłane do usługi STS. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji dotyczących tego przykładu, zobacz [indeksu przykładowy kod WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Poniższy kod przedstawia programu obsługi <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzenia w pliku global.asax dostawcy federacyjnego STS. Kod sprawdza, czy przychodzące żądanie HTTP zawiera parametr godz. pracy. Jeśli żądanie zawiera parametr godz. pracy klient zostaje skierowany do usługę STS protokołu IP dla logowania; Jeśli nie, klient zostaje skierowany do stronę odnajdowania obszaru macierzystego, wybierz usługę STS protokołu IP, w którym należy zalogować. Kod jest pobierana z `FederationForWebApps` próbki. Aby uzyskać więcej informacji dotyczących tego przykładu, zobacz [indeksu przykładowy kod WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM zapisuje tę wartość w parametrze wctx rejestracja WS-Federation w żądaniu; Jednak moduł nie używa ich podczas przetwarzania żądań logowania lub logowania odpowiedzi. Możesz ustawić dowolną wartość. Nie muszą być unikatowe. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metody.</param>
        <param name="returnUrl">Adres URL, do której moduł powinien zwrócić podczas uwierzytelniania.</param>
        <param name="persist">WSFAM zapisuje tę wartość w parametrze wctx rejestracja WS-Federation w żądaniu; Jednak moduł nie używa ich podczas przetwarzania żądań logowania lub logowania odpowiedzi. Można ją ustawić albo <see langword="true" /> lub <see langword="false" />.</param>
        <summary>Przekierowuje użytkownika do usługi tokenu zabezpieczającego (STS) określonego przez <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> właściwości do uzyskania tokenu zabezpieczającego przy użyciu protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody, gdy żądanie ze strony sieci web przez jednostkę uzależnioną (RP) lub z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> delegowanego obsługi zdarzeń podczas pasywnym przekierowania do dostawcy tożsamości Błąd autoryzacji.  
  
 Parametry przekazane do metody są używane do tworzenia parametru komunikat wctx. Jedyną istotną parametr jest `returnUrl` parametru. Określa adres URL, że planu odzyskiwania powinny być kierowane przez przeglądarkę, aby następujące pomyślne uwierzytelnienie. Go nie należy mylić z parametrem komunikat wreply jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwości i zapewniające adres, pod planu odzyskiwania, z którym usługa tokenu zabezpieczającego (STS) powinny być kierowane odpowiedzi.  
  
 Metoda wykonuje następujące działania:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> metody, aby upewnić się, że prawidłowy żądania logowania może być wystawiony przez moduł.  
  
2.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metodę w celu utworzenia żądania logowania przy użyciu właściwości skonfigurowane w module.  
  
3.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. Można anulować przekierowania lub zmodyfikować komunikat żądania rejestrowania do obsługi zdarzeń dla tego zdarzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> jest <see langword="null" /> lub ciąg pusty.  
  
 —lub—  
  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> jest <see langword="null" /> lub ciąg pusty.  
  
 —lub—  
  
 <see cref="P:System.Web.HttpContext.Current" /> Właściwość jest <see langword="null" /> lub jest pusty.  
  
 —lub—  
  
 <see cref="P:System.Web.HttpContext.Response" /> Właściwości kontekstu zwrócony przez <see cref="P:System.Web.HttpContext.Current" /> jest <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Adres URL, który określa adres, w którym chcesz otrzymywać odpowiedzi z zabezpieczeń usługi tokenów (STS) jednostki uzależnionej aplikacji firmy (RP).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreply jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreply nie jest zawarty w żądaniu logowania.  
  
 Parametr wreply jest używany przez usługę STS decyzji o tym, której ma zostać przekierowany po wydawania tokenów użytkownikowi. Nie jest zalecane dla usługi STS ślepo używać tego adresu przekierowanie użytkownika jako takie przekierowania ma luki w zabezpieczeniach. Adres, który musi zostać zweryfikowany przez usługę STS (prawdopodobnie przez porównanie z zestawu wstępnie skonfigurowanych odpowiedzi adresów do celów lub innej metody), aby upewnić się, że odpowiedź jest wysyłany do rozpoznawanych dobrze znanych i bezpiecznej lokalizacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Występuje, próba ustawienia właściwości na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreq do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Żądanie wydawania tokenów wyrażonej w postaci <see langword="&lt;wst:RequestSecurityToken&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreq jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreq nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreqptr do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Adres URL, który określa lokalizację żądania wydawania tokenów wyrażonej w postaci <see langword="&lt;wst:RequestSecurityToken&gt;" /> — element</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wreqptr jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreq nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Występuje, próba ustawienia właściwości na wartość, która nie jest prawidłowy, bezwzględnym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy komunikację z usługi tokenu zabezpieczającego (STS) musi używać protokołu HTTPS.</summary>
        <value>
          <see langword="true" /> Jeśli komunikacja z usługi STS musi być zabezpieczona za pomocą protokołu HTTPS. w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wres do użycia w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Identyfikator URI, który identyfikuje zasób, do której uzyskuje dostęp, uzależnionej (RP) do do usługi tokenu zabezpieczającego (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr "wtrealm", który jest ustawiony przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> właściwości, należy użyć zamiast tego parametru.  
  
 Parametr wres jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wres nie jest zawarty w żądaniu logowania.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy token zabezpieczający zostały odebrane z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać obsługi zdarzeń, aby zmodyfikować token, aby sprawdzić jego poprawności. W przypadku obsługi można uzyskać dostęp za pośrednictwem tokenu zabezpieczającego <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> właściwości. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> Zdarzeń jest zdarzeniem można anulować, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` w obsłudze zdarzeń o zakończeniu przetwarzania komunikatu logowania odpowiedzi WS-Federation.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegowanego obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi WS-Federation ("wsignin1.0") odbierane z usługi tokenu zabezpieczającego (STS). Powstaje tuż po ma zostały rozszeregować tokenu zabezpieczającego z wresult lub parametr wresultptr w komunikacie odpowiedzi logowania, ale przed zweryfikować tokenu zabezpieczającego.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zweryfikowaniu tokenu zabezpieczającego, które zostały odebrane z usługi tokenu zabezpieczającego (STS), ale przed zabezpieczeń sesji jest tworzony token.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać obsługi zdarzeń, aby zmodyfikować principal utworzony podczas przetwarzania wiadomości WS-Federation logowania odpowiedzi z usługi tokenu zabezpieczającego (STS), zanim zostanie on użyty do utworzenia tokenu sesji. W przypadku obsługi, można uzyskać dostęp podmiot zabezpieczeń za pomocą <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> właściwości. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> Zdarzeń jest zdarzeniem można anulować, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości `true` w obsłudze zdarzeń o zakończeniu przetwarzania komunikatu logowania odpowiedzi WS-Federation.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegowanego obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi WS-Federation ("wsignin1.0") odbierane z usługi tokenu zabezpieczającego (STS). Jest wywoływane tylko po token zabezpieczający, który został zdeserializowany z wresult lub parametr wresultptr w komunikacie odpowiedzi logowania została zweryfikowana i przed zabezpieczeń sesji jest tworzony token.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy token sesji zabezpieczeń została utworzona na podstawie tokenu zabezpieczającego odbierane z usługi tokenu zabezpieczającego (STS).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać obsługi zdarzeń, aby zmodyfikować tokenu sesji przed jest używany, aby ustawić podmiot wątku i są zapisywane w pliku cookie sesji. W przypadku obsługi, można uzyskać dostęp za pośrednictwem tokenu sesji <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. Można określić, czy plik cookie sesji mają być zapisywane przez ustawienie <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> właściwości.  
  
 To zdarzenie jest wywoływane z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> delegowanego obsługi zdarzeń podczas przetwarzania komunikatu logowania odpowiedzi WS-Federation ("wsignin1.0") odbierane z usługi tokenu zabezpieczającego (STS). Jest wywoływane tylko po token zabezpieczający, który został zdeserializowany z wresult lub sprawdzić poprawności parametru wresultptr w komunikacie odpowiedzi logowania i przed oświadczenia podmiotu zabezpieczeń jest ustawiony na <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (i na <xref:System.Web.HttpContext.User%2A> właściwości <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Działanie sesji w trybie odwołań, firma Microsoft zaleca zapewnienie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> zdarzenia w pliku global.asax.cs i ustawienie <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> przekazana właściwość w tokenie <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> właściwości. To zapewnia, że działa w trybie odwołań dla każdego żądania tokenu sesji i jest ich drużyna jest faworytem za pośrednictwem jedynie ustawienia <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> właściwości w Module sesji uwierzytelniania.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Token zabezpieczający sesji, który został utworzony z komunikatu protokołu WS-Federation logowania odpowiedzi z usługi STS.</param>
        <param name="isSession">
          <see langword="true" /> można zapisać pliku cookie, który reprezentuje sesję dołączone do odpowiedzi; w przeciwnym razie <see langword="false" />.</param>
        <summary>Ustawia podmiot zabezpieczeń wątku i opcjonalnie zapisuje plik cookie sesji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z żądanie przetwarzania potoku zaimplementowana w <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> obiektu delegowanego obsługi zdarzeń. Ta metoda wykonuje następujące czynności:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> zdarzeń. To zdarzenie służy do zmiany tokenu sesji przed jest używany, aby ustawić podmiot wątku i zapisywane w pliku cookie sesji i określ, czy mają być zapisywane pliku cookie sesji.  
  
2.  Wywołuje <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> metody w module skonfigurowanych sesji uwierzytelniania (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) Aby ustawić podmiot wątku i opcjonalnie zapisu pliku cookie sesji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik jest zalogowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie jest przesyłane na stronę logowania, kontrolki na stronie zostanie zgłosić to zdarzenie, a nie tego modułu.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz po usunięcie sesji podczas wylogowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas podpisywania poza sesji na jednostkę uzależnioną (RP). Zdarzenie nie jest wywoływane, gdy to federacyjnych wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Można dodać obsługi zdarzeń do wykonywania dodatkowego przetwarzania, które są wymagane przez aplikację, po usunięciu plików cookie sesji.  
  
 To zdarzenie nie jest gwarantowana ma być wywoływana dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład, więc to zdarzenie nigdy nie będą zgłaszane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM zapisuje tę wartość w parametrze wctx rejestracja WS-Federation w żądaniu; Jednak moduł nie używa ich podczas przetwarzania żądań logowania lub logowania odpowiedzi. Możesz ustawić dowolną wartość. Nie muszą być unikatowe. Aby uzyskać więcej informacji, zobacz <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> metody.</param>
        <summary>Wykonuje, zaloguj się do usługi tokenu zabezpieczającego (STS) za pomocą protokołu WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metodę w celu logowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gest lub ustawia wartość kontekst określonej aplikacji do uwzględnienia w parametrze wctx w WS-Federation żądań logowania.</summary>
        <value>Wartość określonego kontekstu aplikacji do uwzględnienia w parametrze wctx żądań logowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> wywołania metody, jest generowany komunikat logowania zawiera parametr wctx, który ma następujący format: `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. Wartość <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> są przechowywane w `cx` parametru. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> można wywołać bezpośrednio w kodzie. Jest również nazywany przeprowadzania WSFAM jest pasywny przekierowania, a także gdy albo <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> metody lub <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> metoda jest wywoływana przez kod aplikacji.  
  
 Mimo że zapisuje WSFAM <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> wartości komunikaty żądania logowania, jeśli wartość jest używana przez aplikację podczas przetwarzania odpowiedzi, należy podać logiki wyodrębniania go z parametru wctx w komunikacie odpowiedzi logowania.  
  
 Aby uzyskać więcej informacji o formacie i przetwarzania parametru wctx, zobacz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane, gdy wystąpi błąd podczas logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądanie jest przesyłane na stronę logowania, kontrolki na stronie zostanie zgłosić to zdarzenie, a nie tego modułu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed usunięciem sesji podczas wylogowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas podpisywania poza sesji na jednostkę uzależnioną (RP). Zdarzenie nie jest wywoływane, gdy to federacyjnych wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 Można dodać obsługi zdarzeń do wykonania dodatkowych czynności, które są wymagane przez aplikację, przed usunięciem pliku cookie sesji. Możesz przeczytać <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> właściwości w obsłudze zdarzeń, aby określić, czy wylogowania jest wynikiem odbieranie komunikatu żądania czyszczenia wylogowania WS-Federation ("wsignoutcleanup1.0") z usługi tokenu zabezpieczającego (STS) lub czy został zainicjowany w planu odzyskiwania.  
  
 To zdarzenie nie jest gwarantowana ma być wywoływana dla każdej sesji. Pliki cookie mogą zostać usunięte po stronie klienta, na przykład, więc to zdarzenie nigdy nie będą zgłaszane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania, który zawiera wszystkie dodatkowe parametry do wysłania w żądań WS-Federation logowania ("wsignin1.0").</summary>
        <value>Fragmentu adresu URL, zawierający parametry dodatkowy komunikat w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;zapisu paramN = wartośćN</c>. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do wysyłania dodatkowych parametrów z żądania logowania. Będą to parametry specyficzne dla aplikacji, które nie są jednego z parametrów, które są określone przez protokół WS-Federation. Aby usunąć dodatkowych parametrów z żądania należy ustawić właściwości na pusty ciąg.  
  
 Można zastąpić to ustawienie na każde żądanie HTTP przez dodanie obsługi dla <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> zdarzeń. To zdarzenie jest wywoływane przed modułu przekierowuje do usługi tokenu zabezpieczającego (STS) z komunikatem protokołu WS-Federation żądania logowania. Usługa tokenu Zabezpieczającego jest określona przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Próba ustawioną właściwość <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znaki poza bieżącą sesję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącej sesji.  
  
 Żaden komunikat żądania wyrejestrowywania ("wsignout1.0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znaki poza bieżącej sesji i żądań przekierowanie z powrotem do adresu URL określonego w bieżącym żądaniu HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącej sesji, a następnie przekierowuje przeglądarce adres URL określony w bieżącym żądaniu HTTP.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> metody z `redirectUrl` ustawionym na adres URL bieżącego żądania.  
  
 Żaden komunikat żądania wyrejestrowywania ("wsignout1.0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">
          <see langword="true" /> Jeśli żądanie zostało zainicjowane przez usługę STS protokołu IP, za pomocą protokołu WS-Federation komunikat żądania czyszczenia wyrejestrowywania ("wsignoutcleanup1.0"); w przeciwnym razie <see langword="false" />.</param>
        <summary>Wyrejestrowanie się w bieżącej sesji i uruchamia odpowiednie zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wykonuje faktyczną pracę usunięcie bieżącej sesji i wywoływanie odpowiednie zdarzenia wylogowania. Metoda wykonuje następujące czynności:  
  
1.  Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> zdarzeń. Program obsługi zdarzeń może dostarczyć żadnych niezbędnych zadań przetwarzania przed usunięciem tej sesji. <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> Właściwość jest ustawiona zgodnie z `isIPRequest` parametru.  
  
2.  Wywołania <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> metody w Menedżerze uwierzytelniania bieżącej sesji, można usunąć pliku cookie sesji.  
  
     Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> zdarzeń.  
  
3.  Jeśli wystąpi błąd podczas przetwarzania wylogowania, wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metodę, aby podnieść <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> zdarzeń. Program obsługi zdarzeń może anulować przetwarzanie i zapobiec wyjątek zwracanych do wywołującego <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Możesz wywołać <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> metody z `isIPRequest` zestaw parametrów `false` Aby wylogować się z sesji bez wykonywania przekierowania. Metoda ostatecznie jest wywoływana przez wszystkie inne przeciążenia <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> metody (z `isIPRequest` ustawiona `false`) do wykonywania wylogowywania obsługi. Metoda jest wywoływana z <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> metody z `isIPRequest` zestaw parametrów `true` Aby wylogować się z sesji podczas przetwarzania komunikatu oczyszczania wylogowania WS-Federation ("wsignoutcleanup1.0").  
  
 Żaden komunikat żądania wyrejestrowywania ("wsignout1.0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego mają być przekierowywane przeglądarki po usunięciu sesji.</param>
        <summary>Znaki poza bieżącej sesji i żądań przekierowanie z powrotem do określonego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącej sesji, a następnie przekierowuje przeglądarki do określonego adresu URL.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> metody z `redirectUrl` parametru i `initiateSignoutCleanup` ustawić `false`.  
  
 Żaden komunikat żądania wyrejestrowywania ("wsignout1.0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">Adres URL, do którego mają być przekierowywane przeglądarki po wylogowania.</param>
        <param name="initiateSignoutCleanup">Zawsze wartość <see langword="false" />. Ustawienie tego parametru <see langword="true" /> nie jest obsługiwane.</param>
        <summary>Znaki poza bieżącej sesji i żądań przekierowanie z powrotem do określonego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usuwa bieżącej sesji, a następnie przekierowuje przeglądarki do określonego adresu URL.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody z `initiateSignoutCleanup` zestaw parametrów `false`.  
  
 Żaden komunikat żądania wyrejestrowywania ("wsignout1.0") są wysyłane do usługi tokenu zabezpieczającego (STS). Aby wylogowania w STS przy użyciu protokołu WS-Federation, użyj <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> nie jest prawidłowym identyfikatorem URI.</exception>
        <exception cref="T:System.NotImplementedException">
          <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> Klasy zgłasza wyjątek, jeśli <paramref name="initiateSignoutCleanup" /> jest <see langword="true" />. Ten parametr nie jest ustawiony na <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane, gdy wystąpi błąd podczas wyrejestrowywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane przez wywołanie <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> metody z wewnątrz <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> metody podczas podpisywania poza sesji na jednostkę uzależnioną (RP). Zdarzenie nie jest wywoływane, gdy to federacyjnych wylogowania za pośrednictwem <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metody.  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> Zdarzenie jest możliwe zdarzeń. Można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości w obsłudze zdarzeń, aby zapobiec wyjątek, który spowodował błąd zwracanych do wylogowywania inicjatora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg zapytania, który zawiera wszystkie dodatkowe parametry do wysłania w żądaniach wylogowania WS-Federation ("wsignout1.0").</summary>
        <value>Fragmentu adresu URL, zawierający parametry dodatkowy komunikat w następującym formacie: <c>param1 = wartość1&amp;param2 = wartość2&amp;zapisu paramN = wartośćN</c>. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutQueryString` atrybutu [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracji. Ma ona zawierać żadnych parametrów specyficzne dla aplikacji do wysłania w żądaniu wylogowania WS-Federation. Aby usunąć te parametry, można ustawić właściwości na pusty ciąg.  
  
 WSFAM nie używa tej właściwości bezpośrednio; jednak można przekazać go do <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodę w celu utworzenia pełnej WS-Federation wylogowania adresów URL, które mogą być następnie używane przez kod.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Próba ustawioną właściwość <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru wreply do użycia podczas wyrejestrowywania żądań WS-Federation ("wsignout1.0").</summary>
        <value>Adres URL, do którego mają być przekierowywane klienta przez usługę tokenu zabezpieczającego (STS) po wylogowania za pomocą protokołu WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta właściwość jest inicjowana z `signOutReply` atrybutu [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) w pliku konfiguracji. Jest on przeznaczony do reprezentowania parametru wreply w żądaniu wylogowania WS-Federation.  
  
 Parametr wreply jest opcjonalny. Jeśli <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> właściwość jest ustawiona na `null` lub pusty ciąg, parametr wreply nie jest zawarty w żądaniu wylogowania.  
  
 WSFAM nie bezpośrednio używać tej właściwości. Jednak można przekazać go do <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> metodą podczas wykonywania WS-Federation wylogowania z kodu lub użytkownik może przekazać go do <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> metodę w celu utworzenia pełnego WS-Federation wylogowania adresu URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> właściwości jest pusta i, że jeśli <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> właściwość jest <see langword="true" />, że identyfikatory URI określony dla <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> są zgodne z protokołu HTTPS.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> jest <see langword="null" /> lub ciąg pusty.  
  
 —lub—  
  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> jest <see langword="null" /> lub ciąg pusty.  
  
 —lub—  
  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> jest <see langword="true" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> HTTPS-niezgodnych.  
  
 —lub—  
  
 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> jest <see langword="true" /> i <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> HTTPS-niezgodnych.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> obiektu do użycia podczas deserializacji komunikaty logowania odpowiedzi WS-Federation uzyskać token wystawiony przez usługę tokenu zabezpieczającego (STS).</summary>
        <value>
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Obiektu do użycia podczas deserializacji komunikaty logowania odpowiedzi WS-Federation uzyskać token wystawiony przez usługę tokenu zabezpieczającego (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Próba ustawioną właściwość <see langword="null" /> występuje.</exception>
      </Docs>
    </Member>
  </Members>
</Type>