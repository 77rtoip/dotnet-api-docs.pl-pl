<Type Name="FederationMessage" FullName="System.IdentityModel.Services.FederationMessage">
  <TypeSignature Language="C#" Value="public abstract class FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FederationMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationMessage abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="80ca5-101">Definiuje klasę podstawową, z których wszystkie federacyjnego pochodzi klasy wiadomości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-101">Defines the base class from which all federation message classes derive.</span></span></summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="80ca5-102">Co najmniej, konieczne jest przesłonięcie <see cref="P:System.IdentityModel.Services.FederationMessage.ProviderIdentifier" /> właściwości i <see cref="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" /> metody w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="80ca5-102">At a minimum, you must override the <see cref="P:System.IdentityModel.Services.FederationMessage.ProviderIdentifier" /> property and the <see cref="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" /> method in derived classes.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FederationMessage (Uri baseUrl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (baseUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FederationMessage(Uri ^ baseUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseUrl"><span data-ttu-id="80ca5-103">Podstawowy adres URL, którego dotyczy komunikatu federacyjnego.</span><span class="sxs-lookup"><span data-stu-id="80ca5-103">The base URL to which the federation message applies.</span></span> <span data-ttu-id="80ca5-104">Inicjuje <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-104">Initializes the <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> property.</span></span></param>
        <summary><span data-ttu-id="80ca5-105">Metoda wywoływana z konstruktorów w klasach pochodnych zainicjować <see cref="T:System.IdentityModel.Services.FederationMessage" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="80ca5-105">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Services.FederationMessage" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80ca5-106"><paramref name="baseUri" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80ca5-106"><paramref name="baseUri" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">
          <span data-ttu-id="80ca5-107"><paramref name="baseUri" /> nie jest prawidłowy, bezwzględnego identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-107"><paramref name="baseUri" /> is not a valid, absolute URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80ca5-108">Pobiera lub ustawia podstawowy adres URL, którego dotyczy komunikat.</span><span class="sxs-lookup"><span data-stu-id="80ca5-108">Gets or sets the base URL to which the message applies.</span></span></summary>
        <value><span data-ttu-id="80ca5-109">A <see cref="T:System.Uri" /> zawierający podstawowy adres URL.</span><span class="sxs-lookup"><span data-stu-id="80ca5-109">A <see cref="T:System.Uri" /> that contains the base URL.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80ca5-110">Podjęto próbę ustawienia wartości, która jest <see langword="null" /> występuje.</span><span class="sxs-lookup"><span data-stu-id="80ca5-110">An attempt to set a value that is <see langword="null" /> occurs.</span></span></exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><span data-ttu-id="80ca5-111">Podjęto próbę ustawienia wartości, która nie jest prawidłowym identyfikatorem URI występuje.</span><span class="sxs-lookup"><span data-stu-id="80ca5-111">An attempt to set a value that is not a valid URI occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBaseUrl">
      <MemberSignature Language="C#" Value="public static Uri GetBaseUrl (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetBaseUrl(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.GetBaseUrl(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetBaseUrl(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="80ca5-112">Identyfikator URI, z którego mają zostać wyodrębnione podstawowego adresu URL.</span><span class="sxs-lookup"><span data-stu-id="80ca5-112">The URI from which to extract the base URL.</span></span></param>
        <summary><span data-ttu-id="80ca5-113">Metoda pomocnika, która wyodrębnia podstawowy adres URL z określonego identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-113">Helper method that extracts the base URL from the specified URI.</span></span></summary>
        <returns><span data-ttu-id="80ca5-114">Podstawowy adres URL, który został wyodrębniony.</span><span class="sxs-lookup"><span data-stu-id="80ca5-114">The base URL that was extracted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-115">Adres URL zwracany jest oryginalny adres URL bez ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-115">The URL returned is the original URL without the query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public string GetParameter (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetParameter(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameter (parameter As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetParameter(System::String ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="80ca5-116">Parametr do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-116">The parameter for which to search.</span></span></param>
        <summary><span data-ttu-id="80ca5-117">Zwraca wartość określonego parametru ze słownika parametrów.</span><span class="sxs-lookup"><span data-stu-id="80ca5-117">Returns the specified parameter value from the parameters dictionary.</span></span></summary>
        <returns><span data-ttu-id="80ca5-118">Wartość parametru lub <see langword="null" /> Jeśli parametr nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="80ca5-118">The value of the parameter or <see langword="null" /> if the parameter does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-119">Słownik parametrów jest dostępny za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-119">The parameters dictionary is accessed through the <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80ca5-120"><paramref name="parameter" /> jest <see langword="null" /> lub ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="80ca5-120"><paramref name="parameter" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.FederationMessage.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Parameters { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80ca5-121">Pobiera parametry wiadomości w formie słownika.</span><span class="sxs-lookup"><span data-stu-id="80ca5-121">Gets the message parameters as a dictionary.</span></span></summary>
        <value><span data-ttu-id="80ca5-122">Słownik zawierający parametry wiadomości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-122">A dictionary that contains the message parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-123">Słownik pary nazwa-wartość zawiera parametry w komunikacie.</span><span class="sxs-lookup"><span data-stu-id="80ca5-123">A dictionary of name and value pairs that contains the parameters in the message.</span></span> <span data-ttu-id="80ca5-124">Parametry są wyznaczaną przez nazwę parametru.</span><span class="sxs-lookup"><span data-stu-id="80ca5-124">The parameters are keyed by the parameter name.</span></span> <span data-ttu-id="80ca5-125">Na przykład aby pobrać wartość parametru wattr, należy użyć "wattr".</span><span class="sxs-lookup"><span data-stu-id="80ca5-125">For example, to retrieve the value of the wattr parameter, use "wattr".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (Uri data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(class System.Uri data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.ParseQueryString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (data As Uri) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(Uri ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="80ca5-126">Identyfikator URI do przeanalizowania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-126">The URI to parse.</span></span></param>
        <summary><span data-ttu-id="80ca5-127">Metoda pomocnicza przeprowadzająca analizuje ciągu zapytania w określony identyfikator URI do <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span><span class="sxs-lookup"><span data-stu-id="80ca5-127">Helper method that parses the query string in the specified URI into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span></span></summary>
        <returns><span data-ttu-id="80ca5-128">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawierający parametry w ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-128">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the parameters in the query string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80ca5-129"><paramref name="data" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80ca5-129"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveParameter">
      <MemberSignature Language="C#" Value="public void RemoveParameter (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParameter(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParameter (parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParameter(System::String ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="80ca5-130">Nazwa parametru do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="80ca5-130">The name of the parameter to remove.</span></span></param>
        <summary><span data-ttu-id="80ca5-131">Usuwa parametr z słownik parametrów.</span><span class="sxs-lookup"><span data-stu-id="80ca5-131">Removes a parameter from the parameters dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-132">Słownik parametrów jest dostępny za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-132">The parameters dictionary is accessed through the <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80ca5-133"><paramref name="parameter" /> jest <see langword="null" /> lub ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="80ca5-133"><paramref name="parameter" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public void SetParameter (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameter(string parameter, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameter (parameter As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameter(System::String ^ parameter, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="80ca5-134">Nazwa parametru do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="80ca5-134">The name of the parameter to set.</span></span></param>
        <param name="value"><span data-ttu-id="80ca5-135">Wartość do przypisania do parametru.</span><span class="sxs-lookup"><span data-stu-id="80ca5-135">The value to be assigned to the parameter.</span></span></param>
        <summary><span data-ttu-id="80ca5-136">Ustawia wartość parametru w słowniku parametrów.</span><span class="sxs-lookup"><span data-stu-id="80ca5-136">Sets the value of a parameter in the parameters dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-137">Jeśli parametr nie istnieje w słowniku, zostaną dodane do niego.</span><span class="sxs-lookup"><span data-stu-id="80ca5-137">If the parameter does not exist in the dictionary, it is added to it.</span></span> <span data-ttu-id="80ca5-138">Słownik parametrów jest dostępny za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-138">The parameters dictionary is accessed through the <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80ca5-139"><paramref name="parameter" /> jest <see langword="null" /> lub ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="80ca5-139"><paramref name="parameter" /> is <see langword="null" /> or an empty string.</span></span>  
  
 <span data-ttu-id="80ca5-140">—lub—</span><span class="sxs-lookup"><span data-stu-id="80ca5-140">-or-</span></span>  
  
 <span data-ttu-id="80ca5-141"><paramref name="value" /> jest <see langword="null" /> lub ciąg pusty.</span><span class="sxs-lookup"><span data-stu-id="80ca5-141"><paramref name="value" /> is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetUriParameter">
      <MemberSignature Language="C#" Value="public void SetUriParameter (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUriParameter(string parameter, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUriParameter (parameter As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUriParameter(System::String ^ parameter, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="80ca5-142">Nazwa parametru.</span><span class="sxs-lookup"><span data-stu-id="80ca5-142">The parameter name.</span></span></param>
        <param name="value"><span data-ttu-id="80ca5-143">Wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="80ca5-143">The parameter value.</span></span></param>
        <summary><span data-ttu-id="80ca5-144">Ustawia wartość parametru w słowniku parametrów.</span><span class="sxs-lookup"><span data-stu-id="80ca5-144">Sets the value of a parameter in the parameters dictionary.</span></span> <span data-ttu-id="80ca5-145">Wartość musi być bezwzględnym identyfikatorem URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-145">The value must be an absolute URI.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-146">Jeśli parametr nie istnieje w słowniku, zostanie on dodany.</span><span class="sxs-lookup"><span data-stu-id="80ca5-146">If the parameter does not exist in the dictionary, it is added.</span></span> <span data-ttu-id="80ca5-147">Słownik parametrów jest dostępny za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-147">The parameters dictionary is accessed through the <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80ca5-148"><paramref name="parameter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="80ca5-148"><paramref name="parameter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="80ca5-149">—lub—</span><span class="sxs-lookup"><span data-stu-id="80ca5-149">-or-</span></span>  
  
 <span data-ttu-id="80ca5-150"><paramref name="value" /> jest <see langword="null" /> lub nie bezwzględnym identyfikatorem URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-150"><paramref name="value" /> is <see langword="null" /> or not an absolute URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.Validate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80ca5-151">Sprawdza poprawność komunikatu.</span><span class="sxs-lookup"><span data-stu-id="80ca5-151">Validates the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-152">Implementacja domyślnych operacji sprawdzania czy <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> właściwość zawiera bezwzględnym identyfikatorem URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-152">The default implementation checks whether the <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> property contains an absolute URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><span data-ttu-id="80ca5-153">Wartość <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> właściwość jest <see langword="null" /> lub nie jest bezwzględnym identyfikatorem URI.</span><span class="sxs-lookup"><span data-stu-id="80ca5-153">The value of the <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> property is <see langword="null" /> or is not an absolute URI.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="80ca5-154">Składnik zapisywania tekstu, do której jest zapisywany komunikat.</span><span class="sxs-lookup"><span data-stu-id="80ca5-154">The text writer to which the message is written out.</span></span></param>
        <summary><span data-ttu-id="80ca5-155">W przypadku przesłonięcia w klasie pochodnej, zapisuje komunikat do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="80ca5-155">When overridden in a derived class, writes the message to the output stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="80ca5-156">Należy przesłonić tę metodę w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="80ca5-156">You must override this method in derived classes.</span></span> <span data-ttu-id="80ca5-157">Implementacji należy zweryfikować komunikatu i zgłosić wyjątek odpowiednie przed jej pisania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-157">Your implementation should validate the message and throw an appropriate exception before writing it.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WriteFormPost">
      <MemberSignature Language="C#" Value="public virtual string WriteFormPost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteFormPost() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFormPost () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteFormPost();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80ca5-158">Serializuje komunikatu jako post formularza i zwraca wynikowy formularz wraz z jego Javascript jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="80ca5-158">Serializes the message as a form post and returns the resulting Form together with its Javascript as a string.</span></span></summary>
        <returns><span data-ttu-id="80ca5-159">Reprezentacja ciągu komunikatu jako formularz wraz z jego skojarzony Javascript.</span><span class="sxs-lookup"><span data-stu-id="80ca5-159">A string representation of the message as a Form together with its associated Javascript.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteQueryString">
      <MemberSignature Language="C#" Value="public virtual string WriteQueryString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteQueryString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQueryString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteQueryString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80ca5-160">Zwraca reprezentację ciągu wiadomości w formacie ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-160">Returns a string representation of the message in query-string format.</span></span></summary>
        <returns><span data-ttu-id="80ca5-161">Wiadomości w formacie ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="80ca5-161">The message in query-string format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80ca5-162">Tworzy komunikat, który składa się z adres URL określony w <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> właściwości następuje ciąg zapytania, który został utworzony na podstawie słownik parametrów.</span><span class="sxs-lookup"><span data-stu-id="80ca5-162">Creates a message that is composed of the URL specified in the <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> property followed by a query string that is created from the parameters dictionary.</span></span> <span data-ttu-id="80ca5-163">Słownik parametrów jest dostępny za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80ca5-163">The parameters dictionary is accessed through the <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>