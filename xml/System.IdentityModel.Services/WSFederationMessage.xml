<Type Name="WSFederationMessage" FullName="System.IdentityModel.Services.WSFederationMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0cff372661ba6bea853d763d5c7bb7cfff4361d" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224452" /></Metadata><TypeSignature Language="C#" Value="public abstract class WSFederationMessage : System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSFederationMessage extends System.IdentityModel.Services.FederationMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSFederationMessage&#xA;Inherits FederationMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationMessage abstract : System::IdentityModel::Services::FederationMessage" />
  <TypeSignature Language="F#" Value="type WSFederationMessage = class&#xA;    inherit FederationMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.FederationMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje komunikat protokołu WS-Federation i definiuje klasę bazową, z której pochodzi bardziej wyspecjalizowane klasy wiadomości WS-Federation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationMessage> Klasa reprezentuje WS-Federation żądania lub odpowiedzi protokołu WS-Federation. Bardziej wyspecjalizowane klas, które reprezentują określonych wiadomości WS-Federation pochodzić od <xref:System.IdentityModel.Services.WSFederationMessage>, na przykład <xref:System.IdentityModel.Services.SignInRequestMessage> klasy, która reprezentuje komunikat żądania logowania usługi WS-Federation.  
  
 <xref:System.IdentityModel.Services.WSFederationMessage> Klasa udostępnia kilka właściwości, które mogą służyć do ustawiania lub dostęp do jednego komunikatu parametrów. Te parametry można również ustawić lub dostępne za pośrednictwem <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> słownika. Na przykład, możesz przeczytać parametr wencoding w komunikacie albo <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> właściwości lub określając "wencoding" jako klucza do <xref:System.IdentityModel.Services.FederationMessage.Parameters%2A> słownika.  
  
 <xref:System.IdentityModel.Services.WSFederationMessage> Zawiera metody statyczne, które można wywołać, aby utworzyć odpowiednie wiadomości WS-Federation z: adres URL, który zawiera ciąg zapytania; podstawowy adres URL i kolekcję usługi WS-Federation nazwy parametrów i wartości; lub formularza danych Opublikuj w żądaniu HTTP.  
  
 [!INCLUDE[wif_wsfed_ref](~/includes/wif-wsfed-ref-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationMessage (Uri baseUrl, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUrl, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUrl As Uri, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationMessage(Uri ^ baseUrl, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Services.WSFederationMessage : Uri * string -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="new System.IdentityModel.Services.WSFederationMessage (baseUrl, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">Podstawowy adres URL, do której stosują się wiadomości WS-Federation. To jest adres URL bez żadnych parametrów zapytania. Zestawy <see cref="P:System.IdentityModel.Services.FederationMessage.BaseUri" /> właściwości.</param>
        <param name="action">Parametr wa wiadomości. Określa akcję do wykonania; na przykład "wsignin1.0" dla protokołu WS-Federation żądania logowania. Zestawy <see cref="P:System.IdentityModel.Services.WSFederationMessage.Action" /> właściwości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Services.WSFederationMessage" /> klasy z podstawowego adresu URL do stosowany wiadomości i działania, które należy wykonać (parametr wa wiadomości).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="action" /> jest <see langword="null" /> ani być pustym ciągiem.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException"><paramref name="baseUri" /> nie jest prawidłowy bezwzględny identyfikator URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia parametr wa wiadomości.</summary>
        <value>Wartość parametru (Waszyngton).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr wa Określa akcję do wykonania. Na przykład w scenariuszach logowania <xref:System.IdentityModel.Services.WSFederationMessage.Action%2A> właściwość jest ustawiona na "wsignin1.0" i wylogowania, właściwość jest ustawiona na "wsignout1. 0". Parametr wa jest wymagany, dlatego nie można ustawić tę właściwość `null` ani być pustym ciągiem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia wartości, która jest <see langword="null" /> lub pusta.</exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia parametr wctx wiadomości.</summary>
        <value>Wartość parametru wctx.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa wartość kontekstu, który musi zostać zwrócony przy użyciu tokenu wystawionego, jeśli został przekazany w żądaniu. Wartość jest nieprzezroczysta, oznacza to, jego semantyka jest znane tylko nadawca komunikatu (zazwyczaj uzależnionej - RP); nie jest interpretowany przez odbiorcę wiadomości lub dowolnym pośredników. Parametr wctx jest opcjonalny. Ustaw <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> właściwości `null` lub pusty ciąg, aby usunąć parametr wctx z komunikatu.  
  
> [!IMPORTANT]
>  Jeśli Twoja aplikacja otrzymuje komunikat protokołu WS-Federation z zestawem parametrów wctx, należy upewnić się, że taką samą wartość jest zwracany w odpowiedzi przez nadawcę lub przekazywany, gdy wiadomość zostaje przeniesiona na innej stronie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFormPost">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromFormPost (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromFormPost(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFormPost (request As HttpRequestBase) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromFormPost(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="static member CreateFromFormPost : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie, które zawiera post formularza.</param>
        <summary>Tworzy komunikat protokołu WS-Federation z post formularza została odebrana w określonym żądaniu.</summary>
        <returns>Komunikat, który został utworzony lub <see langword="null" /> Jeśli nie można utworzyć wiadomości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat można tworzyć, metoda zwraca prawidłową implementacją <xref:System.IdentityModel.Services.WSFederationMessage> na podstawie wa parametru przesłane w formularzu, post, a na przykład, jeśli parametr wa jest "wsignout1. 0", a następnie <xref:System.IdentityModel.Services.SignOutRequestMessage> obiekt jest zwracany.  
  
 Pobiera podstawowy adres URL i kolekcję zmiennych formularza przesłany przez klienta z żądania i wywołuje <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromNameValueCollection">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection (Uri baseUrl, System.Collections.Specialized.NameValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromNameValueCollection(class System.Uri baseUrl, class System.Collections.Specialized.NameValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromNameValueCollection (baseUrl As Uri, collection As NameValueCollection) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromNameValueCollection(Uri ^ baseUrl, System::Collections::Specialized::NameValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member CreateFromNameValueCollection : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection (baseUrl, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.Uri" />
        <Parameter Name="collection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseUrl">Podstawowy adres URL, do którego komunikat jest przeznaczony.</param>
        <param name="collection"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Zawierający parametry dla wiadomości.</param>
        <summary>Tworzy komunikat protokołu WS-Federation <see cref="T:System.Collections.Specialized.NameValueCollection" /> parametrów.</summary>
        <returns>Komunikat, który został utworzony lub <see langword="null" /> Jeśli nie można utworzyć wiadomości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolekcja parametrów musi zawierać wpis dla parametru "wa" Określa akcję do wykonania. Jeśli wpis (Waszyngton) nie jest rozpoznawanym akcji, jest zgłaszany wyjątek. Kolekcja parametrów powinna zawierać odpowiednie parametry dla rodzaju komunikat określony przez parametr wa w kolekcji. Metoda zwraca prawidłową implementacją <xref:System.IdentityModel.Services.WSFederationMessage> na podstawie parametru (Waszyngton). W poniższej tabeli wymieniono <xref:System.IdentityModel.Services.WSFederationMessage> implementacji zwrócony dla różnych kombinacji parametrów.  
  
|Typ zwracany|określony parametr zapytania (Waszyngton)|Komentarze|  
|-------------------|----------------------------------|--------------|  
|<xref:System.IdentityModel.Services.AttributeRequestMessage>|wattr1.0|--|  
|<xref:System.IdentityModel.Services.PseudonymRequestMessage>|wpseudo1.0|--|  
|<xref:System.IdentityModel.Services.SignInRequestMessage>|wsignin1.0|`collection` musi zawierać wtrealm lub parametr wreply. Jeśli `collection` zawiera wresult lub parametrem wresultptr do logowania w odpowiedzi jest zwracany komunikat (zob. następny wiersz).|  
|<xref:System.IdentityModel.Services.SignInResponseMessage>|wsignin1.0|Zwracane, gdy `collection` zawiera parametr wresult lub wresultptr. Tylko jeden może być obecny. Jeśli dostępne są obie, jest zgłaszany wyjątek.|  
|<xref:System.IdentityModel.Services.SignOutRequestMessage>|wsignout1. 0|--|  
|<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage>|wsignoutcleanup1.0|--|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="baseUrl" /> jest <see langword="null" />.  
  
—lub— 
 <paramref name="collection" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">Nie rozpoznano parametr wa w kolekcji parametrów.</exception>
        <exception cref="T:System.ArgumentException">Komunikat odpowiedzi logowania ma parametr wresult i wresultptr w kolekcji parametrów. (Komunikat odpowiedzi prawidłowe logowania ma taki sam parametr wa "wsignin1.0" i albo wresult lub parametr wresultptr, ale nie obu).</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUri">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Services.WSFederationMessage CreateFromUri (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Services.WSFederationMessage CreateFromUri(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUri (requestUri As Uri) As WSFederationMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Services::WSFederationMessage ^ CreateFromUri(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateFromUri : Uri -&gt; System.IdentityModel.Services.WSFederationMessage" Usage="System.IdentityModel.Services.WSFederationMessage.CreateFromUri requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.WSFederationMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">Identyfikator URI, z którym ma zostać utworzony komunikat. Parametrów wiadomości podano w ciągu zapytania. Parametr wa musi być obecny.</param>
        <summary>Tworzy komunikat protokołu WS-Federation z określonego identyfikatora URI. Przyjęto założenie, że parametry są określane w ciągu zapytania.</summary>
        <returns>Komunikat, który został utworzony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca prawidłową implementacją <xref:System.IdentityModel.Services.WSFederationMessage> na podstawie parametru wa w ciągu zapytania; na przykład, jeśli parametr wa jest "wsignout1. 0", a następnie <xref:System.IdentityModel.Services.SignOutRequestMessage> obiekt jest zwracany.  
  
 Inne wyjątki mogą być generowane w zależności od kombinacji i wartości parametrów w ciągu zapytania.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.IdentityModel.Services.WSFederationMessageException">Nie można utworzyć wiadomości z określonego identyfikatora URI.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.IdentityModel.Services.WSFederationMessage.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia parametr wencoding wiadomości.</summary>
        <value>Wartość parametru wencoding.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa styl kodowania, które ma być używany dla dowolnego pliku XML jest osadzony w wiadomości. Parametr wencoding jest opcjonalny. Ustaw <xref:System.IdentityModel.Services.WSFederationMessage.Encoding%2A> właściwości `null` lub pusty ciąg, aby usunąć parametr wencoding z komunikatu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFromUri">
      <MemberSignature Language="C#" Value="public static bool TryCreateFromUri (Uri requestUri, out System.IdentityModel.Services.WSFederationMessage fedMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreateFromUri(class System.Uri requestUri, [out] class System.IdentityModel.Services.WSFederationMessage&amp; fedMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateFromUri (requestUri As Uri, ByRef fedMsg As WSFederationMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreateFromUri(Uri ^ requestUri, [Runtime::InteropServices::Out] System::IdentityModel::Services::WSFederationMessage ^ % fedMsg);" />
      <MemberSignature Language="F#" Value="static member TryCreateFromUri : Uri *  -&gt; bool" Usage="System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri (requestUri, fedMsg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="fedMsg" Type="System.IdentityModel.Services.WSFederationMessage" RefType="out" />
      </Parameters>
      <Docs>
        <param name="requestUri">Identyfikator URI, z którym ma zostać utworzony komunikat. Parametrów wiadomości podano w ciągu zapytania. Parametr wa musi być obecny.</param>
        <param name="fedMsg">Po powrocie z tej metody zawiera komunikat, który został utworzony lub <see langword="null" /> Jeśli komunikat nie mógł zostać utworzony. Ten parametr jest traktowany jako niezainicjowany.</param>
        <summary>Próbuje utworzyć wiadomości WS-Federation z określonego identyfikatora URI. Przyjęto założenie, że parametry są określane jako ciąg zapytania.</summary>
        <returns><see langword="true" /> Jeśli komunikat został pomyślnie utworzony; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli komunikat można tworzyć, metoda zwraca prawidłową implementacją <xref:System.IdentityModel.Services.WSFederationMessage> na podstawie parametru wa w ciągu zapytania; na przykład, jeśli parametr wa jest "wsignout1. 0", a następnie <xref:System.IdentityModel.Services.SignOutRequestMessage> obiekt jest zwracany.  
  
 Wywołuje <xref:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>