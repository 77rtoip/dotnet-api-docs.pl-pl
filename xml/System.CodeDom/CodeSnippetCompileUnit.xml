<Type Name="CodeSnippetCompileUnit" FullName="System.CodeDom.CodeSnippetCompileUnit">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4436a73a37dbf0c4e953f3f876be3041743dc518" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30437193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeSnippetCompileUnit : System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetCompileUnit extends System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetCompileUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetCompileUnit&#xA;Inherits CodeCompileUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetCompileUnit : System::CodeDom::CodeCompileUnit" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeCompileUnit</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b4544-101">Reprezentuje fragment kodu literału, który może zostać skompilowany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4544-101">Represents a literal code fragment that can be compiled.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4544-102"><xref:System.CodeDom.CodeSnippetCompileUnit> może reprezentować literału blok kodu, który znajduje się bezpośrednio w źródle bez żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="b4544-102"><xref:System.CodeDom.CodeSnippetCompileUnit> can represent a literal block of code that is included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="b4544-103">A <xref:System.CodeDom.CodeSnippetCompileUnit> przechowuje części kodu, dokładnie w jego oryginalnym formacie jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="b4544-103">A <xref:System.CodeDom.CodeSnippetCompileUnit> stores a section of code, exactly in its original format, as a string.</span></span> <span data-ttu-id="b4544-104">Modelu CodeDOM nie przekłada się fragmentów kodu literału.</span><span class="sxs-lookup"><span data-stu-id="b4544-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="b4544-105">Fragmenty kodu literału są przechowywane i dane wyjściowe w oryginalnym formacie.</span><span class="sxs-lookup"><span data-stu-id="b4544-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="b4544-106">CodeDOM obiektów, które zawierają kod literału są dostarczane, więc deweloperzy umożliwiająca Hermetyzowanie kodu, który jest już w języku docelowym.</span><span class="sxs-lookup"><span data-stu-id="b4544-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="b4544-107"><xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> Właściwość zawiera fragment kodu literałów jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="b4544-107">The <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property contains the literal code fragment as a string.</span></span> <span data-ttu-id="b4544-108"><xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A> Właściwość jest opcjonalna i określa położenie kodu w dokumencie kodu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="b4544-108">The <xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A> property is optional and specifies the position of the code within a source code document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4544-109">W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.CodeDom.CodeSnippetCompileUnit> przy użyciu ciąg, który reprezentuje kod literału.</span><span class="sxs-lookup"><span data-stu-id="b4544-109">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4544-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4544-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4544-112">Jeśli używasz tego konstruktora należy również ustawić <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b4544-112">If you use this constructor you should also set the <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b4544-113">Fragment kodu literału do reprezentowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-113">The literal code fragment to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4544-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-114">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4544-115">W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.CodeDom.CodeSnippetCompileUnit> przy użyciu ciąg, który reprezentuje kod literału.</span><span class="sxs-lookup"><span data-stu-id="b4544-115">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma LinePragma { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeLinePragma LinePragma" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.LinePragma" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePragma As CodeLinePragma" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeLinePragma ^ LinePragma { System::CodeDom::CodeLinePragma ^ get(); void set(System::CodeDom::CodeLinePragma ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4544-116">Pobiera lub ustawia wiersz i pliku informacje o lokalizacji kodu w dokumencie kodu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-116">Gets or sets the line and file information about where the code is located in a source code document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4544-117">A <see cref="T:System.CodeDom.CodeLinePragma" /> wskazujące położenie fragmentu kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-117">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the position of the code fragment.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4544-118">Pobiera lub ustawia fragment kodu literału do reprezentowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-118">Gets or sets the literal code fragment to represent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4544-119">Fragment kodu literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4544-119">The literal code fragment.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>