<Type Name="CodeAttributeArgumentCollection" FullName="System.CodeDom.CodeAttributeArgumentCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c91a3de85534955b93768a59aaa53e51085ad3bb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69341859" /></Metadata><TypeSignature Language="C#" Value="public class CodeAttributeArgumentCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeAttributeArgumentCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeAttributeArgumentCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeAttributeArgumentCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAttributeArgumentCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CodeAttributeArgumentCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera prosty obiekt kolekcji, który może służyć do przechowywania <xref:System.CodeDom.CodeAttributeArgument> zestawu obiektów. <xref:System.CodeDom.CodeAttributeArgumentCollection>  
  
   
  
## Examples  
 Poniższy przykład demonstruje użycie <xref:System.CodeDom.CodeAttributeArgumentCollection> metod klasy. Przykład tworzy nowe wystąpienie klasy i używa metod, aby dodać instrukcje do kolekcji, zwrócić indeks oraz dodać lub usunąć atrybuty w określonym punkcie indeksu.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeAttributeArgumentCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeAttributeArgument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeArgumentCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttributeArgumentCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeArgumentCollection (System.CodeDom.CodeAttributeArgument[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeAttributeArgument[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgument[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeAttributeArgument())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttributeArgumentCollection(cli::array &lt;System::CodeDom::CodeAttributeArgument ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeAttributeArgumentCollection : System.CodeDom.CodeAttributeArgument[] -&gt; System.CodeDom.CodeAttributeArgumentCollection" Usage="new System.CodeDom.CodeAttributeArgumentCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiektów, z której ma zostać zainicjowana kolekcja.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> klasy zawierającej określoną <see cref="T:System.CodeDom.CodeAttributeArgument" /> tablicę obiektów.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Co najmniej jeden obiekt w tablicy jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttributeArgumentCollection (System.CodeDom.CodeAttributeArgumentCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeAttributeArgumentCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgumentCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeAttributeArgumentCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttributeArgumentCollection(System::CodeDom::CodeAttributeArgumentCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeAttributeArgumentCollection : System.CodeDom.CodeAttributeArgumentCollection -&gt; System.CodeDom.CodeAttributeArgumentCollection" Usage="new System.CodeDom.CodeAttributeArgumentCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgumentCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> , za pomocą którego ma zostać zainicjowana kolekcja.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> klasy zawierającej elementy określonej kolekcji źródłowej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeAttributeArgument value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeAttributeArgument value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeAttributeArgument) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeAttributeArgument ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeAttributeArgument -&gt; int" Usage="codeAttributeArgumentCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.CodeDom.CodeAttributeArgument" /> Obiekt do dodania.</param>
        <summary>Dodaje określony <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiekt do kolekcji.</summary>
        <returns>Indeks, w którym wstawiono nowy element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak dodać <xref:System.CodeDom.CodeAttributeArgument> obiekt <xref:System.CodeDom.CodeAttributeArgumentCollection> do wystąpienia.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeAttributeArgumentCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgument[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje elementy określonej <see cref="T:System.CodeDom.CodeAttributeArgument" /> tablicy do końca kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeAttributeArgument[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeAttributeArgument[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgument[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeAttributeArgument())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::CodeAttributeArgument ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeAttributeArgument[] -&gt; unit" Usage="codeAttributeArgumentCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.CodeDom.CodeAttributeArgument" /> , który zawiera obiekty, które mają zostać dodane do kolekcji.</param>
        <summary>Kopiuje elementy określonej <see cref="T:System.CodeDom.CodeAttributeArgument" /> tablicy do końca kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.CodeDom.CodeAttributeArgumentCollection.AddRange%28System.CodeDom.CodeAttributeArgument%5B%5D%29> przeciążenia metody do dodawania elementów członkowskich <xref:System.CodeDom.CodeAttributeArgument> tablicy do <xref:System.CodeDom.CodeAttributeArgumentCollection>.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeAttributeArgumentCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeAttributeArgumentCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgumentCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeAttributeArgumentCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::CodeAttributeArgumentCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeAttributeArgumentCollection -&gt; unit" Usage="codeAttributeArgumentCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgumentCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> , który zawiera obiekty do dodania do kolekcji.</param>
        <summary>Kopiuje zawartość innego <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> obiektu na koniec kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.CodeDom.CodeAttributeArgumentCollection.AddRange%28System.CodeDom.CodeAttributeArgumentCollection%29> przeciążenia metody do dodawania elementów członkowskich jednego <xref:System.CodeDom.CodeAttributeArgumentCollection> obiektu do drugiego <xref:System.CodeDom.CodeAttributeArgumentCollection>.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeAttributeArgumentCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeAttributeArgument value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeAttributeArgument value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.Contains(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CodeAttributeArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::CodeAttributeArgument ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.CodeAttributeArgument -&gt; bool" Usage="codeAttributeArgumentCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt <see cref="T:System.CodeDom.CodeAttributeArgument" /> , który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Pobiera wartość wskazującą, czy kolekcja zawiera określony <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiekt.</summary>
        <returns><see langword="true" />Jeśli kolekcja zawiera określony obiekt; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.CodeDom.CodeAttributeArgumentCollection.Contains%2A> metody w celu wyszukania obecności określonego <xref:System.CodeDom.CodeAttributeArgument> obiektu w <xref:System.CodeDom.CodeAttributeArgumentCollection> obiekcie i pobiera wartość indeksu, pod którą został znaleziony.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeAttributeArgument[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeAttributeArgument[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.CopyTo(System.CodeDom.CodeAttributeArgument[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodeAttributeArgument(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::CodeAttributeArgument ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.CodeAttributeArgument[] * int -&gt; unit" Usage="codeAttributeArgumentCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeAttributeArgument[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym wartości skopiowanych z kolekcji.</param>
        <param name="index">Indeks tablicy, w której ma zostać rozpoczęte Wstawianie.</param>
        <summary>Kopiuje obiekty kolekcji do jednowymiarowego <see cref="T:System.Array" /> wystąpienia, zaczynając od określonego indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób kopiowania zawartości <xref:System.CodeDom.CodeAttributeArgumentCollection> obiektu <xref:System.CodeDom.CodeAttributeArgument> do tablicy rozpoczynającej się od określonej wartości indeksu.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeAttributeArgumentCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica docelowa jest wielowymiarowa.  
  
—lub— 
Liczba elementów w <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> elemencie jest większa niż ilość dostępnego miejsca między indeksem tablicy docelowej określoną <paramref name="index" /> przez parametr a końcem tablicy docelowej.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="array" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Parametr jest mniejszy niż minimalny indeks tablicy docelowej.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeAttributeArgument value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeAttributeArgument value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.IndexOf(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CodeAttributeArgument) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::CodeAttributeArgument ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.CodeAttributeArgument -&gt; int" Usage="codeAttributeArgumentCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt <see cref="T:System.CodeDom.CodeAttributeArgument" /> , który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Pobiera indeks określonego <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiektu w kolekcji, jeśli istnieje w kolekcji.</summary>
        <returns>Indeks określonego obiektu, jeśli znaleziono, w kolekcji; w przeciwnym razie-1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład wyszukuje obecność określonego <xref:System.CodeDom.CodeAttributeArgument> obiektu i <xref:System.CodeDom.CodeAttributeArgumentCollection.IndexOf%2A> używa metody, aby uzyskać wartość indeksu, przy której został znaleziony.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeAttributeArgumentCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeAttributeArgumentCollection.Contains(System.CodeDom.CodeAttributeArgument)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeAttributeArgument value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeAttributeArgument value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.Insert(System.Int32,System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CodeAttributeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::CodeAttributeArgument ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.CodeAttributeArgument -&gt; unit" Usage="codeAttributeArgumentCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera), w którym powinien zostać wstawiony określony obiekt.</param>
        <param name="value"><see cref="T:System.CodeDom.CodeAttributeArgument" /> Obiekt do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiekt do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, <xref:System.CodeDom.CodeAttributeArgumentCollection.Insert%2A> jak za pomocą metody <xref:System.CodeDom.CodeAttributeArgument> dodać obiekt do <xref:System.CodeDom.CodeAttributeArgumentCollection>.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeAttributeArgumentCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeArgument this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeArgument Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeAttributeArgumentCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodeAttributeArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeArgument ^ default[int] { System::CodeDom::CodeAttributeArgument ^ get(int index); void set(int index, System::CodeDom::CodeAttributeArgument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.CodeAttributeArgument with get, set" Usage="System.CodeDom.CodeAttributeArgumentCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks kolekcji do uzyskania dostępu.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiekt pod określonym indeksem w kolekcji.</summary>
        <value><see cref="T:System.CodeDom.CodeAttributeArgument" /> W każdym prawidłowym indeksie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest indeksatorem, którego można użyć w celu uzyskania dostępu do kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Parametr znajduje się poza prawidłowym zakresem indeksów dla kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeAttributeArgument value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeAttributeArgument value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttributeArgumentCollection.Remove(System.CodeDom.CodeAttributeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CodeAttributeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::CodeAttributeArgument ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.CodeAttributeArgument -&gt; unit" Usage="codeAttributeArgumentCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeAttributeArgument" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.CodeDom.CodeAttributeArgument" /> Obiekt, który ma zostać usunięty z kolekcji.</param>
        <summary>Usuwa określony <see cref="T:System.CodeDom.CodeAttributeArgument" /> obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób używania <xref:System.CodeDom.CodeAttributeArgumentCollection.Remove%2A> metody do <xref:System.CodeDom.CodeAttributeArgument> usuwania obiektu z <xref:System.CodeDom.CodeAttributeArgumentCollection>.  
  
 [!code-cpp[CodeAttributeArgumentCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeAttributeArgumentCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeAttributeArgumentCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttributeArgumentCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie znaleziono określonego obiektu w kolekcji.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
