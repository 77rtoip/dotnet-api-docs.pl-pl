<Type Name="CodeCompileUnit" FullName="System.CodeDom.CodeCompileUnit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1da0c2042dc6dea52d85cc7ece420a953f92d54d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69341631" /></Metadata><TypeSignature Language="C#" Value="public class CodeCompileUnit : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCompileUnit extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeCompileUnit&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeCompileUnit : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeCompileUnit = class&#xA;    inherit CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza kontener dla wykresu programu CodeDOM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeCompileUnit>dostarcza kontener dla wykresu programu CodeDOM.  
  
 <xref:System.CodeDom.CodeCompileUnit>zawiera kolekcję, która może przechowywać <xref:System.CodeDom.CodeNamespace> obiekty zawierające wykresy kodu źródłowego CodeDOM, wraz z kolekcją zestawów, do których odwołuje się projekt, oraz kolekcją atrybutów dla zestawu projektu.  
  
 Można przekazać <xref:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit%2A> do metody<xref:System.CodeDom.Compiler.ICodeGenerator> implementacji wraz z innymi parametrami, aby wygenerować kod na podstawie grafu programu zawartego w jednostce kompilacji. <xref:System.CodeDom.CodeCompileUnit>  
  
> [!NOTE]
>  Niektóre języki obsługują tylko jedną przestrzeń nazw, która zawiera pojedynczą klasę w jednostce kompilacji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.CodeDom.CodeCompileUnit> wzór, który modeluje strukturę programu prostego "Hello World". Ten przykład kodu jest częścią większego przykładu, który tworzy również kod z tego modelu i jest dostarczany dla <xref:System.CodeDom.Compiler.CodeDomProvider> klasy.  
  
 [!code-cpp[CodeDomExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#2)]
 [!code-csharp[CodeDomExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#2)]
 [!code-vb[CodeDomExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCompileUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCompileUnit.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCompileUnit();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeCompileUnit" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyCustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection AssemblyCustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection AssemblyCustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyCustomAttributes As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ AssemblyCustomAttributes { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyCustomAttributes : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję atrybutów niestandardowych dla wygenerowanego zestawu.</summary>
        <value>Wskazuje <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> , że atrybuty niestandardowe dla wygenerowanego zestawu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodawać i usuwać <xref:System.CodeDom.CodeAttributeDeclaration> obiekty reprezentujące atrybuty dla wygenerowanego zestawu z tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDirectives">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeDirectiveCollection EndDirectives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeDirectiveCollection EndDirectives" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCompileUnit.EndDirectives" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndDirectives As CodeDirectiveCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeDirectiveCollection ^ EndDirectives { System::CodeDom::CodeDirectiveCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndDirectives : System.CodeDom.CodeDirectiveCollection" Usage="System.CodeDom.CodeCompileUnit.EndDirectives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeDirectiveCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.CodeDom.CodeDirectiveCollection" /> Pobiera obiekt zawierający dyrektywy końcowe.</summary>
        <value><see cref="T:System.CodeDom.CodeDirectiveCollection" /> Obiekt zawierający dyrektywy końcowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.CodeDom.CodeCompileUnit.EndDirectives%2A> właściwości.  Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.CodeDom.CodeRegionDirective> klasy.  
  
 [!code-csharp[System.CodeDom.CodeDirectives#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#3)]
 [!code-vb[System.CodeDom.CodeDirectives#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeNamespaceCollection Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeNamespaceCollection Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCompileUnit.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As CodeNamespaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeNamespaceCollection ^ Namespaces { System::CodeDom::CodeNamespaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.CodeDom.CodeNamespaceCollection" Usage="System.CodeDom.CodeCompileUnit.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję przestrzeni nazw.</summary>
        <value><see cref="T:System.CodeDom.CodeNamespaceCollection" /> Wskazuje przestrzenie nazw używane przez jednostkę kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodawać i usuwać <xref:System.CodeDom.CodeNamespace> obiekty z tej kolekcji. Każdy obiekt reprezentuje przestrzeń nazw.  
  
> [!NOTE]
>  Niektóre języki obsługują tylko jedną przestrzeń nazw, która zawiera pojedynczą klasę w jednostce kompilacji.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.CodeDom.CodeCompileUnit> wzór, który modeluje strukturę programu prostego "Hello World". Ten przykład jest częścią większego przykładu, który tworzy również kod z tego modelu i jest dostarczany dla <xref:System.CodeDom.Compiler.CodeDomProvider> klasy.  
  
 [!code-cpp[CodeDomExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#2)]
 [!code-csharp[CodeDomExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#2)]
 [!code-vb[CodeDomExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeNamespaceCollection" />
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCompileUnit.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedAssemblies As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ ReferencedAssemblies { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.Specialized.StringCollection" Usage="System.CodeDom.CodeCompileUnit.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestawy, do których się odwołuje.</summary>
        <value>A <see cref="T:System.Collections.Specialized.StringCollection" /> , który zawiera nazwy plików zestawów, do których się odwołuje.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz dodawać i usuwać nazwy plików z tej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDirectives">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeDirectiveCollection StartDirectives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeDirectiveCollection StartDirectives" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCompileUnit.StartDirectives" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartDirectives As CodeDirectiveCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeDirectiveCollection ^ StartDirectives { System::CodeDom::CodeDirectiveCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StartDirectives : System.CodeDom.CodeDirectiveCollection" Usage="System.CodeDom.CodeCompileUnit.StartDirectives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeDirectiveCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.CodeDom.CodeDirectiveCollection" /> Pobiera obiekt zawierający dyrektywy startu.</summary>
        <value><see cref="T:System.CodeDom.CodeDirectiveCollection" /> Obiekt zawierający dyrektywy startu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.CodeDom.CodeCompileUnit.StartDirectives%2A> właściwości.  Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.CodeDom.CodeRegionDirective> klasy.  
  
 [!code-csharp[System.CodeDom.CodeDirectives#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#2)]
 [!code-vb[System.CodeDom.CodeDirectives#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
