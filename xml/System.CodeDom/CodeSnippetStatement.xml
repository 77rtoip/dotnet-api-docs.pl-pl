<Type Name="CodeSnippetStatement" FullName="System.CodeDom.CodeSnippetStatement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ffd739178baf641798a74cf065be97e2644356f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69341078" /></Metadata><TypeSignature Language="C#" Value="public class CodeSnippetStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetStatement : System::CodeDom::CodeStatement" />
  <TypeSignature Language="F#" Value="type CodeSnippetStatement = class&#xA;    inherit CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7323e-101">Reprezentuje instrukcję używającą fragmentu kodu literału.</span><span class="sxs-lookup"><span data-stu-id="7323e-101">Represents a statement using a literal code fragment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7323e-102"><xref:System.CodeDom.CodeSnippetStatement>może reprezentować instrukcję przy użyciu fragmentu kodu literału, który zostanie dołączony bezpośrednio do źródła bez modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="7323e-102"><xref:System.CodeDom.CodeSnippetStatement> can represent a statement using a literal code fragment that will be included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="7323e-103"><xref:System.CodeDom.CodeSnippetStatement> Zapisuje sekcję kodu dokładnie w oryginalnym formacie jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="7323e-103">A <xref:System.CodeDom.CodeSnippetStatement> stores a section of code exactly in its original format as a string.</span></span> <span data-ttu-id="7323e-104">CodeDOM nie tłumaczy fragmentów kodu literałów.</span><span class="sxs-lookup"><span data-stu-id="7323e-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="7323e-105">Fragmenty kodu literału są przechowywane i wyprowadzane w ich oryginalnym formacie.</span><span class="sxs-lookup"><span data-stu-id="7323e-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="7323e-106">Obiekty CodeDOM zawierające kod literału są udostępniane, aby deweloperzy mogli hermetyzować kod, który jest już w języku docelowym.</span><span class="sxs-lookup"><span data-stu-id="7323e-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="7323e-107"><xref:System.CodeDom.CodeSnippetStatement.Value%2A> Właściwość zawiera kod literału dla instrukcji wstawki.</span><span class="sxs-lookup"><span data-stu-id="7323e-107">The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7323e-108">Poniższy przykład tworzy wystąpienie <xref:System.CodeDom.CodeSnippetStatement> klasy przy użyciu fragmentu kodu literału.</span><span class="sxs-lookup"><span data-stu-id="7323e-108">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="7323e-109">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.CodeDom.CodeRegionDirective> klasy.</span><span class="sxs-lookup"><span data-stu-id="7323e-109">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7323e-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeSnippetStatement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7323e-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7323e-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeSnippetStatement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7323e-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeSnippetStatement : string -&gt; System.CodeDom.CodeSnippetStatement" Usage="new System.CodeDom.CodeSnippetStatement value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7323e-112">Fragment kodu literału instrukcji do przedstawienia.</span><span class="sxs-lookup"><span data-stu-id="7323e-112">The literal code fragment of the statement to represent.</span></span></param>
        <summary><span data-ttu-id="7323e-113">Inicjuje nowe wystąpienie <see cref="T:System.CodeDom.CodeSnippetStatement" /> klasy przy użyciu określonego fragmentu kodu.</span><span class="sxs-lookup"><span data-stu-id="7323e-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class using the specified code fragment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7323e-114">Poniższy przykład tworzy wystąpienie <xref:System.CodeDom.CodeSnippetStatement> klasy przy użyciu fragmentu kodu literału.</span><span class="sxs-lookup"><span data-stu-id="7323e-114">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="7323e-115">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.CodeDom.CodeRegionDirective> klasy.</span><span class="sxs-lookup"><span data-stu-id="7323e-115">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetStatement.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.CodeDom.CodeSnippetStatement.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7323e-116">Pobiera lub ustawia instrukcję literału fragmentu kodu.</span><span class="sxs-lookup"><span data-stu-id="7323e-116">Gets or sets the literal code fragment statement.</span></span></summary>
        <value><span data-ttu-id="7323e-117">Instrukcja fragmentu kodu literału.</span><span class="sxs-lookup"><span data-stu-id="7323e-117">The literal code fragment statement.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
