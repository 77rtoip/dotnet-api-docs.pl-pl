<Type Name="CodeMethodInvokeExpression" FullName="System.CodeDom.CodeMethodInvokeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ffb6ea3627a9a28faddf0d7ac8c7c589413cccc" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52381432" /></Metadata><TypeSignature Language="C#" Value="public class CodeMethodInvokeExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeMethodInvokeExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeMethodInvokeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeMethodInvokeExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeMethodInvokeExpression : System::CodeDom::CodeExpression" />
  <TypeSignature Language="F#" Value="type CodeMethodInvokeExpression = class&#xA;    inherit CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ddd26-101">Reprezentuje wyrażenie, które wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="ddd26-101">Represents an expression that invokes a method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd26-102"><xref:System.CodeDom.CodeMethodInvokeExpression> może służyć do reprezentowania wyrażenie, które wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="ddd26-102"><xref:System.CodeDom.CodeMethodInvokeExpression> can be used to represent an expression that invokes a method.</span></span>  
  
 <span data-ttu-id="ddd26-103"><xref:System.CodeDom.CodeMethodInvokeExpression.Method%2A> Właściwość określa metodę do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-103">The <xref:System.CodeDom.CodeMethodInvokeExpression.Method%2A> property specifies the method to invoke.</span></span> <span data-ttu-id="ddd26-104"><xref:System.CodeDom.CodeMethodInvokeExpression.Parameters%2A> Właściwość wskazuje parametry do przekazania do metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-104">The <xref:System.CodeDom.CodeMethodInvokeExpression.Parameters%2A> property indicates the parameters to pass to the method.</span></span> <span data-ttu-id="ddd26-105">Użyj <xref:System.CodeDom.CodeDirectionExpression> do określania kierunku pola parametru.</span><span class="sxs-lookup"><span data-stu-id="ddd26-105">Use a <xref:System.CodeDom.CodeDirectionExpression> to specify the field direction of a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddd26-106">Ten przykład demonstruje użycie <xref:System.CodeDom.CodeMethodInvokeExpression> do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-106">This example demonstrates using a <xref:System.CodeDom.CodeMethodInvokeExpression> to invoke a method.</span></span>  
  
 [!code-cpp[CodeMethodInvokeExpression#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeMethodInvokeExpression/CPP/codemethodinvokeexpressionexample.cpp#2)]
 [!code-csharp[CodeMethodInvokeExpression#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeMethodInvokeExpression/CS/codemethodinvokeexpressionexample.cs#2)]
 [!code-vb[CodeMethodInvokeExpression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeMethodInvokeExpression/VB/codemethodinvokeexpressionexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeDirectionExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ddd26-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ddd26-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodInvokeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodInvokeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodInvokeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ddd26-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ddd26-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodInvokeExpression (System.CodeDom.CodeMethodReferenceExpression method, params System.CodeDom.CodeExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeMethodReferenceExpression method, class System.CodeDom.CodeExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeMethodReferenceExpression,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (method As CodeMethodReferenceExpression, ParamArray parameters As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodInvokeExpression(System::CodeDom::CodeMethodReferenceExpression ^ method, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeMethodInvokeExpression : System.CodeDom.CodeMethodReferenceExpression * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeMethodInvokeExpression" Usage="new System.CodeDom.CodeMethodInvokeExpression (method, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="method" Type="System.CodeDom.CodeMethodReferenceExpression" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="ddd26-109">A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> oznacza metodę do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-109">A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> that indicates the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="ddd26-110">Tablica <see cref="T:System.CodeDom.CodeExpression" /> obiektów, które wskazują parametry za pomocą którego można wywołać metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-110">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters with which to invoke the method.</span></span></param>
        <summary><span data-ttu-id="ddd26-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> klasy przy użyciu określonej metody i parametrów.</span><span class="sxs-lookup"><span data-stu-id="ddd26-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class using the specified method and parameters.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeMethodInvokeExpression (System.CodeDom.CodeExpression targetObject, string methodName, params System.CodeDom.CodeExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject, string methodName, class System.CodeDom.CodeExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression, methodName As String, ParamArray parameters As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeMethodInvokeExpression(System::CodeDom::CodeExpression ^ targetObject, System::String ^ methodName, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeMethodInvokeExpression : System.CodeDom.CodeExpression * string * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeMethodInvokeExpression" Usage="new System.CodeDom.CodeMethodInvokeExpression (targetObject, methodName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetObject"><span data-ttu-id="ddd26-112">A <see cref="T:System.CodeDom.CodeExpression" /> który wskazuje na obiekt docelowy przy użyciu metody do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-112">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object with the method to invoke.</span></span></param>
        <param name="methodName"><span data-ttu-id="ddd26-113">Nazwa metody do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-113">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="ddd26-114">Tablica <see cref="T:System.CodeDom.CodeExpression" /> obiektów, które wskazują parametrów do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-114">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters to call the method with.</span></span></param>
        <summary><span data-ttu-id="ddd26-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> przy użyciu określonego obiektu docelowego obiektu, Nazwa metody i parametrów.</span><span class="sxs-lookup"><span data-stu-id="ddd26-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> class using the specified target object, method name, and parameters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeMethodReferenceExpression Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeMethodReferenceExpression Method" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMethodInvokeExpression.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As CodeMethodReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeMethodReferenceExpression ^ Method { System::CodeDom::CodeMethodReferenceExpression ^ get(); void set(System::CodeDom::CodeMethodReferenceExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : System.CodeDom.CodeMethodReferenceExpression with get, set" Usage="System.CodeDom.CodeMethodInvokeExpression.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMethodReferenceExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd26-116">Pobiera lub Ustawia metodę do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-116">Gets or sets the method to invoke.</span></span></summary>
        <value><span data-ttu-id="ddd26-117">A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> oznacza metodę do wywołania.</span><span class="sxs-lookup"><span data-stu-id="ddd26-117">A <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> that indicates the method to invoke.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeMethodInvokeExpression.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpressionCollection ^ Parameters { System::CodeDom::CodeExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.CodeDom.CodeExpressionCollection" Usage="System.CodeDom.CodeMethodInvokeExpression.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ddd26-118">Pobiera parametry do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-118">Gets the parameters to invoke the method with.</span></span></summary>
        <value><span data-ttu-id="ddd26-119">A <see cref="T:System.CodeDom.CodeExpressionCollection" /> oznacza parametrów do wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="ddd26-119">A <see cref="T:System.CodeDom.CodeExpressionCollection" /> that indicates the parameters to invoke the method with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddd26-120">Użyj <xref:System.CodeDom.CodeDirectionExpression> do określania kierunku pole, dla parametru.</span><span class="sxs-lookup"><span data-stu-id="ddd26-120">Use a <xref:System.CodeDom.CodeDirectionExpression> to specify a field direction for the parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeExpressionCollection" />
        <altmember cref="T:System.CodeDom.CodeDirectionExpression" />
      </Docs>
    </Member>
  </Members>
</Type>