<Type Name="CodeTypeDeclarationCollection" FullName="System.CodeDom.CodeTypeDeclarationCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="beff94a9de283d8bef53a7c80e5ddf5929fec99a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713767" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeTypeDeclarationCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeDeclarationCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeDeclarationCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeDeclarationCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeDeclarationCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type CodeTypeDeclarationCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeTypeDeclarationCollection> Klasa udostępnia obiekt kolekcji proste, który może służyć do przechowywania zestaw <xref:System.CodeDom.CodeTypeDeclaration> obiektów.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection> klasy. W przykładzie tworzy nowe wystąpienie klasy i używa kilka metod, aby dodać instrukcje do kolekcji, zwróć ich indeks i dodać lub usunąć atrybuty w momencie określonego indeksu.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#1)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#1)]
 [!code-vb[CodeTypeDeclarationCollectionExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeDeclarationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia puste wystąpienie <xref:System.CodeDom.CodeTypeDeclarationCollection> klasy.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#2)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#2)]
 [!code-vb[CodeTypeDeclarationCollectionExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection (System.CodeDom.CodeTypeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeDeclaration[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeTypeDeclaration())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeDeclarationCollection(cli::array &lt;System::CodeDom::CodeTypeDeclaration ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeDeclarationCollection : System.CodeDom.CodeTypeDeclaration[] -&gt; System.CodeDom.CodeTypeDeclarationCollection" Usage="new System.CodeDom.CodeTypeDeclarationCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektów, z którym do zainicjowania dla kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> klasę, która zawiera określona tablica elementów <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclarationCollection (System.CodeDom.CodeTypeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeDeclarationCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As CodeTypeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeDeclarationCollection(System::CodeDom::CodeTypeDeclarationCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeDeclarationCollection : System.CodeDom.CodeTypeDeclarationCollection -&gt; System.CodeDom.CodeTypeDeclarationCollection" Usage="new System.CodeDom.CodeTypeDeclarationCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> obiektu, z którym do zainicjowania dla kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> klasę, która zawiera elementy kolekcji określonego źródła.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As CodeTypeDeclaration) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::CodeDom::CodeTypeDeclaration ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.CodeDom.CodeTypeDeclaration -&gt; int" Usage="codeTypeDeclarationCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> Obiekt do dodania.</param>
        <summary>Dodaje określony <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektu do kolekcji.</summary>
        <returns>Indeks, w którym dodano nowego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.Add%2A> metody w celu dodania <xref:System.CodeDom.CodeTypeDeclaration> do obiektu <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#3)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#3)]
 [!code-vb[CodeTypeDeclarationCollectionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje elementy określonej tablicy na końcu kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeTypeDeclaration[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeTypeDeclaration[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeTypeDeclaration())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::CodeDom::CodeTypeDeclaration ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeTypeDeclaration[] -&gt; unit" Usage="codeTypeDeclarationCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.CodeDom.CodeTypeDeclaration" /> zawiera obiekty do dodania do kolekcji.</param>
        <summary>Kopiuje elementy określonej tablicy na końcu kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.AddRange%28System.CodeDom.CodeTypeDeclaration%5B%5D%29> przeciążenie metody, aby dodać tablicę <xref:System.CodeDom.CodeTypeDeclaration> obiekty do <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.CodeDom.CodeTypeDeclarationCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.CodeDom.CodeTypeDeclarationCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclarationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As CodeTypeDeclarationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::CodeDom::CodeTypeDeclarationCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.CodeDom.CodeTypeDeclarationCollection -&gt; unit" Usage="codeTypeDeclarationCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclarationCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> obiekt, który zawiera obiekty do dodania do kolekcji.</param>
        <summary>Dodaje zawartość innego <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> obiekt do końca kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.AddRange%28System.CodeDom.CodeTypeDeclarationCollection%29> przeciążenie metody, aby dodać <xref:System.CodeDom.CodeTypeDeclaration> obiekty z jednej <xref:System.CodeDom.CodeTypeDeclarationCollection> do innego <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#4)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#4)]
 [!code-vb[CodeTypeDeclarationCollectionExample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As CodeTypeDeclaration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::CodeDom::CodeTypeDeclaration ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.CodeDom.CodeTypeDeclaration -&gt; bool" Usage="codeTypeDeclarationCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> Obiektu do wyszukania w kolekcji.</param>
        <summary>Pobiera wartość wskazującą, czy kolekcja zawiera określony <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli kolekcja zawiera określony obiekt; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.Contains%2A> metody do znalezienia <xref:System.CodeDom.CodeTypeDeclaration> obiektu w <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.CodeDom.CodeTypeDeclaration[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.CodeDom.CodeTypeDeclaration[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.CopyTo(System.CodeDom.CodeTypeDeclaration[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CodeTypeDeclaration(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::CodeDom::CodeTypeDeclaration ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.CodeDom.CodeTypeDeclaration[] * int -&gt; unit" Usage="codeTypeDeclarationCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.CodeDom.CodeTypeDeclaration[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa <see cref="T:System.Array" /> to miejsce docelowe wartości kopiowanych z kolekcji.</param>
        <param name="index">Indeks tablicy, od którego ma zostać rozpoczęta wstawiania.</param>
        <summary>Kopiuje elementy w <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> obiektu na jednowymiarowe <see cref="T:System.Array" /> wystąpienia, zaczynając od określonego indeksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.CopyTo%2A> metodę, aby skopiować zawartość <xref:System.CodeDom.CodeTypeDeclarationCollection> obiektu do tablicy, zaczynając od wartości określonego indeksu.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#6)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#6)]
 [!code-vb[CodeTypeDeclarationCollectionExample#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica docelowa jest wielowymiarowy.  - lub - liczba elementów w <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> jest większa niż dostępne miejsce od indeksu tablicy docelowej, określone przez <paramref name="index" /> parametr i końca tablicy docelowej.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest mniejsza niż minimalna wartość indeksu tablicy docelowej.</exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As CodeTypeDeclaration) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::CodeDom::CodeTypeDeclaration ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.CodeDom.CodeTypeDeclaration -&gt; int" Usage="codeTypeDeclarationCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> Do zlokalizowania w kolekcji.</param>
        <summary>Pobiera indeks określonego <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektu w <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />, jeśli istnieje w kolekcji.</summary>
        <returns>Indeks określonego obiektu, jeśli został znaleziony, w kolekcji; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pobiera <xref:System.CodeDom.CodeTypeDeclaration> wpisów z <xref:System.CodeDom.CodeTypeDeclarationCollection> obiektu i wyświetla nazwy i indeksów zwrócony przez <xref:System.CodeDom.CodeTypeDeclarationCollection.IndexOf%2A> metody.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#5)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#5)]
 [!code-vb[CodeTypeDeclarationCollectionExample#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::CodeDom::CodeTypeDeclaration ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeTypeDeclarationCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, w którym powinien zostać wstawiony określony obiekt.</param>
        <param name="value">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> Obiekt do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektu do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.Insert%2A> do wstawienia <xref:System.CodeDom.CodeTypeDeclaration> obiekt do <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#8)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#8)]
 [!code-vb[CodeTypeDeclarationCollectionExample#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclarationCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeDeclaration ^ default[int] { System::CodeDom::CodeTypeDeclaration ^ get(int index); void set(int index, System::CodeDom::CodeTypeDeclaration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.CodeDom.CodeTypeDeclaration with get, set" Usage="System.CodeDom.CodeTypeDeclarationCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks kolekcji do uzyskania dostępu.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiektu pod określonym indeksem w kolekcji.</summary>
        <value>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> na każdy nieprawidłowy indeks.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest indeksatorze, który można uzyskać dostępu do kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr jest poza prawidłowym zakresem indeksów kolekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.CodeDom.CodeTypeDeclaration value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.CodeDom.CodeTypeDeclaration value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclarationCollection.Remove(System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::CodeDom::CodeTypeDeclaration ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.CodeDom.CodeTypeDeclaration -&gt; unit" Usage="codeTypeDeclarationCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określoną <see cref="T:System.CodeDom.CodeTypeDeclaration" /> obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeTypeDeclarationCollection.Remove%2A> metodę, aby usunąć <xref:System.CodeDom.CodeTypeDeclaration> obiekt z <xref:System.CodeDom.CodeTypeDeclarationCollection>.  
  
 [!code-cpp[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CPP/class1.cpp#9)]
 [!code-csharp[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/CS/class1.cs#9)]
 [!code-vb[CodeTypeDeclarationCollectionExample#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationCollectionExample/VB/class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie znaleziono określonego obiektu w kolekcji.</exception>
      </Docs>
    </Member>
  </Members>
</Type>