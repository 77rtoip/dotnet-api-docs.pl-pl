<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2eddba9493cdf6a94d2151a6298891215e39486" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56787497" /></Metadata><TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeTypeReference = class&#xA;    inherit CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="851b2-101">Reprezentuje odwołanie do typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-101">Represents a reference to a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-102">Element <xref:System.CodeDom.CodeTypeReference> obiektu jest używana do reprezentowania typów obiektów CodeDOM.</span><span class="sxs-lookup"><span data-stu-id="851b2-102">A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects.</span></span> <span data-ttu-id="851b2-103">Jeśli mają typów CodeDOM `Type` właściwość jest typu <xref:System.CodeDom.CodeTypeReference>.</span><span class="sxs-lookup"><span data-stu-id="851b2-103">When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>.</span></span> <span data-ttu-id="851b2-104">Na przykład <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> właściwość <xref:System.CodeDom.CodeTypeReference> reprezentujący typ danych pola.</span><span class="sxs-lookup"><span data-stu-id="851b2-104">For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.</span></span>  
  
 <span data-ttu-id="851b2-105">A <xref:System.CodeDom.CodeTypeReference> mogą być zainicjowane z <xref:System.Type> obiektu lub ciąg.</span><span class="sxs-lookup"><span data-stu-id="851b2-105">A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string.</span></span> <span data-ttu-id="851b2-106">Ogólnie zaleca się używanie <xref:System.Type> Aby to zrobić, mimo że go może nie zawsze jest możliwe.</span><span class="sxs-lookup"><span data-stu-id="851b2-106">It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible.</span></span> <span data-ttu-id="851b2-107">Jeśli inicjowanie wystąpienia tej klasy przy użyciu parametrów, zdecydowanie zaleca się zawsze używaj typów w pełni kwalifikowaną, takich jak "System.Console", a nie po prostu "konsoli", ponieważ nie wszystkie języki obsługują importowania przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="851b2-107">If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</span></span> <span data-ttu-id="851b2-108">Można określić typy tablic przez przekazanie w obiekcie typu tablicy lub przy użyciu jednego z konstruktorów, które akceptują ranga jako parametr.</span><span class="sxs-lookup"><span data-stu-id="851b2-108">Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</span></span>  
  
 <span data-ttu-id="851b2-109"><xref:System.CodeDom.CodeTypeReference.BaseType%2A> Właściwość określa nazwę typu do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-109">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference.</span></span> <span data-ttu-id="851b2-110">Odwołania do typów tablicowych <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> właściwość wskazuje typ elementów tablicy, a <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> właściwość wskazuje liczbę wymiarów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-110">For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="851b2-111">W poniższym przykładzie pokazano użycie <xref:System.CodeDom.CodeTypeReference> do reprezentowania odwołanie do typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-111">The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.</span></span>  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="851b2-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="851b2-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="851b2-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-114">Ten konstruktor tworzy pustą <xref:System.CodeDom.CodeTypeReference> obiektu.</span><span class="sxs-lookup"><span data-stu-id="851b2-114">This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.</span></span>  <span data-ttu-id="851b2-115">Jeśli używasz tego konstruktora, ustaw właściwości w celu nawiązania odwołanie do typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-115">If you use this constructor, set properties to establish the type reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeParameter -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeParameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeParameter"><span data-ttu-id="851b2-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> reprezentujący typ parametru typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</span></span></param>
        <summary><span data-ttu-id="851b2-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu parametru typu określonego kodu.</span><span class="sxs-lookup"><span data-stu-id="851b2-117">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="851b2-118">Nazwa typu do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-118">The name of the type to reference.</span></span></param>
        <summary><span data-ttu-id="851b2-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonej nazwy typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-119">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-120">Jeśli `typeName` odwołuje się do parametru typu ogólnego, musi on być zgodny z konwencjami składni dla typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="851b2-120">If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="851b2-121">Na przykład podpis odbicia dla <xref:System.Collections.Generic.Dictionary%602> typu, gdzie `K` jest ciągiem i `V` jest <xref:System.Collections.Generic.List%601> liczb całkowitych, jest reprezentowane przez odbicie, zgodnie z poniższymi (z informacjami o zestawie, usunięte): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span><span class="sxs-lookup"><span data-stu-id="851b2-121">For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="851b2-122">Należy użyć nawiasów kwadratowych ([]) i nie C# nawiasy (<>) do rozdzielenia parametrów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="851b2-122">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="851b2-123">Aby uniknąć pomyłki w określenie składni, należy rozważyć użycie konstruktora, który przyjmuje typ jako parametr zamiast ciągu.</span><span class="sxs-lookup"><span data-stu-id="851b2-123">To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="851b2-124"><see cref="T:System.Type" /> Do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-124">The <see cref="T:System.Type" /> to reference.</span></span></param>
        <summary><span data-ttu-id="851b2-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonego typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-125">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="851b2-126"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="851b2-126"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (arrayType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType"><span data-ttu-id="851b2-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> oznacza typ tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</span></span></param>
        <param name="rank"><span data-ttu-id="851b2-128">Liczba wymiarów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-128">The number of dimensions in the array.</span></span></param>
        <summary><span data-ttu-id="851b2-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonej tablicy typu i rangi.</span><span class="sxs-lookup"><span data-stu-id="851b2-129">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-130">Ten konstruktor może służyć do konstruowania tablice tablic przez zagnieżdżanie <xref:System.CodeDom.CodeTypeReference> obiektów.</span><span class="sxs-lookup"><span data-stu-id="851b2-130">This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="851b2-131">Nazwa typu do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-131">The name of the type to reference.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="851b2-132">Tablica <see cref="T:System.CodeDom.CodeTypeReference" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="851b2-132">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</span></span></param>
        <summary><span data-ttu-id="851b2-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> klasy przy użyciu nazwy i typu argumentów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-133">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="851b2-134">Nazwa typu do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-134">The name of the type to reference.</span></span></param>
        <param name="codeTypeReferenceOption"><span data-ttu-id="851b2-135">Opcja odwołanie do typu kodu, jeden z <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="851b2-135">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="851b2-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonej nazwy typu i kodu opcja odwołanie do typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-136">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (baseType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="851b2-137">Nazwa typu elementów tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-137">The name of the type of the elements of the array.</span></span></param>
        <param name="rank"><span data-ttu-id="851b2-138">Liczba wymiarów tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-138">The number of dimensions of the array.</span></span></param>
        <summary><span data-ttu-id="851b2-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> klasy przy użyciu nazwy typu określonej tablicy i rangi.</span><span class="sxs-lookup"><span data-stu-id="851b2-139">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (type, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="851b2-140"><see cref="T:System.Type" /> Do odwołania.</span><span class="sxs-lookup"><span data-stu-id="851b2-140">The <see cref="T:System.Type" /> to reference.</span></span></param>
        <param name="codeTypeReferenceOption"><span data-ttu-id="851b2-141">Opcja odwołanie do typu kodu, jeden z <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="851b2-141">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="851b2-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeTypeReference" /> przy użyciu określonego typu i kodu odwołanie do typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-142">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayElementType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="851b2-143">Pobiera lub ustawia typ elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-143">Gets or sets the type of the elements in the array.</span></span></summary>
        <value><span data-ttu-id="851b2-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> oznacza typ elementów tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-145">To jest ignorowana, chyba że <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> właściwość jest większa niż lub równa 1.</span><span class="sxs-lookup"><span data-stu-id="851b2-145">This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayRank : int with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="851b2-146">Pobiera lub ustawia rangą tablicy w tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-146">Gets or sets the array rank of the array.</span></span></summary>
        <value><span data-ttu-id="851b2-147">Liczba wymiarów tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-147">The number of dimensions of the array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : string with get, set" Usage="System.CodeDom.CodeTypeReference.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="851b2-148">Pobiera lub ustawia nazwę typu, do którego nastąpiło odwołanie.</span><span class="sxs-lookup"><span data-stu-id="851b2-148">Gets or sets the name of the type being referenced.</span></span></summary>
        <value><span data-ttu-id="851b2-149">Nazwa typu, do którego nastąpiło odwołanie.</span><span class="sxs-lookup"><span data-stu-id="851b2-149">The name of the type being referenced.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-150">Ta właściwość zawiera nazwę typu, chyba że jest to typ tablicy, w tym przypadku jest typ elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="851b2-150">This property contains the name of the type unless it is an array type, in which case it is the array element type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="851b2-151">Nazwa właściwości może być mylące.</span><span class="sxs-lookup"><span data-stu-id="851b2-151">The name of the property may be misleading.</span></span> <span data-ttu-id="851b2-152">Ta właściwość zawiera tylko nazwę typu z dowolnym zakończeń tablicy lub argumenty typu generycznego usunięte, nie typ podstawowy lub element nadrzędny może być oczekiwany.</span><span class="sxs-lookup"><span data-stu-id="851b2-152">This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</span></span> <span data-ttu-id="851b2-153">Na przykład <xref:System.CodeDom.CodeTypeReference.BaseType%2A> wartość ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` jest ``System.Collections.Generic.Dictionary`2``.</span><span class="sxs-lookup"><span data-stu-id="851b2-153">For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.</span></span>  
  
## <a name="representation-of-generic-types"></a><span data-ttu-id="851b2-154">Reprezentacja typów ogólnych</span><span class="sxs-lookup"><span data-stu-id="851b2-154">Representation of Generic Types</span></span>  
 <span data-ttu-id="851b2-155">Informacje przedstawione w tej sekcji jest przeznaczona dla deweloperów dostawcy CodeDom i ma zastosowanie tylko do zgodnych ze specyfikacją CLS języków.</span><span class="sxs-lookup"><span data-stu-id="851b2-155">The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</span></span> <span data-ttu-id="851b2-156">Zwracana wartość może zawierać typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="851b2-156">The return value can contain generic types.</span></span> <span data-ttu-id="851b2-157">Typy ogólne są formatowane z nazwą typu, i akcent ("" ") a następnie według liczby argumentów typu rodzajowego.</span><span class="sxs-lookup"><span data-stu-id="851b2-157">Generic types are formatted with the name of the type followed by a grave accent ("\`") followed by a count of the generic type arguments.</span></span> <span data-ttu-id="851b2-158">Argumenty typu generycznego znajdują się w <xref:System.CodeDom.CodeTypeReferenceCollection> zwrócone przez <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="851b2-158">The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property.</span></span> <span data-ttu-id="851b2-159">Wartości zwracane przez <xref:System.CodeDom.CodeTypeReference.BaseType%2A> oraz skojarzonych z nimi <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> tę samą zawartość, jako wartość typ zwracany przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="851b2-159">The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.</span></span>  
  
 <span data-ttu-id="851b2-160">Na przykład skonstruowany <xref:System.Collections.Generic.Dictionary%602> gdzie `K` jest ciągiem i `V` jest zbudowany <xref:System.Collections.Generic.List%601> liczb całkowitych jest reprezentowany przez odbicie, zgodnie z poniższymi (z informacjami o zestawie, usunięte):</span><span class="sxs-lookup"><span data-stu-id="851b2-160">For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):</span></span>  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 <span data-ttu-id="851b2-161">Analiza kodu rekursywnie <xref:System.CodeDom.CodeTypeReference.BaseType%2A> właściwość <xref:System.CodeDom.CodeTypeReference> dla <xref:System.Collections.Generic.Dictionary%602> daje ten sam ciągi jako reprezentacja odbicia powyżej:</span><span class="sxs-lookup"><span data-stu-id="851b2-161">Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:</span></span>  
  
-   <span data-ttu-id="851b2-162"><xref:System.CodeDom.CodeTypeReference.BaseType%2A> Właściwości dla obiektu nadrzędnego <xref:System.CodeDom.CodeTypeReference> zwraca następujące:</span><span class="sxs-lookup"><span data-stu-id="851b2-162">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <span data-ttu-id="851b2-163"><xref:System.CodeDom.CodeTypeReference.BaseType%2A> Właściwości dla pierwszej <xref:System.CodeDom.CodeTypeReference> obiektu <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> kolekcji zwraca następujące:</span><span class="sxs-lookup"><span data-stu-id="851b2-163">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.String  
    ```  
  
-   <span data-ttu-id="851b2-164"><xref:System.CodeDom.CodeTypeReference.BaseType%2A> Właściwości dla drugiego <xref:System.CodeDom.CodeTypeReference> obiektu <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> kolekcji zwraca następujące:</span><span class="sxs-lookup"><span data-stu-id="851b2-164">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <span data-ttu-id="851b2-165"><xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> Właściwość <xref:System.CodeDom.CodeTypeReference> dla obiektu ``System.Collections.Generic.List`1`` zwraca następujące:</span><span class="sxs-lookup"><span data-stu-id="851b2-165">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:</span></span>  
  
    ```  
    System.Int32  
    ```  
  
 <span data-ttu-id="851b2-166">Liczba argumentów typu powinny być używane, gdy podczas analizowania skojarzonego <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> wartości.</span><span class="sxs-lookup"><span data-stu-id="851b2-166">The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values.</span></span> <span data-ttu-id="851b2-167">Częstą praktyką jest, aby usunąć liczby argumentów typu z wygenerowanego kodu, ale praktyka jest specyficzne dla kompilatora.</span><span class="sxs-lookup"><span data-stu-id="851b2-167">The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</span></span>  <span data-ttu-id="851b2-168">Należy zauważyć, że liczba argumentów typu można znaleźć nazwy typu zagnieżdżonego, w którym to przypadku następuje znak plus ("+").</span><span class="sxs-lookup"><span data-stu-id="851b2-168">It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="851b2-169">Podczas tworzenia ogólnego <xref:System.CodeDom.CodeTypeReference>, zalecanym rozwiązaniem jest określenie argumentów typu jako <xref:System.CodeDom.CodeTypeReference> obiektów lub użyj konstruktora, który przyjmuje <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="851b2-169">When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>.</span></span> <span data-ttu-id="851b2-170">Użyj konstruktora, który tworzy <xref:System.CodeDom.CodeTypeReference> z ciągu może prowadzić do błędów undiscoverable argument typu.</span><span class="sxs-lookup"><span data-stu-id="851b2-170">Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.CodeTypeReferenceOptions with get, set" Usage="System.CodeDom.CodeTypeReference.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="851b2-171">Pobiera lub ustawia opcję Odwołanie do typu kodu.</span><span class="sxs-lookup"><span data-stu-id="851b2-171">Gets or sets the code type reference option.</span></span></summary>
        <value><span data-ttu-id="851b2-172">Bitowa kombinacja <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="851b2-172">A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="851b2-173">Pobiera argumenty typu odwołania bieżącego typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="851b2-173">Gets the type arguments for the current generic type reference.</span></span></summary>
        <value><span data-ttu-id="851b2-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> zawierający argumentów typu dla bieżącego <see cref="T:System.CodeDom.CodeTypeReference" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="851b2-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="851b2-175"><xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> Właściwości to zbiór typu odwołania do podstawienia pod odwołań do parametru typu bieżącego typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="851b2-175">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type.</span></span> <span data-ttu-id="851b2-176">Kolekcja zawiera wszystkich argumentów typu dla wszystkich typów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="851b2-176">The collection contains all the type arguments for all nested types.</span></span> <span data-ttu-id="851b2-177">Aby uzyskać przykład, zobacz <xref:System.CodeDom.CodeTypeReference.BaseType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="851b2-177">For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>