<Type Name="CodeDefaultValueExpression" FullName="System.CodeDom.CodeDefaultValueExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ae1821052d600ab1fe418c175a9e27ff554ebbe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30437112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeDefaultValueExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeDefaultValueExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeDefaultValueExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeDefaultValueExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDefaultValueExpression : System::CodeDom::CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje odwołanie do wartości domyślnej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.CodeDom.CodeDefaultValueExpression> może służyć do reprezentowania odwołania do wartości domyślnej.  
  
 <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> Właściwość określa odwołania do typu wartości. <xref:System.CodeDom.CodeDefaultValueExpression> Klasa jest używana podczas generowania kodu na podstawie typów ogólnych. Aby uzyskać więcej informacji dotyczących typów ogólnych, zobacz [typy ogólne w bibliotece klas programu .NET Framework](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md). Poniższe kroki kodu znajdują się w tej sekcji opisano dalsze użycie <xref:System.CodeDom.CodeDefaultValueExpression> klasę, aby dodać nową wartość domyślną do wykresu kodu.  
  
 Kod w część 1 jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.CodeTypeParameter> klasy. Wyniki tego kodu, gdy uruchomione przez generator kodu C# w kodzie C#, który pojawia się w części 2. Ten kod wywołanego w instrukcji w część 3 wynik jest wyświetlanego w część 4.  
  
```  
// Part 1: Code to create a generic Print method.  
            CodeMemberMethod printMethod = new CodeMemberMethod();  
            CodeTypeParameter sType = new CodeTypeParameter("S");  
            sType.HasConstructorConstraint = true;  
            CodeTypeParameter tType = new CodeTypeParameter("T");  
            sType.HasConstructorConstraint = true;  
  
            printMethod.Name = "Print";  
            printMethod.TypeParameters.Add(sType);  
            printMethod.TypeParameters.Add(tType);  
            printMethod.Statements.Add(ConsoleWriteLineStatement(  
                new CodeDefaultValueExpression(new CodeTypeReference("T"))));  
            printMethod.Statements.Add(ConsoleWriteLineStatement(  
                new CodeDefaultValueExpression(new CodeTypeReference("S"))));  
```  
  
```  
// Part 2: Code generated by code in part 1.  
public virtual void Print<S, T>()  
            where S : new()  
         {  
            Console.WriteLine(default(T));  
            Console.WriteLine(default(S));  
        }  
```  
  
```  
// Part 3: Call to the generated method.  
dict.Print<System.Decimal, int>();  
```  
  
```  
// Part 4: Output of the generated method.  
0  
0  
  
```  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.CodeDom.CodeDefaultValueExpression> można utworzyć wartości domyślne dla parametrów, decimal i integer. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.CodeDom.CodeTypeParameter> klasy.  
  
 [!code-csharp[System.CodeDOM.Generics.1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/CS/codedomgenerics.cs#7)]
 [!code-vb[System.CodeDOM.Generics.1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDOM.Generics.1/VB/codedomgenerics.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDefaultValueExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDefaultValueExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDefaultValueExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDefaultValueExpression(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.CodeDom.CodeTypeReference" /> , który określa odwołania do typu wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> przy użyciu określonego kodu odwołania typu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeDefaultValueExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do typu danych dla wartości domyślnej.</summary>
        <value>A <see cref="T:System.CodeDom.CodeTypeReference" /> obiekt reprezentujący typ danych, który ma wartość domyślną.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>