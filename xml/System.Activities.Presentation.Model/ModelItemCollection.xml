<Type Name="ModelItemCollection" FullName="System.Activities.Presentation.Model.ModelItemCollection">
  <TypeSignature Language="C#" Value="public abstract class ModelItemCollection : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IList&lt;System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItemCollection extends System.Activities.Presentation.Model.ModelItem implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IList`1&lt;class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItemCollection&#xA;Inherits ModelItem&#xA;Implements ICollection(Of ModelItem), IEnumerable(Of ModelItem), IList, IList(Of ModelItem), INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItemCollection abstract : System::Activities::Presentation::Model::ModelItem, System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IList&lt;System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="005b9-101">Reprezentuje kolekcję elementów modelu, w których można indywidualnie uzyskać dostęp przez indeks.</span><span class="sxs-lookup"><span data-stu-id="005b9-101">Represents a collection of model items that can be individually accessed by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-102">Jeśli zmiany zostały wprowadzone do kolekcji elementu podczas edycji zakresu, takich jak w ramach operacji przeciągania i upuszczania <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> właściwość nie zostanie zaktualizowany dopiero po zakończeniu edycji zakresu.</span><span class="sxs-lookup"><span data-stu-id="005b9-102">If changes are made to the item collection during an editing scope, such as within a drag and drop operation, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> property will not be updated until the editing scope completes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItemCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="005b9-103">Tworzy nowe wystąpienie klasy <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-103">Creates a new instance of <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="005b9-104">Dodaje element modelu do końca <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-104">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract void Add (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Add(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Add (item As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Add(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="005b9-105">Element modelu, który ma zostać dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-105">The model item to add to the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-106">Dodaje element modelu do końca <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-106">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-107">Obiekt do dodania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-107">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-108">Dodaje element modelu do końca <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-108">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <returns><span data-ttu-id="005b9-109">Zwraca <paramref name="value" /> otoczona <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-109">Returns <paramref name="value" /> wrapped in a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-110">Obiekt jako <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="005b9-110">The object will be stored as a <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="005b9-111">Usuwa wszystkie elementy z <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-111">Removes all elements from the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItemCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event CollectionChanged As NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-112">Występuje, gdy zmienia się kolekcja.</span><span class="sxs-lookup"><span data-stu-id="005b9-112">Occurs when the collection changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="005b9-113">Określa, czy <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="005b9-113">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (item As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="005b9-114">Wartość do zlokalizowania w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-114">The value to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-115">Określa, czy <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="005b9-115">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="005b9-116"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera element, który ma określoną wartość, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-116"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="005b9-117"><paramref name="item" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-117"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-118">Wartość do zlokalizowania w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-118">The value to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-119">Określa, czy <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="005b9-119">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="005b9-120"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera element, który ma określoną wartość, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-120"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="005b9-121"><paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public abstract void CopyTo (System.Activities.Presentation.Model.ModelItem[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Model.ModelItem[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.CopyTo(System.Activities.Presentation.Model.ModelItem[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CopyTo (array As ModelItem(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CopyTo(cli::array &lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Model.ModelItem[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="005b9-122">Tablicy na skopiowanie do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-122">The array to copy the collection into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="005b9-123">Indeks w tablicy, aby rozpocząć kopiowanie w.</span><span class="sxs-lookup"><span data-stu-id="005b9-123">The index in the array to start copying at.</span></span></param>
        <summary><span data-ttu-id="005b9-124">Kopiuje zawartość kolekcji do podanej tablicy.</span><span class="sxs-lookup"><span data-stu-id="005b9-124">Copies the contents of the collection into the given array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="005b9-125"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-125"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="005b9-126"><paramref name="arrayIndex" /> jest poza zakresem, lub nie jest wystarczające miejsce do przechowywania zawartości kolekcji do tablicy.</span><span class="sxs-lookup"><span data-stu-id="005b9-126"><paramref name="arrayIndex" /> is out of range, or there is not sufficient room in the array to hold the contents of the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-127">Zwraca liczbę elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-127">Returns the count of items in the collection.</span></span></summary>
        <value><span data-ttu-id="005b9-128">Zwraca <see cref="T:System.Int32" /> liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-128">Returns the <see cref="T:System.Int32" /> count of items in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-129">Ta wartość nie jest aktualizowany podczas <xref:System.Activities.Presentation.EditingContext> sesji.</span><span class="sxs-lookup"><span data-stu-id="005b9-129">This value is not updated during an <xref:System.Activities.Presentation.EditingContext> session.</span></span> <span data-ttu-id="005b9-130">Jeśli obiekt jest dodawany do <xref:System.Activities.Presentation.Model.ModelItemCollection> podczas sesji, <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> wartość nie zostanie zaktualizowany, dopóki nie kończy się sesja.</span><span class="sxs-lookup"><span data-stu-id="005b9-130">If an object is added to the <xref:System.Activities.Presentation.Model.ModelItemCollection> during a session, the <xref:System.Activities.Presentation.Model.ModelItemCollection.Count%2A> value will not be updated until the session exits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Model.ModelItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="005b9-131">Pobiera moduł wyliczający, który iteruje po <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-131">Gets an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <returns><span data-ttu-id="005b9-132">Zwraca <see cref="T:System.Collections.Generic.IEnumerator`1" /> dla <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-132">Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public abstract int IndexOf (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.IndexOf(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IndexOf (item As ModelItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int IndexOf(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="005b9-133">Obiekt do zlokalizowania w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-133">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-134">Zwraca liczony od zera indeks pierwszego wystąpienia wartości w <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-134">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <returns><span data-ttu-id="005b9-135">Liczony od zera indeks pierwszego wystąpienia <paramref name="item" /> w obrębie całej <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="005b9-135">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />, if found; otherwise, –1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="005b9-136">Wstawia element do <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-136">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract void Insert (int index, System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Insert (index As Integer, item As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Insert(int index, System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-137">Liczony od zera indeks, w którym <c>elementu</c> powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="005b9-137">The zero-based index at which <c>item</c> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="005b9-138">Element modelu do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="005b9-138">The model item to insert.</span></span></param>
        <summary><span data-ttu-id="005b9-139">Wstawia element do <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-139">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Insert (index As Integer, value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-140">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="005b9-140">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="005b9-141">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="005b9-141">The object to insert.</span></span></param>
        <summary><span data-ttu-id="005b9-142">Wstawia element do <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-142">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span></span></summary>
        <returns><span data-ttu-id="005b9-143">Zwraca <paramref name="value" /> otoczona <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-143">Returns <paramref name="value" /> wrapped in a <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="protected virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-144">Pobiera wartość wskazującą, czy kolekcja ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="005b9-144">Gets a value that indicates whether the collection has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="005b9-145"><see langword="true" /> Jeśli kolekcja ma stały rozmiar; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-145"><see langword="true" /> if the collection is a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-146">Domyślna implementacja zwraca `true` Jeśli kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="005b9-146">The default implementation returns `true` if the collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-147">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="005b9-147">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="005b9-148"><see langword="true" /> Jeśli nie można zmodyfikować kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-148"><see langword="true" /> if the collection cannot be modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="protected virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-149">Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wielowątkowość).</span><span class="sxs-lookup"><span data-stu-id="005b9-149">Gets a value that indicates whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="005b9-150"><see langword="true" /> Jeśli dostęp do kolekcji jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-150"><see langword="true" /> if access to the collection is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(index As Integer) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[int] { System::Activities::Presentation::Model::ModelItem ^ get(int index); void set(int index, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-151">Liczony od zera indeks w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-151">The zero-based index of the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-152">Pobiera lub ustawia element pod danym indeksem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-152">Gets or sets the item at the given index in the collection.</span></span></summary>
        <value><span data-ttu-id="005b9-153">Zwraca <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-153">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Model.ModelItemCollection.ItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-154">Identyfikuje element właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="005b9-154">Identifies the Item dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-155">Właściwość elementu reprezentuje wszystkie elementy w kolekcji i jest zdefiniowany jako typ <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="005b9-155">The Item property represents all the items in the collection and is defined as type <xref:System.Activities.Presentation.Model.ModelItem>.</span></span> <span data-ttu-id="005b9-156">Wskazuje właściwość elementu <xref:System.Activities.Presentation.Model.ModelItemCollection> samej siebie.</span><span class="sxs-lookup"><span data-stu-id="005b9-156">The Item property points to the <xref:System.Activities.Presentation.Model.ModelItemCollection> itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public abstract void Move (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Move(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Move (fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Move(int fromIndex, int toIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex"><span data-ttu-id="005b9-157">Indeks elementu do przeniesienia przed przeniesienie.</span><span class="sxs-lookup"><span data-stu-id="005b9-157">The index of the item to be moved before the move.</span></span></param>
        <param name="toIndex"><span data-ttu-id="005b9-158">Indeks elementu po przeniesieniu.</span><span class="sxs-lookup"><span data-stu-id="005b9-158">The index of the item after it is moved.</span></span></param>
        <summary><span data-ttu-id="005b9-159">Przenosi inny indeks elementu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-159">Moves an item in the collection to a different index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="005b9-160">Albo <paramref name="fromIndex" /> lub <paramref name="toIndex" /> jest ujemna lub większa niż lub równa <see cref="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-160">Either <paramref name="fromIndex" /> or <paramref name="toIndex" /> is negative or greater than or equal to <see cref="P:System.Activities.Presentation.Model.ModelItemCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="005b9-161">Usuwa <see cref="T:System.Activities.Presentation.Model.ModelItem" /> lub innych <see cref="T:System.Object" /> z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-161">Removes a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> or other <see cref="T:System.Object" /> from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (System.Activities.Presentation.Model.ModelItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Model.ModelItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (item As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Activities::Presentation::Model::ModelItem ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="005b9-162"><see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-162">The <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></param>
        <summary><span data-ttu-id="005b9-163">Usuwa <see cref="T:System.Activities.Presentation.Model.ModelItem" /> z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-163">Removes the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="005b9-164"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Model.ModelItem" /> został usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-164"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> was removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-165"><see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-165">The <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="005b9-166">Usuwa wartość z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-166">Removes the value from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="005b9-167"><see langword="true" /> Jeśli wartość został usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-167"><see langword="true" /> if the value was removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-168">Indeks elementu.</span><span class="sxs-lookup"><span data-stu-id="005b9-168">The index of the item.</span></span></param>
        <summary><span data-ttu-id="005b9-169">Usuwa element pod danym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-169">Removes the item at the given index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-170">Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-170">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="005b9-171">Zwraca <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-171">Returns an <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="005b9-172">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-172">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="005b9-173"><see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="005b9-173">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="005b9-174">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="005b9-174">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="005b9-175">Kopiuje elementy <see cref="T:System.Collections.ICollection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="005b9-175">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-176">Pobiera liczbę elementów zawartych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-176">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="005b9-177">Zwraca <see cref="T:System.Int32" /> wartość, czyli liczbę elementów zawartych w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-177">Returns an <see cref="T:System.Int32" /> value that is the number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-178">Liczba elementów zawartych w <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wielowątkowość).</span><span class="sxs-lookup"><span data-stu-id="005b9-178">The number of elements contained in the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="005b9-179"><see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-179"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-180">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-180">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="005b9-181">Zwraca <see cref="T:System.Object" /> można zsynchronizować dostęp do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-181">Returns an <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value=" Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemCollection/&lt;System-Collections-IEnumerable-GetEnumerator&gt;d__54))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="005b9-182">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-182">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="005b9-183">Zwraca <see cref="T:System.Collections.IEnumerator" /> który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-183">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-184">Obiekt do dodania do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="005b9-184">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="005b9-185">Dodaje element modelu do końca <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-185">Adds a model item to the end of the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></summary>
        <returns><span data-ttu-id="005b9-186">Zwraca indeks nowo dodany obiekt.</span><span class="sxs-lookup"><span data-stu-id="005b9-186">Returns the index of the newly added object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="005b9-187">Usuwa wszystkie elementy z <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-187">Removes all items from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-188">Obiekt do zlokalizowania w <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-188">The object to locate in the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />.</span></span></param>
        <summary><span data-ttu-id="005b9-189">Określa, czy <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="005b9-189">Determines whether the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="005b9-190"><see langword="true" /> Jeśli <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> zawiera element, który ma określoną wartość, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-190"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="005b9-191"><paramref name="value" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-191"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-192"><see cref="T:System.Object" /> Do zlokalizowania w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-192">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="005b9-193">Określa indeks konkretny element w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-193">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="005b9-194">Zwraca <see cref="T:System.Int32" /> indeks <paramref name="value" /> jeśli je znaleziono na liście; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="005b9-194">Returns the <see cref="T:System.Int32" /> index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-195">Liczony od zera indeks, w którym <c>wartość</c> powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="005b9-195">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="005b9-196">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="005b9-196">The object to insert.</span></span></param>
        <summary><span data-ttu-id="005b9-197">Wstawia element do <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-197">Inserts an element into the <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-198">Pobiera wartość wskazującą, czy <see cref="T:System.Collections.IList" /> ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="005b9-198">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="005b9-199"><see langword="true" /> Jeśli <see cref="T:System.Collections.IList" /> ma ustalony rozmiar; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-199"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="005b9-200">Pobiera wartość wskazującą, czy <see cref="T:System.Collections.IList" /> jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="005b9-200">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="005b9-201"><see langword="true" /> Jeśli <see cref="T:System.Collections.IList" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-201"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-202">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="005b9-202">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="005b9-203">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-203">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="005b9-204">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-204">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="005b9-205"><see cref="T:System.Object" /> Do usunięcia z <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-205">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="005b9-206">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="005b9-206">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="005b9-207">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="005b9-207">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="005b9-208">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="005b9-208">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="005b9-209">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="005b9-209">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="005b9-210">Jeśli `value` nie został znaleziony w <xref:System.Collections.IList>, <xref:System.Collections.IList> pozostaną bez zmian i nie jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="005b9-210">If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="005b9-211">Liczony od zera indeks elementu, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="005b9-211">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="005b9-212">Usuwa <see cref="T:System.Collections.IList" /> element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="005b9-212">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>