<Type Name="ModelTreeManager" FullName="System.Activities.Presentation.Model.ModelTreeManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f89842c75c51dc283a3c3332ba5f416a71c6716a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69323886" /></Metadata><TypeSignature Language="C#" Value="public class ModelTreeManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModelTreeManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelTreeManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelTreeManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelTreeManager" />
  <TypeSignature Language="F#" Value="type ModelTreeManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia element modelu głównego i usługę modelu oraz umożliwia synchronizację drzewa modelu z tekstem XAML.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModelTreeManager (System.Activities.Presentation.EditingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.EditingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.#ctor(System.Activities.Presentation.EditingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As EditingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ModelTreeManager(System::Activities::Presentation::EditingContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.Model.ModelTreeManager : System.Activities.Presentation.EditingContext -&gt; System.Activities.Presentation.Model.ModelTreeManager" Usage="new System.Activities.Presentation.Model.ModelTreeManager context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
      </Parameters>
      <Docs>
        <param name="context">Kontekst.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Activities.Presentation.Model.ModelTreeManager" /> klasy, używając określonego kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa modelu jest publikowana w kontekście edycji przekazaną do konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem CreateModelItem (System.Activities.Presentation.Model.ModelItem parent, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem CreateModelItem(class System.Activities.Presentation.Model.ModelItem parent, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.CreateModelItem(System.Activities.Presentation.Model.ModelItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateModelItem (parent As ModelItem, instance As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ CreateModelItem(System::Activities::Presentation::Model::ModelItem ^ parent, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.CreateModelItem : System.Activities.Presentation.Model.ModelItem * obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelTreeManager.CreateModelItem (parent, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parent">Element nadrzędny.</param>
        <param name="instance">Wystąpienie.</param>
        <summary>Tworzy element modelu na podstawie określonego elementu nadrzędnego i wystąpienia.</summary>
        <returns>Nowy element modelu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingScopeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt; EditingScopeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Model.EditingScopeEventArgs&gt; EditingScopeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelTreeManager.EditingScopeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event EditingScopeCompleted As EventHandler(Of EditingScopeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Activities::Presentation::Model::EditingScopeEventArgs ^&gt; ^ EditingScopeCompleted;" />
      <MemberSignature Language="F#" Value="member this.EditingScopeCompleted : EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt; " Usage="member this.EditingScopeCompleted : System.EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Model.EditingScopeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu zakresu edycji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelItem">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem GetModelItem (object instance, bool shouldExpandModelTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem GetModelItem(object instance, bool shouldExpandModelTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.GetModelItem(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModelItem (instance As Object, shouldExpandModelTree As Boolean) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ GetModelItem(System::Object ^ instance, bool shouldExpandModelTree);" />
      <MemberSignature Language="F#" Value="member this.GetModelItem : obj * bool -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelTreeManager.GetModelItem (instance, shouldExpandModelTree)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="shouldExpandModelTree" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie.</param>
        <param name="shouldExpandModelTree"><see langword="true" />Jeśli Menedżer powinien rozwinąć drzewo modelu; w przeciwnym razie. <see langword="false" /></param>
        <summary>Zwraca element modelu dla Menedżera.</summary>
        <returns>Element modelu dla Menedżera.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (object rootInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(object rootInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelTreeManager.Load(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (rootInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Object ^ rootInstance);" />
      <MemberSignature Language="F#" Value="member this.Load : obj -&gt; unit" Usage="modelTreeManager.Load rootInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rootInstance">Wystąpienie główne do załadowania.</param>
        <summary>Ładuje określone wystąpienie główne.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelTreeManager.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelTreeManager.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element główny.</summary>
        <value><see cref="T:System.Activities.Presentation.Model.ModelItem" /> Obiekt, który zawiera element główny.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
