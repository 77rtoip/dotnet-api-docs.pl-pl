<Type Name="GlobalScope" FullName="Microsoft.JScript.GlobalScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48018e1f2f96b25e973d21e99f7f278319cb0fcf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39905882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GlobalScope : Microsoft.JScript.ActivationObject, System.Reflection.IReflect, System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GlobalScope extends Microsoft.JScript.ActivationObject implements class System.Reflection.IReflect, class System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.GlobalScope" />
  <TypeSignature Language="VB.NET" Value="Public Class GlobalScope&#xA;Inherits ActivationObject&#xA;Implements IExpando, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class GlobalScope : Microsoft::JScript::ActivationObject, System::Reflection::IReflect, System::Runtime::InteropServices::Expando::IExpando" />
  <TypeSignature Language="F#" Value="type GlobalScope = class&#xA;    inherit ActivationObject&#xA;    interface IExpando&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ActivationObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.Expando.IExpando</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="50837-101">Reprezentuje zakresu globalnego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50837-101">Represents the global scope.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.IActivationObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GlobalScope (Microsoft.JScript.GlobalScope parent, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.JScript.GlobalScope parent, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.#ctor(Microsoft.JScript.GlobalScope,Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As GlobalScope, engine As VsaEngine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GlobalScope(Microsoft::JScript::GlobalScope ^ parent, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="new Microsoft.JScript.GlobalScope : Microsoft.JScript.GlobalScope * Microsoft.JScript.Vsa.VsaEngine -&gt; Microsoft.JScript.GlobalScope" Usage="new Microsoft.JScript.GlobalScope (parent, engine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="Microsoft.JScript.GlobalScope" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="50837-102">Odwołanie do obiektu nadrzędnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-102">A reference to the parent object.</span>
          </span>
        </param>
        <param name="engine">
          <span data-ttu-id="50837-103">Odwołanie do silnika wykonywania skryptów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-103">A reference to the scripting engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-104">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.JScript.GlobalScope" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-104">Initializes a new instance of the <see cref="T:Microsoft.JScript.GlobalScope" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo AddField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo AddField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.AddField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ AddField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member AddField : string -&gt; System.Reflection.FieldInfo&#xA;override this.AddField : string -&gt; System.Reflection.FieldInfo" Usage="globalScope.AddField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-105">Nazwa pola w celu dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-105">The name of the field to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-106">Dodaje określone pole do globalnego zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-106">Adds the specified field to the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-107">Nowe pole, jeśli został pomyślnie dodany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-107">The new field, if it is successfully added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public override object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="override this.GetDefaultThisObject : unit -&gt; obj" Usage="globalScope.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50837-108">Pobiera bieżący domyślny zakres, który może być przechowywany obiekt z <see langword="with" /> oświadczenie zakresu lub zakresu globalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-108">Gets the current default scope, which is either the contained object of a <see langword="with" /> statement scope, or the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-109">Ten obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-109">This object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="globalScope.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-110">Nazwa pola do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-110">The name of the field to search for.</span>
          </span>
        </param>
        <param name="lexLevel">
          <span data-ttu-id="50837-111">Poziom leksykalne do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-111">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-112">Pobiera pola, które ma określoną nazwę, wyszukując Hierarchia zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-112">Gets a field that has the specified name by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="50837-113">Metoda ta wyszukuje zakres, który jest określony przez poziom leksykalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-113">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-114">Pole o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-114">A field that has the specified name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="globalScope.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="50837-115">Bitowe połączenie wartości wyliczenia, który określa, jak jest prowadzone wyszukiwanie dla elementów członkowskich przez odbicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-115">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-116">Pobiera tablicę elementów <see cref="T:System.Reflection.FieldInfo" /> obiektów, które odnoszą się do wszystkich pól w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-116">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-117">Tablica obiektów, który zawiera wszystkie pola w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-117">An array of objects that contains all fields of the global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public override Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="override this.GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="globalScope.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50837-118">Pobiera zakres globalny, zwracając odwołanie do tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-118">Gets the global scope by returning a reference to this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-119">Ten obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-119">This object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="globalScope.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-120">Nazwa pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-120">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-121">Pobiera lokalna deklaracja pola, które ma określoną nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-121">Gets the local declaration of a field that has the specified name.</span>
          </span>
          <span data-ttu-id="50837-122">Jest on używany w czasie kompilacji sprawdzania błędów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-122">This is used at compile time for error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-123">Lokalna deklaracja pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-123">The local declaration of the field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="globalScope.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-124">Nazwa elementu członkowskiego do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-124">The name of the member to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="50837-125">Bitowe połączenie wartości wyliczenia, który określa, jak jest prowadzone wyszukiwanie dla elementów członkowskich przez odbicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-125">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-126">Pobiera tablicę elementów <see cref="T:System.Reflection.MemberInfo" /> obiektów, które odnoszą się do wszystkich elementów członkowskich, które odpowiadają określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-126">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-127">Tablica obiektów, które odpowiadają <paramref name="name" /> argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-127">An array of objects that match the <paramref name="name" /> argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="globalScope.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="50837-128">Bitowe połączenie wartości wyliczenia, który określa, jak jest prowadzone wyszukiwanie dla elementów członkowskich przez odbicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-128">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-129">Pobiera tablicę elementów <see cref="T:System.Reflection.MemberInfo" /> obiektów, które odnoszą się do wszystkich elementów członkowskich w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-129">Gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-130">Tablica obiektów, który zawiera wszystkie elementy członkowskie w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-130">An array of objects that contains all members of the global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="globalScope.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="50837-131">Bitowe połączenie wartości wyliczenia, który określa, jak jest prowadzone wyszukiwanie dla elementów członkowskich przez odbicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-132">Pobiera tablicę elementów <see cref="T:System.Reflection.MethodInfo" /> obiektów, które odpowiadają wszystkie metody w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-132">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-133">Tablica obiektów, który zawiera wszystkie metody w zakresie globalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-133">An array of objects that contains all methods of the global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="globalScope.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="50837-134">Bitowe połączenie wartości wyliczenia, który określa, jak jest prowadzone wyszukiwanie dla elementów członkowskich przez odbicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-134">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-135">Pobiera tablicę elementów <see cref="T:System.Reflection.PropertyInfo" /> obiektów, które odnoszą się do wszystkich właściwości zakresu globalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-135">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-136">Tablica obiektów zawiera wszystkie właściwości zakresu globalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-136">An array of objects that contains all properties of the global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IExpando.AddMethod (string name, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Function AddMethod (name As String, method As Delegate) As MethodInfo Implements IExpando.AddMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddMethod(System::String ^ name, Delegate ^ method) = System::Runtime::InteropServices::Expando::IExpando::AddMethod;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-137">Nazwa metody do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-137">The name of the method to add.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="50837-138">Delegat do metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-138">The delegate to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-139">Dodaje określoną metodę do globalnego zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-139">Adds the specified method to the global scope.</span>
          </span>
          <span data-ttu-id="50837-140">Ta metoda nie jest zaimplementowana w kodzie JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-140">This method is not implemented in JScript.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-141">wartość null we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-141">null in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IExpando.AddProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddProperty (name As String) As PropertyInfo Implements IExpando.AddProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddProperty(System::String ^ name) = System::Runtime::InteropServices::Expando::IExpando::AddProperty;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="50837-142">Nazwa właściwości do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-142">The name of the property to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-143">Dodaje określoną właściwość do zakresu globalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-143">Adds the specified property to the global scope.</span>
          </span>
          <span data-ttu-id="50837-144">Ta metoda nie jest zaimplementowana w kodzie JScript.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-144">This method is not implemented in JScript.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50837-145">wartość null we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-145">null in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.RemoveMember">
      <MemberSignature Language="C#" Value="void IExpando.RemoveMember (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.GlobalScope.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveMember (m As MemberInfo) Implements IExpando.RemoveMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(System::Reflection::MemberInfo ^ m) = System::Runtime::InteropServices::Expando::IExpando::RemoveMember;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="50837-146">Nazwa członka do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-146">The name of the member to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50837-147">Usuwa określony element członkowski z zakresu globalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50837-147">Removes the specified member from the global scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
  </Members>
</Type>