<Type Name="IDebugConvert" FullName="Microsoft.JScript.IDebugConvert">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3bf5ee5b1825133d55c4a5b9eee507d8bd51d101" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69293803" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugConvert" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugConvert" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugConvert" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugConvert" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugConvert" />
  <TypeSignature Language="F#" Value="type IDebugConvert = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("AA51516D-C0F2-49fe-9D38-61D20456904C")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a384-101">Definiuje zestaw metod narzędziowych, które konwertują dane z jednego typu na drugi.</span><span class="sxs-lookup"><span data-stu-id="8a384-101">Defines a set of utility methods that convert data from one type to another.</span></span> <span data-ttu-id="8a384-102">Obejmuje metody, które konwertują <see cref="T:System.String" /> wartości na obiekty, aby mogły być wyświetlane przez debuger.</span><span class="sxs-lookup"><span data-stu-id="8a384-102">Includes methods that convert values to <see cref="T:System.String" /> objects so that they can be displayed by the debugger.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.DebugConvert" />
    <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
  </Docs>
  <Members>
    <Member MemberName="BooleanToString">
      <MemberSignature Language="C#" Value="public string BooleanToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BooleanToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.BooleanToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BooleanToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BooleanToString(bool value);" />
      <MemberSignature Language="F#" Value="abstract member BooleanToString : bool -&gt; string" Usage="iDebugConvert.BooleanToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-103">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-103">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-104">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Boolean" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-104">When implemented in a class, converts the specified <see cref="T:System.Boolean" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-105">Ciąg literału "true" lub ciąg literału "false".</span><span class="sxs-lookup"><span data-stu-id="8a384-105">The literal string "true" or the literal string "false".</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ByteToString">
      <MemberSignature Language="C#" Value="public string ByteToString (byte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ByteToString(unsigned int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ByteToString(System.Byte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ByteToString (value As Byte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ByteToString(System::Byte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member ByteToString : byte * int -&gt; string" Usage="iDebugConvert.ByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-106">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-106">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-107">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-107">The base of the return value.</span></span> <span data-ttu-id="8a384-108">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-108">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-109">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Byte" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-109">When implemented in a class, converts the specified <see cref="T:System.Byte" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-110">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-110">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToDateString">
      <MemberSignature Language="C#" Value="public string DoubleToDateString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToDateString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToDateString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToDateString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToDateString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToDateString : double -&gt; string" Usage="iDebugConvert.DoubleToDateString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-111">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-111">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-112">Po zaimplementowaniu w klasie program tworzy reprezentację ciągu określonego <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-112">When implemented in a class, creates a string representation of the specified <see cref="T:System.Double" />.</span></span> <span data-ttu-id="8a384-113">Reprezentacja ciągu zawiera dzień tygodnia, miesiąc, datę, godzinę, strefę czasową i rok.</span><span class="sxs-lookup"><span data-stu-id="8a384-113">The string representation contains the day of the week, the month, the date, the time, the time zone, and the year.</span></span></summary>
        <returns><span data-ttu-id="8a384-114">Ciąg reprezentujący <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-114">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="DoubleToString">
      <MemberSignature Language="C#" Value="public string DoubleToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DoubleToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.DoubleToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoubleToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DoubleToString(double value);" />
      <MemberSignature Language="F#" Value="abstract member DoubleToString : double -&gt; string" Usage="iDebugConvert.DoubleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-115">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-115">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-116">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Double" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-116">When implemented in a class, converts the specified <see cref="T:System.Double" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-117">Ciąg reprezentujący <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-117">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.JScript.Vsa.IJSVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.JScript.Vsa.IJSVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.JScript.Vsa.IJSVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IJSVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::JScript::Vsa::IJSVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.JScript.Vsa.IJSVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.IJSVsaEngine" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hr"><span data-ttu-id="8a384-118">Kod błędu HRESULT.</span><span class="sxs-lookup"><span data-stu-id="8a384-118">The HRESULT error code.</span></span></param>
        <param name="engine"><span data-ttu-id="8a384-119">Odwołanie do aparatu skryptów.</span><span class="sxs-lookup"><span data-stu-id="8a384-119">A reference to the scripting engine.</span></span></param>
        <summary><span data-ttu-id="8a384-120">W przypadku zaimplementowania w klasie pobierany jest komunikat o błędzie, który został <see cref="P:System.Exception.HResult" /> utworzony na <see cref="T:System.Globalization.CultureInfo" /> podstawie określonego i <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="8a384-120">When implemented in a class, gets an error message that is created from the specified <see cref="P:System.Exception.HResult" /> and the <see cref="T:System.Globalization.CultureInfo" /> of the specified <see cref="T:Microsoft.JScript.Vsa.IJSVsaEngine" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-121">Zlokalizowany ciąg zawierający informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="8a384-121">A localized string that contains information about the error.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorMessageForHR">
      <MemberSignature Language="C#" Value="public string GetErrorMessageForHR (int hr, Microsoft.Vsa.IVsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetErrorMessageForHR(int32 hr, class Microsoft.Vsa.IVsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetErrorMessageForHR(System.Int32,Microsoft.Vsa.IVsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorMessageForHR (hr As Integer, engine As IVsaEngine) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorMessageForHR(int hr, Microsoft::Vsa::IVsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorMessageForHR : int * Microsoft.Vsa.IVsaEngine -&gt; string" Usage="iDebugConvert.GetErrorMessageForHR (hr, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hr" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
        <Parameter Name="engine" Type="Microsoft.Vsa.IVsaEngine" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="hr"><span data-ttu-id="8a384-122">Kod błędu HRESULT.</span><span class="sxs-lookup"><span data-stu-id="8a384-122">The HRESULT error code.</span></span></param>
        <param name="engine"><span data-ttu-id="8a384-123">Odwołanie do aparatu skryptów.</span><span class="sxs-lookup"><span data-stu-id="8a384-123">A reference to the scripting engine.</span></span></param>
        <summary>To be added.</summary>
        <returns><span data-ttu-id="8a384-124">Zlokalizowany ciąg zawierający informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="8a384-124">A localized string that contains information about the error.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedCharObject">
      <MemberSignature Language="C#" Value="public object GetManagedCharObject (ushort i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedCharObject(unsigned int16 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedCharObject(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedCharObject (i As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedCharObject(System::UInt16 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedCharObject : uint16 -&gt; obj" Usage="iDebugConvert.GetManagedCharObject i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="8a384-125">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-125">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-126">Po zaimplementowaniu w klasie program tworzy obiekt zarządzany, który ma określoną wartość <see cref="T:System.Char" /> pierwotną.</span><span class="sxs-lookup"><span data-stu-id="8a384-126">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Char" /> value.</span></span></summary>
        <returns><span data-ttu-id="8a384-127"><paramref name="i" />konwertowane na <see cref="T:System.Char" /> a i <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-127"><paramref name="i" /> converted to a <see cref="T:System.Char" /> and then an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedInt64Object (long i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedInt64Object(int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedInt64Object(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedInt64Object (i As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedInt64Object(long i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedInt64Object : int64 -&gt; obj" Usage="iDebugConvert.GetManagedInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="8a384-128">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-128">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-129">Po zaimplementowaniu w klasie program tworzy obiekt zarządzany, który ma określoną wartość <see cref="T:System.Int64" /> pierwotną.</span><span class="sxs-lookup"><span data-stu-id="8a384-129">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.Int64" /> value.</span></span></summary>
        <returns><span data-ttu-id="8a384-130"><paramref name="i" />przekonwertowano na <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-130"><paramref name="i" /> converted to an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedObject">
      <MemberSignature Language="C#" Value="public object GetManagedObject (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedObject(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedObject (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedObject(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedObject : obj -&gt; obj" Usage="iDebugConvert.GetManagedObject value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-131">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-131">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-132">Po zaimplementowaniu w klasie program tworzy obiekt zarządzany, który ma określoną wartość pierwotną.</span><span class="sxs-lookup"><span data-stu-id="8a384-132">When implemented in a class, creates a managed object that has the specified primitive value.</span></span></summary>
        <returns><span data-ttu-id="8a384-133"><paramref name="value" />konwertowane na zarządzane <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-133"><paramref name="value" /> converted to a managed <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedUInt64Object">
      <MemberSignature Language="C#" Value="public object GetManagedUInt64Object (ulong i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetManagedUInt64Object(unsigned int64 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.GetManagedUInt64Object(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagedUInt64Object (i As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetManagedUInt64Object(System::UInt64 i);" />
      <MemberSignature Language="F#" Value="abstract member GetManagedUInt64Object : uint64 -&gt; obj" Usage="iDebugConvert.GetManagedUInt64Object i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="8a384-134">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-134">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-135">Po zaimplementowaniu w klasie program tworzy obiekt zarządzany, który ma określoną wartość <see cref="T:System.UInt64" /> pierwotną.</span><span class="sxs-lookup"><span data-stu-id="8a384-135">When implemented in a class, creates a managed object that has the specified primitive <see cref="T:System.UInt64" /> value.</span></span></summary>
        <returns><span data-ttu-id="8a384-136"><paramref name="i" />przekonwertowano na <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-136"><paramref name="i" /> converted to an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int16ToString">
      <MemberSignature Language="C#" Value="public string Int16ToString (short value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int16ToString(int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int16ToString(System.Int16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int16ToString (value As Short, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int16ToString(short value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int16ToString : int16 * int -&gt; string" Usage="iDebugConvert.Int16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-137">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-137">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-138">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-138">The base of the return value.</span></span> <span data-ttu-id="8a384-139">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-139">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-140">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Int16" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-140">When implemented in a class, converts the specified <see cref="T:System.Int16" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-141">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-141">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int32ToString">
      <MemberSignature Language="C#" Value="public string Int32ToString (int value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int32ToString(int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int32ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int32ToString (value As Integer, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int32ToString(int value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int32ToString : int * int -&gt; string" Usage="iDebugConvert.Int32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-142">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-142">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-143">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-143">The base of the return value.</span></span> <span data-ttu-id="8a384-144">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-144">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-145">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Int32" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-145">When implemented in a class, converts the specified <see cref="T:System.Int32" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-146">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-146">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="Int64ToString">
      <MemberSignature Language="C#" Value="public string Int64ToString (long value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Int64ToString(int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.Int64ToString(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int64ToString (value As Long, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Int64ToString(long value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member Int64ToString : int64 * int -&gt; string" Usage="iDebugConvert.Int64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-147">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-147">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-148">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-148">The base of the return value.</span></span> <span data-ttu-id="8a384-149">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-149">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-150">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Int64" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-150">When implemented in a class, converts the specified <see cref="T:System.Int64" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-151">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-151">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="RegexpToString">
      <MemberSignature Language="C#" Value="public string RegexpToString (string source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegexpToString(string source, bool ignoreCase, bool global, bool multiline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.RegexpToString(System.String,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegexpToString (source As String, ignoreCase As Boolean, global As Boolean, multiline As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ RegexpToString(System::String ^ source, bool ignoreCase, bool global, bool multiline);" />
      <MemberSignature Language="F#" Value="abstract member RegexpToString : string * bool * bool * bool -&gt; string" Usage="iDebugConvert.RegexpToString (source, ignoreCase, global, multiline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="global" Type="System.Boolean" />
        <Parameter Name="multiline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a384-152">Wzorzec wyrażenia regularnego do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="8a384-152">The regular expression pattern to match.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="8a384-153"><see langword="true" />Aby użyć dopasowania bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8a384-153"><see langword="true" /> to use case-insensitive matching; otherwise, <see langword="false" />.</span></span></param>
        <param name="global"><span data-ttu-id="8a384-154"><see langword="true" />Aby użyć dopasowania globalnego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8a384-154"><see langword="true" /> to use a global match; otherwise, <see langword="false" />.</span></span></param>
        <param name="multiline"><span data-ttu-id="8a384-155"><see langword="true" />Aby użyć dopasowania wielowierszowego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8a384-155"><see langword="true" /> to use a multiline match; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8a384-156">Po zaimplementowaniu w klasie program konwertuje określone informacje o wyrażeniu regularnym na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-156">When implemented in a class, converts the specified regular expression information to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-157">Ciąg reprezentujący informacje o wyrażeniu regularnym.</span><span class="sxs-lookup"><span data-stu-id="8a384-157">The string representation of the regular expression information.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SByteToString">
      <MemberSignature Language="C#" Value="public string SByteToString (sbyte value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SByteToString(int8 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SByteToString(System.SByte,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SByteToString (value As SByte, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SByteToString(System::SByte value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member SByteToString : sbyte * int -&gt; string" Usage="iDebugConvert.SByteToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-158">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-158">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-159">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-159">The base of the return value.</span></span> <span data-ttu-id="8a384-160">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-160">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-161">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.SByte" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-161">When implemented in a class, converts the specified <see cref="T:System.SByte" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-162">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-162">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="SingleToString">
      <MemberSignature Language="C#" Value="public string SingleToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SingleToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.SingleToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function SingleToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SingleToString(float value);" />
      <MemberSignature Language="F#" Value="abstract member SingleToString : single -&gt; string" Usage="iDebugConvert.SingleToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-163">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-163">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-164">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.Single" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-164">When implemented in a class, converts the specified <see cref="T:System.Single" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-165">Ciąg reprezentujący <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-165">The string representation of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="StringToPrintable">
      <MemberSignature Language="C#" Value="public string StringToPrintable (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string StringToPrintable(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.StringToPrintable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StringToPrintable (source As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ StringToPrintable(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member StringToPrintable : string -&gt; string" Usage="iDebugConvert.StringToPrintable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8a384-166">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-166">The value to convert.</span></span></param>
        <summary><span data-ttu-id="8a384-167">Po zaimplementowaniu w klasie, konwertuje określony <see cref="T:System.String" /> <see cref="T:System.String" /> do, który zawiera znaki ucieczki dla znaków niedrukowalnych.</span><span class="sxs-lookup"><span data-stu-id="8a384-167">When implemented in a class, converts the specified <see cref="T:System.String" /> to a <see cref="T:System.String" /> that contains escape characters for non-printable characters.</span></span></summary>
        <returns><span data-ttu-id="8a384-168">Reprezentacja <paramref name="source" /> ciągu zawierającego znaki ucieczki.</span><span class="sxs-lookup"><span data-stu-id="8a384-168">The string representation of <paramref name="source" /> that contains escape characters.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="ToPrimitive">
      <MemberSignature Language="C#" Value="public object ToPrimitive (object value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ToPrimitive(object value, valuetype System.TypeCode typeCode, bool truncationPermitted) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.ToPrimitive(System.Object,System.TypeCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToPrimitive(System::Object ^ value, TypeCode typeCode, bool truncationPermitted);" />
      <MemberSignature Language="F#" Value="abstract member ToPrimitive : obj * TypeCode * bool -&gt; obj" Usage="iDebugConvert.ToPrimitive (value, typeCode, truncationPermitted)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeCode" Type="System.TypeCode" />
        <Parameter Name="truncationPermitted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-169">Wartość do przekonwertowania na nowy typ.</span><span class="sxs-lookup"><span data-stu-id="8a384-169">The value to convert to a new type.</span></span></param>
        <param name="typeCode"><span data-ttu-id="8a384-170">Typ do przekonwertowania <paramref name="value" /> .</span><span class="sxs-lookup"><span data-stu-id="8a384-170">The type to convert <paramref name="value" /> to.</span></span></param>
        <param name="truncationPermitted"><span data-ttu-id="8a384-171"><see langword="true" />Aby zezwolić na utratę danych; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="8a384-171"><see langword="true" /> to allow data loss; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8a384-172">Po zaimplementowaniu w klasie, konwertuje określoną wartość na określoną <see cref="T:System.TypeCode" />, opcjonalnie zezwalając na utratę danych.</span><span class="sxs-lookup"><span data-stu-id="8a384-172">When implemented in a class, converts the specified value to the specified <see cref="T:System.TypeCode" />, optionally allowing data loss.</span></span></summary>
        <returns><span data-ttu-id="8a384-173"><paramref name="value" />konwertowane na <paramref name="typeCode" /> typ.</span><span class="sxs-lookup"><span data-stu-id="8a384-173"><paramref name="value" /> converted to the <paramref name="typeCode" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt16ToString">
      <MemberSignature Language="C#" Value="public string UInt16ToString (ushort value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt16ToString(unsigned int16 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt16ToString(System.UInt16,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt16ToString (value As UShort, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt16ToString(System::UInt16 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt16ToString : uint16 * int -&gt; string" Usage="iDebugConvert.UInt16ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-174">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-174">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-175">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-175">The base of the return value.</span></span> <span data-ttu-id="8a384-176">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-176">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-177">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.UInt16" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-177">When implemented in a class, converts the specified <see cref="T:System.UInt16" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-178">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-178">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt32ToString">
      <MemberSignature Language="C#" Value="public string UInt32ToString (uint value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt32ToString(unsigned int32 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt32ToString(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt32ToString (value As UInteger, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt32ToString(System::UInt32 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt32ToString : uint32 * int -&gt; string" Usage="iDebugConvert.UInt32ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-179">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-179">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-180">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-180">The base of the return value.</span></span> <span data-ttu-id="8a384-181">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-181">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-182">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.UInt32" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-182">When implemented in a class, converts the specified <see cref="T:System.UInt32" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-183">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-183">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
    <Member MemberName="UInt64ToString">
      <MemberSignature Language="C#" Value="public string UInt64ToString (ulong value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UInt64ToString(unsigned int64 value, int32 radix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugConvert.UInt64ToString(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UInt64ToString (value As ULong, radix As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UInt64ToString(System::UInt64 value, int radix);" />
      <MemberSignature Language="F#" Value="abstract member UInt64ToString : uint64 * int -&gt; string" Usage="iDebugConvert.UInt64ToString (value, radix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8a384-184">Wartość do konwersji.</span><span class="sxs-lookup"><span data-stu-id="8a384-184">The value to convert.</span></span></param>
        <param name="radix"><span data-ttu-id="8a384-185">Podstawa wartości zwracanej.</span><span class="sxs-lookup"><span data-stu-id="8a384-185">The base of the return value.</span></span> <span data-ttu-id="8a384-186">Podstawa musi mieć wartość 2, 8, 10 lub 16.</span><span class="sxs-lookup"><span data-stu-id="8a384-186">The base must be 2, 8, 10, or 16.</span></span></param>
        <summary><span data-ttu-id="8a384-187">Po zaimplementowaniu w klasie, konwertuje określoną <see cref="T:System.UInt64" /> wartość <see cref="T:System.String" />na.</span><span class="sxs-lookup"><span data-stu-id="8a384-187">When implemented in a class, converts the specified <see cref="T:System.UInt64" /> value to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="8a384-188">Ciąg reprezentujący <paramref name="value" /> wartość w parametrze Base <paramref name="radix" />.</span><span class="sxs-lookup"><span data-stu-id="8a384-188">The string representation of <paramref name="value" /> in base <paramref name="radix" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.DebugConvert" />
        <altmember cref="T:Microsoft.JScript.IDebugConvert2" />
      </Docs>
    </Member>
  </Members>
</Type>
