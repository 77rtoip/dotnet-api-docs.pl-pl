<Type Name="IWrappedMember" FullName="Microsoft.JScript.IWrappedMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df886faccdc2c3cbb998da6c1b4750af55a33bbc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36663018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWrappedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWrappedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IWrappedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWrappedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWrappedMember" />
  <TypeSignature Language="F#" Value="type IWrappedMember = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody do uzyskiwania dostępu do obiektu, który element członkowski jest zdefiniowany w.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy obiekt opakowana zawiera informacje dotyczące jednego elementu członkowskiego (pola, właściwości lub metody) wraz z kopią wystąpień obiektu, który element członkowski został zdefiniowany w. Dzięki temu inne obiekty, które nie zawierają elementu członkowskiego, zapisz go, a następnie wróć jego wartości, tak jakby był on własne.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Reflection.FieldInfo" />
    <altmember cref="T:System.Reflection.PropertyInfo" />
    <altmember cref="T:System.Reflection.MethodInfo" />
    <altmember cref="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="GetWrappedObject">
      <MemberSignature Language="C#" Value="public object GetWrappedObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetWrappedObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IWrappedMember.GetWrappedObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWrappedObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetWrappedObject();" />
      <MemberSignature Language="F#" Value="abstract member GetWrappedObject : unit -&gt; obj" Usage="iWrappedMember.GetWrappedObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie zwraca obiekt, który element członkowski jest zdefiniowany w.</summary>
        <returns>Obiekt, który element członkowski jest zdefiniowany w.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy obiekt opakowana zawiera informacje dotyczące jednego elementu członkowskiego (pola, właściwości lub metody) wraz z kopią wystąpień obiektu, który element członkowski został zdefiniowany w. Dzięki temu inne obiekty, które nie zawierają elementu członkowskiego, zapisz go, a następnie wróć jego wartości, tak jakby był on własne.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.PropertyInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>