<Type Name="ActivationObject" FullName="Microsoft.JScript.ActivationObject">
  <TypeSignature Language="C#" Value="public abstract class ActivationObject : Microsoft.JScript.ScriptObject, Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ActivationObject extends Microsoft.JScript.ScriptObject implements class Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.ActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ActivationObject&#xA;Inherits ScriptObject&#xA;Implements IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationObject abstract : Microsoft::JScript::ScriptObject, Microsoft::JScript::IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IActivationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9243-101">Reprezentuje obiekt, który uczestniczy w hierarchii zakresu.</span><span class="sxs-lookup"><span data-stu-id="d9243-101">Represents an object that is taking part in a scope hierarchy.</span></span> <span data-ttu-id="d9243-102">Ta klasa zawiera metody rozpoznawania zakresu oraz do pobierania informacji o elemencie członkowskim.</span><span class="sxs-lookup"><span data-stu-id="d9243-102">This class contains methods for resolving scope and for getting member information.</span></span> <span data-ttu-id="d9243-103">Należy do kompilacji i kategoria Stan czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d9243-103">It belongs to the compilation and run-time state category.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
    <altmember cref="T:System.Reflection.MemberInfo" />
    <altmember cref="T:System.Reflection.IReflect" />
  </Docs>
  <Members>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.JScript.JSVariableField CreateField (string name, System.Reflection.FieldAttributes attributeFlags, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.JScript.JSVariableField CreateField(string name, valuetype System.Reflection.FieldAttributes attributeFlags, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.CreateField(System.String,System.Reflection.FieldAttributes,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateField (name As String, attributeFlags As FieldAttributes, value As Object) As JSVariableField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::JScript::JSVariableField ^ CreateField(System::String ^ name, System::Reflection::FieldAttributes attributeFlags, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.JSVariableField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributeFlags" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9243-104">Nazwa pola.</span><span class="sxs-lookup"><span data-stu-id="d9243-104">The name of the field.</span></span></param>
        <param name="attributeFlags"><span data-ttu-id="d9243-105">Bitowe połączenie wartości wyliczenia, które opisują atrybutów pola.</span><span class="sxs-lookup"><span data-stu-id="d9243-105">A bitwise combination of the enumeration values that describe the attributes of a field.</span></span> <span data-ttu-id="d9243-106"><see cref="F:System.Reflection.FieldAttributes.Static" /> dodawany jest automatycznie.</span><span class="sxs-lookup"><span data-stu-id="d9243-106"><see cref="F:System.Reflection.FieldAttributes.Static" /> is added automatically.</span></span></param>
        <param name="value"><span data-ttu-id="d9243-107">Wartość pola.</span><span class="sxs-lookup"><span data-stu-id="d9243-107">The value of the field.</span></span></param>
        <summary><span data-ttu-id="d9243-108">Tworzy nową zmienną globalnych, przy użyciu określoną nazwę, wartość oraz atrybuty.</span><span class="sxs-lookup"><span data-stu-id="d9243-108">Creates a new global variable, using the specified name, value, and attributes.</span></span></summary>
        <returns><span data-ttu-id="d9243-109">Zmiennej globalnej, która ma określoną nazwę, wartość oraz atrybuty.</span><span class="sxs-lookup"><span data-stu-id="d9243-109">A global variable that has the specified name, value, and attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="field_table">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList field_table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.ArrayList field_table" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ActivationObject.field_table" />
      <MemberSignature Language="VB.NET" Value="Protected field_table As ArrayList " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::ArrayList ^ field_table;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9243-110">Zapisuje tablicę zmiennych, które znajdują się w zakresie.</span><span class="sxs-lookup"><span data-stu-id="d9243-110">Stores an array of variables that are in scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public virtual object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetDefaultThisObject();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetDefaultThisObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9243-111">Pobiera bieżący domyślny zakres, który może być przechowywany obiekt z <see langword="with" /> instrukcji zakresie lub zakresie globalnym.</span><span class="sxs-lookup"><span data-stu-id="d9243-111">Gets the current default scope, which is either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="d9243-112">Bieżący zakres domyślny.</span><span class="sxs-lookup"><span data-stu-id="d9243-112">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9243-113">Nazwa pola do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="d9243-113">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="d9243-114">Poziom leksykalne do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d9243-114">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="d9243-115">Zwraca pola, które ma określoną nazwę, wyszukując hierarchii zakresu.</span><span class="sxs-lookup"><span data-stu-id="d9243-115">Returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="d9243-116">Ta metoda wyszukuje zakresu określonego przez leksykalne poziom.</span><span class="sxs-lookup"><span data-stu-id="d9243-116">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="d9243-117">A <see cref="T:System.Reflection.FieldInfo" /> obiekt, który ma określoną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d9243-117">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9243-118">Ta metoda ma zastosowanie do pól, których nie można rozpoznać w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d9243-118">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="d9243-119">W takim przypadku `eval` wyrażenie odwołuje się do pola w zewnętrznym zakresie.</span><span class="sxs-lookup"><span data-stu-id="d9243-119">This occurs when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="d9243-120">Ponieważ `eval` wyrażenie można zadeklarować lokalnego pola, który ma taką samą nazwę jak pole w zewnętrznym zakresie, pole nie może być wczesne powiązane z polem zewnętrznym zakresie.</span><span class="sxs-lookup"><span data-stu-id="d9243-120">Because the `eval` expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public virtual Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9243-121">Pobiera zakresu globalnego wyszukując hierarchii zakresu, aż do znalezienia zakresu, który zawiera zmienne statyczne, na przykład zakres modułu.</span><span class="sxs-lookup"><span data-stu-id="d9243-121">Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="d9243-122">Globalne.</span><span class="sxs-lookup"><span data-stu-id="d9243-122">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9243-123">Nazwa pola.</span><span class="sxs-lookup"><span data-stu-id="d9243-123">The name of the field.</span></span></param>
        <summary><span data-ttu-id="d9243-124">Pobiera lokalna deklaracja pola, które ma określoną nazwę.</span><span class="sxs-lookup"><span data-stu-id="d9243-124">Gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="d9243-125">Jest ono używane w czasie kompilacji sprawdzania błędów.</span><span class="sxs-lookup"><span data-stu-id="d9243-125">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="d9243-126">Lokalna deklaracja pola.</span><span class="sxs-lookup"><span data-stu-id="d9243-126">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9243-127">Nazwa elementu członkowskiego do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="d9243-127">The name of the member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d9243-128">Bitowe połączenie wartości wyliczenia, który określa sposób wyszukiwania dla członków jest przeprowadzane przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="d9243-128">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="d9243-129">Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów, które odnoszą się do wszystkich elementów członkowskich, które odpowiada określonej nazwy.</span><span class="sxs-lookup"><span data-stu-id="d9243-129">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span></span></summary>
        <returns><span data-ttu-id="d9243-130">Tablica obiektów spełniających <paramref name="name" /> argumentu.</span><span class="sxs-lookup"><span data-stu-id="d9243-130">An array of objects that match the <paramref name="name" /> argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="d9243-131">Bitowe połączenie wartości wyliczenia, który określa sposób wyszukiwania dla członków jest przeprowadzane przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="d9243-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span></span></param>
        <summary><span data-ttu-id="d9243-132">Pobiera tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów, które odpowiada wszystkie elementy członkowskie bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d9243-132">Retrieves an array of <see cref="T:System.Reflection.MemberInfo" /> objects that corresponds to all members of the current object.</span></span></summary>
        <returns><span data-ttu-id="d9243-133">Tablica obiektów zawierający wszystkie elementy członkowskie bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d9243-133">An array of objects that contains all members of the current object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9243-134">Nazwa elementu członkowskiego do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="d9243-134">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="d9243-135">Poziom leksykalne do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="d9243-135">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="d9243-136">Pobiera wartość określonego elementu członkowskiego, wyszukując hierarchii zakresu.</span><span class="sxs-lookup"><span data-stu-id="d9243-136">Gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="d9243-137">Ta metoda wyszukuje zakresu określonego przez leksykalne poziom.</span><span class="sxs-lookup"><span data-stu-id="d9243-137">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="d9243-138">Wartość elementu członkowskiego <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="d9243-138">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9243-139">Ta metoda ma zastosowanie do elementów członkowskich, których nie można rozpoznać w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="d9243-139">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="d9243-140">W takim przypadku `eval` wyrażenie odwołuje się do elementu członkowskiego w zewnętrznym zakresie.</span><span class="sxs-lookup"><span data-stu-id="d9243-140">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="d9243-141">Ponieważ `eval` wyrażenie można zadeklarować lokalnego elementu członkowskiego, który ma taką samą nazwę jak element członkowski w zakresie zewnętrznym, element członkowski nie może być wczesne powiązany z zewnętrznym zakresie element członkowski.</span><span class="sxs-lookup"><span data-stu-id="d9243-141">Because the `eval` expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>