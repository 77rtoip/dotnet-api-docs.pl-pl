<Type Name="DirectoryConnection" FullName="System.DirectoryServices.Protocols.DirectoryConnection">
  <TypeSignature Language="C#" Value="public abstract class DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DirectoryConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryConnection abstract" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09181-101"><see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> Klasa jest klasą abstrakcyjną i nie można utworzyć wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="09181-101">The <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class is an abstract class and cannot be instantiated.</span></span> <span data-ttu-id="09181-102">Użyj <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> lub <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> klasy, aby połączyć się z serwerem katalogu.</span><span class="sxs-lookup"><span data-stu-id="09181-102">Use the <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> or <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> classes to connect to a directory server.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DirectoryConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DirectoryConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09181-103"><see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> Konstruktor inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="09181-103">The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> constructor initializes a new instance of a <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09181-104"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> Właściwość określa co najmniej jeden certyfikat klienta do wysyłania do uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="09181-104">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> property specifies one or more client certificates to send for authentication.</span></span></summary>
        <value><span data-ttu-id="09181-105">Co najmniej jeden certyfikat klienta do wysyłania do uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="09181-105">One or more client certificates to send for authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkCredential Credential { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkCredential ^ Credential {  void set(System::Net::NetworkCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09181-106"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> Właściwość określa alternatywnych poświadczeń dla obiekt połączenia.</span><span class="sxs-lookup"><span data-stu-id="09181-106">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> property specifies alternate credentials for the connection object.</span></span></summary>
        <value><span data-ttu-id="09181-107">Alternatywne poświadczenia dla obiekt połączenia.</span><span class="sxs-lookup"><span data-stu-id="09181-107">Alternate credentials for the connection object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09181-108">Jeśli nie zostanie określony, wartością domyślną jest `null`.</span><span class="sxs-lookup"><span data-stu-id="09181-108">If not specified, the default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public virtual System.DirectoryServices.Protocols.DirectoryIdentifier Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.DirectoryIdentifier Directory" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Directory As DirectoryIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::Protocols::DirectoryIdentifier ^ Directory { System::DirectoryServices::Protocols::DirectoryIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09181-109"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> Właściwość określa domeny lub tego serwera, do którego należy ustanowić połączenie.</span><span class="sxs-lookup"><span data-stu-id="09181-109">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> property specifies the domain or the server to which the connection should be made.</span></span></summary>
        <value><span data-ttu-id="09181-110">Domeny lub tego serwera, do którego należy ustanowić połączenie.</span><span class="sxs-lookup"><span data-stu-id="09181-110">The domain or the server to which the connection should be made.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09181-111">Na przykład "http://fabrikam.com/platforms/adssoap.dll" reprezentuje serwer DSML i reprezentuje "dc 01.fabrikam.com" serwera LDAP.</span><span class="sxs-lookup"><span data-stu-id="09181-111">For example, "http://fabrikam.com/platforms/adssoap.dll" represents a DSML server and "dc-01.fabrikam.com" represents an LDAP server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public abstract System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="09181-112">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> obiekt, który zawiera żądanie.</span><span class="sxs-lookup"><span data-stu-id="09181-112">A <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> object that contains the request.</span></span></param>
        <summary><span data-ttu-id="09181-113"><see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> Metoda wysyła operacji jednego katalogu na serwerze.</span><span class="sxs-lookup"><span data-stu-id="09181-113">The <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> method sends a single directory operation to the server.</span></span></summary>
        <returns><span data-ttu-id="09181-114">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> obiekt, który zawiera odpowiedzi serwera dla operacji żądania.</span><span class="sxs-lookup"><span data-stu-id="09181-114">A <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> object that contains the server response to the request operation.</span></span> <span data-ttu-id="09181-115">Obiekt zwrócony odpowiedzi może różnić się od żądanego obiektu, jeśli serwer zwraca różnych odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="09181-115">The returned response object may be different than the requested object if the server returns a different response.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09181-116"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> Właściwość zawiera czas w sekundach, zanim upłynie limit czasu połączenia.</span><span class="sxs-lookup"><span data-stu-id="09181-116">The <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> property contains the length of time, in seconds, before the connection times out.</span></span></summary>
        <value><span data-ttu-id="09181-117">Długość czasu w sekundach, zanim upłynie limit czasu połączenia.</span><span class="sxs-lookup"><span data-stu-id="09181-117">The length of time, in seconds, before the connection times out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09181-118">Trzydzieści sekund jest domyślne ustawienie właściwości długość czasu.</span><span class="sxs-lookup"><span data-stu-id="09181-118">Thirty seconds is the default time length property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>