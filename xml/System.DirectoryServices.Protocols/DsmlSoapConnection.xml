<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c029d15db3e2e54ac483f694e424542913b2a809" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37660615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlSoapConnection&#xA;Inherits DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapConnection abstract : System::DirectoryServices::Protocols::DirectoryConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapConnection = class&#xA;    inherit DirectoryConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> Klasa jest klasą abstrakcyjną, która nie można utworzyć wystąpienia. Dzięki temu stanowe i bezstanowe protokołów, które mają być obsługiwane w podobny sposób, zapewniając funkcji zorientowanych na sesji.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlSoapConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> Konstruktor inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginSession();" />
      <MemberSignature Language="F#" Value="abstract member BeginSession : unit -&gt; unit" Usage="dsmlSoapConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> Metoda powoduje, że serwer DSML, aby uruchomić nową sesję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda będzie blokadę podczas oczekiwania na odpowiedź z serwera DSML i przekroczy limit czasu zgodnie z opisem w <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Element zgłaszany, gdy sesja jest już otwarty w ramach połączenia.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Element zgłaszany, gdy nie jest poprawnie sformułowany kod XML zwrócony z serwera w odpowiedzi na BeginSession.</exception>
        <exception cref="T:System.Net.WebException">Element zgłaszany, gdy występuje błąd komunikacji z serwerem DSML.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndSession();" />
      <MemberSignature Language="F#" Value="abstract member EndSession : unit -&gt; unit" Usage="dsmlSoapConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> Metoda kończy się sesja z serwerem DSML i czyści <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda będzie blokadę podczas oczekiwania na odpowiedź z serwera DSML i przekroczy limit czasu zgodnie z opisem w <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> właściwości.  
  
 Jeśli serwer DSML kończy sesję <xref:System.Net.WebException>  
  
 jest zgłaszany. Jeśli <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> jest nadal ważny po wyjątku, żądanie nie jest nigdy osiągany serwera i połączenia są nadal uważane za prawidłowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Element zgłaszany, gdy wystąpi błąd komunikacji z serwerem DSML.</exception>
        <exception cref="T:System.InvalidOperationException">Zgłaszany, gdy jest nie Otwórz sesję.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> Właściwość zawiera identyfikator aktywnej sesji.</summary>
        <value>Identyfikator aktywnej sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość null oznacza nie aktywnej sesji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapRequestHeader As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNode ^ SoapRequestHeader { System::Xml::XmlNode ^ get(); void set(System::Xml::XmlNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapRequestHeader : System.Xml.XmlNode with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> Właściwość zawiera nagłówek SOAP dołączony do żądania wychodzące.</summary>
        <value>Nagłówek SOAP dołączony do żądania wychodzące.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs API używa <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> i <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> śledzić okres istnienia sesji.  
  
 **Ostrzeżenie** dołączenie nagłówka EndSession do <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> powoduje, że interfejs API, aby stać się niespójna z połączeniem i należy ich unikać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>