<Type Name="BerConverter" FullName="System.DirectoryServices.Protocols.BerConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78a9405a1322e217c78a6d4e9274ee6f22d2c9f2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69074744" /></Metadata><TypeSignature Language="C#" Value="public sealed class BerConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BerConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.BerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BerConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BerConverter sealed" />
  <TypeSignature Language="F#" Value="type BerConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.BerConverter" /> Klasa koduje i dekoduje dane strukturalne przy użyciu podstawowych reguł kodowania.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static object[] Decode (string format, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] Decode(string format, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (format As String, value As Byte()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ Decode(System::String ^ format, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Decode : string * byte[] -&gt; obj[]" Usage="System.DirectoryServices.Protocols.BerConverter.Decode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu.</param>
        <param name="value">Tablica danych o wartościach.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> Metoda dekoduje binarną reprezentację danych przy użyciu funkcji o wartości do, aby pobrać dane strukturalne.</summary>
        <returns>Zdekodowane dane.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Parametr zawiera odwołanie o wartości null (<see langword="Nothing" /> w Visual Basic). <paramref name="format" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="format" /> Parametr zawiera niezdefiniowany znak.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">Podstawowe dekodowanie nie powiodło się. Reguły dekodowania obejmują następujące elementy:  
  
 <list type="table"><listheader><term> Kod  
  
 </term><description> Odpowiadający wynik  
  
 </description></listheader><item><term> "{" "}" "[" "]" n "" x "  
  
 </term><description> Brak odpowiedniego wyniku  
  
 </description></item><item><term> "i" "e"  
  
 </term><description> int  
  
 </description></item><item><term> b  
  
 </term><description> bool  
  
 </description></item><item><term> 'a'  
  
 </term><description> string  
  
 </description></item><item><term> 'O'  
  
 </term><description> byte[]  
  
 </description></item><item><term> B  
  
 </term><description> Byte [] zawierające ciągi bitowe  
  
 </description></item><item><term> v  
  
 </term><description> ciąg []  
  
 </description></item><item><term> V  
  
 </term><description> byte[][]  
  
 </description></item></list></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static byte[] Encode (string format, params object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Encode(string format, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (format As String, ParamArray value As Object()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Encode(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Encode : string * obj[] -&gt; byte[]" Usage="System.DirectoryServices.Protocols.BerConverter.Encode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu.</param>
        <param name="value">Tablica sformatowanych danych.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> Metoda koduje dane strukturalne przy użyciu funkcji, aby pobrać binarną reprezentację danych.</summary>
        <returns>Tablica danych zakodowanych przez pasmo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Następujące znaki są prawidłowe w formacie.  
  
 Reguły kodowania:  
  
|Kod|Odpowiadający argument|  
|----------|----------------------------|  
|"{" "}" [""] "n"|Brak odpowiadającego argumentu|  
|"" i "" e "|int|  
|'a'|Ciąg oktetu|  
|b|bool|  
|przeglądarki|string|  
|"o" X "|byte[]|  
|v|ciąg []|  
|V|byte[][]|  
  
> [!NOTE]
>  znaki "v" i "v" są specjalne w przypadku, {} gdy wymagana jest wartość Double. Na przykład użyj {{v}} i {{V}}.  
  
## <a name="exceptions"></a>Wyjątki  
  
|Wyjątek|Warunek|  
|---------------|---------------|  
|ArgumentNullException|`format`jest odwołaniem o wartości`Nothing` null (w Visual Basic).|  
|ArgumentException|Ten wyjątek występuje w jednym z następujących warunków:<br /><br /> -Nie ma wystarczającej liczby argumentów dla ciągu formatu.<br />-Argument ciągu formatu jest niepoprawny.<br />-Ciąg formatu zawiera niezdefiniowany znak.|  
|BerConversionException —|Błąd podczas przetwarzania wartości zwracanej.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
