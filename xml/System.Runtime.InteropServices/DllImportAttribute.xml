<Type Name="DllImportAttribute" FullName="System.Runtime.InteropServices.DllImportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de7a53beeda19e530806d2978aadf945a5d39e91" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52247553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DllImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DllImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.DllImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DllImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DllImportAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DllImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a09e-101">Wskazuje, że metoda opartego na atrybutach jest uwidaczniany przez niezarządzane biblioteki dołączanej (dynamicznie DLL) jako punkt wejścia statyczne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a09e-101">Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-102">Ten atrybut można stosować do metody.</span><span class="sxs-lookup"><span data-stu-id="0a09e-102">You can apply this attribute to methods.</span></span>  
  
 <span data-ttu-id="0a09e-103"><xref:System.Runtime.InteropServices.DllImportAttribute> Atrybut zawiera informacje potrzebne do wywoływania funkcji wyeksportowanej z niezarządzaną biblioteką DLL.</span><span class="sxs-lookup"><span data-stu-id="0a09e-103">The <xref:System.Runtime.InteropServices.DllImportAttribute> attribute provides the information needed to call a function exported from an unmanaged DLL.</span></span> <span data-ttu-id="0a09e-104">Jako minimalne wymaganie należy podać nazwę pliku DLL zawierającego punkt wejścia.</span><span class="sxs-lookup"><span data-stu-id="0a09e-104">As a minimum requirement, you must supply the name of the DLL containing the entry point.</span></span>  
  
 <span data-ttu-id="0a09e-105">Zastosowanie tego atrybutu bezpośrednio do języka C# i C++ definicje metod; Jednak kompilator Visual Basic emituje tego atrybutu, gdy używasz `Declare` instrukcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-105">You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the `Declare` statement.</span></span> <span data-ttu-id="0a09e-106">Dla metody złożone definicje, które obejmują <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, lub <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pól bezpośrednio do definicji metod języka Visual Basic stosuje się ten atrybut.</span><span class="sxs-lookup"><span data-stu-id="0a09e-106">For complex method definitions that include <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, or <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields, you apply this attribute directly to Visual Basic method definitions.</span></span>  
  
 <span data-ttu-id="0a09e-107">**Uwaga** JScript nie obsługuje tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0a09e-107">**Note** JScript does not support this attribute.</span></span> <span data-ttu-id="0a09e-108">Dostęp do niezarządzanego metody interfejsu API z programów w języku JScript można użyć C# lub Visual Basic klasy otoki.</span><span class="sxs-lookup"><span data-stu-id="0a09e-108">You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.</span></span>  
  
 <span data-ttu-id="0a09e-109">Aby uzyskać dodatkowe informacje o korzystaniu z platformy wywołania usługi dostępu do funkcji niezarządzanych bibliotek DLL, zobacz [wykorzystywanie niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="0a09e-109">For additional information about using the platform invoke service to access functions in unmanaged DLLs, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a09e-110"><xref:System.Runtime.InteropServices.DllImportAttribute> Nie obsługuje przekazywanie typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="0a09e-110">The <xref:System.Runtime.InteropServices.DllImportAttribute> does not support marshaling of generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-111">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.InteropServices.DllImportAttribute> atrybutu, aby zaimportować Win32 `MessageBox` funkcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-111">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="0a09e-112">Przykładowy kod wywołuje metodę zaimportowane.</span><span class="sxs-lookup"><span data-stu-id="0a09e-112">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DllImportAttribute (string dllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dllName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DllImportAttribute(System::String ^ dllName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.DllImportAttribute : string -&gt; System.Runtime.InteropServices.DllImportAttribute" Usage="new System.Runtime.InteropServices.DllImportAttribute dllName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dllName">
          <span data-ttu-id="0a09e-113">Nazwa biblioteki DLL, która zawiera metodę niezarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-113">The name of the DLL that contains the unmanaged method.</span>
          </span>
          <span data-ttu-id="0a09e-114">Może to być nazwa wyświetlana zestawu, jeśli biblioteka DLL jest uwzględniony w zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-114">This can include an assembly display name, if the DLL is included in an assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a09e-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> klasy o nazwie pliku DLL zawierającego metodę do zaimportowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> class with the name of the DLL containing the method to import.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-116">Jeśli niezarządzane pliku DLL znajduje się w zestawie, na przykład za pomocą konsolidatora lub `/linkresource` — opcja kompilatora, można określić nazwę wyświetlaną zestawu jako część `dllName`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-116">If an unmanaged DLL file is included in an assembly, for example, by using the linker or the `/linkresource` compiler option, you can specify the assembly display name as part of `dllName`.</span></span> <span data-ttu-id="0a09e-117">Na przykład, jeśli niezarządzaną biblioteką DLL o nazwie `unmanaged.dll` znajduje się w zarządzanym zestawie o nazwie `MyAssembly`, może być określony atrybut, jak pokazano w poniższym kodzie.</span><span class="sxs-lookup"><span data-stu-id="0a09e-117">For example, if an unmanaged DLL named `unmanaged.dll` is included in a managed assembly named `MyAssembly`, the attribute might be specified as shown in the following code.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-118">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.InteropServices.DllImportAttribute> atrybutu, aby zaimportować Win32 `MessageBox` funkcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-118">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="0a09e-119">Przykładowy kod wywołuje metodę zaimportowane.</span><span class="sxs-lookup"><span data-stu-id="0a09e-119">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberSignature Language="VB.NET" Value="Public BestFitMapping As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool BestFitMapping;" />
      <MemberSignature Language="F#" Value="val mutable BestFitMapping : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-120">Włącza lub wyłącza mapowanie najlepszego dopasowania zachowanie podczas konwersji znaków Unicode znaki ANSI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-120">Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-121">Jeśli `true`, najlepszego dopasowania mapowania zachowanie jest włączone; w przeciwnym razie najlepszego dopasowania mapowania jest wyłączony.</span><span class="sxs-lookup"><span data-stu-id="0a09e-121">If `true`, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled.</span></span> <span data-ttu-id="0a09e-122"><xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Pole jest `true` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="0a09e-122">The <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is `true` by default.</span></span> <span data-ttu-id="0a09e-123">Ustawienia dla tego pola zastąpić wszelkie ustawienia poziomu dla <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="0a09e-123">Settings for this field override the any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 <span data-ttu-id="0a09e-124">Środowisko uruchomieniowe języka wspólnego konwertuje znaki ANSI, zarządzane dowolne znaki Unicode przekazywany do metody niezarządzanego wykonywania na Windows 98 lub Windows Me.</span><span class="sxs-lookup"><span data-stu-id="0a09e-124">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="0a09e-125">Mapowanie umożliwia Organizator międzyoperacyjny zapewnienie dopasowania w pobliżu znaku, gdy istnieje dokładnego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="0a09e-125">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="0a09e-126">Na przykład Organizator konwertuje znak Unicode o prawach autorskich "c", niezarządzanych metod, które akceptują znaki ANSI.</span><span class="sxs-lookup"><span data-stu-id="0a09e-126">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="0a09e-127">Niektóre znaki nie mają reprezentacji najlepszego dopasowania; następujące znaki są nazywane którego nie można zmapować.</span><span class="sxs-lookup"><span data-stu-id="0a09e-127">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="0a09e-128">Którego nie można zmapować znaki zwykle są konwertowane na wartość domyślna "?" Znaków ANSI.</span><span class="sxs-lookup"><span data-stu-id="0a09e-128">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a09e-129">Niektóre znaki Unicode są konwertowane na niebezpiecznych znaków, takich jak ukośnik odwrotny "\\" znaków, które przypadkowo można zmienić ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="0a09e-129">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="0a09e-130">Ustawiając <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole `true`, można sygnał obecności, którego nie można zmapować znaku do obiektu wywołującego, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0a09e-130">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a09e-131">Nie można zmienić wartości domyślne, dostarczone przez <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> i <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pól podczas przekazywania tablicy zarządzanej, której elementy są znaki ANSI lub LPSTRs do bezpiecznej tablicy niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="0a09e-131">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="0a09e-132">Mapowanie najlepszego dopasowania jest zawsze włączona i jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0a09e-132">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="0a09e-133">Należy pamiętać, że ta kombinacja może naruszyć bezpieczeństwo modelu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="0a09e-133">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-134">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a09e-134">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="0a09e-135">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-135">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is one of those cases.</span></span> <span data-ttu-id="0a09e-136">Poniższy przykład pokazuje, jak zastosować najbardziej rygorystyczne zabezpieczenia mapowanie znaków na platformie wywołania definicje metod Określanie zestawu znaków ANSI, wyłączając najlepsze zachowanie mapowanie i zostanie zgłoszony wyjątek niezamapowane znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a09e-136">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="0a09e-137">Marshaling międzyoperacyjny</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-137">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CallingConvention CallingConvention;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CallingConvention CallingConvention" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public CallingConvention As CallingConvention " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CallingConvention CallingConvention;" />
      <MemberSignature Language="F#" Value="val mutable CallingConvention : System.Runtime.InteropServices.CallingConvention" Usage="System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CallingConvention</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-138">Wskazuje Konwencja wywoływania punktu wejścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-138">Indicates the calling convention of an entry point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-139">To pole jest ustawiony na jedną z <xref:System.Runtime.InteropServices.CallingConvention> elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="0a09e-139">You set this field to one of the <xref:System.Runtime.InteropServices.CallingConvention> enumeration members.</span></span> <span data-ttu-id="0a09e-140">Wartością domyślną dla <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> pole jest <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, który z kolei wartość domyślna to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> Konwencji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-140">The default value for the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, which in turn defaults to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convention.</span></span>  
  
 <span data-ttu-id="0a09e-141">Aby uzyskać więcej informacji zobacz konwencji wywoływania w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="0a09e-141">For more information, see Calling Convention in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-142">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a09e-142">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="0a09e-143">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-143">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is one of those cases.</span></span>  
  
 <span data-ttu-id="0a09e-144">System.Runtime.InteropServices.DllImportAttribute#1</span><span class="sxs-lookup"><span data-stu-id="0a09e-144">System.Runtime.InteropServices.DllImportAttribute#1</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CallingConvention" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-145">Określa sposób organizowania parametry ciągu do metody i dekorowanie nazw kontrolek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-145">Indicates how to marshal string parameters to the method and controls name mangling.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-146">Użyj tego pola z elementem członkowskim <xref:System.Runtime.InteropServices.CharSet> wyliczenie, aby określić zachowanie marshalingu parametrów ciągu i aby określić, która nazwa punktu wejścia do wywołania (dokładną nazwą podany lub nazwy kończą się ciągiem "A" lub "T").</span><span class="sxs-lookup"><span data-stu-id="0a09e-146">Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with "A" or "W").</span></span> <span data-ttu-id="0a09e-147">Domyślny element członkowski wyliczenia w języku C# i Visual Basic jest `CharSet.Ansi` i domyślny element członkowski wyliczenia języka C++ jest `CharSet.None`, który jest odpowiednikiem `CharSet.Ansi`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-147">The default enumeration member for C# and Visual Basic is `CharSet.Ansi` and the default enumeration member for C++ is `CharSet.None`, which is equivalent to `CharSet.Ansi`.</span></span> <span data-ttu-id="0a09e-148">W języku Visual Basic można użyć `Declare` instrukcję, aby określić `CharSet` pola.</span><span class="sxs-lookup"><span data-stu-id="0a09e-148">In Visual Basic, you use the `Declare` statement to specify the `CharSet` field.</span></span>  
  
 <span data-ttu-id="0a09e-149"><xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Pole ma wpływ na zachowanie `CharSet` pola w określeniu, która nazwa punktu wejścia do wywołania.</span><span class="sxs-lookup"><span data-stu-id="0a09e-149">The <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field influences the behavior of the `CharSet` field in determining which entry-point name to invoke.</span></span> <span data-ttu-id="0a09e-150">Szczegółowy opis i przykłady organizowania ciągu i zachowania związanego z nazwą `CharSet` pola, zobacz [Określanie zestawu znaków](~/docs/framework/interop/specifying-a-character-set.md).</span><span class="sxs-lookup"><span data-stu-id="0a09e-150">For a detailed description and examples of the string marshaling and name matching behavior associated with the `CharSet` field, see [Specifying a Character Set](~/docs/framework/interop/specifying-a-character-set.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-151">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.InteropServices.DllImportAttribute> atrybutu, aby zaimportować Win32 `MessageBox` funkcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-151">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="0a09e-152">Przykładowy kod wywołuje metodę zaimportowane.</span><span class="sxs-lookup"><span data-stu-id="0a09e-152">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string EntryPoint;" />
      <MemberSignature Language="ILAsm" Value=".field public string EntryPoint" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public EntryPoint As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EntryPoint;" />
      <MemberSignature Language="F#" Value="val mutable EntryPoint : string" Usage="System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-153">Wskazuje, nazwa lub porządkowy punkt wejścia biblioteki DLL, który ma zostać wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-153">Indicates the name or ordinal of the DLL entry point to be called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-154">Należy określić nazwę punktu wejścia, podając ciąg wskazujący nazwę pliku DLL zawierającego punkt wejścia lub jego numer można rozpoznać punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="0a09e-154">You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal.</span></span> <span data-ttu-id="0a09e-155">Liczby porządkowe są poprzedzone znakiem #, na przykład #1.</span><span class="sxs-lookup"><span data-stu-id="0a09e-155">Ordinals are prefixed with the # sign, for example, #1.</span></span> <span data-ttu-id="0a09e-156">Jeśli to pole zostanie pominięty, środowisko uruchomieniowe języka wspólnego używa nazwy środowiska.NET metody oznaczonej jako <xref:System.Runtime.InteropServices.DllImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="0a09e-156">If you omit this field, the common language runtime uses the name of the.NET method marked with the <xref:System.Runtime.InteropServices.DllImportAttribute>.</span></span>  
  
 <span data-ttu-id="0a09e-157">Aby uzyskać więcej informacji, zobacz [identyfikowanie funkcji w bibliotekach DLL](~/docs/framework/interop/identifying-functions-in-dlls.md).</span><span class="sxs-lookup"><span data-stu-id="0a09e-157">For additional information, see [Identifying Functions in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span></span> <span data-ttu-id="0a09e-158">Aby uzyskać przykłady pokazujące, jak używać <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> pola, zobacz [Określanie punktu wejścia](~/docs/framework/interop/specifying-an-entry-point.md).</span><span class="sxs-lookup"><span data-stu-id="0a09e-158">For examples showing how to use the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> field, see [Specifying an Entry Point](~/docs/framework/interop/specifying-an-entry-point.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-159">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.InteropServices.DllImportAttribute> atrybutu, aby zaimportować Win32 `MessageBox` funkcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-159">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="0a09e-160">Przykład kodu wykorzystuje <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> właściwości w celu określenia funkcji do zaimportowania, a następnie zmienia nazwę aby `MyNewMessageBoxMethod`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-160">The code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> property to specify the function to import and then changes the name to `MyNewMessageBoxMethod`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ExactSpelling">
      <MemberSignature Language="C#" Value="public bool ExactSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ExactSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberSignature Language="VB.NET" Value="Public ExactSpelling As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ExactSpelling;" />
      <MemberSignature Language="F#" Value="val mutable ExactSpelling : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-161">Formanty czy <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> pola powoduje, że środowisko uruchomieniowe języka wspólnego do wyszukiwania niezarządzaną biblioteką DLL dla punktu wejścia nazw, innym niż ten, który został określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-161">Controls whether the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-162">Jeśli `false`, nazwy punktu wejścia, które są dołączane za pomocą litery A jest wywoływana po <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> pole jest ustawione na `CharSet.Ansi`, i nazwę punktu wejścia dołączany wraz z literę W jest wywoływana po <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> pole jest ustawione na `CharSet.Unicode`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-162">If `false`, the entry point name appended with the letter A is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to `CharSet.Ansi`, and the entry-point name appended with the letter W is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to the `CharSet.Unicode`.</span></span> <span data-ttu-id="0a09e-163">Zwykle zarządzane kompilatory ustawić tego pola.</span><span class="sxs-lookup"><span data-stu-id="0a09e-163">Typically, managed compilers set this field.</span></span>  
  
 <span data-ttu-id="0a09e-164">W poniższej tabeli przedstawiono relację między <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> i <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> pól, na podstawie wartości domyślnej nałożonych przez język programowania.</span><span class="sxs-lookup"><span data-stu-id="0a09e-164">The following table shows the relationship between the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> and <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> fields, based on default values imposed by the programming language.</span></span> <span data-ttu-id="0a09e-165">Możesz zmienić ustawienia domyślne, ale to zrobić z ostrożnością.</span><span class="sxs-lookup"><span data-stu-id="0a09e-165">You can override the default setting, but do so with caution.</span></span>  
  
|<span data-ttu-id="0a09e-166">Język</span><span class="sxs-lookup"><span data-stu-id="0a09e-166">Language</span></span>|<span data-ttu-id="0a09e-167">ANSI</span><span class="sxs-lookup"><span data-stu-id="0a09e-167">ANSI</span></span>|<span data-ttu-id="0a09e-168">Unicode</span><span class="sxs-lookup"><span data-stu-id="0a09e-168">Unicode</span></span>|<span data-ttu-id="0a09e-169">Auto</span><span class="sxs-lookup"><span data-stu-id="0a09e-169">Auto</span></span>|  
|--------------|----------|-------------|----------|  
|<span data-ttu-id="0a09e-170">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="0a09e-170">Visual Basic</span></span>|<span data-ttu-id="0a09e-171">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="0a09e-171">ExactSpelling:=True</span></span>|<span data-ttu-id="0a09e-172">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="0a09e-172">ExactSpelling:=True</span></span>|<span data-ttu-id="0a09e-173">ExactSpelling: = False</span><span class="sxs-lookup"><span data-stu-id="0a09e-173">ExactSpelling:=False</span></span>|  
|<span data-ttu-id="0a09e-174">C#</span><span class="sxs-lookup"><span data-stu-id="0a09e-174">C#</span></span>|<span data-ttu-id="0a09e-175">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-175">ExactSpelling=false</span></span>|<span data-ttu-id="0a09e-176">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-176">ExactSpelling=false</span></span>|<span data-ttu-id="0a09e-177">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-177">ExactSpelling=false</span></span>|  
|<span data-ttu-id="0a09e-178">C++</span><span class="sxs-lookup"><span data-stu-id="0a09e-178">C++</span></span>|<span data-ttu-id="0a09e-179">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-179">ExactSpelling=false</span></span>|<span data-ttu-id="0a09e-180">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-180">ExactSpelling=false</span></span>|<span data-ttu-id="0a09e-181">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="0a09e-181">ExactSpelling=false</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-182">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a09e-182">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="0a09e-183">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-183">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveSig">
      <MemberSignature Language="C#" Value="public bool PreserveSig;" />
      <MemberSignature Language="ILAsm" Value=".field public bool PreserveSig" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberSignature Language="VB.NET" Value="Public PreserveSig As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool PreserveSig;" />
      <MemberSignature Language="F#" Value="val mutable PreserveSig : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-184">Wskazuje, czy niezarządzanych metod, mieć <see langword="HRESULT" /> lub <see langword="retval" /> zwracają wartości bezpośrednio są tłumaczone czy <see langword="HRESULT" /> lub <see langword="retval" /> zwracają wartości są automatycznie konwertowane na wyjątki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-184">Indicates whether unmanaged methods that have <see langword="HRESULT" /> or <see langword="retval" /> return values are directly translated or whether <see langword="HRESULT" /> or <see langword="retval" /> return values are automatically converted to exceptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-185">Ustaw <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole `true` bezpośrednio przełożyć niezarządzanych sygnaturami z `HRESULT` lub `retval` wartości; ustaw ją na `false` Aby dokonać automatycznej konwersji `HRESULT` lub `retval` wartości do wyjątków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-185">Set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `true` to directly translate unmanaged signatures with `HRESULT` or `retval` values; set it to `false` to automatically convert `HRESULT` or `retval` values to exceptions.</span></span> <span data-ttu-id="0a09e-186">Domyślnie <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole jest `true`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-186">By default, the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is `true`.</span></span>  
  
 <span data-ttu-id="0a09e-187">Gdy `true`, wynikowy podpis metody zwraca wartość całkowitą, która zawiera `HRESULT` wartość.</span><span class="sxs-lookup"><span data-stu-id="0a09e-187">When `true`, the resulting method signature returns an integer value that contains the `HRESULT` value.</span></span>  <span data-ttu-id="0a09e-188">Należy w tym przypadku ręcznie sprawdzić wartość zwracaną i odpowiednio reagować w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-188">In this case, you must manually inspect the return value and respond accordingly in your application.</span></span>  
  
 <span data-ttu-id="0a09e-189">Po ustawieniu <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole `false`, wynikowy podpis metody zawiera zwracać typ void nie liczba całkowita (`HRESULT`) typ zwracany.</span><span class="sxs-lookup"><span data-stu-id="0a09e-189">When you set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `false`, the resulting method signature contains a void return type instead of an integer (`HRESULT`) return type.</span></span>  <span data-ttu-id="0a09e-190">Gdy metoda niezarządzanego tworzy `HRESULT`, środowisko wykonawcze automatycznie ignoruje wartość zwracaną `S_OK` (lub równa 0) i nie zgłasza wyjątku.</span><span class="sxs-lookup"><span data-stu-id="0a09e-190">When the unmanaged method produces an `HRESULT`, the runtime automatically ignores a return value of `S_OK` (or 0) and does not throw an exception.</span></span>  <span data-ttu-id="0a09e-191">Aby uzyskać `HRESULT`s innych niż `S_OK`, środowisko wykonawcze automatycznie zgłasza wyjątek, który odpowiada `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-191">For `HRESULT`s other than `S_OK`, the runtime automatically throws an exception that corresponds to the `HRESULT`.</span></span>  <span data-ttu-id="0a09e-192">Należy pamiętać, że <xref:System.Runtime.InteropServices.DllImportAttribute> atrybut będzie wykonywał tylko tę konwersję do metod, które zwracają `HRESULT`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-192">Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute only performs this conversion to methods that return an `HRESULT`.</span></span>  
  
 <span data-ttu-id="0a09e-193">Można zdecydować, aby zmienić błąd domyślny raportowania zachowanie z `HRESULT`s do wyjątków w sytuacjach, gdy wyjątki lepszego dopasowania struktury aplikacji raportowania błędów.</span><span class="sxs-lookup"><span data-stu-id="0a09e-193">You might decide to change the default error reporting behavior from `HRESULT`s to exceptions in cases where exceptions better fit the error reporting structure of your application.</span></span>  
  
 <span data-ttu-id="0a09e-194">To pole jest podobne do <xref:System.Runtime.InteropServices.PreserveSigAttribute>; jednak w przeciwieństwie do <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pola, wartość domyślna dla atrybutu `false`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-194">This field is similar to the <xref:System.Runtime.InteropServices.PreserveSigAttribute>; however, in contrast to the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field, the default value for the attribute is `false`.</span></span>  
  
 <span data-ttu-id="0a09e-195">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a09e-195">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="0a09e-196">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-196">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is one of those cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-197">Poniższy przykład kodu wykorzystuje <xref:System.Runtime.InteropServices.DllImportAttribute> do zaimportowania niezarządzaną `SHAutoComplete` raz funkcją <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole ustawione na wartość `true` i ponownie, używając <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole ustawione na wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-197">The following code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute> to import the unmanaged `SHAutoComplete` function once with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `true` and again with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `false`.</span></span>  <span data-ttu-id="0a09e-198">Ten przykładowy kod powoduje, że `SHAutoComplete` funkcję generującą wszelkie błędy z powodu wyjątku jeden raz i `HRESULT` następnego.</span><span class="sxs-lookup"><span data-stu-id="0a09e-198">This code example causes the `SHAutoComplete` function to generate any errors with an exception one time and an `HRESULT` the next.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError;" />
      <MemberSignature Language="ILAsm" Value=".field public bool SetLastError" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public SetLastError As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool SetLastError;" />
      <MemberSignature Language="F#" Value="val mutable SetLastError : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-199">Wskazuje, czy obiekt wywoływany wywołuje <see langword="SetLastError" /> funkcji Win32 API przed zwróceniem z atrybutami metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-199">Indicates whether the callee calls the <see langword="SetLastError" /> Win32 API function before returning from the attributed method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-200">`true` Aby wskazać, że obiekt wywoływany wywoła `SetLastError`; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-200">`true` to indicate that the callee will call `SetLastError`; otherwise, `false`.</span></span> <span data-ttu-id="0a09e-201">Wartość domyślna to `false`.</span><span class="sxs-lookup"><span data-stu-id="0a09e-201">The default is `false`.</span></span>  
  
 <span data-ttu-id="0a09e-202">Środowisko uruchomieniowe wywołuje organizatora `GetLastError` i buforuje wartości zwracanej, aby zapobiec nadpisaniu przez inne wywołania interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="0a09e-202">The runtime marshaler calls `GetLastError` and caches the value returned to prevent it from being overwritten by other API calls.</span></span> <span data-ttu-id="0a09e-203">Możesz pobrać kod błędu, wywołując <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="0a09e-203">You can retrieve the error code by calling <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-204">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="0a09e-204">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="0a09e-205">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-205">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberSignature Language="VB.NET" Value="Public ThrowOnUnmappableChar As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="F#" Value="val mutable ThrowOnUnmappableChar : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-206">Włącza lub wyłącza zgłaszania wyjątku, dla którego nie można zmapować znak Unicode, który jest konwertowany na ANSI "?" znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-206">Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-207">`true` Aby wskazać, że zgłaszany jest wyjątek każdorazowo, organizator międzyoperacyjny konwertuje znak którego nie można zmapować; `false` z informacją, że <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole jest wyłączone.</span><span class="sxs-lookup"><span data-stu-id="0a09e-207">`true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; `false` to indicate that the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is disabled.</span></span> <span data-ttu-id="0a09e-208">To pole jest `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="0a09e-208">This field is `false` by default.</span></span>  
  
 <span data-ttu-id="0a09e-209">Środowisko uruchomieniowe języka wspólnego konwertuje znaki ANSI, zarządzane dowolne znaki Unicode przekazywany do metody niezarządzanego wykonywania na Windows 98 lub Windows Me.</span><span class="sxs-lookup"><span data-stu-id="0a09e-209">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="0a09e-210">Mapowanie umożliwia Organizator międzyoperacyjny zapewnienie dopasowania w pobliżu znaku, gdy istnieje dokładnego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="0a09e-210">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="0a09e-211">Na przykład Organizator konwertuje znak Unicode o prawach autorskich "c", niezarządzanych metod, które akceptują znaki ANSI.</span><span class="sxs-lookup"><span data-stu-id="0a09e-211">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="0a09e-212">Niektóre znaki nie mają reprezentacji najlepszego dopasowania; następujące znaki są nazywane którego nie można zmapować.</span><span class="sxs-lookup"><span data-stu-id="0a09e-212">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="0a09e-213">Którego nie można zmapować znaki zwykle są konwertowane na wartość domyślna "?" Znaków ANSI.</span><span class="sxs-lookup"><span data-stu-id="0a09e-213">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a09e-214">Niektóre znaki Unicode są konwertowane na niebezpiecznych znaków, takich jak ukośnik odwrotny "\\" znaków, które przypadkowo można zmienić ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="0a09e-214">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="0a09e-215">Ustawiając <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole `true`, można sygnał obecności, którego nie można zmapować znaku do obiektu wywołującego, zostanie zgłoszony wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0a09e-215">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0a09e-216">Nie można zmienić wartości domyślne, dostarczone przez <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> i <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pól podczas przekazywania tablicy zarządzanej, której elementy są znaki ANSI lub LPSTRs do bezpiecznej tablicy niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="0a09e-216">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="0a09e-217">Mapowanie najlepszego dopasowania jest zawsze włączona i jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="0a09e-217">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="0a09e-218">Należy pamiętać, że ta kombinacja może naruszyć bezpieczeństwo modelu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="0a09e-218">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a09e-219">W niektórych przypadkach użycia deweloperów programu Visual Basic <xref:System.Runtime.InteropServices.DllImportAttribute> do definiowania funkcji DLL w kodzie zarządzanym, zamiast `Declare` instrukcji.</span><span class="sxs-lookup"><span data-stu-id="0a09e-219">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute> to define a DLL function in managed code, instead of using the `Declare` statement.</span></span> <span data-ttu-id="0a09e-220">Ustawienie <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="0a09e-220">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is one of those cases.</span></span> <span data-ttu-id="0a09e-221">Poniższy przykład pokazuje, jak zastosować najbardziej rygorystyczne zabezpieczenia mapowanie znaków na platformie wywołania definicje metod Określanie zestawu znaków ANSI, wyłączając najlepsze zachowanie mapowanie i zostanie zgłoszony wyjątek niezamapowane znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="0a09e-221">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a">
          <span data-ttu-id="0a09e-222">Marshaling międzyoperacyjny</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-222">Interop Marshaling</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a09e-223">Pobiera nazwę pliku DLL, która zawiera punkt wejścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-223">Gets the name of the DLL file that contains the entry point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a09e-224">Nazwa pliku DLL, która zawiera punkt wejścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a09e-224">The name of the DLL file that contains the entry point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a09e-225">Możesz podać pełną lub względną ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="0a09e-225">You can provide a full or relative path.</span></span> <span data-ttu-id="0a09e-226">Jeśli ścieżka nie zostaną podane, biblioteki DLL musi być w bieżącej ścieżce w czasie wykonywania, chyba że biblioteki DLL jest ładowany w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="0a09e-226">If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means.</span></span> <span data-ttu-id="0a09e-227">Należy jednak pamiętać, że przy użyciu w pełni kwalifikowana ścieżka może prowadzić do wskazać nieścisłość Jeśli biblioteka DLL jest przenoszony.</span><span class="sxs-lookup"><span data-stu-id="0a09e-227">Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>