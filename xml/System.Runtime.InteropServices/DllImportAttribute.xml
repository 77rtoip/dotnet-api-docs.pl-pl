<Type Name="DllImportAttribute" FullName="System.Runtime.InteropServices.DllImportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bddc7213fba3d261507ce7a3e8139a0d7b952b10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69270289" /></Metadata><TypeSignature Language="C#" Value="public sealed class DllImportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DllImportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.DllImportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DllImportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DllImportAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DllImportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2c39d-101">Wskazuje, że metoda z atrybutem jest uwidaczniana przez niezarządzaną bibliotekę dołączaną dynamicznie (DLL) jako statyczny punkt wejścia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-101">Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-102">Ten atrybut można zastosować do metod.</span><span class="sxs-lookup"><span data-stu-id="2c39d-102">You can apply this attribute to methods.</span></span>  
  
 <span data-ttu-id="2c39d-103">Ten <xref:System.Runtime.InteropServices.DllImportAttribute> atrybut zawiera informacje konieczne do wywołania funkcji wyeksportowanej z niezarządzanej biblioteki DLL.</span><span class="sxs-lookup"><span data-stu-id="2c39d-103">The <xref:System.Runtime.InteropServices.DllImportAttribute> attribute provides the information needed to call a function exported from an unmanaged DLL.</span></span> <span data-ttu-id="2c39d-104">Minimalnym wymaganiem jest podanie nazwy biblioteki DLL zawierającej punkt wejścia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-104">As a minimum requirement, you must supply the name of the DLL containing the entry point.</span></span>  
  
 <span data-ttu-id="2c39d-105">Ten atrybut jest stosowany bezpośrednio do C# definicji C++ metod i. Jednak kompilator Visual Basic emituje ten atrybut przy użyciu `Declare` instrukcji.</span><span class="sxs-lookup"><span data-stu-id="2c39d-105">You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the `Declare` statement.</span></span> <span data-ttu-id="2c39d-106">W przypadku złożonych definicji metod, <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>które <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>zawierają <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>pola <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>,, <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> , lub, należy zastosować ten atrybut bezpośrednio do Visual Basic definicji metod.</span><span class="sxs-lookup"><span data-stu-id="2c39d-106">For complex method definitions that include <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>, <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention>, <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling>, <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig>, <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>, or <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields, you apply this attribute directly to Visual Basic method definitions.</span></span>  
  
 <span data-ttu-id="2c39d-107">**Uwaga** Język JScript nie obsługuje tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2c39d-107">**Note** JScript does not support this attribute.</span></span> <span data-ttu-id="2c39d-108">Klasy otoki C# można użyć lub Visual Basic, aby uzyskać dostęp do niezarządzanych metod interfejsu API z programów JScript.</span><span class="sxs-lookup"><span data-stu-id="2c39d-108">You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.</span></span>  
  
 <span data-ttu-id="2c39d-109">Aby uzyskać dodatkowe informacje dotyczące korzystania z usługi wywołania platformy w celu uzyskania dostępu do funkcji w niezarządzanych bibliotekach DLL, zobacz wykorzystywanie [niezarządzanych funkcji DLL](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="2c39d-109">For additional information about using the platform invoke service to access functions in unmanaged DLLs, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c39d-110">Program <xref:System.Runtime.InteropServices.DllImportAttribute> nie obsługuje organizowania typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="2c39d-110">The <xref:System.Runtime.InteropServices.DllImportAttribute> does not support marshaling of generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-111">Poniższy przykład kodu pokazuje, <xref:System.Runtime.InteropServices.DllImportAttribute> jak używać atrybutu do importowania funkcji Win32. `MessageBox`</span><span class="sxs-lookup"><span data-stu-id="2c39d-111">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="2c39d-112">Przykład kodu wywołuje metodę zaimportowaną.</span><span class="sxs-lookup"><span data-stu-id="2c39d-112">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DllImportAttribute (string dllName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dllName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.DllImportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dllName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DllImportAttribute(System::String ^ dllName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.DllImportAttribute : string -&gt; System.Runtime.InteropServices.DllImportAttribute" Usage="new System.Runtime.InteropServices.DllImportAttribute dllName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dllName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dllName"><span data-ttu-id="2c39d-113">Nazwa biblioteki DLL, która zawiera niezarządzaną metodę.</span><span class="sxs-lookup"><span data-stu-id="2c39d-113">The name of the DLL that contains the unmanaged method.</span></span> <span data-ttu-id="2c39d-114">Może to obejmować nazwę wyświetlaną zestawu, jeśli biblioteka DLL jest dołączona do zestawu.</span><span class="sxs-lookup"><span data-stu-id="2c39d-114">This can include an assembly display name, if the DLL is included in an assembly.</span></span></param>
        <summary><span data-ttu-id="2c39d-115">Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> klasy z nazwą biblioteki DLL zawierającej metodę do zaimportowania.</span><span class="sxs-lookup"><span data-stu-id="2c39d-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.DllImportAttribute" /> class with the name of the DLL containing the method to import.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-116">Jeśli niezarządzany plik DLL jest zawarty w zestawie, na przykład za pomocą konsolidatora lub `/linkresource` opcji kompilatora, można określić nazwę wyświetlaną zestawu jako `dllName`część.</span><span class="sxs-lookup"><span data-stu-id="2c39d-116">If an unmanaged DLL file is included in an assembly, for example, by using the linker or the `/linkresource` compiler option, you can specify the assembly display name as part of `dllName`.</span></span> <span data-ttu-id="2c39d-117">Na przykład jeśli niezarządzana biblioteka DLL `unmanaged.dll` o nazwie jest uwzględniona w zarządzanym zestawie o nazwie `MyAssembly`, atrybut może być określony, jak pokazano w poniższym kodzie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-117">For example, if an unmanaged DLL named `unmanaged.dll` is included in a managed assembly named `MyAssembly`, the attribute might be specified as shown in the following code.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-118">Poniższy przykład kodu pokazuje, <xref:System.Runtime.InteropServices.DllImportAttribute> jak używać atrybutu do importowania funkcji Win32. `MessageBox`</span><span class="sxs-lookup"><span data-stu-id="2c39d-118">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="2c39d-119">Przykład kodu wywołuje metodę zaimportowaną.</span><span class="sxs-lookup"><span data-stu-id="2c39d-119">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberSignature Language="VB.NET" Value="Public BestFitMapping As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool BestFitMapping;" />
      <MemberSignature Language="F#" Value="val mutable BestFitMapping : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-120">Włącza lub wyłącza zachowanie mapowania najlepszego dopasowania podczas konwertowania znaków Unicode na znaki ANSI.</span><span class="sxs-lookup"><span data-stu-id="2c39d-120">Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-121">Jeśli `true`zachowanie mapowania najlepszego dopasowania jest włączone; w przeciwnym razie Mapowanie najlepszego dopasowania jest wyłączone.</span><span class="sxs-lookup"><span data-stu-id="2c39d-121">If `true`, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled.</span></span> <span data-ttu-id="2c39d-122"><xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Pole jest`true` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-122">The <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is `true` by default.</span></span> <span data-ttu-id="2c39d-123">Ustawienia dla tego pola zastępują ustawienia wszystkich poziomów dla <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2c39d-123">Settings for this field override the any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 <span data-ttu-id="2c39d-124">Środowisko uruchomieniowe języka wspólnego konwertuje na znaki ANSI wszystkie zarządzane znaki Unicode przesłane do niezarządzanej metody wykonywanej w systemie Windows 98 lub Windows Me.</span><span class="sxs-lookup"><span data-stu-id="2c39d-124">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="2c39d-125">Najwygodniejsze mapowanie umożliwia Organizatorowi międzyoperacyjnego dostarczenie znaku zbliżonego do najlepszego, gdy nie istnieje dokładne dopasowanie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-125">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="2c39d-126">Na przykład Organizator konwertuje znak Copyright Unicode na "c" dla niezarządzanych metod, które akceptują znaki ANSI.</span><span class="sxs-lookup"><span data-stu-id="2c39d-126">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="2c39d-127">Niektóre znaki nie mają najlepiej pasującej reprezentacji; te znaki są nazywane napotkano.</span><span class="sxs-lookup"><span data-stu-id="2c39d-127">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="2c39d-128">Znaki napotkano są zwykle konwertowane na domyślne "?" Znak ANSI.</span><span class="sxs-lookup"><span data-stu-id="2c39d-128">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c39d-129">Niektóre znaki Unicode są konwertowane na niebezpieczne znaki, takie jak znak ukośnika odwrotnego "\\", co może przypadkowo zmienić ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="2c39d-129">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="2c39d-130">Ustawiając <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole na `true`, można sygnalizować obecność znaku napotkano do obiektu wywołującego, zgłaszając wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2c39d-130">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c39d-131">Nie można zmienić wartości domyślnych dostarczonych przez <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> i <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pól podczas przekazywania tablicy zarządzanej, której elementy są znakami ANSI lub LPSTRs do niezarządzanej bezpiecznej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2c39d-131">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="2c39d-132">Mapowanie najlepiej dopasowane jest zawsze włączone i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2c39d-132">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="2c39d-133">Należy pamiętać, że ta kombinacja może naruszyć bezpieczeństwo modelu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2c39d-133">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-134">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute>zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="2c39d-134">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="2c39d-135"><xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-135">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> field is one of those cases.</span></span> <span data-ttu-id="2c39d-136">W poniższym przykładzie pokazano, jak zastosować rygorystyczne mapowanie znaków zabezpieczenia na platformie Wywołaj definicje metod, określając zestaw znaków ANSI, wyłączając zachowanie mapowania najlepszego dopasowania i zgłaszając wyjątek dla niezamapowanych znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="2c39d-136">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a"><span data-ttu-id="2c39d-137">Organizowanie międzyoperacyjne</span><span class="sxs-lookup"><span data-stu-id="2c39d-137">Interop Marshaling</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CallingConvention CallingConvention;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CallingConvention CallingConvention" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public CallingConvention As CallingConvention " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CallingConvention CallingConvention;" />
      <MemberSignature Language="F#" Value="val mutable CallingConvention : System.Runtime.InteropServices.CallingConvention" Usage="System.Runtime.InteropServices.DllImportAttribute.CallingConvention" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CallingConvention</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-138">Wskazuje konwencję wywoływania punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-138">Indicates the calling convention of an entry point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-139">To pole jest ustawiane na jeden z <xref:System.Runtime.InteropServices.CallingConvention> elementów członkowskich wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-139">You set this field to one of the <xref:System.Runtime.InteropServices.CallingConvention> enumeration members.</span></span> <span data-ttu-id="2c39d-140">Wartość domyślna dla <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> pola to <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, co z kolei powoduje <xref:System.Runtime.InteropServices.CallingConvention.StdCall> domyślne ustawienie Konwencji.</span><span class="sxs-lookup"><span data-stu-id="2c39d-140">The default value for the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is <xref:System.Runtime.InteropServices.CallingConvention.Winapi>, which in turn defaults to <xref:System.Runtime.InteropServices.CallingConvention.StdCall> convention.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-141">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute>zamiast `Declare` instrukcji, aby zdefiniować funkcję DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="2c39d-141">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="2c39d-142"><xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-142">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.CallingConvention> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CallingConvention" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberSignature Language="F#" Value="val mutable CharSet : System.Runtime.InteropServices.CharSet" Usage="System.Runtime.InteropServices.DllImportAttribute.CharSet" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-143">Wskazuje sposób kierowania parametrów ciągu do metody i kontrolek Name dekorowanie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-143">Indicates how to marshal string parameters to the method and controls name mangling.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-144">Użyj tego pola z elementem członkowskim <xref:System.Runtime.InteropServices.CharSet> wyliczenia, aby określić zachowanie organizowania parametrów i określić nazwę punktu wejścia do wywołania (dokładną nazwę podaną lub nazwę kończącą się od "a" lub "w").</span><span class="sxs-lookup"><span data-stu-id="2c39d-144">Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with "A" or "W").</span></span> <span data-ttu-id="2c39d-145">Domyślny element członkowski wyliczenia dla C# i Visual Basic jest `CharSet.Ansi` i domyślny element członkowski wyliczenia dla C++ elementu `CharSet.None` `CharSet.Ansi`is, który jest odpowiednikiem.</span><span class="sxs-lookup"><span data-stu-id="2c39d-145">The default enumeration member for C# and Visual Basic is `CharSet.Ansi` and the default enumeration member for C++ is `CharSet.None`, which is equivalent to `CharSet.Ansi`.</span></span> <span data-ttu-id="2c39d-146">W Visual Basic Użyj `Declare` instrukcji, aby `CharSet` określić pole.</span><span class="sxs-lookup"><span data-stu-id="2c39d-146">In Visual Basic, you use the `Declare` statement to specify the `CharSet` field.</span></span>  
  
 <span data-ttu-id="2c39d-147">Pole <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> ma wpływ na zachowanie `CharSet` pola podczas określania, która nazwa punktu wejścia ma zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="2c39d-147">The <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field influences the behavior of the `CharSet` field in determining which entry-point name to invoke.</span></span> <span data-ttu-id="2c39d-148">Szczegółowy opis i przykłady zachowania związanego z kierowaniem ciągu i dopasowaniem nazw skojarzonych z `CharSet` polem zawiera temat [Określanie zestawu znaków](~/docs/framework/interop/specifying-a-character-set.md).</span><span class="sxs-lookup"><span data-stu-id="2c39d-148">For a detailed description and examples of the string marshaling and name matching behavior associated with the `CharSet` field, see [Specifying a Character Set](~/docs/framework/interop/specifying-a-character-set.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-149">Poniższy przykład kodu pokazuje, <xref:System.Runtime.InteropServices.DllImportAttribute> jak używać atrybutu do importowania funkcji Win32. `MessageBox`</span><span class="sxs-lookup"><span data-stu-id="2c39d-149">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="2c39d-150">Przykład kodu wywołuje metodę zaimportowaną.</span><span class="sxs-lookup"><span data-stu-id="2c39d-150">The code example then calls the imported method.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.Canonical#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.Canonical/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public string EntryPoint;" />
      <MemberSignature Language="ILAsm" Value=".field public string EntryPoint" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public EntryPoint As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EntryPoint;" />
      <MemberSignature Language="F#" Value="val mutable EntryPoint : string" Usage="System.Runtime.InteropServices.DllImportAttribute.EntryPoint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-151">Wskazuje nazwę lub numer porządkowy punktu wejścia biblioteki DLL, który ma zostać wywołany.</span><span class="sxs-lookup"><span data-stu-id="2c39d-151">Indicates the name or ordinal of the DLL entry point to be called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-152">Możesz określić nazwę punktu wejścia, podając ciąg wskazujący nazwę biblioteki DLL zawierającej punkt wejścia lub można zidentyfikować punkt wejścia za pomocą numeru porządkowego.</span><span class="sxs-lookup"><span data-stu-id="2c39d-152">You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal.</span></span> <span data-ttu-id="2c39d-153">Liczby porządkowe są poprzedzone znakiem #, na przykład #1.</span><span class="sxs-lookup"><span data-stu-id="2c39d-153">Ordinals are prefixed with the # sign, for example, #1.</span></span> <span data-ttu-id="2c39d-154">W przypadku pominięcia tego pola środowisko uruchomieniowe języka wspólnego używa nazwy metody the.NET oznaczonej za <xref:System.Runtime.InteropServices.DllImportAttribute>pomocą.</span><span class="sxs-lookup"><span data-stu-id="2c39d-154">If you omit this field, the common language runtime uses the name of the.NET method marked with the <xref:System.Runtime.InteropServices.DllImportAttribute>.</span></span>  
  
 <span data-ttu-id="2c39d-155">Aby uzyskać dodatkowe informacje, zobacz temat [Identyfikowanie funkcji w bibliotekach DLL](~/docs/framework/interop/identifying-functions-in-dlls.md).</span><span class="sxs-lookup"><span data-stu-id="2c39d-155">For additional information, see [Identifying Functions in DLLs](~/docs/framework/interop/identifying-functions-in-dlls.md).</span></span> <span data-ttu-id="2c39d-156">Przykłady pokazujące, jak używać <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> pola, zobacz [Określanie punktu wejścia](~/docs/framework/interop/specifying-an-entry-point.md).</span><span class="sxs-lookup"><span data-stu-id="2c39d-156">For examples showing how to use the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> field, see [Specifying an Entry Point](~/docs/framework/interop/specifying-an-entry-point.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-157">Poniższy przykład kodu pokazuje, <xref:System.Runtime.InteropServices.DllImportAttribute> jak używać atrybutu do importowania funkcji Win32. `MessageBox`</span><span class="sxs-lookup"><span data-stu-id="2c39d-157">The following code example shows how to use the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to import the Win32 `MessageBox` function.</span></span>  <span data-ttu-id="2c39d-158">W przykładzie kodu jest stosowana <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> właściwość, aby określić funkcję do zaimportowania, a następnie zmienić `MyNewMessageBoxMethod`nazwę na.</span><span class="sxs-lookup"><span data-stu-id="2c39d-158">The code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute.EntryPoint> property to specify the function to import and then changes the name to `MyNewMessageBoxMethod`.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/cs/sample.cs#1)]
 [!code-vb[System.Runtime.InteropServices.DllImport.EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.DllImport.EntryPoint/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ExactSpelling">
      <MemberSignature Language="C#" Value="public bool ExactSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ExactSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberSignature Language="VB.NET" Value="Public ExactSpelling As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ExactSpelling;" />
      <MemberSignature Language="F#" Value="val mutable ExactSpelling : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ExactSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-159">Określa, czy <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> pole powoduje, że środowisko uruchomieniowe języka wspólnego przeszuka niezarządzaną bibliotekę DLL dla nazw punktów wejścia innych niż określona.</span><span class="sxs-lookup"><span data-stu-id="2c39d-159">Controls whether the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" /> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-160">Jeśli `false`, nazwa punktu wejścia dołączona z literą A jest wywoływana, <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> gdy pole jest ustawione na `CharSet.Ansi`, a nazwa punktu wejścia dołączona <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> z literą w jest `CharSet.Unicode`wywoływana, gdy pole jest ustawione na.</span><span class="sxs-lookup"><span data-stu-id="2c39d-160">If `false`, the entry point name appended with the letter A is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to `CharSet.Ansi`, and the entry-point name appended with the letter W is invoked when the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet?displayProperty=nameWithType> field is set to the `CharSet.Unicode`.</span></span> <span data-ttu-id="2c39d-161">Zazwyczaj zarządzane kompilatory ustawiają to pole.</span><span class="sxs-lookup"><span data-stu-id="2c39d-161">Typically, managed compilers set this field.</span></span>  
  
 <span data-ttu-id="2c39d-162">W poniższej tabeli przedstawiono relacje między <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> polami i <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> w oparciu o wartości domyślne narzucone przez język programowania.</span><span class="sxs-lookup"><span data-stu-id="2c39d-162">The following table shows the relationship between the <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet> and <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> fields, based on default values imposed by the programming language.</span></span> <span data-ttu-id="2c39d-163">Ustawienie domyślne można zastąpić, ale należy zachować ostrożność.</span><span class="sxs-lookup"><span data-stu-id="2c39d-163">You can override the default setting, but do so with caution.</span></span>  
  
|<span data-ttu-id="2c39d-164">Język</span><span class="sxs-lookup"><span data-stu-id="2c39d-164">Language</span></span>|<span data-ttu-id="2c39d-165">ANSI</span><span class="sxs-lookup"><span data-stu-id="2c39d-165">ANSI</span></span>|<span data-ttu-id="2c39d-166">Unicode</span><span class="sxs-lookup"><span data-stu-id="2c39d-166">Unicode</span></span>|<span data-ttu-id="2c39d-167">Auto</span><span class="sxs-lookup"><span data-stu-id="2c39d-167">Auto</span></span>|  
|--------------|----------|-------------|----------|  
|<span data-ttu-id="2c39d-168">Visual Basic</span><span class="sxs-lookup"><span data-stu-id="2c39d-168">Visual Basic</span></span>|<span data-ttu-id="2c39d-169">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="2c39d-169">ExactSpelling:=True</span></span>|<span data-ttu-id="2c39d-170">ExactSpelling:=True</span><span class="sxs-lookup"><span data-stu-id="2c39d-170">ExactSpelling:=True</span></span>|<span data-ttu-id="2c39d-171">ExactSpelling: = false</span><span class="sxs-lookup"><span data-stu-id="2c39d-171">ExactSpelling:=False</span></span>|  
|<span data-ttu-id="2c39d-172">C#</span><span class="sxs-lookup"><span data-stu-id="2c39d-172">C#</span></span>|<span data-ttu-id="2c39d-173">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-173">ExactSpelling=false</span></span>|<span data-ttu-id="2c39d-174">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-174">ExactSpelling=false</span></span>|<span data-ttu-id="2c39d-175">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-175">ExactSpelling=false</span></span>|  
|<span data-ttu-id="2c39d-176">C++</span><span class="sxs-lookup"><span data-stu-id="2c39d-176">C++</span></span>|<span data-ttu-id="2c39d-177">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-177">ExactSpelling=false</span></span>|<span data-ttu-id="2c39d-178">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-178">ExactSpelling=false</span></span>|<span data-ttu-id="2c39d-179">ExactSpelling=false</span><span class="sxs-lookup"><span data-stu-id="2c39d-179">ExactSpelling=false</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-180">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` używać instrukcji, do definiowania funkcji DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="2c39d-180">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="2c39d-181"><xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-181">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveSig">
      <MemberSignature Language="C#" Value="public bool PreserveSig;" />
      <MemberSignature Language="ILAsm" Value=".field public bool PreserveSig" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberSignature Language="VB.NET" Value="Public PreserveSig As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool PreserveSig;" />
      <MemberSignature Language="F#" Value="val mutable PreserveSig : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.PreserveSig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-182">Wskazuje, czy metody niezarządzane, <see langword="HRESULT" /> które <see langword="retval" /> mają lub zwracają wartości są <see langword="retval" /> bezpośrednio tłumaczone <see langword="HRESULT" /> lub czy zwracane wartości są automatycznie konwertowane na wyjątki.</span><span class="sxs-lookup"><span data-stu-id="2c39d-182">Indicates whether unmanaged methods that have <see langword="HRESULT" /> or <see langword="retval" /> return values are directly translated or whether <see langword="HRESULT" /> or <see langword="retval" /> return values are automatically converted to exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-183">`HRESULT` `retval` `HRESULT` `false` `retval` Ustaw <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> poletak,abymożnabyłobezpośrednioprzetłumaczyćpodpisyniezarządzanenalubwartości;Ustawdlaniegoautomatycznekonwertowanielub`true` wartości na wyjątki.</span><span class="sxs-lookup"><span data-stu-id="2c39d-183">Set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `true` to directly translate unmanaged signatures with `HRESULT` or `retval` values; set it to `false` to automatically convert `HRESULT` or `retval` values to exceptions.</span></span> <span data-ttu-id="2c39d-184">Domyślnie <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pole ma `true`wartość.</span><span class="sxs-lookup"><span data-stu-id="2c39d-184">By default, the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is `true`.</span></span>  
  
 <span data-ttu-id="2c39d-185">Kiedy `true`, sygnatura wynikowej metody zwraca wartość całkowitą, która `HRESULT` zawiera wartość.</span><span class="sxs-lookup"><span data-stu-id="2c39d-185">When `true`, the resulting method signature returns an integer value that contains the `HRESULT` value.</span></span>  <span data-ttu-id="2c39d-186">W takim przypadku należy ręcznie sprawdzić wartość zwracaną i odpowiednio odpowiedzieć w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2c39d-186">In this case, you must manually inspect the return value and respond accordingly in your application.</span></span>  
  
 <span data-ttu-id="2c39d-187">Po ustawieniu <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> pola na `false`, sygnatura wynikowej metody zawiera typ zwracany void zamiast liczby całkowitej (`HRESULT`) zwracanego typu.</span><span class="sxs-lookup"><span data-stu-id="2c39d-187">When you set the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field to `false`, the resulting method signature contains a void return type instead of an integer (`HRESULT`) return type.</span></span>  <span data-ttu-id="2c39d-188">Gdy metoda niezarządzana tworzy `HRESULT`, środowisko uruchomieniowe automatycznie ignoruje `S_OK` wartość zwracaną (lub 0) i nie zgłasza wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2c39d-188">When the unmanaged method produces an `HRESULT`, the runtime automatically ignores a return value of `S_OK` (or 0) and does not throw an exception.</span></span>  <span data-ttu-id="2c39d-189">W `HRESULT`przypadku innych niż `S_OK`środowisko uruchomieniowe automatycznie zgłasza wyjątek `HRESULT`, który odnosi się do.</span><span class="sxs-lookup"><span data-stu-id="2c39d-189">For `HRESULT`s other than `S_OK`, the runtime automatically throws an exception that corresponds to the `HRESULT`.</span></span>  <span data-ttu-id="2c39d-190">Należy zauważyć, <xref:System.Runtime.InteropServices.DllImportAttribute> że ten atrybut wykonuje tylko tę konwersję tylko do `HRESULT`metod, które zwracają.</span><span class="sxs-lookup"><span data-stu-id="2c39d-190">Note that the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute only performs this conversion to methods that return an `HRESULT`.</span></span>  
  
 <span data-ttu-id="2c39d-191">Możesz zdecydować się na zmianę domyślnego zachowania raportowania błędów z `HRESULT`usługi s na wyjątki w przypadkach, w których wyjątki lepiej pasują do struktury raportowania błędów aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2c39d-191">You might decide to change the default error reporting behavior from `HRESULT`s to exceptions in cases where exceptions better fit the error reporting structure of your application.</span></span>  
  
 <span data-ttu-id="2c39d-192">To pole jest podobne do <xref:System.Runtime.InteropServices.PreserveSigAttribute>, ale w przeciwieństwie <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> do pola, wartość domyślna atrybutu to `false`.</span><span class="sxs-lookup"><span data-stu-id="2c39d-192">This field is similar to the <xref:System.Runtime.InteropServices.PreserveSigAttribute>; however, in contrast to the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field, the default value for the attribute is `false`.</span></span>  
  
 <span data-ttu-id="2c39d-193">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` używać instrukcji, do definiowania funkcji DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="2c39d-193">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="2c39d-194"><xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-194">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field is one of those cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-195">Poniższy przykład kodu używa <xref:System.Runtime.InteropServices.DllImportAttribute> do zaimportowania funkcji niezarządzanej `SHAutoComplete` raz z <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> polem ustawionym `true` na i ponownie z <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> polem ustawionym `false`na.</span><span class="sxs-lookup"><span data-stu-id="2c39d-195">The following code example uses the <xref:System.Runtime.InteropServices.DllImportAttribute> to import the unmanaged `SHAutoComplete` function once with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `true` and again with the <xref:System.Runtime.InteropServices.DllImportAttribute.PreserveSig> field set to `false`.</span></span>  <span data-ttu-id="2c39d-196">Ten przykład kodu powoduje, `SHAutoComplete` że funkcja generuje wszystkie błędy z wyjątkiem jednego czasu `HRESULT` i następnego.</span><span class="sxs-lookup"><span data-stu-id="2c39d-196">This code example causes the `SHAutoComplete` function to generate any errors with an exception one time and an `HRESULT` the next.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.PreserveSigAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.PreserveSigAttribute/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetLastError">
      <MemberSignature Language="C#" Value="public bool SetLastError;" />
      <MemberSignature Language="ILAsm" Value=".field public bool SetLastError" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberSignature Language="VB.NET" Value="Public SetLastError As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool SetLastError;" />
      <MemberSignature Language="F#" Value="val mutable SetLastError : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.SetLastError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-197">Wskazuje, czy wywoływany wywołuje <see langword="SetLastError" /> funkcję interfejsu API systemu Windows przed zwróceniem z metody z atrybutem.</span><span class="sxs-lookup"><span data-stu-id="2c39d-197">Indicates whether the callee calls the <see langword="SetLastError" /> Windows API function before returning from the attributed method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-198">`true`w celu wskazania, że wywoływany `SetLastError`obiekt wywoła; `false`w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-198">`true` to indicate that the callee will call `SetLastError`; otherwise, `false`.</span></span> <span data-ttu-id="2c39d-199">Wartość domyślna to `false`.</span><span class="sxs-lookup"><span data-stu-id="2c39d-199">The default is `false`.</span></span>  
  
 <span data-ttu-id="2c39d-200">Organizator środowiska uruchomieniowego wywołuje `GetLastError` i buforuje zwracaną wartość, aby zapobiec nadpisaniu jej przez inne wywołania interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="2c39d-200">The runtime marshaler calls `GetLastError` and caches the value returned to prevent it from being overwritten by other API calls.</span></span> <span data-ttu-id="2c39d-201">Kod błędu można pobrać, wywołując <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="2c39d-201">You can retrieve the error code by calling <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-202">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute>, zamiast `Declare` używać instrukcji, do definiowania funkcji DLL w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="2c39d-202">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute>, instead of using the `Declare` statement, to define a DLL function in managed code.</span></span> <span data-ttu-id="2c39d-203"><xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-203">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field is one of those cases.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberSignature Language="VB.NET" Value="Public ThrowOnUnmappableChar As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="F#" Value="val mutable ThrowOnUnmappableChar : bool" Usage="System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-204">Włącza lub wyłącza wyrzucanie wyjątków dla znaku Unicode napotkano, który jest konwertowany na znak ANSI "?".</span><span class="sxs-lookup"><span data-stu-id="2c39d-204">Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-205">`true`Aby wskazać, że wyjątek jest zgłaszany za każdym razem, gdy organizator międzyoperacyjny konwertuje znak napotkano; ,abywskazać,żepolejestwyłączone.`false` <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar></span><span class="sxs-lookup"><span data-stu-id="2c39d-205">`true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; `false` to indicate that the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is disabled.</span></span> <span data-ttu-id="2c39d-206">To pole jest `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-206">This field is `false` by default.</span></span>  
  
 <span data-ttu-id="2c39d-207">Środowisko uruchomieniowe języka wspólnego konwertuje na znaki ANSI wszystkie zarządzane znaki Unicode przesłane do niezarządzanej metody wykonywanej w systemie Windows 98 lub Windows Me.</span><span class="sxs-lookup"><span data-stu-id="2c39d-207">The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me.</span></span> <span data-ttu-id="2c39d-208">Najwygodniejsze mapowanie umożliwia Organizatorowi międzyoperacyjnego dostarczenie znaku zbliżonego do najlepszego, gdy nie istnieje dokładne dopasowanie.</span><span class="sxs-lookup"><span data-stu-id="2c39d-208">Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists.</span></span> <span data-ttu-id="2c39d-209">Na przykład Organizator konwertuje znak Copyright Unicode na "c" dla niezarządzanych metod, które akceptują znaki ANSI.</span><span class="sxs-lookup"><span data-stu-id="2c39d-209">For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</span></span> <span data-ttu-id="2c39d-210">Niektóre znaki nie mają najlepiej pasującej reprezentacji; te znaki są nazywane napotkano.</span><span class="sxs-lookup"><span data-stu-id="2c39d-210">Some characters lack a best-fit representation; these characters are called unmappable.</span></span> <span data-ttu-id="2c39d-211">Znaki napotkano są zwykle konwertowane na domyślne "?" Znak ANSI.</span><span class="sxs-lookup"><span data-stu-id="2c39d-211">Unmappable characters are usually converted to the default '?' ANSI character.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c39d-212">Niektóre znaki Unicode są konwertowane na niebezpieczne znaki, takie jak znak ukośnika odwrotnego "\\", co może przypadkowo zmienić ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="2c39d-212">Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</span></span> <span data-ttu-id="2c39d-213">Ustawiając <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pole na `true`, można sygnalizować obecność znaku napotkano do obiektu wywołującego, zgłaszając wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2c39d-213">By setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field to `true`, you can signal the presence of an unmappable character to the caller by throwing an exception.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2c39d-214">Nie można zmienić wartości domyślnych dostarczonych przez <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> i <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> pól podczas przekazywania tablicy zarządzanej, której elementy są znakami ANSI lub LPSTRs do niezarządzanej bezpiecznej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2c39d-214">You cannot change the default values provided by the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping> and <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array.</span></span> <span data-ttu-id="2c39d-215">Mapowanie najlepiej dopasowane jest zawsze włączone i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2c39d-215">Best-fit mapping is always enabled and no exception is thrown.</span></span> <span data-ttu-id="2c39d-216">Należy pamiętać, że ta kombinacja może naruszyć bezpieczeństwo modelu zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="2c39d-216">Be aware that this combination can compromise your security model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c39d-217">W niektórych przypadkach Visual Basic deweloperzy używają <xref:System.Runtime.InteropServices.DllImportAttribute> do definiowania funkcji DLL w kodzie zarządzanym, a nie `Declare` przy użyciu instrukcji.</span><span class="sxs-lookup"><span data-stu-id="2c39d-217">In some cases, Visual Basic developers use the <xref:System.Runtime.InteropServices.DllImportAttribute> to define a DLL function in managed code, instead of using the `Declare` statement.</span></span> <span data-ttu-id="2c39d-218"><xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> Ustawienie pola jest jednym z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2c39d-218">Setting the <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar> field is one of those cases.</span></span> <span data-ttu-id="2c39d-219">W poniższym przykładzie pokazano, jak zastosować rygorystyczne mapowanie znaków zabezpieczenia na platformie Wywołaj definicje metod, określając zestaw znaków ANSI, wyłączając zachowanie mapowania najlepszego dopasowania i zgłaszając wyjątek dla niezamapowanych znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="2c39d-219">The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.DllImportAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.dllimportattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.CharSet" />
        <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
        <related type="Article" href="https://msdn.microsoft.com/library/115f7a2f-d422-4605-ab36-13a8dd28142a"><span data-ttu-id="2c39d-220">Organizowanie międzyoperacyjne</span><span class="sxs-lookup"><span data-stu-id="2c39d-220">Interop Marshaling</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Runtime.InteropServices.DllImportAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c39d-221">Pobiera nazwę pliku DLL, który zawiera punkt wejścia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-221">Gets the name of the DLL file that contains the entry point.</span></span></summary>
        <value><span data-ttu-id="2c39d-222">Nazwa pliku DLL, który zawiera punkt wejścia.</span><span class="sxs-lookup"><span data-stu-id="2c39d-222">The name of the DLL file that contains the entry point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c39d-223">Można podać pełną lub względną ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="2c39d-223">You can provide a full or relative path.</span></span> <span data-ttu-id="2c39d-224">Jeśli nie podasz ścieżki, biblioteka DLL musi znajdować się w bieżącej ścieżce w czasie wykonywania, chyba że biblioteka DLL jest załadowana w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="2c39d-224">If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means.</span></span> <span data-ttu-id="2c39d-225">Należy jednak pamiętać, że użycie w pełni kwalifikowanej ścieżki może spowodować niedokładność, jeśli biblioteka DLL jest przenoszona.</span><span class="sxs-lookup"><span data-stu-id="2c39d-225">Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
