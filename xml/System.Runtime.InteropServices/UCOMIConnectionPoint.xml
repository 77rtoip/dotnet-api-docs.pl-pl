<Type Name="UCOMIConnectionPoint" FullName="System.Runtime.InteropServices.UCOMIConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="574c4d07bb5a32d089b7c164f73a76fd3de214cd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69269071" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMIConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIConnectionPoint" />
  <TypeSignature Language="F#" Value="type UCOMIConnectionPoint = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("b196b286-bab4-101a-b69c-00aa00341d07")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("B196B286-BAB4-101A-B69C-00AA00341D07")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IConnectionPoint instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zamiast nich należy używać słów kluczowych <see cref="T:System.Runtime.InteropServices.ComTypes.IConnectionPoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint` dokumentacją w podfolderze com biblioteki MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Advise">
      <MemberSignature Language="C#" Value="public void Advise (object pUnkSink, out int pdwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advise(object pUnkSink, [out] int32&amp; pdwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advise (pUnkSink As Object, ByRef pdwCookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advise(System::Object ^ pUnkSink, [Runtime::InteropServices::Out] int % pdwCookie);" />
      <MemberSignature Language="F#" Value="abstract member Advise : obj *  -&gt; unit" Usage="uCOMIConnectionPoint.Advise (pUnkSink, pdwCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkSink" Type="System.Object" />
        <Parameter Name="pdwCookie" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkSink">Odwołanie do ujścia do odbierania wywołań dla interfejsu wychodzącego zarządzanego przez ten punkt połączenia.</param>
        <param name="pdwCookie">Po pomyślnym powrocie, zawiera plik cookie połączenia.</param>
        <summary>Nawiązuje połączenie doradcze między punktem połączenia i obiektem ujścia obiektu wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint::Advise` dokumentacją dla programu w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumConnections">
      <MemberSignature Language="C#" Value="public void EnumConnections (out System.Runtime.InteropServices.UCOMIEnumConnections ppEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumConnections([out] class System.Runtime.InteropServices.UCOMIEnumConnections&amp; ppEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.EnumConnections(System.Runtime.InteropServices.UCOMIEnumConnections@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumConnections (ByRef ppEnum As UCOMIEnumConnections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumConnections([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumConnections ^ % ppEnum);" />
      <MemberSignature Language="F#" Value="abstract member EnumConnections :  -&gt; unit" Usage="uCOMIConnectionPoint.EnumConnections ppEnum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppEnum" Type="System.Runtime.InteropServices.UCOMIEnumConnections" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppEnum">Po pomyślnym powrocie, zawiera nowo utworzony moduł wyliczający.</param>
        <summary>Tworzy obiekt modułu wyliczającego dla iteracji przez połączenia, które istnieją dla tego punktu połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint::EnumConnections` dokumentacją dla programu w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionInterface">
      <MemberSignature Language="C#" Value="public void GetConnectionInterface (out Guid pIID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionInterface([out] valuetype System.Guid&amp; pIID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionInterface(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetConnectionInterface (ByRef pIID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetConnectionInterface([Runtime::InteropServices::Out] Guid % pIID);" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionInterface :  -&gt; unit" Usage="uCOMIConnectionPoint.GetConnectionInterface pIID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pIID" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pIID">W przypadku pomyślnego powrotu zawiera identyfikator IID interfejsu wychodzącego zarządzanego przez ten punkt połączenia.</param>
        <summary>Zwraca identyfikator IID interfejsu wychodzącego zarządzanego przez ten punkt połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint::GetConnectionInterface` dokumentacją dla programu w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPointContainer">
      <MemberSignature Language="C#" Value="public void GetConnectionPointContainer (out System.Runtime.InteropServices.UCOMIConnectionPointContainer ppCPC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetConnectionPointContainer([out] class System.Runtime.InteropServices.UCOMIConnectionPointContainer&amp; ppCPC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.GetConnectionPointContainer(System.Runtime.InteropServices.UCOMIConnectionPointContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetConnectionPointContainer (ByRef ppCPC As UCOMIConnectionPointContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetConnectionPointContainer([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIConnectionPointContainer ^ % ppCPC);" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionPointContainer :  -&gt; unit" Usage="uCOMIConnectionPoint.GetConnectionPointContainer ppCPC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppCPC" Type="System.Runtime.InteropServices.UCOMIConnectionPointContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppCPC">Po pomyślnym powrocie, zawiera <see langword="IConnectionPointContainer" /> interfejs połączonego obiektu.</param>
        <summary>Pobiera wskaźnik <see langword="IConnectionPointContainer" /> interfejsu do obiektu połączonego, który jest właścicielem tego punktu połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint::GetConnectionPointContainer` dokumentacją dla programu w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unadvise">
      <MemberSignature Language="C#" Value="public void Unadvise (int dwCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unadvise(int32 dwCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Unadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unadvise (dwCookie As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unadvise(int dwCookie);" />
      <MemberSignature Language="F#" Value="abstract member Unadvise : int -&gt; unit" Usage="uCOMIConnectionPoint.Unadvise dwCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwCookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwCookie">Plik cookie połączenia poprzednio zwrócony z <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />programu.</param>
        <summary>Kończy połączenie doradcze wcześniej ustanowione przez <see cref="M:System.Runtime.InteropServices.UCOMIConnectionPoint.Advise(System.Object,System.Int32@)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IConnectionPoint::Unadvise` dokumentacją dla programu w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
