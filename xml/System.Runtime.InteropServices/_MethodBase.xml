<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="_MethodBase.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a0f97adc98621ae6222b6863d5dd8ef0c2970be7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0f97adc98621ae6222b6863d5dd8ef0c2970be7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>Exposes the public members of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBase" /&gt;</ph> class to unmanaged code.</source>
          <target state="translated">Udostępnia publiczne elementy członkowskie <ph id="ph1">&lt;see cref="T:System.Reflection.MethodBase" /&gt;</ph> klasy do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>This interface is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>This interface preserves the vtable order of the <ph id="ph1">&lt;xref:System.Reflection.MethodBase?displayProperty=nameWithType&gt;</ph> class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">Ten interfejs zachowuje kolejność vtable <ph id="ph1">&lt;xref:System.Reflection.MethodBase?displayProperty=nameWithType&gt;</ph> klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.Attributes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.Attributes" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.Attributes" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Attributes">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodAttributes" /&gt;</ph> values.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.MethodAttributes" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Attributes">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;</ph> property gets the attributes associated with this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;</ph> Właściwość pobiera atrybuty skojarzone z tą metodą.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.CallingConvention">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.CallingConvention" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.CallingConvention" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.CallingConvention">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> values.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.CallingConventions" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.CallingConvention">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.CallingConvention">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</ph> property gets a value indicating the calling conventions for this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</ph> Właściwość pobiera wartość wskazującą konwencji wywoływania tej metody.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.DeclaringType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.DeclaringType" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.DeclaringType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.DeclaringType">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object for the class that declares this member.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Type" /&gt;</ph> Obiektu klasy, która deklaruje tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.DeclaringType">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.DeclaringType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</ph> property gets the class that declares this member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</ph> Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do porównania z bieżącym <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli określony <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> jest taki sam, jak bieżący <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method determines whether the specified <ph id="ph2">&lt;xref:System.Object&gt;</ph> is equal to the current <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> Metoda określa, czy określony <ph id="ph2">&lt;xref:System.Object&gt;</ph> jest taki sam, jak bieżący <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> members return all attributes applied to this member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> Elementy Członkowskie zwracają wszystkie atrybuty stosowane do tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)">
          <source>An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</source>
          <target state="translated">Tablica zawierająca wszystkie atrybuty niestandardowe lub tablica nie zawierająca żadnego elementu (0), jeśli zostały zdefiniowane żadne atrybuty.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method returns an array containing all the custom attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> Metoda zwraca tablicę zawierającą wszystkie atrybuty niestandardowe.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The type of attribute to search for.</source>
          <target state="translated">Typ atrybutu do wyszukiwania.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">Zwracane są tylko atrybuty, które są przypisane do tego typu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</ph> method returns an array of custom attributes identified by <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</ph> Metoda zwraca tablicę atrybutów niestandardowych identyfikowane przez <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetHashCode">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetHashCode">
          <source>The hash code for the current instance.</source>
          <target state="translated">Wartość skrótu dla bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetHashCode">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method serves as a hash function for a particular type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> nadaje się do użytku w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Zarezerwowane do użytku w przyszłości.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Musi być wartością IID_NULL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>An array of names to be mapped.</source>
          <target state="translated">Tablica nazw można mapować.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The count of the names to be mapped.</source>
          <target state="translated">Liczba nazw, które mają być mapowane.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>An array allocated by the caller that receives the identifiers corresponding to the names.</source>
          <target state="translated">Tablica przydzielone przez obiekt wywołujący odbierająca identyfikatory, odpowiadających nazwy.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, zobacz bibliotece MSDN.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodImplAttributes" /&gt;</ph> values.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.MethodImplAttributes" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</ph> member returns the <ph id="ph2">&lt;xref:System.Reflection.MethodImplAttributes&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</ph> Zwraca element członkowski <ph id="ph2">&lt;xref:System.Reflection.MethodImplAttributes&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetParameters">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.GetParameters" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.GetParameters" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetParameters">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> containing information that matches the signature of the method (or constructor) reflected by this instance.</source>
          <target state="translated">Tablica typu <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterInfo" /&gt;</ph> zawierających informacje o pasującego podpisu — metoda (lub konstruktora) dostarczanej przez to wystąpienie.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetParameters">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetParameters">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;</ph> method gets the parameters of the specified method or constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;</ph> Metoda pobiera parametry określonej metody lub konstruktora.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Type.GetType" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetType">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method gets the type of the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> Metoda pobiera typ bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The type information to return.</source>
          <target state="translated">Informacje o typie, który będzie zwracany.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>The locale identifier for the type information.</source>
          <target state="translated">Identyfikator regionalny dla informacji o typie.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>A pointer to the requested type information object.</source>
          <target state="translated">Wskaźnik do obiektu informacji żądanego typu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>Retrieves the type information for an object, which can be used to get the type information for an interface.</source>
          <target state="translated">Pobiera informacje o typie dla obiekt, który można uzyskać informacji o typie dla interfejsu.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, zobacz bibliotece MSDN.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)">
          <source>When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">Gdy metoda zwróci wartość, zawiera wskaźnik do lokalizacji, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ten parametr jest przekazywany niezainicjowany.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, zobacz bibliotece MSDN.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.MethodBase.Invoke" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="Overload:System.Reflection.MethodBase.Invoke" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._MethodBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</ph> methods invoke the constructor reflected by the instance that has the specified parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</ph> Metody wywołania konstruktora, sprawdzając wystąpienie, które ma określonych parametrów.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>The instance that created this method.</source>
          <target state="translated">Ta metoda utworzone wystąpienie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>An argument list for the invoked method or constructor.</source>
          <target state="translated">Lista argumentów dla wywołanej metody lub konstruktora.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</source>
          <target state="translated">To jest Tablica obiektów numer, kolejność i typ jako parametry metody lub konstruktora do wywołania.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>If there are no parameters, <bpt id="p1">&lt;c&gt;</bpt>parameters<ept id="p1">&lt;/c&gt;</ept> should be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli nie ma żadnych parametrów <bpt id="p1">&lt;c&gt;</bpt>parametry<ept id="p1">&lt;/c&gt;</ept> powinien być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>If the method or constructor represented by this instance takes a <ph id="ph1">&lt;see langword="ref" /&gt;</ph> parameter (<ph id="ph2">&lt;see langword="ByRef" /&gt;</ph> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</source>
          <target state="translated">Jeśli ta metoda lub konstruktora reprezentowany przez to wystąpienie ma <ph id="ph1">&lt;see langword="ref" /&gt;</ph> parametr (<ph id="ph2">&lt;see langword="ByRef" /&gt;</ph> w języku Visual Basic), nie specjalne atrybut jest wymagany dla tego parametru do wywołania metody lub konstruktora przy użyciu tej funkcji.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>For reference type elements, this value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Elementy typu odwołania, ta wartość jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>For value type elements, this value is 0, 0.0, or <ph id="ph1">&lt;see langword="false" /&gt;</ph>, depending on the specific element type.</source>
          <target state="translated">Wartość typu elementów, ta wartość jest równa 0, 0.0, lub <ph id="ph1">&lt;see langword="false" /&gt;</ph>, w zależności od typu określonego elementu.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Wystąpienie skojarzonej z konstruktora klasy.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> method invokes the method or constructor represented by this object, using the specified parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> Metoda wywołuje metodę lub konstruktora reprezentowany przez ten obiekt przy użyciu określonych parametrów.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The instance that created this method.</source>
          <target state="translated">Ta metoda utworzone wystąpienie.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>One of the <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> values that specifies the type of binding.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see langword="BindingFlags" /&gt;</ph> wartości, które określa typ powiązania.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see langword="Binder" /&gt;</ph> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">A <ph id="ph1">&lt;see langword="Binder" /&gt;</ph> który definiuje zestaw właściwości i umożliwia powiązanie koercja typy argumentów i wywoływania elementów członkowskich za pomocą odbicia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, then <ph id="ph2">&lt;see langword="Binder.DefaultBinding" /&gt;</ph> is used.</source>
          <target state="translated">Jeśli <bpt id="p1">&lt;c&gt;</bpt>integratora<ept id="p1">&lt;/c&gt;</ept> jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>, następnie <ph id="ph2">&lt;see langword="Binder.DefaultBinding" /&gt;</ph> jest używany.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> used to match the number, order, and type of the parameters for this constructor, under the constraints of <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Tablica typu <ph id="ph1">&lt;see langword="Object" /&gt;</ph> służy do dopasowania liczby, kolejności i typy parametrów dla tego konstruktora, zgodnie z ograniczeniami <bpt id="p1">&lt;c&gt;</bpt>integratora<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in <bpt id="p1">&lt;c&gt;</bpt>Object[] parameters = new Object[0]<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Jeśli ten konstruktor nie wymaga parametrów, Przekaż tablica nie zawierająca żadnego elementu jako <bpt id="p1">&lt;c&gt;</bpt>obiekt [] Parametry = nowy obiekt [0]<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>For reference type elements, this value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Elementy typu odwołania, ta wartość jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>For value type elements, this value is 0, 0.0, or <ph id="ph1">&lt;see langword="false" /&gt;</ph>, depending on the specific element type.</source>
          <target state="translated">Wartość typu elementów, ta wartość jest równa 0, 0.0, lub <ph id="ph1">&lt;see langword="false" /&gt;</ph>, w zależności od typu określonego elementu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object used to govern the coercion of types.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> obiekt używany do kierowania koercja typów.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">Jeśli jest to <ph id="ph1">&lt;see langword="null" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> służy bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">Wystąpienie skojarzonej z konstruktora klasy.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> method invokes the constructor reflected by this <ph id="ph2">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> object with the specified arguments, under the constraints of the specified <ph id="ph3">&lt;xref:System.Reflection.Binder&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> Metoda wywołuje konstruktor odzwierciedlone to <ph id="ph2">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> obiektu z określonymi argumentami, zgodnie z ograniczeniami określonego <ph id="ph3">&lt;xref:System.Reflection.Binder&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>An identifier for the member.</source>
          <target state="translated">Identyfikator elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Reserved for future use.</source>
          <target state="translated">Zarezerwowane do użytku w przyszłości.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Must be IID_NULL.</source>
          <target state="translated">Musi być wartością IID_NULL.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Flags describing the context of the call.</source>
          <target state="translated">Flagi opisujące kontekst wywołania.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to the location where the result will be stored.</source>
          <target state="translated">Wskaźnik do lokalizacji, w którym będzie przechowywany wynik.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>A pointer to a structure that contains exception information.</source>
          <target state="translated">Wskaźnik do struktury, która zawiera informacje o wyjątku.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">Indeks pierwszego argumentu, który zawiera błąd.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">`IDispatch::Invoke`</ph>, zobacz bibliotece MSDN.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsAbstract">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsAbstract" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsAbstract" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAbstract">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the method is abstract; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli metoda jest abstrakcyjna; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAbstract">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAbstract">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</ph> property gets a value indicating whether the method is abstract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy metoda jest abstrakcyjna.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsAssembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsAssembly" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsAssembly" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAssembly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method can be called by other classes in the same assembly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda może być wywoływany przez inne klasy w tym samym zestawie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAssembly">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by other classes in the same assembly</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez inne klasy w tym samym zestawie</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsConstructor">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsConstructor" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsConstructor" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsConstructor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method is a constructor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda jest konstruktorem; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsConstructor">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsConstructor">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</ph> property gets a value indicating whether the method is a constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy metoda jest konstruktorem.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object to which the custom attributes are applied.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Type" /&gt;</ph> Obiektów, dla których są stosowane atrybuty niestandardowe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if one or more instance of the <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> parameter is applied to this member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli jeden lub więcej wystąpienie <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph> parametr jest stosowane do tego elementu członkowskiego; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</ph> member indicates whether one or more instances of the <ph id="ph2">`attributeType`</ph> parameter are applied to this member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</ph> Elementu członkowskiego wskazuje, czy jednego lub więcej wystąpień <ph id="ph2">`attributeType`</ph> parametru są stosowane do tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsFamily">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamily" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamily" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamily">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do tej klasy jest ograniczony do członków samej klasy oraz do elementów członkowskich z jej klas pochodnych; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamily">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamily">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;</ph> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy dostęp do tej metody jest ograniczony do członków klasy i elementów członkowskich z jej klas pochodnych.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do tej metody jest ograniczony do członków samej klasy oraz do elementów członkowskich klas pochodnych, które znajdują się w tym samym zestawie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by members of the class itself and by derived classes if they are in the same assembly</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy tę metodę można wywołać przez członków sama klasa i klasy pochodne jeśli znajdują się w tym samym zestawie</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do tej metody jest ograniczony do członków samej klasy, członkowie klas pochodnych wszędzie tam, gdzie znajdują się i członków innych klas w tym samym zestawie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</ph> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez klas pochodnych wszędzie tam, gdzie są one, a także wszystkie klasy w tym samym zestawie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsFinal">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFinal" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsFinal" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFinal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method is <ph id="ph2">&lt;see langword="final" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda jest <ph id="ph2">&lt;see langword="final" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFinal">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsFinal">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;</ph> property gets a value indicating whether this method is <ph id="ph2">`final`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;</ph> Właściwości pobiera wartość wskazującą, czy ta metoda jest <ph id="ph2">`final`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsHideBySig">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsHideBySig" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsHideBySig" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsHideBySig">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is hidden by signature; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli element członkowski jest ukryty przez podpis. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsHideBySig">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsHideBySig">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</ph> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy tylko element członkowski o takiej samej nazwie, o tej samej sygnaturze jest ukryty w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsPrivate">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsPrivate" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsPrivate" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPrivate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to this method is restricted to other members of the class itself; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostęp do tej metody jest ograniczony do innych członków klasy. w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPrivate">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPrivate">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</ph> property gets a value indicating whether this member is private.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy ten element członkowski jest prywatny.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsPublic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsPublic" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsPublic" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPublic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method is public; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda jest publiczna; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPublic">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsPublic">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;</ph> property gets a value indicating whether this method is public.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy ta metoda jest publiczna.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsSpecialName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsSpecialName" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsSpecialName" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsSpecialName">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method has a special name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda ma specjalną nazwą; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsSpecialName">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsSpecialName">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</ph> property gets a value indicating whether this method has a special name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</ph> Właściwość pobiera wartość wskazującą, czy ta metoda ma specjalną nazwą.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsStatic">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsStatic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method is <ph id="ph2">&lt;see langword="static" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda jest <ph id="ph2">&lt;see langword="static" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsStatic">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsStatic">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;</ph> property gets a value indicating whether the method is <ph id="ph2">`static`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;</ph> Właściwości pobiera wartość wskazującą, czy metoda jest <ph id="ph2">`static`</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.IsVirtual">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsVirtual" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsVirtual" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsVirtual">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method is <ph id="ph2">&lt;see langword="virtual" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli ta metoda jest <ph id="ph2">&lt;see langword="virtual" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsVirtual">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.IsVirtual">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</ph> property gets a value indicating whether the method is <ph id="ph2">`virtual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</ph> Właściwości pobiera wartość wskazującą, czy metoda jest <ph id="ph2">`virtual`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.MemberType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.MemberType" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.MemberType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MemberType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> values indicating the type of member.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> wartości wskazujący typ elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MemberType">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MemberType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property gets a <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> value indicating the type of the member — method, constructor, event, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> Pobiera właściwość <ph id="ph2">&lt;xref:System.Reflection.MemberTypes&gt;</ph> wartość wskazujący typ elementu członkowskiego — metoda, konstruktora, zdarzeń i tak dalej.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.MethodHandle">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.MethodHandle" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.MethodHandle" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MethodHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.RuntimeMethodHandle" /&gt;</ph> object.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.RuntimeMethodHandle" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MethodHandle">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.MethodHandle">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</ph> property gets a handle to the internal metadata representation of a method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</ph> Właściwość pobiera dojścia do reprezentacji wewnętrznej metadanych metody.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.Name">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.Name" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object containing the name of this member.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> obiektu zawierającego nazwę tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Name">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.Name">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property gets the name of the current member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> Właściwość pobiera nazwę bieżącego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._MethodBase.ReflectedType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.ReflectedType" /&gt;</ph> property.</source>
          <target state="translated">Udostępnia obiekty COM niezależny od wersji dostęp do <ph id="ph1">&lt;see cref="P:System.Reflection.MemberInfo.ReflectedType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.ReflectedType">
          <source>The <ph id="ph1">&lt;see langword="Type" /&gt;</ph> object that was used to obtain this <ph id="ph2">&lt;see langword="MemberInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Type" /&gt;</ph> Obiekt, który został użyty do uzyskania to <ph id="ph2">&lt;see langword="MemberInfo" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.ReflectedType">
          <source>This property is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._MethodBase.ReflectedType">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property gets the class object that was used to obtain this <ph id="ph2">`MemberInfo`</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> Właściwości pobiera obiekt klasy, który został użyty do uzyskania to <ph id="ph2">`MemberInfo`</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.ToString">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method.</source>
          <target state="translated">Udostępnia niezależny od wersji dostęp do obiektów COM <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._MethodBase.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Ciąg reprezentujący bieżące <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._MethodBase.ToString">
          <source>This method is for access to managed classes from unmanaged code and should not be called from managed code.</source>
          <target state="translated">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>