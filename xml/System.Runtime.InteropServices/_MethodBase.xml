<Type Name="_MethodBase" FullName="System.Runtime.InteropServices._MethodBase">
  <TypeSignature Language="C#" Value="public interface _MethodBase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _MethodBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._MethodBase" />
  <TypeSignature Language="VB.NET" Value="Public Interface _MethodBase" />
  <TypeSignature Language="C++ CLI" Value="public interface class _MethodBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6240837A-707F-3181-8E98-A36AE086766B")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodBase))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="03607-101">Udostępnia publiczne elementy członkowskie <see cref="T:System.Reflection.MethodBase" /> klasy do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-101">Exposes the public members of the <see cref="T:System.Reflection.MethodBase" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-102">Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-103">Ten interfejs zachowuje kolejność vtable <xref:System.Reflection.MethodBase?displayProperty=nameWithType> klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</span><span class="sxs-lookup"><span data-stu-id="03607-103">This interface preserves the vtable order of the <xref:System.Reflection.MethodBase?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-104">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.Attributes" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.Attributes" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-105">Jeden z <see cref="T:System.Reflection.MethodAttributes" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="03607-105">One of the <see cref="T:System.Reflection.MethodAttributes" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-106">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-107"><xref:System.Reflection.MethodBase.Attributes%2A> Właściwość pobiera atrybuty skojarzone z tą metodą.</span><span class="sxs-lookup"><span data-stu-id="03607-107">The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-108">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.CallingConvention" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.CallingConvention" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-109">Jeden z <see cref="T:System.Reflection.CallingConventions" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="03607-109">One of the <see cref="T:System.Reflection.CallingConventions" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-110">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-111"><xref:System.Reflection.MethodBase.CallingConvention%2A> Właściwość pobiera wartość wskazującą konwencji wywoływania tej metody.</span><span class="sxs-lookup"><span data-stu-id="03607-111">The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-112">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-113"><see langword="Type" /> Obiektu klasy, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-113">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-114">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-115"><xref:System.Reflection.MemberInfo.DeclaringType%2A> Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-115">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="03607-116"><see cref="T:System.Object" /> Do porównania z bieżącym <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="03607-116">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="03607-117">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.Equals(System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-117">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="03607-118"><see langword="true" /> Jeśli określony <see cref="T:System.Object" /> jest taki sam, jak bieżący <see cref="T:System.Object" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-118"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-119">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-119">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-120"><xref:System.Object.Equals%2A> Metoda określa, czy określony <xref:System.Object> jest taki sam, jak bieżący <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="03607-120">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03607-121">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-121">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-122">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-122">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-123"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Elementy Członkowskie zwracają wszystkie atrybuty stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-123">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> members return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="03607-124"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-124"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="03607-125">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-125">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-126">Tablica zawierająca wszystkie atrybuty niestandardowe lub tablica nie zawierająca żadnego elementu (0), jeśli zostały zdefiniowane żadne atrybuty.</span><span class="sxs-lookup"><span data-stu-id="03607-126">An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-127">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-127">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-128"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Metoda zwraca tablicę zawierającą wszystkie atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="03607-128">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="03607-129">Typ atrybutu do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="03607-129">The type of attribute to search for.</span></span> <span data-ttu-id="03607-130">Zwracane są tylko atrybuty, które są przypisane do tego typu.</span><span class="sxs-lookup"><span data-stu-id="03607-130">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="03607-131"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-131"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="03607-132">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-132">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-133">Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="03607-133">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-134">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-134">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-135"><xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> Metoda zwraca tablicę atrybutów niestandardowych identyfikowane przez <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="03607-135">The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03607-136">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetHashCode" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-136">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-137">Wartość skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="03607-137">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-138">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-139"><xref:System.Object.GetHashCode%2A> Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="03607-139">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="03607-140"><xref:System.Object.GetHashCode%2A> nadaje się do użytku w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="03607-140"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="03607-141">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="03607-141">Reserved for future use.</span></span> <span data-ttu-id="03607-142">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="03607-142">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="03607-143">Tablica nazw można mapować.</span><span class="sxs-lookup"><span data-stu-id="03607-143">An array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="03607-144">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="03607-144">The count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="03607-145">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="03607-145">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="03607-146">Tablica przydzielone przez obiekt wywołujący odbierająca identyfikatory, odpowiadających nazwy.</span><span class="sxs-lookup"><span data-stu-id="03607-146">An array allocated by the caller that receives the identifiers corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="03607-147">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="03607-147">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-148">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-148">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="03607-149">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="03607-149">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03607-150">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-150">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetMethodImplementationFlags" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-151">Jeden z <see cref="T:System.Reflection.MethodImplAttributes" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="03607-151">One of the <see cref="T:System.Reflection.MethodImplAttributes" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-152">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-152">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-153"><xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> Zwraca element członkowski <xref:System.Reflection.MethodImplAttributes> flagi.</span><span class="sxs-lookup"><span data-stu-id="03607-153">The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03607-154">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MethodBase.GetParameters" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-154">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.GetParameters" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-155">Tablica typu <see cref="T:System.Reflection.ParameterInfo" /> zawierających informacje o pasującego podpisu — metoda (lub konstruktora) dostarczanej przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="03607-155">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing information that matches the signature of the method (or constructor) reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-156">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-157"><xref:System.Reflection.MethodBase.GetParameters%2A> Metoda pobiera parametry określonej metody lub konstruktora.</span><span class="sxs-lookup"><span data-stu-id="03607-157">The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03607-158">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Type.GetType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-158">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-159">A <see cref="T:System.Type" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-159">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-160">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-160">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-161"><xref:System.Object.GetType%2A> Metoda pobiera typ bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="03607-161">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="03607-162">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="03607-162">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="03607-163">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="03607-163">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="03607-164">Wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="03607-164">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="03607-165">Pobiera informacje o typie dla obiekt, który można uzyskać informacji o typie dla interfejsu.</span><span class="sxs-lookup"><span data-stu-id="03607-165">Retrieves the type information for an object, which can be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-166">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="03607-167">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="03607-167">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="03607-168">Gdy metoda zwróci wartość, zawiera wskaźnik do lokalizacji, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="03607-168">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="03607-169">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="03607-169">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="03607-170">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="03607-170">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-171">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-171">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="03607-172">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="03607-172">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03607-173">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.MethodBase.Invoke" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-173">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MethodBase.Invoke" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-174">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-174">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-175"><xref:System.Reflection.ConstructorInfo.Invoke%2A> Metody wywołania konstruktora, sprawdzając wystąpienie, które ma określonych parametrów.</span><span class="sxs-lookup"><span data-stu-id="03607-175">The <xref:System.Reflection.ConstructorInfo.Invoke%2A> methods invoke the constructor reflected by the instance that has the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (obj As Object, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="03607-176">Ta metoda utworzone wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="03607-176">The instance that created this method.</span></span></param>
        <param name="parameters"><span data-ttu-id="03607-177">Lista argumentów dla wywołanej metody lub konstruktora.</span><span class="sxs-lookup"><span data-stu-id="03607-177">An argument list for the invoked method or constructor.</span></span> <span data-ttu-id="03607-178">To jest Tablica obiektów numer, kolejność i typ jako parametry metody lub konstruktora do wywołania.</span><span class="sxs-lookup"><span data-stu-id="03607-178">This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</span></span> <span data-ttu-id="03607-179">Jeśli nie ma żadnych parametrów <c>parametry</c> powinien być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03607-179">If there are no parameters, <c>parameters</c> should be <see langword="null" />.</span></span>  
  
 <span data-ttu-id="03607-180">Jeśli ta metoda lub konstruktora reprezentowany przez to wystąpienie ma <see langword="ref" /> parametr (<see langword="ByRef" /> w języku Visual Basic), nie specjalne atrybut jest wymagany dla tego parametru do wywołania metody lub konstruktora przy użyciu tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="03607-180">If the method or constructor represented by this instance takes a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function.</span></span> <span data-ttu-id="03607-181">Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-181">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="03607-182">Elementy typu odwołania, ta wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03607-182">For reference type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="03607-183">Wartość typu elementów, ta wartość jest równa 0, 0.0, lub <see langword="false" />, w zależności od typu określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="03607-183">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <summary><span data-ttu-id="03607-184">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-184">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-185">Wystąpienie skojarzonej z konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="03607-185">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-186">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-186">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-187"><xref:System.Reflection.MethodBase.Invoke%2A> Metoda wywołuje metodę lub konstruktora reprezentowany przez ten obiekt przy użyciu określonych parametrów.</span><span class="sxs-lookup"><span data-stu-id="03607-187">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="03607-188">Ta metoda utworzone wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="03607-188">The instance that created this method.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="03607-189">Jeden z <see langword="BindingFlags" /> wartości, które określa typ powiązania.</span><span class="sxs-lookup"><span data-stu-id="03607-189">One of the <see langword="BindingFlags" /> values that specifies the type of binding.</span></span></param>
        <param name="binder"><span data-ttu-id="03607-190">A <see langword="Binder" /> który definiuje zestaw właściwości i umożliwia powiązanie koercja typy argumentów i wywoływania elementów członkowskich za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="03607-190">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="03607-191">Jeśli <c>integratora</c> jest <see langword="null" />, następnie <see langword="Binder.DefaultBinding" /> jest używany.</span><span class="sxs-lookup"><span data-stu-id="03607-191">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="03607-192">Tablica typu <see langword="Object" /> służy do dopasowania liczby, kolejności i typy parametrów dla tego konstruktora, zgodnie z ograniczeniami <c>integratora</c>.</span><span class="sxs-lookup"><span data-stu-id="03607-192">An array of type <see langword="Object" /> used to match the number, order, and type of the parameters for this constructor, under the constraints of <c>binder</c>.</span></span> <span data-ttu-id="03607-193">Jeśli ten konstruktor nie wymaga parametrów, Przekaż tablica nie zawierająca żadnego elementu jako <c>obiekt [] Parametry = nowy obiekt [0]</c>.</span><span class="sxs-lookup"><span data-stu-id="03607-193">If this constructor does not require parameters, pass an array with zero elements, as in <c>Object[] parameters = new Object[0]</c>.</span></span> <span data-ttu-id="03607-194">Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-194">Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</span></span> <span data-ttu-id="03607-195">Elementy typu odwołania, ta wartość jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03607-195">For reference type elements, this value is <see langword="null" />.</span></span> <span data-ttu-id="03607-196">Wartość typu elementów, ta wartość jest równa 0, 0.0, lub <see langword="false" />, w zależności od typu określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="03607-196">For value type elements, this value is 0, 0.0, or <see langword="false" />, depending on the specific element type.</span></span></param>
        <param name="culture"><span data-ttu-id="03607-197">A <see cref="T:System.Globalization.CultureInfo" /> obiekt używany do kierowania koercja typów.</span><span class="sxs-lookup"><span data-stu-id="03607-197">A <see cref="T:System.Globalization.CultureInfo" /> object used to govern the coercion of types.</span></span> <span data-ttu-id="03607-198">Jeśli jest to <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> służy bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="03607-198">If this is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="03607-199">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-199">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-200">Wystąpienie skojarzonej z konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="03607-200">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-201">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-201">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-202"><xref:System.Reflection.MethodBase.Invoke%2A> Metoda wywołuje konstruktor odzwierciedlone to <xref:System.Reflection.ConstructorInfo> obiektu z określonymi argumentami, zgodnie z ograniczeniami określonego <xref:System.Reflection.Binder> obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-202">The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="03607-203">Identyfikator elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-203">An identifier for the member.</span></span></param>
        <param name="riid"><span data-ttu-id="03607-204">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="03607-204">Reserved for future use.</span></span> <span data-ttu-id="03607-205">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="03607-205">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="03607-206">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="03607-206">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="03607-207">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="03607-207">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="03607-208">Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="03607-208">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="03607-209">Wskaźnik do lokalizacji, w którym będzie przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="03607-209">A pointer to the location where the result will be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="03607-210">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="03607-210">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="03607-211">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="03607-211">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="03607-212">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="03607-212">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-213">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-213">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="03607-214">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="03607-214">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-215">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsAbstract" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-215">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAbstract" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-216"><see langword="true" /> Jeśli metoda jest abstrakcyjna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-216"><see langword="true" /> if the method is abstract; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-217">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-217">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-218"><xref:System.Reflection.MethodBase.IsAbstract%2A> Właściwość pobiera wartość wskazującą, czy metoda jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="03607-218">The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-219">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsAssembly" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-219">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsAssembly" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-220"><see langword="true" /> Jeśli ta metoda może być wywoływany przez inne klasy w tym samym zestawie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-220"><see langword="true" /> if this method can be called by other classes in the same assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-221">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-221">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-222"><xref:System.Reflection.MethodBase.IsAssembly%2A> Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez inne klasy w tym samym zestawie</span><span class="sxs-lookup"><span data-stu-id="03607-222">The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructor">
      <MemberSignature Language="C#" Value="public bool IsConstructor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructor" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsConstructor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-223">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsConstructor" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-223">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsConstructor" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-224"><see langword="true" /> Jeśli ta metoda jest konstruktorem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-224"><see langword="true" /> if this method is a constructor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-225">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-225">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-226"><xref:System.Reflection.MethodBase.IsConstructor%2A> Właściwość pobiera wartość wskazującą, czy metoda jest konstruktorem.</span><span class="sxs-lookup"><span data-stu-id="03607-226">The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="03607-227"><see langword="Type" /> Obiektów, dla których są stosowane atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="03607-227">The <see langword="Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="03607-228"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-228"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="03607-229">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-229">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="03607-230"><see langword="true" /> Jeśli jeden lub więcej wystąpienie <paramref name="attributeType" /> parametr jest stosowane do tego elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-230"><see langword="true" /> if one or more instance of the <paramref name="attributeType" /> parameter is applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-231">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-231">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-232"><xref:System.Reflection.MemberInfo.IsDefined%2A> Elementu członkowskiego wskazuje, czy jednego lub więcej wystąpień `attributeType` parametru są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-232">The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-233">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsFamily" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-233">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamily" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-234"><see langword="true" /> Jeśli dostęp do tej klasy jest ograniczony do członków samej klasy oraz do elementów członkowskich z jej klas pochodnych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-234"><see langword="true" /> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-235">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-235">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-236"><xref:System.Reflection.MethodBase.IsFamily%2A> Właściwość pobiera wartość wskazującą, czy dostęp do tej metody jest ograniczony do członków klasy i elementów członkowskich z jej klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="03607-236">The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-237">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-237">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyAndAssembly" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-238"><see langword="true" /> Jeśli dostęp do tej metody jest ograniczony do członków samej klasy oraz do elementów członkowskich klas pochodnych, które znajdują się w tym samym zestawie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-238"><see langword="true" /> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-239">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-239">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-240"><xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> Właściwość pobiera wartość wskazującą, czy tę metodę można wywołać przez członków sama klasa i klasy pochodne jeśli znajdują się w tym samym zestawie</span><span class="sxs-lookup"><span data-stu-id="03607-240">The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and by derived classes if they are in the same assembly</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-241">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-241">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFamilyOrAssembly" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-242"><see langword="true" /> Jeśli dostęp do tej metody jest ograniczony do członków samej klasy, członkowie klas pochodnych wszędzie tam, gdzie znajdują się i członków innych klas w tym samym zestawie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-242"><see langword="true" /> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-243">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-243">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-244"><xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez klas pochodnych wszędzie tam, gdzie są one, a także wszystkie klasy w tym samym zestawie.</span><span class="sxs-lookup"><span data-stu-id="03607-244">The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinal">
      <MemberSignature Language="C#" Value="public bool IsFinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsFinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFinal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFinal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-245">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsFinal" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-245">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsFinal" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-246"><see langword="true" /> Jeśli ta metoda jest <see langword="final" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-246"><see langword="true" /> if this method is <see langword="final" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-247">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-247">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-248"><xref:System.Reflection.MethodBase.IsFinal%2A> Właściwości pobiera wartość wskazującą, czy ta metoda jest `final`.</span><span class="sxs-lookup"><span data-stu-id="03607-248">The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHideBySig">
      <MemberSignature Language="C#" Value="public bool IsHideBySig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHideBySig" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsHideBySig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHideBySig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHideBySig { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-249">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsHideBySig" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-249">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsHideBySig" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-250"><see langword="true" /> Jeśli element członkowski jest ukryty przez podpis. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-250"><see langword="true" /> if the member is hidden by signature; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-251">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-251">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-252"><xref:System.Reflection.MethodBase.IsHideBySig%2A> Właściwość pobiera wartość wskazującą, czy tylko element członkowski o takiej samej nazwie, o tej samej sygnaturze jest ukryty w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="03607-252">The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-253">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsPrivate" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-253">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPrivate" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-254"><see langword="true" /> Jeśli dostęp do tej metody jest ograniczony do innych członków klasy. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-254"><see langword="true" /> if access to this method is restricted to other members of the class itself; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-255">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-255">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-256"><xref:System.Reflection.MethodBase.IsPrivate%2A> Właściwość pobiera wartość wskazującą, czy ten element członkowski jest prywatny.</span><span class="sxs-lookup"><span data-stu-id="03607-256">The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-257">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsPublic" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-257">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsPublic" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-258"><see langword="true" /> Jeśli ta metoda jest publiczna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-258"><see langword="true" /> if this method is public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-259">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-259">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-260"><xref:System.Reflection.MethodBase.IsPublic%2A> Właściwość pobiera wartość wskazującą, czy ta metoda jest publiczna.</span><span class="sxs-lookup"><span data-stu-id="03607-260">The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-261">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsSpecialName" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-261">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsSpecialName" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-262"><see langword="true" /> Jeśli ta metoda ma specjalną nazwą; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-262"><see langword="true" /> if this method has a special name; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-263">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-263">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-264"><xref:System.Reflection.MethodBase.IsSpecialName%2A> Właściwość pobiera wartość wskazującą, czy ta metoda ma specjalną nazwą.</span><span class="sxs-lookup"><span data-stu-id="03607-264">The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-265">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsStatic" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-265">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsStatic" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-266"><see langword="true" /> Jeśli ta metoda jest <see langword="static" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-266"><see langword="true" /> if this method is <see langword="static" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-267">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-267">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-268"><xref:System.Reflection.MethodBase.IsStatic%2A> Właściwości pobiera wartość wskazującą, czy metoda jest `static`.</span><span class="sxs-lookup"><span data-stu-id="03607-268">The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.IsVirtual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVirtual As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVirtual { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-269">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.IsVirtual" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-269">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.IsVirtual" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="03607-270"><see langword="true" /> Jeśli ta metoda jest <see langword="virtual" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03607-270"><see langword="true" /> if this method is <see langword="virtual" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-271">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-271">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-272"><xref:System.Reflection.MethodBase.IsVirtual%2A> Właściwości pobiera wartość wskazującą, czy metoda jest `virtual`.</span><span class="sxs-lookup"><span data-stu-id="03607-272">The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-273">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.MemberType" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-273">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-274">Jeden z <see cref="T:System.Reflection.MemberTypes" /> wartości wskazujący typ elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-274">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating the type of member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-275">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-275">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-276"><xref:System.Reflection.MemberInfo.MemberType%2A> Pobiera właściwość <xref:System.Reflection.MemberTypes> wartość wskazujący typ elementu członkowskiego — metoda, konstruktora, zdarzeń i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="03607-276">The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-277">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MethodBase.MethodHandle" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-277">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MethodBase.MethodHandle" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-278">A <see cref="T:System.RuntimeMethodHandle" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-278">A <see cref="T:System.RuntimeMethodHandle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-279">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-279">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-280"><xref:System.Reflection.MethodBase.MethodHandle%2A> Właściwość pobiera dojścia do reprezentacji wewnętrznej metadanych metody.</span><span class="sxs-lookup"><span data-stu-id="03607-280">The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-281">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.Name" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-281">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-282">A <see cref="T:System.String" /> obiektu zawierającego nazwę tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-282">A <see cref="T:System.String" /> object containing the name of this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-283">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-283">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-284"><xref:System.Reflection.MemberInfo.Name%2A> Właściwość pobiera nazwę bieżącego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="03607-284">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._MethodBase.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03607-285">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="03607-285">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="03607-286"><see langword="Type" /> Obiekt, który został użyty do uzyskania to <see langword="MemberInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-286">The <see langword="Type" /> object that was used to obtain this <see langword="MemberInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-287">Ta właściwość jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-287">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="03607-288"><xref:System.Reflection.MemberInfo.ReflectedType%2A> Właściwości pobiera obiekt klasy, który został użyty do uzyskania to `MemberInfo` obiektu.</span><span class="sxs-lookup"><span data-stu-id="03607-288">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._MethodBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03607-289">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.ToString" /> metody.</span><span class="sxs-lookup"><span data-stu-id="03607-289">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="03607-290">Ciąg reprezentujący bieżące <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="03607-290">A string that represents the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03607-291">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="03607-291">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
