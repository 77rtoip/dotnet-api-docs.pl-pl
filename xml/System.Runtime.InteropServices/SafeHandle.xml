<Type Name="SafeHandle" FullName="System.Runtime.InteropServices.SafeHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5dceaeed82ca5d29e78b39e45bf6f4f8be4766a2" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68393976" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeHandle : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit SafeHandle extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeHandle&#xA;Inherits CriticalFinalizerObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeHandle abstract : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="F#" Value="type SafeHandle = class&#xA;    inherit CriticalFinalizerObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Handles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2338f-101">Reprezentuje klasę otoki dla dojść systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="2338f-101">Represents a wrapper class for operating system handles.</span></span> <span data-ttu-id="2338f-102">Ta klasa musi być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="2338f-102">This class must be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-103"><xref:System.Runtime.InteropServices.SafeHandle> Klasa zapewnia krytyczną finalizację zasobów obsługi, uniemożliwiając odzyskiwanie dojść przedwcześnie przez wyrzucanie elementów bezużytecznych i odzyskiwanie ich przez system Windows w celu odwoływania się do niezamierzonych obiektów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="2338f-103">The <xref:System.Runtime.InteropServices.SafeHandle> class provides critical finalization of handle resources, preventing handles from being reclaimed prematurely by garbage collection and from being recycled by Windows to reference unintended unmanaged objects.</span></span>  
  
 <span data-ttu-id="2338f-104">Ten temat zawiera następujące sekcje:</span><span class="sxs-lookup"><span data-stu-id="2338f-104">This topic includes the following sections:</span></span>  
  
 <span data-ttu-id="2338f-105">[Dlaczego element SafeHandle?](#Why) </span><span class="sxs-lookup"><span data-stu-id="2338f-105">[Why SafeHandle?](#Why) </span></span>  
 <span data-ttu-id="2338f-106">[Jakiego elementu SafeHandle robi](#Does) </span><span class="sxs-lookup"><span data-stu-id="2338f-106">[What SafeHandle does](#Does) </span></span>  
 [<span data-ttu-id="2338f-107">Klasy pochodzące od elementu SafeHandle</span><span class="sxs-lookup"><span data-stu-id="2338f-107">Classes derived from SafeHandle</span></span>](#Derived)  
  
<a name="Why"></a>   
## <a name="why-safehandle"></a><span data-ttu-id="2338f-108">Dlaczego element SafeHandle?</span><span class="sxs-lookup"><span data-stu-id="2338f-108">Why SafeHandle?</span></span>  
 <span data-ttu-id="2338f-109">Przed .NET Framework w wersji 2,0 wszystkie uchwyty systemu operacyjnego mogą być hermetyzowane tylko w <xref:System.IntPtr> zarządzanym obiekcie otoki.</span><span class="sxs-lookup"><span data-stu-id="2338f-109">Before the .NET Framework version 2.0, all operating system handles could only be encapsulated in the <xref:System.IntPtr> managed wrapper object.</span></span> <span data-ttu-id="2338f-110">Chociaż jest to wygodny sposób współdziałania z kodem natywnym, uchwyty mogą być przeciekami przez asynchroniczne wyjątki, takie jak nieoczekiwane przerywanie wątku lub przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="2338f-110">While this was a convenient way to interoperate with native code, handles could be leaked by asynchronous exceptions, such as a thread aborting unexpectedly or a stack overflow.</span></span> <span data-ttu-id="2338f-111">Te wyjątki asynchroniczne są przeszkodą w czyszczeniu zasobów systemu operacyjnego i mogą wystąpić niemal w dowolnym miejscu w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2338f-111">These asynchronous exceptions are an obstacle to cleaning up operating system resources, and they can occur almost anywhere in your app.</span></span>  
  
 <span data-ttu-id="2338f-112">Chociaż przesłonięcia <xref:System.Object.Finalize%2A?displayProperty=nameWithType> metody Zezwalaj na czyszczenie niezarządzanych zasobów, gdy obiekt jest odzyskiwany, w pewnych okolicznościach można odzyskiwać obiekty przez wyrzucanie elementów bezużytecznych podczas wykonywania metody w wywołaniu platformy połączeń.</span><span class="sxs-lookup"><span data-stu-id="2338f-112">Although overrides to the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method allow cleanup of unmanaged resources when an object is being garbage collected, in some circumstances, finalizable objects can be reclaimed by garbage collection while executing a method within a platform invoke call.</span></span> <span data-ttu-id="2338f-113">Jeśli finalizator zwolni dojście do wywołania wywoływanego przez tę platformę, może dojść do obsłużenia uszkodzenia.</span><span class="sxs-lookup"><span data-stu-id="2338f-113">If a finalizer frees the handle passed to that platform invoke call, it could lead to handle corruption.</span></span> <span data-ttu-id="2338f-114">Dojście może również zostać odczytane, gdy metoda jest blokowana podczas wywołania wywołania platformy, na przykład podczas odczytywania pliku.</span><span class="sxs-lookup"><span data-stu-id="2338f-114">The handle could also be reclaimed while your method is blocked during a platform invoke call, such as while reading a file.</span></span>  
  
 <span data-ttu-id="2338f-115">Bardziej krytycznie, ponieważ system Windows agresywnie odtwarza dojścia, dojście może być odtwarzane i wskazywać na inny zasób, który może zawierać poufne dane.</span><span class="sxs-lookup"><span data-stu-id="2338f-115">More critically, because Windows aggressively recycles handles, a handle could be recycled and point to another resource that might contain sensitive data.</span></span> <span data-ttu-id="2338f-116">Jest to nazywane atakami polegającymi na recyklingu i może potencjalnie uszkodzić dane oraz stanowić zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="2338f-116">This is known as a recycle attack and can potentially corrupt data and be a security threat.</span></span>  
  
<a name="Does"></a>   
## <a name="what-safehandle-does"></a><span data-ttu-id="2338f-117">Jakiego elementu SafeHandle robi</span><span class="sxs-lookup"><span data-stu-id="2338f-117">What SafeHandle does</span></span>  
 <span data-ttu-id="2338f-118"><xref:System.Runtime.InteropServices.SafeHandle> Klasa upraszcza kilka z tych problemów z okresem istnienia obiektu i jest zintegrowana z wywołaniem platformy, co sprawia, że zasoby systemu operacyjnego nie są wyciekami.</span><span class="sxs-lookup"><span data-stu-id="2338f-118">The <xref:System.Runtime.InteropServices.SafeHandle> class simplifies several of these object lifetime issues, and is integrated with platform invoke so that operating system resources are not leaked.</span></span> <span data-ttu-id="2338f-119"><xref:System.Runtime.InteropServices.SafeHandle> Klasa rozwiązuje problemy dotyczące okresu istnienia obiektu przez przypisanie i zwolnienie dojść bez przeszkód.</span><span class="sxs-lookup"><span data-stu-id="2338f-119">The <xref:System.Runtime.InteropServices.SafeHandle> class resolves object lifetime issues by assigning and releasing handles without interruption.</span></span> <span data-ttu-id="2338f-120">Zawiera krytyczne finalizatory, które gwarantują, że dojście jest zamknięte i jest gwarantowane, że <xref:System.AppDomain> zostanie uruchomione podczas nieoczekiwanego zwalniania, nawet w przypadku, gdy założono, że wywołanie wywołania platformy jest uszkodzone.</span><span class="sxs-lookup"><span data-stu-id="2338f-120">It contains a critical finalizer that ensures that the handle is closed and is guaranteed to run during unexpected <xref:System.AppDomain> unloads, even in cases when the platform invoke call is assumed to be in a corrupted state.</span></span>  
  
 <span data-ttu-id="2338f-121">Ponieważ <xref:System.Runtime.InteropServices.SafeHandle> dziedziczy po <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, wszystkie niekrytyczne finalizatory są wywoływane przed którymkolwiek z najważniejszych finalizatorów.</span><span class="sxs-lookup"><span data-stu-id="2338f-121">Because <xref:System.Runtime.InteropServices.SafeHandle> inherits from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, all the noncritical finalizers are called before any of the critical finalizers.</span></span> <span data-ttu-id="2338f-122">Finalizatory są wywoływane na obiektach, które nie są już aktywne podczas tego samego przebiegu elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="2338f-122">The finalizers are called on objects that are no longer live during the same garbage collection pass.</span></span> <span data-ttu-id="2338f-123">Na przykład <xref:System.IO.FileStream> obiekt może uruchomić normalne finalizatory, aby opróżnić istniejące dane buforowane bez ryzyka przecieku lub odtwarzania dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-123">For example, a <xref:System.IO.FileStream> object can run a normal finalizer to flush out existing buffered data without the risk of the handle being leaked or recycled.</span></span> <span data-ttu-id="2338f-124">To bardzo słabe porządkowanie między najważniejszymi i niekrytycznymi finalizatorami nie jest przeznaczone do użytku ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2338f-124">This very weak ordering between critical and noncritical finalizers is not intended for general use.</span></span> <span data-ttu-id="2338f-125">Istnieje głównie do ułatwienia migracji istniejących bibliotek, umożliwiając używanie <xref:System.Runtime.InteropServices.SafeHandle> tych bibliotek bez zmiany ich semantyki.</span><span class="sxs-lookup"><span data-stu-id="2338f-125">It exists primarily to assist in the migration of existing libraries by allowing those libraries to use <xref:System.Runtime.InteropServices.SafeHandle> without altering their semantics.</span></span> <span data-ttu-id="2338f-126">Ponadto krytyczny finalizator i wszystkie wywołania, takie jak <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle?displayProperty=nameWithType> Metoda, muszą znajdować się w ograniczonym regionie wykonania.</span><span class="sxs-lookup"><span data-stu-id="2338f-126">Additionally, the critical finalizer and anything it calls, such as the <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle?displayProperty=nameWithType> method, must be in a constrained execution region.</span></span> <span data-ttu-id="2338f-127">Nakłada to ograniczenia dotyczące tego, jaki kod można napisać na grafie wywołań finalizatora.</span><span class="sxs-lookup"><span data-stu-id="2338f-127">This imposes constraints on what code can be written within the finalizer's call graph.</span></span>  
  
 <span data-ttu-id="2338f-128">Operacje wywołania platformy automatycznie zwiększają liczbę odwołań do dojść hermetyzowanych przez <xref:System.Runtime.InteropServices.SafeHandle> a i zmniejszają je po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="2338f-128">Platform invoke operations automatically increment the reference count of handles encapsulated by a <xref:System.Runtime.InteropServices.SafeHandle> and decrement them upon completion.</span></span> <span data-ttu-id="2338f-129">Gwarantuje to, że dojście nie będzie odtwarzane ani nieoczekiwanie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="2338f-129">This ensures that the handle will not be recycled or closed unexpectedly.</span></span>  
  
 <span data-ttu-id="2338f-130">Można określić własność bazowego dojścia podczas konstruowania <xref:System.Runtime.InteropServices.SafeHandle> obiektów, dostarczając wartość `ownsHandle` do argumentu w <xref:System.Runtime.InteropServices.SafeHandle> konstruktorze klasy.</span><span class="sxs-lookup"><span data-stu-id="2338f-130">You can specify ownership of the underlying handle when constructing <xref:System.Runtime.InteropServices.SafeHandle> objects by supplying a value to the `ownsHandle` argument in the <xref:System.Runtime.InteropServices.SafeHandle> class constructor.</span></span> <span data-ttu-id="2338f-131">Określa, <xref:System.Runtime.InteropServices.SafeHandle> czy obiekt zwolni uchwyt po usunięciu obiektu.</span><span class="sxs-lookup"><span data-stu-id="2338f-131">This controls whether the <xref:System.Runtime.InteropServices.SafeHandle> object will release the handle after the object has been disposed.</span></span>  <span data-ttu-id="2338f-132">Jest to przydatne w przypadku dojść o szczególnych wymaganiach dotyczących okresu istnienia lub korzystania z dojścia, którego okres istnienia jest kontrolowany przez kogoś innego.</span><span class="sxs-lookup"><span data-stu-id="2338f-132">This is useful for handles with peculiar lifetime requirements or for consuming a handle whose lifetime is controlled by someone else.</span></span>  
  
<a name="Derived"></a>   
## <a name="classes-derived-from-safehandle"></a><span data-ttu-id="2338f-133">Klasy pochodzące od elementu SafeHandle</span><span class="sxs-lookup"><span data-stu-id="2338f-133">Classes derived from SafeHandle</span></span>  
 <span data-ttu-id="2338f-134"><xref:System.Runtime.InteropServices.SafeHandle>jest abstrakcyjną klasą otoki dla dojść systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="2338f-134"><xref:System.Runtime.InteropServices.SafeHandle> is an abstract wrapper class for operating system handles.</span></span> <span data-ttu-id="2338f-135">Wyprowadzanie z tej klasy jest trudne.</span><span class="sxs-lookup"><span data-stu-id="2338f-135">Deriving from this class is difficult.</span></span> <span data-ttu-id="2338f-136">Zamiast tego należy użyć klas pochodnych w <xref:Microsoft.Win32.SafeHandles> przestrzeni nazw, które zapewniają bezpieczne uchwyty dla następujących:</span><span class="sxs-lookup"><span data-stu-id="2338f-136">Instead, use the derived classes in the <xref:Microsoft.Win32.SafeHandles> namespace that provide safe handles for the following:</span></span>  
  
-   <span data-ttu-id="2338f-137">Pliki ( <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-137">Files (the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-138">Pliki mapowane w <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> pamięci (Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-138">Memory mapped files (the <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-139">Potoki ( <xref:Microsoft.Win32.SafeHandles.SafePipeHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-139">Pipes (the <xref:Microsoft.Win32.SafeHandles.SafePipeHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-140">Widoki pamięci ( <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-140">Memory views (the <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-141">Konstrukcje kryptografii ( <xref:Microsoft.Win32.SafeHandles.SafeNCryptHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>i <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> ).</span><span class="sxs-lookup"><span data-stu-id="2338f-141">Cryptography constructs (the <xref:Microsoft.Win32.SafeHandles.SafeNCryptHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>, and <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> classes).</span></span>  
  
-   <span data-ttu-id="2338f-142">Procesy ( <xref:Microsoft.Win32.SafeHandles.SafeProcessHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-142">Processes (the <xref:Microsoft.Win32.SafeHandles.SafeProcessHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-143">Klucze rejestru ( <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-143">Registry keys (the <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> class).</span></span>  
  
-   <span data-ttu-id="2338f-144">Uchwyty oczekiwania ( <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> Klasa).</span><span class="sxs-lookup"><span data-stu-id="2338f-144">Wait handles (the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> class).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2338f-145">Poniższy przykład kodu tworzy niestandardowe, bezpieczne dojście do pliku systemu operacyjnego, wynikające z programu <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</span><span class="sxs-lookup"><span data-stu-id="2338f-145">The following code example creates a custom safe handle for an operating system file handle, deriving from <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</span></span> <span data-ttu-id="2338f-146">Odczytuje bajty z pliku i wyświetla ich wartości szesnastkowe.</span><span class="sxs-lookup"><span data-stu-id="2338f-146">It reads bytes from a file and displays their hexadecimal values.</span></span> <span data-ttu-id="2338f-147">Zawiera również zespół testowania błędów, który powoduje przerwanie wątku, ale wartość dojścia jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="2338f-147">It also contains a fault testing harness that causes the thread to abort, but the handle value is freed.</span></span>  <span data-ttu-id="2338f-148">W przypadku użycia <xref:System.IntPtr> do reprezentowania dojść, dojście jest sporadycznie wycieków z powodu asynchronicznego przerwania wątku.</span><span class="sxs-lookup"><span data-stu-id="2338f-148">When using an <xref:System.IntPtr> to represent handles, the handle is occasionally leaked due to the asynchronous thread abort.</span></span>  
  
 <span data-ttu-id="2338f-149">Potrzebny będzie plik tekstowy w tym samym folderze co skompilowana aplikacja.</span><span class="sxs-lookup"><span data-stu-id="2338f-149">You will need a text file in the same folder as the compiled application.</span></span> <span data-ttu-id="2338f-150">Przy założeniu, że nazwa aplikacji to "HexViewer", użycie wiersza polecenia to:</span><span class="sxs-lookup"><span data-stu-id="2338f-150">Assuming that you name the application "HexViewer", the command line usage is:</span></span>  
  
 `HexViewer <filename> -Fault`  
  
 <span data-ttu-id="2338f-151">Opcjonalnie można `-Fault` określić celową próbę przeciekania dojścia przez przerwanie wątku w określonym oknie.</span><span class="sxs-lookup"><span data-stu-id="2338f-151">Optionally specify `-Fault` to intentionally attempt to leak the handle by aborting the thread in a certain window.</span></span> <span data-ttu-id="2338f-152">Użyj narzędzia Windows perfmon. exe, aby monitorować liczby dojść podczas wstrzykiwania błędów.</span><span class="sxs-lookup"><span data-stu-id="2338f-152">Use the Windows Perfmon.exe tool to monitor handle counts while injecting faults.</span></span>  
  
 [!code-csharp[SafeHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="2338f-153">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="2338f-153">for full trust for inheritors.</span></span> <span data-ttu-id="2338f-154">Ten element członkowski nie może być dziedziczony przez częściowo zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="2338f-154">This member cannot be inherited by partially trusted code.</span></span></permission>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2338f-155">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2338f-155">requires full trust for the immediate caller.</span></span> <span data-ttu-id="2338f-156">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="2338f-156">This member cannot be used by partially trusted or transparent code.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="2338f-157">Aby utworzyć klasę pochodną od <see cref="T:System.Runtime.InteropServices.SafeHandle" />, należy znać sposób tworzenia i zwalniania dojścia systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="2338f-157">To create a class derived from <see cref="T:System.Runtime.InteropServices.SafeHandle" />, you must know how to create and free an operating system handle.</span></span> <span data-ttu-id="2338f-158">Ten proces jest różny dla różnych typów uchwytów, ponieważ niektóre wykorzystują funkcję [CloseHandle](https://msdn.microsoft.com/library/windows/desktop/ms724211.aspx) , podczas gdy inne wykorzystują bardziej specyficzne funkcje, takie jak [Funkcja UnmapViewOfFile](https://msdn.microsoft.com/library/windows/desktop/aa366882.aspx) lub [FindClose](https://msdn.microsoft.com/library/windows/desktop/aa364413.aspx).</span><span class="sxs-lookup"><span data-stu-id="2338f-158">This process is different for different handle types because some use the [CloseHandle](https://msdn.microsoft.com/library/windows/desktop/ms724211.aspx) function, while others use more specific functions such as [UnmapViewOfFile](https://msdn.microsoft.com/library/windows/desktop/aa366882.aspx) or [FindClose](https://msdn.microsoft.com/library/windows/desktop/aa364413.aspx).</span></span> <span data-ttu-id="2338f-159">Z tego powodu należy utworzyć klasę <see cref="T:System.Runtime.InteropServices.SafeHandle" /> pochodną dla każdego typu dojścia systemu operacyjnego, który ma być zawijany w bezpiecznym obsłudze.</span><span class="sxs-lookup"><span data-stu-id="2338f-159">For this reason, you must create a derived class of <see cref="T:System.Runtime.InteropServices.SafeHandle" /> for each operating system handle type that you want to wrap in a safe handle.</span></span>  
  
<span data-ttu-id="2338f-160">W przypadku dziedziczenia <see cref="T:System.Runtime.InteropServices.SafeHandle" />z należy zastąpić następujące elementy członkowskie: <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> i <see cref="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-160">When you inherit from <see cref="T:System.Runtime.InteropServices.SafeHandle" />, you must override the following members: <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> and <see cref="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />.</span></span>  
  
<span data-ttu-id="2338f-161">Należy również dostarczyć Konstruktor bez parametrów, który wywołuje konstruktora podstawowego z wartością, która reprezentuje nieprawidłową wartość dojścia, i <see cref="T:System.Boolean" /> wartość wskazującą, czy uchwyt macierzysty należy do, i w <see cref="T:System.Runtime.InteropServices.SafeHandle" /> związku z tym powinien zostać zwolniony <see cref="T:System.Runtime.InteropServices.SafeHandle" /> gdy został usunięty.</span><span class="sxs-lookup"><span data-stu-id="2338f-161">You should also provide a parameterless constructor that calls the base constructor with a value that represent an invalid handle value, and a <see cref="T:System.Boolean" /> value indicating whether the native handle is owned by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> and consequently should be freed when that <see cref="T:System.Runtime.InteropServices.SafeHandle" /> has been disposed.</span></span></para></block>
    <altmember cref="N:Microsoft.Win32.SafeHandles" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandle (IntPtr invalidHandleValue, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int invalidHandleValue, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.#ctor(System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (invalidHandleValue As IntPtr, ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandle(IntPtr invalidHandleValue, bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SafeHandle : nativeint * bool -&gt; System.Runtime.InteropServices.SafeHandle" Usage="new System.Runtime.InteropServices.SafeHandle (invalidHandleValue, ownsHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="invalidHandleValue" Type="System.IntPtr" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidHandleValue"><span data-ttu-id="2338f-162">Wartość nieprawidłowego dojścia (zwykle 0 lub-1).</span><span class="sxs-lookup"><span data-stu-id="2338f-162">The value of an invalid handle (usually 0 or -1).</span></span>  <span data-ttu-id="2338f-163">Twoja implementacja <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> powinna zwracać <see langword="true" /> wartość dla tej wartości.</span><span class="sxs-lookup"><span data-stu-id="2338f-163">Your implementation of <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> should return <see langword="true" /> for this value.</span></span></param>
        <param name="ownsHandle"><span data-ttu-id="2338f-164"><see langword="true" />Aby niezawodnie <see cref="T:System.Runtime.InteropServices.SafeHandle" /> zezwolić na wydawanie dojścia w fazie finalizowania; <see langword="false" /> w przeciwnym razie (niezalecane).</span><span class="sxs-lookup"><span data-stu-id="2338f-164"><see langword="true" /> to reliably let <see cref="T:System.Runtime.InteropServices.SafeHandle" /> release the handle during the finalization phase; otherwise, <see langword="false" /> (not recommended).</span></span></param>
        <summary><span data-ttu-id="2338f-165">Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasy z określoną nieprawidłową wartością dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-165">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class with the specified invalid handle value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-166">Jeśli parametr ma `false`wartość, <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> nie jest nigdy wywoływany, dlatego nie zaleca się używania tej wartości parametru, ponieważ kod może wyciekać zasoby. `ownsHandle`</span><span class="sxs-lookup"><span data-stu-id="2338f-166">If the `ownsHandle` parameter is `false`, <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> is never called; thus, it is not recommended to use this parameter value as your code may leak resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2338f-167">Klasa pochodna znajduje się w zestawie bez uprawnień dostępu do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-167">The derived class resides in an assembly without unmanaged code access permission.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="2338f-168">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span><span class="sxs-lookup"><span data-stu-id="2338f-168">for full trust for inheritors.</span></span> <span data-ttu-id="2338f-169">Ten element członkowski nie może być dziedziczony przez częściowo zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="2338f-169">This member cannot be inherited by partially trusted code.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="2338f-170">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2338f-170">requires full trust for the immediate caller.</span></span> <span data-ttu-id="2338f-171">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="2338f-171">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="safeHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;netstandard-1.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-172">Oznacza dojście do zwalniania i zwalniania zasobów.</span><span class="sxs-lookup"><span data-stu-id="2338f-172">Marks the handle for releasing and freeing resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-173">Wywołanie metody <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> lub umożliwia zwolnienie zasobów. <xref:System.Runtime.InteropServices.SafeHandle.Close%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-173">Calling the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method allows the resources to be freed.</span></span> <span data-ttu-id="2338f-174">Może to nie nastąpić natychmiast, jeśli inne wątki używają tego samego bezpiecznego obiektu obsługi, ale nastąpi to tak szybko, jak to już się nie dzieje.</span><span class="sxs-lookup"><span data-stu-id="2338f-174">This might not happen immediately if other threads are using the same safe handle object, but will happen as soon as that is no longer the case.</span></span> <span data-ttu-id="2338f-175">Chociaż większość klas, które używają <xref:System.Runtime.InteropServices.SafeHandle> klasy nie musi dostarczać finalizatora, jest to czasami konieczne (na przykład w celu opróżnienia buforów plików lub zapisania danych z powrotem do pamięci).</span><span class="sxs-lookup"><span data-stu-id="2338f-175">Although most classes that use the <xref:System.Runtime.InteropServices.SafeHandle> class do not need to provide a finalizer, this is sometimes necessary (for example, to flush out file buffers or to write some data back into memory).</span></span> <span data-ttu-id="2338f-176">W takim przypadku Klasa może zapewnić finalizator, który jest gwarantowany do uruchomienia przed <xref:System.Runtime.InteropServices.SafeHandle> uruchomieniem krytycznego finalizatora.</span><span class="sxs-lookup"><span data-stu-id="2338f-176">In this case, the class can provide a finalizer that is guaranteed to run before the <xref:System.Runtime.InteropServices.SafeHandle> critical finalizer runs.</span></span>  
  
 <span data-ttu-id="2338f-177">Wywoływanie metody <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> <xref:System.Runtime.InteropServices.SafeHandle> lub po zakończeniu korzystania z obiektu. <xref:System.Runtime.InteropServices.SafeHandle.Close%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-177">Call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method when you are finished using the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2338f-178">Zawsze wywołuj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2338f-178">Always call <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> before you release your last reference to the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="2338f-179">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Runtime.InteropServices.SafeHandle> <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="2338f-179">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.InteropServices.SafeHandle> object's <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-180">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-180">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-181">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-182">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DangerousAddRef">
      <MemberSignature Language="C#" Value="public void DangerousAddRef (ref bool success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DangerousAddRef(bool&amp; success) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DangerousAddRef (ByRef success As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DangerousAddRef(bool % success);" />
      <MemberSignature Language="F#" Value="member this.DangerousAddRef :  -&gt; unit" Usage="safeHandle.DangerousAddRef success" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="success" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="success"><span data-ttu-id="2338f-183"><see langword="true" />Jeśli licznik odwołań został pomyślnie zwiększony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2338f-183"><see langword="true" /> if the reference counter was successfully incremented; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2338f-184">Ręcznie zwiększa licznik odwołań w <see cref="T:System.Runtime.InteropServices.SafeHandle" /> wystąpieniach.</span><span class="sxs-lookup"><span data-stu-id="2338f-184">Manually increments the reference counter on <see cref="T:System.Runtime.InteropServices.SafeHandle" /> instances.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-185">Metoda uniemożliwia środowisko uruchomieniowe języka wspólnego odzyskiwanie pamięci używanej przez dojście (które występuje, gdy środowisko uruchomieniowe <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> wywołuje metodę). <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-185">The <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> method prevents the common language runtime from reclaiming memory used by a handle (which occurs when the runtime calls the <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method).</span></span> <span data-ttu-id="2338f-186">Za pomocą tej metody można ręcznie zwiększyć liczbę <xref:System.Runtime.InteropServices.SafeHandle> odwołań do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2338f-186">You can use this method to manually increment the reference count on a <xref:System.Runtime.InteropServices.SafeHandle> instance.</span></span> <span data-ttu-id="2338f-187"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>Zwraca wartość logiczną przy użyciu `ref` parametru (`success`), który wskazuje, czy licznik odwołań został pomyślnie zwiększony.</span><span class="sxs-lookup"><span data-stu-id="2338f-187"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> returns a Boolean value using a `ref` parameter (`success`) that indicates whether the reference count was incremented successfully.</span></span> <span data-ttu-id="2338f-188">Dzięki temu logika programu może zostać wycofana w razie awarii.</span><span class="sxs-lookup"><span data-stu-id="2338f-188">This allows your program logic to back out in case of failure.</span></span> <span data-ttu-id="2338f-189">Należy ustawić na `success` `false` wartość przed wywołaniem metody <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span><span class="sxs-lookup"><span data-stu-id="2338f-189">You should set `success` to `false` before calling <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span> <span data-ttu-id="2338f-190">Jeśli `success` <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A>tak `true`, unikaj przecieków zasobów, dopasowując wywołanie do z odpowiednim wywołaniem do.</span><span class="sxs-lookup"><span data-stu-id="2338f-190">If `success` is `true`, avoid resource leaks by matching the call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> with a corresponding call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2338f-191">Ta metoda jest przeznaczona dla zaawansowanych użytkowników i zawsze musi być używana ostrożnie.</span><span class="sxs-lookup"><span data-stu-id="2338f-191">This method is intended for advanced users and must always be used carefully.</span></span> <span data-ttu-id="2338f-192">Aby uniknąć przecieków zasobów obsługi, zawsze Wywołaj tę metodę w ograniczonym regionie wykonywania (CER), w którym przerwanie wątku nie może przerwać przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="2338f-192">To avoid leaking handle resources, always call this method inside a constrained execution region (CER), where a thread abort cannot interrupt processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-193">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-193">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-194">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-194">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-195">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-195">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
      </Docs>
    </Member>
    <Member MemberName="DangerousGetHandle">
      <MemberSignature Language="C#" Value="public IntPtr DangerousGetHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int DangerousGetHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DangerousGetHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr DangerousGetHandle();" />
      <MemberSignature Language="F#" Value="member this.DangerousGetHandle : unit -&gt; nativeint" Usage="safeHandle.DangerousGetHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-196">Zwraca wartość <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> pola.</span><span class="sxs-lookup"><span data-stu-id="2338f-196">Returns the value of the <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> field.</span></span></summary>
        <returns><span data-ttu-id="2338f-197">Reprezentujący wartość <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" />pola. <see langword="IntPtr" /></span><span class="sxs-lookup"><span data-stu-id="2338f-197">An <see langword="IntPtr" /> representing the value of the <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> field.</span></span> <span data-ttu-id="2338f-198">Jeśli dojście zostało oznaczone jako nieprawidłowe z <see cref="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />, ta metoda nadal zwraca oryginalną wartość dojścia, która może być nieodświeżoną wartością.</span><span class="sxs-lookup"><span data-stu-id="2338f-198">If the handle has been marked invalid with <see cref="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />, this method still returns the original handle value, which can be a stale value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-199">Tej metody można użyć do pobrania rzeczywistej wartości uchwytu z wystąpienia <xref:System.Runtime.InteropServices.SafeHandle> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="2338f-199">You can use this method to retrieve the actual handle value from an instance of the <xref:System.Runtime.InteropServices.SafeHandle> derived class.</span></span> <span data-ttu-id="2338f-200">Ta metoda jest wymagana w celu zapewnienia zgodności z poprzednimi wersjami, ponieważ `IntPtr` wiele właściwości w .NET Framework zwracanych typów dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-200">This method is needed for backwards compatibility because many properties in the .NET Framework return `IntPtr` handle types.</span></span> <span data-ttu-id="2338f-201">`IntPtr`typy uchwytów to typy specyficzne dla platformy służące do reprezentowania wskaźnika lub dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-201">`IntPtr` handle types are platform-specific types used to represent a pointer or a handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2338f-202">Użycie metody może stanowić zagrożenie bezpieczeństwa, ponieważ, jeśli dojście zostało oznaczone jako nieprawidłowe przy użyciu <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A>, <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> nadal zwraca oryginalną, potencjalnie nieodświeżoną wartość dojścia. <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-202">Using the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method can pose security risks because, if the handle has been marked as invalid with <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A>, <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> still returns the original, potentially stale handle value.</span></span> <span data-ttu-id="2338f-203">Zwracanego uchwytu można również odtworzyć w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="2338f-203">The returned handle can also be recycled at any point.</span></span> <span data-ttu-id="2338f-204">Z tego względu, dojście może nagle przestać działać.</span><span class="sxs-lookup"><span data-stu-id="2338f-204">At best, this means the handle might suddenly stop working.</span></span> <span data-ttu-id="2338f-205">W najgorszym przypadku, jeśli dojście lub zasób reprezentowane przez dojście jest uwidocznione dla niezaufanego kodu, może to prowadzić do odzyskania zabezpieczeń w przypadku ponownego użycia lub zwrócenia uchwytu.</span><span class="sxs-lookup"><span data-stu-id="2338f-205">At worst, if the handle or the resource that the handle represents is exposed to untrusted code, this can lead to a recycling security attack on the reused or returned handle.</span></span> <span data-ttu-id="2338f-206">Na przykład niezaufany obiekt wywołujący może wykonywać zapytania dotyczące danych w dojściem i odbierać informacje dla całkowicie niepowiązanego zasobu.</span><span class="sxs-lookup"><span data-stu-id="2338f-206">For example, an untrusted caller can query data on the handle just returned and receive information for an entirely unrelated resource.</span></span> <span data-ttu-id="2338f-207"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> Zobacz <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> i metody, aby uzyskać więcej informacji na temat korzystania z methodsafely. <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-207">See the <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> and the <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> methods for more information about using the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> methodsafely.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-208">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-208">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-209">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-209">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-210">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DangerousRelease">
      <MemberSignature Language="C#" Value="public void DangerousRelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DangerousRelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
      <MemberSignature Language="VB.NET" Value="Public Sub DangerousRelease ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DangerousRelease();" />
      <MemberSignature Language="F#" Value="member this.DangerousRelease : unit -&gt; unit" Usage="safeHandle.DangerousRelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-211">Ręcznie zmniejsza licznik <see cref="T:System.Runtime.InteropServices.SafeHandle" /> odwołań do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2338f-211">Manually decrements the reference counter on a <see cref="T:System.Runtime.InteropServices.SafeHandle" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-212"><xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> Metoda jest odpowiednikiem <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span><span class="sxs-lookup"><span data-stu-id="2338f-212">The <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> method is the counterpart to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span> <span data-ttu-id="2338f-213">Należy zawsze dopasować wywołanie <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> metody z powodzeniem wywołaniem do. <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-213">You should always match a call to the <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> method with a successful call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2338f-214">Ta metoda jest przeznaczona dla zaawansowanych użytkowników i zawsze musi być używana ostrożnie.</span><span class="sxs-lookup"><span data-stu-id="2338f-214">This method is intended for advanced users and must always be used carefully.</span></span> <span data-ttu-id="2338f-215">Aby uniknąć przecieków zasobów obsługi, zawsze Wywołaj tę metodę w ograniczonym regionie wykonywania (CER), w którym przerwanie wątku nie może przerwać przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="2338f-215">To avoid leaking handle resources, always call this method inside a constrained execution region (CER), where a thread abort cannot interrupt processing.</span></span> <span data-ttu-id="2338f-216">W taki sam sposób, w jaki niedopasowane <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> wywołania mogą spowodować przecieki zasobów, <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> niedopasowane wywołania mogą spowodować, że nieprawidłowe stany obsługi staną się widoczne dla innych wątków.</span><span class="sxs-lookup"><span data-stu-id="2338f-216">In the same way that unmatched <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> calls can cause resource leaks, unmatched <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> calls can cause invalid handle states to become visible to other threads.</span></span> <span data-ttu-id="2338f-217">Nie ujawniaj <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> ani <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> nie wywołują niezaufanego kodu.</span><span class="sxs-lookup"><span data-stu-id="2338f-217">Do not expose <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> or <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> calls to untrusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-218">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-218">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-219">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-219">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-220">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-220">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2338f-221">Zwalnia zasoby używane przez <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="2338f-221">Releases the resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="safeHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-222">Zwalnia wszystkie zasoby używane przez <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="2338f-222">Releases all resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-223">Wywołanie metody <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> lub umożliwia zwolnienie zasobów. <xref:System.Runtime.InteropServices.SafeHandle.Close%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-223">Calling the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method allows the resources to be freed.</span></span> <span data-ttu-id="2338f-224">Może to nie nastąpić natychmiast, jeśli inne wątki używają tego samego wystąpienia bezpiecznego dojścia, ale będą wykonywane zaraz po tym, jak to już się nie dzieje.</span><span class="sxs-lookup"><span data-stu-id="2338f-224">This might not happen immediately if other threads are using the same instance of the safe handle, but will happen as soon as that is no longer the case.</span></span> <span data-ttu-id="2338f-225">Chociaż większość klas używających <xref:System.Runtime.InteropServices.SafeHandle> nie musi dostarczać finalizatora, jest to czasami konieczne (na przykład w celu opróżnienia buforów plików lub zapisania danych z powrotem do pamięci).</span><span class="sxs-lookup"><span data-stu-id="2338f-225">Although most classes using <xref:System.Runtime.InteropServices.SafeHandle> do not need to provide a finalizer, this is sometimes necessary (for example, to flush out file buffers or to write some data back into memory).</span></span> <span data-ttu-id="2338f-226">W takim przypadku mogą zapewnić finalizator, który jest gwarantowany do uruchomienia przed <xref:System.Runtime.InteropServices.SafeHandle> uruchomieniem krytycznego finalizatora.</span><span class="sxs-lookup"><span data-stu-id="2338f-226">In this case, they can provide a finalizer that is guaranteed to run before the <xref:System.Runtime.InteropServices.SafeHandle> critical finalizer runs.</span></span>  
  
 <span data-ttu-id="2338f-227">Wywoływanie metody <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> <xref:System.Runtime.InteropServices.SafeHandle> lub po zakończeniu korzystania z obiektu. <xref:System.Runtime.InteropServices.SafeHandle.Close%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-227">Call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method when you are finished using the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="2338f-228"><xref:System.Runtime.InteropServices.SafeHandle.Close%2A> Metoda<xref:System.Runtime.InteropServices.SafeHandle> pozostawia obiekt w stanie niezdatnym do użytku.</span><span class="sxs-lookup"><span data-stu-id="2338f-228">The <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> method leaves the <xref:System.Runtime.InteropServices.SafeHandle> object in an unusable state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2338f-229">Zawsze wywołuj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> metodę lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> przed wydaniem ostatniego odwołania do <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2338f-229">Always call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method before you release your last reference to the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="2338f-230">W przeciwnym razie używane zasoby nie zostaną zwolnione do momentu wywołania <xref:System.Runtime.InteropServices.SafeHandle> <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> metody obiektu przez moduł zbierający elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="2338f-230">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.InteropServices.SafeHandle> object's <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-231">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-231">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-232">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-233">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-233">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="safeHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2338f-234"><see langword="true" />dla normalnej operacji Dispose; <see langword="false" /> w celu sfinalizowania dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-234"><see langword="true" /> for a normal dispose operation; <see langword="false" /> to finalize the handle.</span></span></param>
        <summary><span data-ttu-id="2338f-235">Zwalnia niezarządzane zasoby używane przez klasę, <see cref="T:System.Runtime.InteropServices.SafeHandle" /> określając, czy należy wykonać normalną operację Dispose.</span><span class="sxs-lookup"><span data-stu-id="2338f-235">Releases the unmanaged resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class specifying whether to perform a normal dispose operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-236">Nigdy nie należy jawnie wywołać <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metody `disposing` z parametrem ustawionym na `false`.</span><span class="sxs-lookup"><span data-stu-id="2338f-236">You should never explicitly call the <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method with the `disposing` parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-237">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-237">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-238">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-238">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-239">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-239">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SafeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SafeHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="safeHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-240">Zwalnia wszystkie zasoby skojarzone z dojściem.</span><span class="sxs-lookup"><span data-stu-id="2338f-240">Frees all resources associated with the handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-241">Metoda jest destruktorem <xref:System.Runtime.InteropServices.SafeHandle>klasy. <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-241">The <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method is the destructor for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span> <span data-ttu-id="2338f-242">Kod aplikacji nie powinien wywoływać tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2338f-242">Application code should not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-243">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-243">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-244">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-244">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-245">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-245">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="handle">
      <MemberSignature Language="C#" Value="protected IntPtr handle;" />
      <MemberSignature Language="ILAsm" Value=".field family native int handle" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.SafeHandle.handle" />
      <MemberSignature Language="VB.NET" Value="Protected handle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: IntPtr handle;" />
      <MemberSignature Language="F#" Value="val mutable handle : nativeint" Usage="System.Runtime.InteropServices.SafeHandle.handle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2338f-246">Określa uchwyt, który ma być opakowany.</span><span class="sxs-lookup"><span data-stu-id="2338f-246">Specifies the handle to be wrapped.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-247">Nie ujawniaj dojścia publicznie (czyli poza klasą pochodną).</span><span class="sxs-lookup"><span data-stu-id="2338f-247">Do not expose the handle publicly (that is, outside of the derived class).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Runtime.InteropServices.SafeHandle.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2338f-248">Pobiera wartość wskazującą, czy dojście jest zamknięte.</span><span class="sxs-lookup"><span data-stu-id="2338f-248">Gets a value indicating whether the handle is closed.</span></span></summary>
        <value><span data-ttu-id="2338f-249"><see langword="true" />Jeśli dojście jest zamknięte; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2338f-249"><see langword="true" /> if the handle is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-250">Metoda zwraca wartość wskazującą, <xref:System.Runtime.InteropServices.SafeHandle> czy uchwyt obiektu nie jest już skojarzony z zasobem macierzystym. <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-250">The <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> method returns a value indicating whether the <xref:System.Runtime.InteropServices.SafeHandle> object's handle is no longer associated with a native resource.</span></span> <span data-ttu-id="2338f-251">Różni się to od definicji <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwości, która oblicza, czy dany uchwyt jest zawsze uznawany za nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2338f-251">This differs from the definition of the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property, which computes whether a given handle is always considered invalid.</span></span> <span data-ttu-id="2338f-252"><xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> Metoda`true` zwraca wartość w następujących przypadkach:</span><span class="sxs-lookup"><span data-stu-id="2338f-252">The <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> method returns a `true` value in the following cases:</span></span>  
  
-   <span data-ttu-id="2338f-253"><xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> Metoda została wywołana.</span><span class="sxs-lookup"><span data-stu-id="2338f-253">The <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> method was called.</span></span>  
  
-   <span data-ttu-id="2338f-254">Metoda lub <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> Metoda została wywołana i nie ma odwołań do <xref:System.Runtime.InteropServices.SafeHandle> obiektu w innych wątkach. <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-254">The <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method or <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> method was called and there are no references to the <xref:System.Runtime.InteropServices.SafeHandle> object on other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-255">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-255">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-256">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-256">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-257">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-257">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public abstract bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="System.Runtime.InteropServices.SafeHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2338f-258">Gdy jest zastępowany w klasie pochodnej, pobiera wartość wskazującą, czy wartość dojścia jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="2338f-258">When overridden in a derived class, gets a value indicating whether the handle value is invalid.</span></span></summary>
        <value><span data-ttu-id="2338f-259"><see langword="true" />Jeśli wartość dojścia jest nieprawidłowa; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2338f-259"><see langword="true" /> if the handle value is invalid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-260">Klasy pochodne muszą implementować <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwość, aby środowisko uruchomieniowe języka wspólnego mogły ustalić, czy wymagana jest finalizacja krytyczna.</span><span class="sxs-lookup"><span data-stu-id="2338f-260">Derived classes must implement the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property so that the common language runtime can determine whether critical finalization is required.</span></span> <span data-ttu-id="2338f-261">Klasy pochodne muszą dostarczać implementację, która odpowiada typowi obsługiwanego uchwytu (0 lub-1 jest nieprawidłowa).</span><span class="sxs-lookup"><span data-stu-id="2338f-261">Derived classes must provide an implementation that suits the general type of handle they support (0 or -1 is invalid).</span></span> <span data-ttu-id="2338f-262">Klasy te mogą następnie być bardziej pochodne dla konkretnych bezpiecznych typów uchwytów.</span><span class="sxs-lookup"><span data-stu-id="2338f-262">These classes can then be further derived for specific safe handle types.</span></span>  
  
 <span data-ttu-id="2338f-263">W przeciwieństwie <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> do właściwości, która raportuje <xref:System.Runtime.InteropServices.SafeHandle> , czy obiekt zakończył korzystanie <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> z bazowego dojścia, właściwość oblicza, czy dana wartość dojścia jest zawsze uznawana za nieprawidłową.</span><span class="sxs-lookup"><span data-stu-id="2338f-263">Unlike the <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> property, which reports whether the <xref:System.Runtime.InteropServices.SafeHandle> object has finished using the underlying handle, the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property calculates whether the given handle value is always considered invalid.</span></span> <span data-ttu-id="2338f-264">W związku z <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> tym właściwość zawsze zwraca tę samą wartość dla każdej wartości dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-264">Therefore, the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property always returns the same value for any one handle value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2338f-265">Poniższy przykład sprawdza, czy plik został pomyślnie otwarty.</span><span class="sxs-lookup"><span data-stu-id="2338f-265">The following example checks if a file was opened successfully.</span></span> <span data-ttu-id="2338f-266">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Runtime.InteropServices.SafeHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="2338f-266">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span>  
  
 [!code-csharp[SafeHandle#2](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-267">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-267">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-268">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-268">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-269">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected abstract bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandle : unit -&gt; bool" Usage="safeHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-270">Gdy jest zastępowany w klasie pochodnej, wykonuje kod wymagany do zwolnienia dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-270">When overridden in a derived class, executes the code required to free the handle.</span></span></summary>
        <returns><span data-ttu-id="2338f-271"><see langword="true" />Jeśli dojście zostało pomyślnie wydane; w przeciwnym razie w przypadku błędu <see langword="false" />krytycznego.</span><span class="sxs-lookup"><span data-stu-id="2338f-271"><see langword="true" /> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <see langword="false" />.</span></span> <span data-ttu-id="2338f-272">W takim przypadku generuje asystenta zarządzanego debugowania <see href="https://docs.microsoft.com/dotnet/framework/debug-trace-profile/releasehandlefailed-mda">releaseHandleFailed</see> .</span><span class="sxs-lookup"><span data-stu-id="2338f-272">In this case, it generates a <see href="https://docs.microsoft.com/dotnet/framework/debug-trace-profile/releasehandlefailed-mda">releaseHandleFailed</see> Managed Debugging Assistant.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-273">Metoda ma być wywoływana tylko raz i tylko wtedy, gdy uchwyt jest prawidłowy jako zdefiniowany <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> przez właściwość. <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A></span><span class="sxs-lookup"><span data-stu-id="2338f-273">The <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method is guaranteed to be called only once and only if the handle is valid as defined by the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property.</span></span> <span data-ttu-id="2338f-274">Zaimplementuj tę metodę w <xref:System.Runtime.InteropServices.SafeHandle> klasach pochodnych, aby wykonać dowolny kod, który jest wymagany do zwolnienia dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-274">Implement this method in your <xref:System.Runtime.InteropServices.SafeHandle> derived classes to execute any code that is required to free the handle.</span></span> <span data-ttu-id="2338f-275">Ponieważ jedną z funkcji programu <xref:System.Runtime.InteropServices.SafeHandle> jest zagwarantowanie zapobiegania wyciekom zasobów, kod w <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> implementacji nie może nigdy kończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="2338f-275">Because one of the functions of <xref:System.Runtime.InteropServices.SafeHandle> is to guarantee prevention of resource leaks, the code in your implementation of <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> must never fail.</span></span> <span data-ttu-id="2338f-276">Moduł zbierający elementy <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> bezużyteczne wywołuje się po wykonaniu normalnych finalizatorów dla obiektów, które były zbierane w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="2338f-276">The garbage collector calls <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> after normal finalizers have been run for objects that were garbage collected at the same time.</span></span> <span data-ttu-id="2338f-277">Moduł zbierający elementy bezużyteczne gwarantuje zasoby do wywołania tej metody i że metoda nie zostanie przerwana, gdy jest w toku.</span><span class="sxs-lookup"><span data-stu-id="2338f-277">The garbage collector guarantees the resources to invoke this method and that the method will not be interrupted while it is in progress.</span></span> <span data-ttu-id="2338f-278">Ta metoda zostanie przygotowana jako region ograniczonego wykonania (CER) w czasie konstruowania wystąpienia (wraz ze wszystkimi metodami w grafie niezależnym o statycznym wywoływać).</span><span class="sxs-lookup"><span data-stu-id="2338f-278">This method will be prepared as a constrained execution region (CER) at instance construction time (along with all the methods in its statically determinable call graph).</span></span> <span data-ttu-id="2338f-279">Chociaż uniemożliwia to przerwanie przerywania wątku, nadal należy zachować ostrożność, aby nie wprowadzać żadnych ścieżek błędów w <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> zastąpionej metodzie.</span><span class="sxs-lookup"><span data-stu-id="2338f-279">Although this prevents thread abort interrupts, you must still be careful not to introduce any fault paths in your overridden <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method.</span></span> <span data-ttu-id="2338f-280">W szczególności Zastosuj <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> atrybut do dowolnych metod wywoływanych przez <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="2338f-280">In particular, apply the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute to any methods you call from <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A>.</span></span> <span data-ttu-id="2338f-281">W większości przypadków ten kod powinien:</span><span class="sxs-lookup"><span data-stu-id="2338f-281">In most cases this code should be:</span></span>  
  
 `ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)`  
  
 <span data-ttu-id="2338f-282">Ponadto w przypadku prostego oczyszczania (na przykład wywołania interfejsu API `CloseHandle` systemu Windows w dojściu do pliku) można sprawdzić wartość zwracaną dla wywołania wywołania pojedynczej platformy.</span><span class="sxs-lookup"><span data-stu-id="2338f-282">Additionally, for simple cleanup (for example, calling the Windows API `CloseHandle` on a file handle) you can check the return value for the single platform invoke call.</span></span> <span data-ttu-id="2338f-283">W przypadku złożonego oczyszczania może istnieć wiele logiki programu i wiele wywołań metod, a niektóre z nich mogą zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="2338f-283">For complex cleanup, you may have a lot of program logic and many method calls, some of which might fail.</span></span> <span data-ttu-id="2338f-284">Musisz się upewnić, że logika programu ma kod rezerwowy dla każdego z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="2338f-284">You must ensure that your program logic has fallback code for each of those cases.</span></span>  
  
 <span data-ttu-id="2338f-285">Jeśli <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> zwraca`false` z jakiegokolwiek powodu, generuje asystenta zarządzanego debugowania [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) .</span><span class="sxs-lookup"><span data-stu-id="2338f-285">If <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> returns `false` for any reason, it generates a [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) Managed Debugging Assistant.</span></span>  <span data-ttu-id="2338f-286">Pozwala to wykryć przypadki, w których próba zwolnienia zasobów nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="2338f-286">This helps you detect cases where your attempt to release resources fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2338f-287">Poniższy przykład kodu zwalnia dojście i jest częścią większego przykładu dostarczonego dla <xref:System.Runtime.InteropServices.SafeHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="2338f-287">The following code example releases the handle and is part of a larger example provided for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span>  
  
 [!code-csharp[SafeHandle#3](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-288">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-288">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-289">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-290">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/76994ee6-9fa9-4059-b813-26578d24427c"><span data-ttu-id="2338f-291">Diagnozowanie błędów czasu wykonywania za pomocą asystentów zarządzanego debugowania</span><span class="sxs-lookup"><span data-stu-id="2338f-291">Diagnosing Run-time Errors with Managed Debugging Assistants</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/44cd98ba-95e5-40a1-874d-e8e163612c51"><span data-ttu-id="2338f-292">ReleaseHandleFailed</span><span class="sxs-lookup"><span data-stu-id="2338f-292">ReleaseHandleFailed</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetHandle">
      <MemberSignature Language="C#" Value="protected void SetHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.SetHandle : nativeint -&gt; unit" Usage="safeHandle.SetHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="2338f-293">Wstępnie istniejący uchwyt do użycia.</span><span class="sxs-lookup"><span data-stu-id="2338f-293">The pre-existing handle to use.</span></span></param>
        <summary><span data-ttu-id="2338f-294">Ustawia dojście do określonego istniejącego już dojścia.</span><span class="sxs-lookup"><span data-stu-id="2338f-294">Sets the handle to the specified pre-existing handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-295"><xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> Użyj metody tylko wtedy, gdy musisz obsługiwać wcześniej istniejące dojście (na przykład, jeśli dojście zostanie zwrócone w strukturze), ponieważ infrastruktura międzyoperacyjna .NET Framework com nie obsługuje organizowania dojść wyjściowych w strukturze.</span><span class="sxs-lookup"><span data-stu-id="2338f-295">Use the <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> method only if you need to support a pre-existing handle (for example, if the handle is returned in a structure) because the .NET Framework COM interop infrastructure does not support marshaling output handles in a structure.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-296">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-296">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-297">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-297">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-298">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-298">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHandleAsInvalid">
      <MemberSignature Language="C#" Value="public void SetHandleAsInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHandleAsInvalid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHandleAsInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHandleAsInvalid();" />
      <MemberSignature Language="F#" Value="member this.SetHandleAsInvalid : unit -&gt; unit" Usage="safeHandle.SetHandleAsInvalid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-1.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2338f-299">Oznacza dojście, które nie jest już używane.</span><span class="sxs-lookup"><span data-stu-id="2338f-299">Marks a handle as no longer used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2338f-300">Wywołaj <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> metodę tylko wtedy, gdy wiesz, że uchwyt nie odwołuje się już do zasobu.</span><span class="sxs-lookup"><span data-stu-id="2338f-300">Call the <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> method only when you know that your handle no longer references a resource.</span></span> <span data-ttu-id="2338f-301">Wykonanie tej czynności nie powoduje zmiany wartości <xref:System.Runtime.InteropServices.SafeHandle.handle> pola; oznacza to jedynie, że uchwyt jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="2338f-301">Doing so does not change the value of the <xref:System.Runtime.InteropServices.SafeHandle.handle> field; it only marks the handle as closed.</span></span> <span data-ttu-id="2338f-302">Dojście może następnie zawierać potencjalnie nieaktualną wartość.</span><span class="sxs-lookup"><span data-stu-id="2338f-302">The handle might then contain a potentially stale value.</span></span> <span data-ttu-id="2338f-303">Efekt tego wywołania polega na tym, że nie podjęto próby zwolnienia zasobów.</span><span class="sxs-lookup"><span data-stu-id="2338f-303">The effect of this call is that no attempt is made to free the resources.</span></span>  
  
 <span data-ttu-id="2338f-304">Podobnie jak w <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> przypadku metody, <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> należy używać tylko wtedy, gdy musisz obsługiwać wcześniej istniejące dojście.</span><span class="sxs-lookup"><span data-stu-id="2338f-304">As with the <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> method, use <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> only if you need to support a pre-existing handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2338f-305">w celu uzyskania uprawnień do wywoływania kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="2338f-305">for permission to call unmanaged code.</span></span> <span data-ttu-id="2338f-306">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="2338f-306">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="2338f-307">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2338f-307">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>