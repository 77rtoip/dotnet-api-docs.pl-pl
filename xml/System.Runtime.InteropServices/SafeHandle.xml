<Type Name="SafeHandle" FullName="System.Runtime.InteropServices.SafeHandle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52be7711ddbbcd95a2f906f5949976e7af850878" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48646590" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SafeHandle : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract beforefieldinit SafeHandle extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeHandle&#xA;Inherits CriticalFinalizerObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeHandle abstract : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="F#" Value="type SafeHandle = class&#xA;    inherit CriticalFinalizerObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Handles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netcore-2.0;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ce309-101">Reprezentuje klasę otoki dla systemu operacyjnego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-101">Represents a wrapper class for operating system handles.</span>
      </span>
      <span data-ttu-id="ce309-102">Ta klasa musi być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-103"><xref:System.Runtime.InteropServices.SafeHandle> Klasa udostępnia krytyczna finalizacja zasobów uchwyt, zapobieganie uchwyty z są odzyskiwane przedwcześnie przez wyrzucanie elementów bezużytecznych i odtwarzaniu przez Windows, aby odwoływać się do niezamierzonych niezarządzane obiekty.</span><span class="sxs-lookup"><span data-stu-id="ce309-103">The <xref:System.Runtime.InteropServices.SafeHandle> class provides critical finalization of handle resources, preventing handles from being reclaimed prematurely by garbage collection and from being recycled by Windows to reference unintended unmanaged objects.</span></span>  
  
 <span data-ttu-id="ce309-104">Ten temat zawiera następujące sekcje:</span><span class="sxs-lookup"><span data-stu-id="ce309-104">This topic includes the following sections:</span></span>  
  
 <span data-ttu-id="ce309-105">[Dlaczego SafeHandle?](#Why) </span><span class="sxs-lookup"><span data-stu-id="ce309-105">[Why SafeHandle?](#Why) </span></span>  
 <span data-ttu-id="ce309-106">[Jak działa SafeHandle](#Does) </span><span class="sxs-lookup"><span data-stu-id="ce309-106">[What SafeHandle does](#Does) </span></span>  
 [<span data-ttu-id="ce309-107">Klasy pochodne klasy SafeHandle</span><span class="sxs-lookup"><span data-stu-id="ce309-107">Classes derived from SafeHandle</span></span>](#Derived)  
  
<a name="Why"></a>   
## <a name="why-safehandle"></a><span data-ttu-id="ce309-108">Dlaczego SafeHandle?</span><span class="sxs-lookup"><span data-stu-id="ce309-108">Why SafeHandle?</span></span>  
 <span data-ttu-id="ce309-109">Przed .NET Framework w wersji 2.0, wszystkie system operacyjny obsługuje tylko może być hermetyzowane w <xref:System.IntPtr> zarządzanych otoka obiektu.</span><span class="sxs-lookup"><span data-stu-id="ce309-109">Before the .NET Framework version 2.0, all operating system handles could only be encapsulated in the <xref:System.IntPtr> managed wrapper object.</span></span> <span data-ttu-id="ce309-110">Gdy jest to wygodny sposób na potrzeby współdziałania z kodem natywnym, obsługuje można wyciek przez wyjątków asynchronicznych, takich jak wątek nieoczekiwanie zostanie przerwany lub przepełnienie stosu.</span><span class="sxs-lookup"><span data-stu-id="ce309-110">While this was a convenient way to interoperate with native code, handles could be leaked by asynchronous exceptions, such as a thread aborting unexpectedly or a stack overflow.</span></span> <span data-ttu-id="ce309-111">Te wyjątki asynchroniczne są przeszkody Oczyszczanie zasobów systemu operacyjnego i może wystąpić praktycznie dowolnym miejscu w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ce309-111">These asynchronous exceptions are an obstacle to cleaning up operating system resources, and they can occur almost anywhere in your app.</span></span>  
  
 <span data-ttu-id="ce309-112">Mimo że zastąpienia <xref:System.Object.Finalize%2A?displayProperty=nameWithType> metoda umożliwia oczyszczania niezarządzanych zasobów, gdy obiekt jest bezużyteczne w pewnych okolicznościach, które można sfinalizować obiektów można odzyskać przez wyrzucanie elementów bezużytecznych podczas wykonywania metody za pomocą platformy wywołania wywołanie.</span><span class="sxs-lookup"><span data-stu-id="ce309-112">Although overrides to the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method allow cleanup of unmanaged resources when an object is being garbage collected, in some circumstances, finalizable objects can be reclaimed by garbage collection while executing a method within a platform invoke call.</span></span> <span data-ttu-id="ce309-113">Jeśli finalizator powoduje zwolnienie dojście przekazane do tej platformy wywołaniem, może prowadzić do obsługi uszkodzeń.</span><span class="sxs-lookup"><span data-stu-id="ce309-113">If a finalizer frees the handle passed to that platform invoke call, it could lead to handle corruption.</span></span> <span data-ttu-id="ce309-114">Ponadto można odzyskać uchwytu, gdy metoda jest zablokowane podczas jej platformy wywołania wywołania, takie jak podczas odczytywania pliku.</span><span class="sxs-lookup"><span data-stu-id="ce309-114">The handle could also be reclaimed while your method is blocked during a platform invoke call, such as while reading a file.</span></span>  
  
 <span data-ttu-id="ce309-115">Bardziej krytycznie ponieważ Windows agresywnie jest odtwarzany uchwyty, uchwyt może poddana recyklingowi, a wskaż inny zasób, który może zawierać dane poufne.</span><span class="sxs-lookup"><span data-stu-id="ce309-115">More critically, because Windows aggressively recycles handles, a handle could be recycled and point to another resource that might contain sensitive data.</span></span> <span data-ttu-id="ce309-116">To jest znany jako atak odtwarzanie i może potencjalnie uszkodzić dane i stanowić zagrożenie dla bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="ce309-116">This is known as a recycle attack and can potentially corrupt data and be a security threat.</span></span>  
  
<a name="Does"></a>   
## <a name="what-safehandle-does"></a><span data-ttu-id="ce309-117">Jak działa SafeHandle</span><span class="sxs-lookup"><span data-stu-id="ce309-117">What SafeHandle does</span></span>  
 <span data-ttu-id="ce309-118"><xref:System.Runtime.InteropServices.SafeHandle> Klasa upraszcza kilka te kwestie okresu istnienia obiektów i jest zintegrowana z platformą wywołania, tak aby nie wyciek zasobów systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="ce309-118">The <xref:System.Runtime.InteropServices.SafeHandle> class simplifies several of these object lifetime issues, and is integrated with platform invoke so that operating system resources are not leaked.</span></span> <span data-ttu-id="ce309-119"><xref:System.Runtime.InteropServices.SafeHandle> Klasy jest rozpoznawana jako kwestie istnienia obiektu i zwalniają dojścia bez zakłóceń.</span><span class="sxs-lookup"><span data-stu-id="ce309-119">The <xref:System.Runtime.InteropServices.SafeHandle> class resolves object lifetime issues by assigning and releasing handles without interruption.</span></span> <span data-ttu-id="ce309-120">Zawiera krytyczny finalizator, który zapewnia, że uchwyt jest zamknięty, a następnie gwarantuje działanie w trakcie nieoczekiwany <xref:System.AppDomain> zwalnia, nawet w przypadkach, gdy wywołanie platformy wywołanie zakłada, że w stanie uszkodzenia.</span><span class="sxs-lookup"><span data-stu-id="ce309-120">It contains a critical finalizer that ensures that the handle is closed and is guaranteed to run during unexpected <xref:System.AppDomain> unloads, even in cases when the platform invoke call is assumed to be in a corrupted state.</span></span>  
  
 <span data-ttu-id="ce309-121">Ponieważ <xref:System.Runtime.InteropServices.SafeHandle> dziedziczy <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, wszystkie niekrytyczne finalizatory są wywoływane przed każdą krytyczne finalizatory.</span><span class="sxs-lookup"><span data-stu-id="ce309-121">Because <xref:System.Runtime.InteropServices.SafeHandle> inherits from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, all the noncritical finalizers are called before any of the critical finalizers.</span></span> <span data-ttu-id="ce309-122">Finalizatory są nazywane dla obiektów, które nie są już na żywo podczas przebiegu tej samej kolekcji wyrzucania elementów.</span><span class="sxs-lookup"><span data-stu-id="ce309-122">The finalizers are called on objects that are no longer live during the same garbage collection pass.</span></span> <span data-ttu-id="ce309-123">Na przykład <xref:System.IO.FileStream> obiektu można uruchomić normalne finalizator opróżnić się istniejących buforowane dane, bez ryzyka stałego skanowania dojścia jest ujawnione lub poddawane recyklingowi.</span><span class="sxs-lookup"><span data-stu-id="ce309-123">For example, a <xref:System.IO.FileStream> object can run a normal finalizer to flush out existing buffered data without the risk of the handle being leaked or recycled.</span></span> <span data-ttu-id="ce309-124">To bardzo słabe porządkowanie między finalizatory krytyczne i niekrytyczne nie jest przeznaczona do użytku ogólnego.</span><span class="sxs-lookup"><span data-stu-id="ce309-124">This very weak ordering between critical and noncritical finalizers is not intended for general use.</span></span> <span data-ttu-id="ce309-125">Istnieje przede wszystkim ułatwiają migrację istniejących bibliotek, umożliwiając tych bibliotek do użycia <xref:System.Runtime.InteropServices.SafeHandle> bez zmiany ich semantyki.</span><span class="sxs-lookup"><span data-stu-id="ce309-125">It exists primarily to assist in the migration of existing libraries by allowing those libraries to use <xref:System.Runtime.InteropServices.SafeHandle> without altering their semantics.</span></span> <span data-ttu-id="ce309-126">Ponadto krytyczne finalizatory i nic wywoływanych przez nią, takie jak <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle?displayProperty=nameWithType> metody, musi znajdować się w regionie ograniczonego wykonania.</span><span class="sxs-lookup"><span data-stu-id="ce309-126">Additionally, the critical finalizer and anything it calls, such as the <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle?displayProperty=nameWithType> method, must be in a constrained execution region.</span></span> <span data-ttu-id="ce309-127">To nakłada ograniczenia dotyczące kodu, które mogą być zapisywane w obrębie wykresu wywołań finalizatora.</span><span class="sxs-lookup"><span data-stu-id="ce309-127">This imposes constraints on what code can be written within the finalizer's call graph.</span></span>  
  
 <span data-ttu-id="ce309-128">Wywołanie operacji platformy automatycznie zwiększyć licznik odwołań uchwytów zamknięte przez <xref:System.Runtime.InteropServices.SafeHandle> i dekrementacyjne je po zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="ce309-128">Platform invoke operations automatically increment the reference count of handles encapsulated by a <xref:System.Runtime.InteropServices.SafeHandle> and decrement them upon completion.</span></span> <span data-ttu-id="ce309-129">Daje to gwarancję, że dojście będą nie odtwarzania lub został nieoczekiwanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="ce309-129">This ensures that the handle will not be recycled or closed unexpectedly.</span></span>  
  
 <span data-ttu-id="ce309-130">Można określić własność podstawowego dojścia przy konstruowaniu <xref:System.Runtime.InteropServices.SafeHandle> obiekty podając wartości do `ownsHandle` argument <xref:System.Runtime.InteropServices.SafeHandle> konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="ce309-130">You can specify ownership of the underlying handle when constructing <xref:System.Runtime.InteropServices.SafeHandle> objects by supplying a value to the `ownsHandle` argument in the <xref:System.Runtime.InteropServices.SafeHandle> class constructor.</span></span> <span data-ttu-id="ce309-131">W ten sposób kontroluje czy <xref:System.Runtime.InteropServices.SafeHandle> obiektu spowoduje zwolnienie uchwytu po obiekt został usunięty.</span><span class="sxs-lookup"><span data-stu-id="ce309-131">This controls whether the <xref:System.Runtime.InteropServices.SafeHandle> object will release the handle after the object has been disposed.</span></span>  <span data-ttu-id="ce309-132">Jest to przydatne, obsługuje istnienia szczególne wymagania lub używania uchwyt, którego okres istnienia jest kontrolowany przez kogoś innego.</span><span class="sxs-lookup"><span data-stu-id="ce309-132">This is useful for handles with peculiar lifetime requirements or for consuming a handle whose lifetime is controlled by someone else.</span></span>  
  
<a name="Derived"></a>   
## <a name="classes-derived-from-safehandle"></a><span data-ttu-id="ce309-133">Klasy pochodne klasy SafeHandle</span><span class="sxs-lookup"><span data-stu-id="ce309-133">Classes derived from SafeHandle</span></span>  
 <span data-ttu-id="ce309-134"><xref:System.Runtime.InteropServices.SafeHandle> jest klasą abstrakcyjna otoki dla systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="ce309-134"><xref:System.Runtime.InteropServices.SafeHandle> is an abstract wrapper class for operating system handles.</span></span> <span data-ttu-id="ce309-135">Wyprowadzanie z tej klasy jest trudne.</span><span class="sxs-lookup"><span data-stu-id="ce309-135">Deriving from this class is difficult.</span></span> <span data-ttu-id="ce309-136">Zamiast tego należy użyć klas pochodnych w <xref:Microsoft.Win32.SafeHandles> przestrzeni nazw, które zapewniają bezpieczne dojścia dla następujących:</span><span class="sxs-lookup"><span data-stu-id="ce309-136">Instead, use the derived classes in the <xref:Microsoft.Win32.SafeHandles> namespace that provide safe handles for the following:</span></span>  
  
-   <span data-ttu-id="ce309-137">Pliki ( <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-137">Files (the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-138">Pliki mapowane do pamięci ( <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-138">Memory mapped files (the <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-139">Potoki ( <xref:Microsoft.Win32.SafeHandles.SafePipeHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-139">Pipes (the <xref:Microsoft.Win32.SafeHandles.SafePipeHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-140">Widoki pamięci ( <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-140">Memory views (the <xref:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-141">Konstrukcje kryptografii ( <xref:Microsoft.Win32.SafeHandles.SafeNCryptHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>, i <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-141">Cryptography constructs (the <xref:Microsoft.Win32.SafeHandles.SafeNCryptHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle>, <xref:Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle>, and <xref:Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle> classes).</span></span>  
  
-   <span data-ttu-id="ce309-142">Procesy ( <xref:Microsoft.Win32.SafeHandles.SafeProcessHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-142">Processes (the <xref:Microsoft.Win32.SafeHandles.SafeProcessHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-143">Klucze rejestru ( <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-143">Registry keys (the <xref:Microsoft.Win32.SafeHandles.SafeRegistryHandle> class).</span></span>  
  
-   <span data-ttu-id="ce309-144">Uchwyty oczekiwania ( <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> klasy).</span><span class="sxs-lookup"><span data-stu-id="ce309-144">Wait handles (the <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> class).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce309-145">Poniższy przykład kodu tworzy niestandardowe bezpiecznego dojścia na uchwyt pliku systemu operacyjnego, wynikające z <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</span><span class="sxs-lookup"><span data-stu-id="ce309-145">The following code example creates a custom safe handle for an operating system file handle, deriving from <xref:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid>.</span></span> <span data-ttu-id="ce309-146">Odczytuje bajtów z pliku i wyświetla ich wartości szesnastkowych.</span><span class="sxs-lookup"><span data-stu-id="ce309-146">It reads bytes from a file and displays their hexadecimal values.</span></span> <span data-ttu-id="ce309-147">Zawiera również testowanie kontroler pod kątem błędów, dzięki któremu wątku przerwać, ale wartość dojścia jest zwalniana.</span><span class="sxs-lookup"><span data-stu-id="ce309-147">It also contains a fault testing harness that causes the thread to abort, but the handle value is freed.</span></span>  <span data-ttu-id="ce309-148">Korzystając z <xref:System.IntPtr> do reprezentowania uchwyty, od czasu do czasu przeciek uchwytu ze względu na przerwanie asynchronicznego wątku.</span><span class="sxs-lookup"><span data-stu-id="ce309-148">When using an <xref:System.IntPtr> to represent handles, the handle is occasionally leaked due to the asynchronous thread abort.</span></span>  
  
 <span data-ttu-id="ce309-149">Konieczne będzie plik tekstowy, w tym samym folderze co skompilowanej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ce309-149">You will need a text file in the same folder as the compiled application.</span></span> <span data-ttu-id="ce309-150">Przy założeniu, że nazwy aplikacji "HexViewer" jest użycie wiersza polecenia:</span><span class="sxs-lookup"><span data-stu-id="ce309-150">Assuming that you name the application "HexViewer", the command line usage is:</span></span>  
  
 `HexViewer <filename> -Fault`  
  
 <span data-ttu-id="ce309-151">Opcjonalnie można określić `-Fault` próbuje celowo przecieku uchwytu przerywanie wątków niektóre okna.</span><span class="sxs-lookup"><span data-stu-id="ce309-151">Optionally specify `-Fault` to intentionally attempt to leak the handle by aborting the thread in a certain window.</span></span> <span data-ttu-id="ce309-152">Użyj narzędzia Windows Perfmon.exe do monitorowania liczby uchwytu podczas wstrzykiwania błędów.</span><span class="sxs-lookup"><span data-stu-id="ce309-152">Use the Windows Perfmon.exe tool to monitor handle counts while injecting faults.</span></span>  
  
 [!code-csharp[SafeHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="ce309-153">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-153">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="ce309-154">Ten element członkowski nie może być dziedziczona przez częściowo zaufany kod.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-154">This member cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <permission cref="T:System.Security.SecurityCriticalAttribute">
      <span data-ttu-id="ce309-155">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-155">requires full trust for the immediate caller.</span>
      </span>
      <span data-ttu-id="ce309-156">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ce309-156">This member cannot be used by partially trusted or transparent code.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ce309-157">Aby utworzyć klasę pochodną <see cref="T:System.Runtime.InteropServices.SafeHandle" />, trzeba wiedzieć, jak utworzyć i bezpłatne dojście systemu operacyjnego.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ce309-157">To create a class derived from <see cref="T:System.Runtime.InteropServices.SafeHandle" />, you must know how to create and free an operating system handle.</span>
        </span>
        <span data-ttu-id="ce309-158">Ten proces różni się dla dojście do różnych typów, ponieważ jest używany przez niektóre [funkcja CloseHandle](https://msdn.microsoft.com/library/windows/desktop/ms724211.aspx) funkcji, a w innych stosuje bardziej szczegółowe funkcje takie jak [UnmapViewOfFile](https://msdn.microsoft.com/library/windows/desktop/aa366882.aspx) lub [FindClose](https://msdn.microsoft.com/library/windows/desktop/aa364413.aspx).</span>
        <span class="sxs-lookup">
          <span data-stu-id="ce309-158">This process is different for different handle types because some use the [CloseHandle](https://msdn.microsoft.com/library/windows/desktop/ms724211.aspx) function, while others use more specific functions such as [UnmapViewOfFile](https://msdn.microsoft.com/library/windows/desktop/aa366882.aspx) or [FindClose](https://msdn.microsoft.com/library/windows/desktop/aa364413.aspx).</span>
        </span>
        <span data-ttu-id="ce309-159">Z tego powodu należy utworzyć klasę pochodną z <see cref="T:System.Runtime.InteropServices.SafeHandle" /> dla każdego typu dojście systemu operacyjnego, który ma być zawijany w bezpiecznym dojściu.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ce309-159">For this reason, you must create a derived class of <see cref="T:System.Runtime.InteropServices.SafeHandle" /> for each operating system handle type that you want to wrap in a safe handle.</span>
        </span>
        <span data-ttu-id="ce309-160">Przy dziedziczeniu z <see cref="T:System.Runtime.InteropServices.SafeHandle" />, konieczne jest przesłonięcie następujących składowych: <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> i <see cref="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ce309-160">When you inherit from <see cref="T:System.Runtime.InteropServices.SafeHandle" />, you must override the following members: <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> and <see cref="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />.</span>
        </span>
        <span data-ttu-id="ce309-161">Należy również podać domyślnego konstruktora, który wywołuje konstruktora podstawowego o wartości, które reprezentują wartości nieprawidłowego dojścia i <see cref="T:System.Boolean" /> wartość wskazującą, czy uchwyt macierzysty jest własnością <see cref="T:System.Runtime.InteropServices.SafeHandle" /> i w związku z tym powinna być zwolniona po które <see cref="T:System.Runtime.InteropServices.SafeHandle" /> został usunięty.</span>
        <span class="sxs-lookup">
          <span data-stu-id="ce309-161">You should also provide a default constructor that calls the base constructor with a value that represent an invalid handle value, and a <see cref="T:System.Boolean" /> value indicating whether the native handle is owned by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> and consequently should be freed when that <see cref="T:System.Runtime.InteropServices.SafeHandle" /> has been disposed.</span>
        </span>
      </para>
    </block>
    <altmember cref="N:Microsoft.Win32.SafeHandles" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandle (IntPtr invalidHandleValue, bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int invalidHandleValue, bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.#ctor(System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (invalidHandleValue As IntPtr, ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandle(IntPtr invalidHandleValue, bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SafeHandle : nativeint * bool -&gt; System.Runtime.InteropServices.SafeHandle" Usage="new System.Runtime.InteropServices.SafeHandle (invalidHandleValue, ownsHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="invalidHandleValue" Type="System.IntPtr" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidHandleValue">
          <span data-ttu-id="ce309-162">Wartość nieprawidłowego dojścia (zazwyczaj 0 lub -1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-162">The value of an invalid handle (usually 0 or -1).</span>
          </span>
          <span data-ttu-id="ce309-163">Implementacja <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> powinna zwrócić <see langword="true" /> dla tej wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-163">Your implementation of <see cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" /> should return <see langword="true" /> for this value.</span>
          </span>
        </param>
        <param name="ownsHandle">
          <span data-ttu-id="ce309-164">
            <see langword="true" /> Aby umożliwić niezawodnie <see cref="T:System.Runtime.InteropServices.SafeHandle" /> zwolnienie uchwytu podczas fazy finalizacji; w przeciwnym razie <see langword="false" /> (niezalecane).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-164">
              <see langword="true" /> to reliably let <see cref="T:System.Runtime.InteropServices.SafeHandle" /> release the handle during the finalization phase; otherwise, <see langword="false" /> (not recommended).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce309-165">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasy z wartością określoną nieprawidłowego dojścia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-165">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class with the specified invalid handle value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-166">Jeśli `ownsHandle` parametr jest `false`, <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> nigdy nie jest wywoływana; w związku z tym, nie zaleca się używać wartości tego parametru, jak Twój kod wycieku zasobów.</span><span class="sxs-lookup"><span data-stu-id="ce309-166">If the `ownsHandle` parameter is `false`, <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> is never called; thus, it is not recommended to use this parameter value as your code may leak resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="ce309-167">Klasa pochodna znajduje się w zestawie bez uprawnienia dostępu do kodu niezarządzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-167">The derived class resides in an assembly without unmanaged code access permission.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="ce309-168">aby uzyskać pełne zaufanie dla obiektów dziedziczących.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-168">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="ce309-169">Ten element członkowski nie może być dziedziczona przez częściowo zaufany kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-169">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ce309-170">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-170">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ce309-171">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-171">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="safeHandle.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-172">Oznacza dojście do zwalniania i zwalnianiu zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-172">Marks the handle for releasing and freeing resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-173">Wywoływanie <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metoda umożliwia zasoby, które ma zostać zwolniony.</span><span class="sxs-lookup"><span data-stu-id="ce309-173">Calling the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method allows the resources to be freed.</span></span> <span data-ttu-id="ce309-174">Nie może być zmienione od razu, inne wątki korzystania z tego samego obiektu bezpiecznego dojścia, ale będzie miało miejsce, gdy tylko nie są już tak jest.</span><span class="sxs-lookup"><span data-stu-id="ce309-174">This might not happen immediately if other threads are using the same safe handle object, but will happen as soon as that is no longer the case.</span></span> <span data-ttu-id="ce309-175">Mimo że większość klas, które używają <xref:System.Runtime.InteropServices.SafeHandle> klasy nie trzeba dostarczyć finalizator, czasami jest to konieczne (na przykład opróżnienia się bufory plików lub zapisać dane z powrotem do pamięci).</span><span class="sxs-lookup"><span data-stu-id="ce309-175">Although most classes that use the <xref:System.Runtime.InteropServices.SafeHandle> class do not need to provide a finalizer, this is sometimes necessary (for example, to flush out file buffers or to write some data back into memory).</span></span> <span data-ttu-id="ce309-176">W tym przypadku klasy potrzeby mogą dostarczyć finalizator, który gwarantuje działanie przed <xref:System.Runtime.InteropServices.SafeHandle> krytyczny finalizator przebiegów.</span><span class="sxs-lookup"><span data-stu-id="ce309-176">In this case, the class can provide a finalizer that is guaranteed to run before the <xref:System.Runtime.InteropServices.SafeHandle> critical finalizer runs.</span></span>  
  
 <span data-ttu-id="ce309-177">Wywołaj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metoda po zakończeniu przy użyciu <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ce309-177">Call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method when you are finished using the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce309-178">Zawsze wywołuj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ce309-178">Always call <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> before you release your last reference to the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="ce309-179">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Runtime.InteropServices.SafeHandle> obiektu <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ce309-179">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.InteropServices.SafeHandle> object's <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-180">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-180">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-181">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-182">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DangerousAddRef">
      <MemberSignature Language="C#" Value="public void DangerousAddRef (ref bool success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DangerousAddRef(bool&amp; success) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DangerousAddRef (ByRef success As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DangerousAddRef(bool % success);" />
      <MemberSignature Language="F#" Value="member this.DangerousAddRef :  -&gt; unit" Usage="safeHandle.DangerousAddRef success" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="success" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="success">
          <span data-ttu-id="ce309-183">
            <see langword="true" /> Jeśli licznik odwołań został pomyślnie zwiększany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-183">
              <see langword="true" /> if the reference counter was successfully incremented; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce309-184">Ręcznie zwiększa licznik odwołań na <see cref="T:System.Runtime.InteropServices.SafeHandle" /> wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-184">Manually increments the reference counter on <see cref="T:System.Runtime.InteropServices.SafeHandle" /> instances.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-185"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> Metoda uniemożliwia odzyskiwanie pamięci używanej przez dojście środowiska uruchomieniowego języka wspólnego (które występuje, gdy środowisko wykonawcze wywołuje <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> metody).</span><span class="sxs-lookup"><span data-stu-id="ce309-185">The <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> method prevents the common language runtime from reclaiming memory used by a handle (which occurs when the runtime calls the <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method).</span></span> <span data-ttu-id="ce309-186">Można użyć tę metodę, aby ręcznie przyrostu odwołania możesz liczyć na <xref:System.Runtime.InteropServices.SafeHandle> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ce309-186">You can use this method to manually increment the reference count on a <xref:System.Runtime.InteropServices.SafeHandle> instance.</span></span> <span data-ttu-id="ce309-187"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> Zwraca wartość logiczną przy użyciu `ref` parametru (`success`) oznacza to, czy licznik odwołań został pomyślnie zwiększany.</span><span class="sxs-lookup"><span data-stu-id="ce309-187"><xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> returns a Boolean value using a `ref` parameter (`success`) that indicates whether the reference count was incremented successfully.</span></span> <span data-ttu-id="ce309-188">Dzięki temu logika program wycofać w przypadku awarii.</span><span class="sxs-lookup"><span data-stu-id="ce309-188">This allows your program logic to back out in case of failure.</span></span> <span data-ttu-id="ce309-189">Należy ustawić `success` do `false` przed wywołaniem <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce309-189">You should set `success` to `false` before calling <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span> <span data-ttu-id="ce309-190">Jeśli `success` jest `true`, unikaj przeciekom zasobów, dopasowując wywołanie <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> przy użyciu odpowiedniego wywołania <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce309-190">If `success` is `true`, avoid resource leaks by matching the call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> with a corresponding call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ce309-191">Ta metoda jest przeznaczona dla użytkowników zaawansowanych i zawsze należy używać ostrożnie.</span><span class="sxs-lookup"><span data-stu-id="ce309-191">This method is intended for advanced users and must always be used carefully.</span></span> <span data-ttu-id="ce309-192">Wyciekiem uchwyt zasobów, zawsze wywołać tę metodę wewnątrz regionu ograniczonego wykonania (CER), gdzie przerwanie wątku nie może przerwać przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="ce309-192">To avoid leaking handle resources, always call this method inside a constrained execution region (CER), where a thread abort cannot interrupt processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-193">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-193">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-194">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-194">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-195">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-195">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
      </Docs>
    </Member>
    <Member MemberName="DangerousGetHandle">
      <MemberSignature Language="C#" Value="public IntPtr DangerousGetHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int DangerousGetHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function DangerousGetHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr DangerousGetHandle();" />
      <MemberSignature Language="F#" Value="member this.DangerousGetHandle : unit -&gt; nativeint" Usage="safeHandle.DangerousGetHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-196">Zwraca wartość <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-196">Returns the value of the <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce309-197">
            <see langword="IntPtr" /> Reprezentujący wartość <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> pola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-197">An <see langword="IntPtr" /> representing the value of the <see cref="F:System.Runtime.InteropServices.SafeHandle.handle" /> field.</span>
          </span>
          <span data-ttu-id="ce309-198">Jeśli uchwyt został oznaczony nieprawidłowy z <see cref="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />, Metoda ta zwraca nadal oryginalnej wartości uchwyt może być wartością starych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-198">If the handle has been marked invalid with <see cref="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />, this method still returns the original handle value, which can be a stale value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-199">Ta metoda służy do pobrania wartości rzeczywiste dojście wystąpienia programu <xref:System.Runtime.InteropServices.SafeHandle> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="ce309-199">You can use this method to retrieve the actual handle value from an instance of the <xref:System.Runtime.InteropServices.SafeHandle> derived class.</span></span> <span data-ttu-id="ce309-200">Ta metoda jest potrzebne do zapewnienia zgodności ponieważ zwraca wiele właściwości w programie .NET Framework `IntPtr` obsługi typów.</span><span class="sxs-lookup"><span data-stu-id="ce309-200">This method is needed for backwards compatibility because many properties in the .NET Framework return `IntPtr` handle types.</span></span> <span data-ttu-id="ce309-201">`IntPtr` typ dojścia są typy specyficzne dla platformy używanych do reprezentowania wskaźnika lub uchwytu.</span><span class="sxs-lookup"><span data-stu-id="ce309-201">`IntPtr` handle types are platform-specific types used to represent a pointer or a handle.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ce309-202">Za pomocą <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> metoda może stanowić zagrożenie bezpieczeństwa, ponieważ, jeśli uchwyt została oznaczona jako niepoprawna przy użyciu <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A>, <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> nadal zwraca wartość oryginalny, potencjalnie nieodświeżoną dojście.</span><span class="sxs-lookup"><span data-stu-id="ce309-202">Using the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method can pose security risks because, if the handle has been marked as invalid with <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A>, <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> still returns the original, potentially stale handle value.</span></span> <span data-ttu-id="ce309-203">Zwracany uchwyt może być również odtworzona w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="ce309-203">The returned handle can also be recycled at any point.</span></span> <span data-ttu-id="ce309-204">Co najlepsze oznacza to, że dojście może nagle przestać działać.</span><span class="sxs-lookup"><span data-stu-id="ce309-204">At best, this means the handle might suddenly stop working.</span></span> <span data-ttu-id="ce309-205">W najgorszym przypadku Jeśli uchwyt lub zasobu, który reprezentuje uchwyt jest uwidaczniany w niezaufanego kodu, może to prowadzić do odtwarzania ataku zabezpieczeń są ponownie wykorzystywane lub zwracany uchwyt.</span><span class="sxs-lookup"><span data-stu-id="ce309-205">At worst, if the handle or the resource that the handle represents is exposed to untrusted code, this can lead to a recycling security attack on the reused or returned handle.</span></span> <span data-ttu-id="ce309-206">Na przykład niezaufanych wywołujący może wysyłania zapytań dotyczących danych na dojście, po prostu zwracane i otrzymywanie informacji, w przypadku całkowicie niepowiązane zasobów.</span><span class="sxs-lookup"><span data-stu-id="ce309-206">For example, an untrusted caller can query data on the handle just returned and receive information for an entirely unrelated resource.</span></span> <span data-ttu-id="ce309-207">Zobacz <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> i <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> metody, aby uzyskać więcej informacji o korzystaniu z <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> methodsafely.</span><span class="sxs-lookup"><span data-stu-id="ce309-207">See the <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> and the <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> methods for more information about using the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> methodsafely.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-208">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-208">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-209">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-209">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-210">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-210">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DangerousRelease">
      <MemberSignature Language="C#" Value="public void DangerousRelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DangerousRelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.DangerousRelease" />
      <MemberSignature Language="VB.NET" Value="Public Sub DangerousRelease ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DangerousRelease();" />
      <MemberSignature Language="F#" Value="member this.DangerousRelease : unit -&gt; unit" Usage="safeHandle.DangerousRelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-211">Dekrementuje ręcznie licznik odwołań na <see cref="T:System.Runtime.InteropServices.SafeHandle" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-211">Manually decrements the reference counter on a <see cref="T:System.Runtime.InteropServices.SafeHandle" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-212"><xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> Metodą jest odpowiednikiem <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce309-212">The <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> method is the counterpart to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span> <span data-ttu-id="ce309-213">Powinna zawsze być zgodna wywołanie <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> metody z pomyślnym wywołaniem <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce309-213">You should always match a call to the <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> method with a successful call to <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ce309-214">Ta metoda jest przeznaczona dla użytkowników zaawansowanych i zawsze należy używać ostrożnie.</span><span class="sxs-lookup"><span data-stu-id="ce309-214">This method is intended for advanced users and must always be used carefully.</span></span> <span data-ttu-id="ce309-215">Wyciekiem uchwyt zasobów, zawsze wywołać tę metodę wewnątrz regionu ograniczonego wykonania (CER), gdzie przerwanie wątku nie może przerwać przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="ce309-215">To avoid leaking handle resources, always call this method inside a constrained execution region (CER), where a thread abort cannot interrupt processing.</span></span> <span data-ttu-id="ce309-216">W taki sam sposób, który niedopasowane <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> wywołań może powodować przecieki zasobów, niedopasowane <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> wywołań może spowodować, że Stany nieprawidłowego dojścia do stają się widoczne dla innych wątków.</span><span class="sxs-lookup"><span data-stu-id="ce309-216">In the same way that unmatched <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> calls can cause resource leaks, unmatched <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> calls can cause invalid handle states to become visible to other threads.</span></span> <span data-ttu-id="ce309-217">Nie ujawniaj <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> wywołania do niezaufanego kodu.</span><span class="sxs-lookup"><span data-stu-id="ce309-217">Do not expose <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A> or <xref:System.Runtime.InteropServices.SafeHandle.DangerousRelease%2A> calls to untrusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-218">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-218">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-219">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-219">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-220">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-220">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ce309-221">Zwalnia zasoby używane przez <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-221">Releases the resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="safeHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-222">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-222">Releases all resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-223">Wywoływanie <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metoda umożliwia zasoby, które ma zostać zwolniony.</span><span class="sxs-lookup"><span data-stu-id="ce309-223">Calling the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method allows the resources to be freed.</span></span> <span data-ttu-id="ce309-224">Nie może być zmienione od razu, inne wątki korzystania z tego samego wystąpienia bezpiecznego dojścia, ale będzie miało miejsce, gdy tylko nie są już tak jest.</span><span class="sxs-lookup"><span data-stu-id="ce309-224">This might not happen immediately if other threads are using the same instance of the safe handle, but will happen as soon as that is no longer the case.</span></span> <span data-ttu-id="ce309-225">Mimo że większość klas przy użyciu <xref:System.Runtime.InteropServices.SafeHandle> nie trzeba dostarczyć finalizator, czasami jest to konieczne (na przykład, aby opróżnić się bufory plików lub do zapisania pewne dane z powrotem do pamięci).</span><span class="sxs-lookup"><span data-stu-id="ce309-225">Although most classes using <xref:System.Runtime.InteropServices.SafeHandle> do not need to provide a finalizer, this is sometimes necessary (for example, to flush out file buffers or to write some data back into memory).</span></span> <span data-ttu-id="ce309-226">W tym przypadku zapewniają finalizator, który jest gwarantowane do uruchomienia przed <xref:System.Runtime.InteropServices.SafeHandle> krytyczny finalizator przebiegów.</span><span class="sxs-lookup"><span data-stu-id="ce309-226">In this case, they can provide a finalizer that is guaranteed to run before the <xref:System.Runtime.InteropServices.SafeHandle> critical finalizer runs.</span></span>  
  
 <span data-ttu-id="ce309-227">Wywołaj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metoda po zakończeniu przy użyciu <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ce309-227">Call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method when you are finished using the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="ce309-228"><xref:System.Runtime.InteropServices.SafeHandle.Close%2A> Pozostawia metoda <xref:System.Runtime.InteropServices.SafeHandle> obiektu w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="ce309-228">The <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> method leaves the <xref:System.Runtime.InteropServices.SafeHandle> object in an unusable state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce309-229">Zawsze wywołuj <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> lub <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metoda przed publikacją swoje ostatnie odwołanie do <xref:System.Runtime.InteropServices.SafeHandle> obiektu.</span><span class="sxs-lookup"><span data-stu-id="ce309-229">Always call the <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> or <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method before you release your last reference to the <xref:System.Runtime.InteropServices.SafeHandle> object.</span></span> <span data-ttu-id="ce309-230">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Runtime.InteropServices.SafeHandle> obiektu <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ce309-230">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.InteropServices.SafeHandle> object's <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-231">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-231">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-232">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-233">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-233">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="safeHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-1.5;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ce309-234">
            <see langword="true" /> do normalnego dispose operacji. <see langword="false" /> Aby sfinalizować uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-234">
              <see langword="true" /> for a normal dispose operation; <see langword="false" /> to finalize the handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce309-235">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Runtime.InteropServices.SafeHandle" /> klasa określająca, czy wykonać normalnego dispose operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-235">Releases the unmanaged resources used by the <see cref="T:System.Runtime.InteropServices.SafeHandle" /> class specifying whether to perform a normal dispose operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-236">Nigdy nie jest jawnie wywołać <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> metody z `disposing` parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="ce309-236">You should never explicitly call the <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method with the `disposing` parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-237">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-237">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-238">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-238">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-239">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-239">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SafeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SafeHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="safeHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-240">Zwalnia wszystkie zasoby skojarzone z uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-240">Frees all resources associated with the handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-241"><xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> Destruktor jest metoda <xref:System.Runtime.InteropServices.SafeHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="ce309-241">The <xref:System.Runtime.InteropServices.SafeHandle.Finalize%2A> method is the destructor for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span> <span data-ttu-id="ce309-242">Kod aplikacji nie powinna bezpośrednio wywołać tę metodę.</span><span class="sxs-lookup"><span data-stu-id="ce309-242">Application code should not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-243">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-243">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-244">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-244">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-245">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-245">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.SafeHandle.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="handle">
      <MemberSignature Language="C#" Value="protected IntPtr handle;" />
      <MemberSignature Language="ILAsm" Value=".field family native int handle" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.SafeHandle.handle" />
      <MemberSignature Language="VB.NET" Value="Protected handle As IntPtr " />
      <MemberSignature Language="C++ CLI" Value="protected: IntPtr handle;" />
      <MemberSignature Language="F#" Value="val mutable handle : nativeint" Usage="System.Runtime.InteropServices.SafeHandle.handle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce309-246">Określa dojścia w celu jej opakowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-246">Specifies the handle to be wrapped.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-247">Nie ujawniaj uchwytu publicznie (czyli poza klasy pochodnej).</span><span class="sxs-lookup"><span data-stu-id="ce309-247">Do not expose the handle publicly (that is, outside of the derived class).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeHandle.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Runtime.InteropServices.SafeHandle.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce309-248">Pobiera wartość wskazującą, czy uchwyt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-248">Gets a value indicating whether the handle is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce309-249">
            <see langword="true" /> Jeśli uchwyt zostanie zamknięty; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-249">
              <see langword="true" /> if the handle is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-250"><xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> Metoda zwraca wartość wskazującą czy <xref:System.Runtime.InteropServices.SafeHandle> dojście do obiektu nie jest już skojarzony z zasobu natywnego.</span><span class="sxs-lookup"><span data-stu-id="ce309-250">The <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> method returns a value indicating whether the <xref:System.Runtime.InteropServices.SafeHandle> object's handle is no longer associated with a native resource.</span></span> <span data-ttu-id="ce309-251">To różni się od definicji <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwość, która oblicza, czy podanym dojściu zawsze jest uznawane za nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="ce309-251">This differs from the definition of the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property, which computes whether a given handle is always considered invalid.</span></span> <span data-ttu-id="ce309-252"><xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> Metoda zwraca `true` wartości w następujących przypadkach:</span><span class="sxs-lookup"><span data-stu-id="ce309-252">The <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> method returns a `true` value in the following cases:</span></span>  
  
-   <span data-ttu-id="ce309-253"><xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> Metoda została wywołana.</span><span class="sxs-lookup"><span data-stu-id="ce309-253">The <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> method was called.</span></span>  
  
-   <span data-ttu-id="ce309-254"><xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> Metody lub <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> wywołano metodę wiąże się z żadnych odwołań do <xref:System.Runtime.InteropServices.SafeHandle> obiektu na inny wątek.</span><span class="sxs-lookup"><span data-stu-id="ce309-254">The <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> method or <xref:System.Runtime.InteropServices.SafeHandle.Close%2A> method was called and there are no references to the <xref:System.Runtime.InteropServices.SafeHandle> object on other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-255">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-255">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-256">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-256">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-257">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-257">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public abstract bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="System.Runtime.InteropServices.SafeHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ce309-258">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy wartość dojścia jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-258">When overridden in a derived class, gets a value indicating whether the handle value is invalid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ce309-259">
            <see langword="true" /> Jeśli wartość dojścia jest nieprawidłowa; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-259">
              <see langword="true" /> if the handle value is invalid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-260">Klasy pochodne muszą implementować <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwość tak, aby środowisko uruchomieniowe języka wspólnego można określić, czy wymagane jest krytyczna finalizacja.</span><span class="sxs-lookup"><span data-stu-id="ce309-260">Derived classes must implement the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property so that the common language runtime can determine whether critical finalization is required.</span></span> <span data-ttu-id="ce309-261">Klasy pochodne musi dostarczyć implementację odpowiadającego ogólny typ dojścia obsługują (0 lub wartość -1 jest nieprawidłowy).</span><span class="sxs-lookup"><span data-stu-id="ce309-261">Derived classes must provide an implementation that suits the general type of handle they support (0 or -1 is invalid).</span></span> <span data-ttu-id="ce309-262">Te klasy mogą następnie dodatkowo uzyskane dla typów szczególne bezpiecznego dojścia.</span><span class="sxs-lookup"><span data-stu-id="ce309-262">These classes can then be further derived for specific safe handle types.</span></span>  
  
 <span data-ttu-id="ce309-263">W odróżnieniu od <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> właściwość, która zgłasza czy <xref:System.Runtime.InteropServices.SafeHandle> obiektu zostało zakończone, przy użyciu podstawowego dojścia <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwość oblicza, czy wartość podanym dojściu zawsze jest uznawane za nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="ce309-263">Unlike the <xref:System.Runtime.InteropServices.SafeHandle.IsClosed%2A> property, which reports whether the <xref:System.Runtime.InteropServices.SafeHandle> object has finished using the underlying handle, the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property calculates whether the given handle value is always considered invalid.</span></span> <span data-ttu-id="ce309-264">W związku z tym <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwość zawsze zwraca taką samą wartość dowolną wartość z określonego dojścia.</span><span class="sxs-lookup"><span data-stu-id="ce309-264">Therefore, the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property always returns the same value for any one handle value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce309-265">Poniższy przykład sprawdza, jeśli plik został pomyślnie otwarty.</span><span class="sxs-lookup"><span data-stu-id="ce309-265">The following example checks if a file was opened successfully.</span></span> <span data-ttu-id="ce309-266">Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Runtime.InteropServices.SafeHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="ce309-266">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span>  
  
 [!code-csharp[SafeHandle#2](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-267">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-267">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-268">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-268">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-269">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected abstract bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandle : unit -&gt; bool" Usage="safeHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-270">W przypadku przesłonięcia w klasie pochodnej, wykonuje kod wymagane zwolnienie uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-270">When overridden in a derived class, executes the code required to free the handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ce309-271">
            <see langword="true" /> Jeśli uchwyt jest zwalniany pomyślnie; w przeciwnym razie, w przypadku poważnej awarii, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-271">
              <see langword="true" /> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ce309-272">W tym przypadku generuje [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) Asystent debugowania zarządzanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-272">In this case, it generates a [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) Managed Debugging Assistant.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-273"><xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> Metody jest gwarantowane, można wywołać tylko raz i tylko wtedy, gdy uchwyt jest prawidłowy, zgodnie z definicją <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ce309-273">The <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method is guaranteed to be called only once and only if the handle is valid as defined by the <xref:System.Runtime.InteropServices.SafeHandle.IsInvalid%2A> property.</span></span> <span data-ttu-id="ce309-274">Zaimplementować tę metodę w swojej <xref:System.Runtime.InteropServices.SafeHandle> pochodne klasy do wykonywania kodu, który jest wymagany, aby zwolnić uchwytu.</span><span class="sxs-lookup"><span data-stu-id="ce309-274">Implement this method in your <xref:System.Runtime.InteropServices.SafeHandle> derived classes to execute any code that is required to free the handle.</span></span> <span data-ttu-id="ce309-275">Ponieważ jedną z funkcji <xref:System.Runtime.InteropServices.SafeHandle> ma na celu zagwarantowania zapobiegania przeciekom zasobów, kod w danej implementacji <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> musi nigdy się nie powieść.</span><span class="sxs-lookup"><span data-stu-id="ce309-275">Because one of the functions of <xref:System.Runtime.InteropServices.SafeHandle> is to guarantee prevention of resource leaks, the code in your implementation of <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> must never fail.</span></span> <span data-ttu-id="ce309-276">Moduł odśmiecania pamięci wywołuje <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> po uruchomieniu normalne finalizatory dla obiektów, które były bezużyteczne w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="ce309-276">The garbage collector calls <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> after normal finalizers have been run for objects that were garbage collected at the same time.</span></span> <span data-ttu-id="ce309-277">Moduł zbierający elementy bezużyteczne gwarantuje zasobów, aby wywołać tę metodę i że metody nie zostanie przerwana podczas jego jest w toku.</span><span class="sxs-lookup"><span data-stu-id="ce309-277">The garbage collector guarantees the resources to invoke this method and that the method will not be interrupted while it is in progress.</span></span> <span data-ttu-id="ce309-278">Ta metoda będzie gotowa jako region ograniczonego wykonania (CER), podczas tworzenia wystąpienia (oraz wszystkie metody jej wykresu wywołań statycznie możliwa do ustalenia).</span><span class="sxs-lookup"><span data-stu-id="ce309-278">This method will be prepared as a constrained execution region (CER) at instance construction time (along with all the methods in its statically determinable call graph).</span></span> <span data-ttu-id="ce309-279">Mimo że pozwala to uniknąć przerwania przerwanie wątku, nadal należy pamiętać, że wszystkie ścieżki błędów w swojej zastąpione <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="ce309-279">Although this prevents thread abort interrupts, you must still be careful not to introduce any fault paths in your overridden <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> method.</span></span> <span data-ttu-id="ce309-280">W szczególności należy zastosować <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> atrybutu jakiekolwiek metody wywołania z <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce309-280">In particular, apply the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute to any methods you call from <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A>.</span></span> <span data-ttu-id="ce309-281">W większości przypadków należy ten kod:</span><span class="sxs-lookup"><span data-stu-id="ce309-281">In most cases this code should be:</span></span>  
  
 `ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)`  
  
 <span data-ttu-id="ce309-282">Ponadto w przypadku prostych oczyszczania (na przykład wywołanie interfejsu API Win32 `CloseHandle` na dojście do pliku) dla pojedynczej platformy wywołania wywołania, można sprawdzić wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="ce309-282">Additionally, for simple cleanup (for example, calling the Win32 API `CloseHandle` on a file handle) you can check the return value for the single platform invoke call.</span></span> <span data-ttu-id="ce309-283">Złożone oczyszczania może mieć wiele logiki programu i wielu wywołań metody, z których część może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="ce309-283">For complex cleanup, you may have a lot of program logic and many method calls, some of which might fail.</span></span> <span data-ttu-id="ce309-284">Należy się upewnić, że logice program ma rezerwowy kod dla każdego z tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="ce309-284">You must ensure that your program logic has fallback code for each of those cases.</span></span>  
  
 <span data-ttu-id="ce309-285">Jeśli <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> zwraca `false` z jakiegokolwiek powodu, generuje [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) Asystent debugowania zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="ce309-285">If <xref:System.Runtime.InteropServices.SafeHandle.ReleaseHandle%2A> returns `false` for any reason, it generates a [releaseHandleFailed](~/docs/framework/debug-trace-profile/releasehandlefailed-mda.md) Managed Debugging Assistant.</span></span>  <span data-ttu-id="ce309-286">Dzięki temu można wykryć przypadki, w którym nie powiedzie się próba zwolnienia zasobów.</span><span class="sxs-lookup"><span data-stu-id="ce309-286">This helps you detect cases where your attempt to release resources fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce309-287">Poniższy przykładowy kod zwalnia dojścia i jest częścią większego przykładu przewidzianego dla <xref:System.Runtime.InteropServices.SafeHandle> klasy.</span><span class="sxs-lookup"><span data-stu-id="ce309-287">The following code example releases the handle and is part of a larger example provided for the <xref:System.Runtime.InteropServices.SafeHandle> class.</span></span>  
  
 [!code-csharp[SafeHandle#3](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle/CS/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-288">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-288">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-289">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-289">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-290">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-290">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <related type="Article" href="http://msdn.microsoft.com/library/76994ee6-9fa9-4059-b813-26578d24427c">
          <span data-ttu-id="ce309-291">Diagnozowanie błędów czasu wykonywania przy użyciu asystentów zarządzanego debugowania</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-291">Diagnosing Run-time Errors with Managed Debugging Assistants</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/44cd98ba-95e5-40a1-874d-e8e163612c51">
          <span data-ttu-id="ce309-292">releaseHandleFailed</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-292">ReleaseHandleFailed</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetHandle">
      <MemberSignature Language="C#" Value="protected void SetHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.SetHandle : nativeint -&gt; unit" Usage="safeHandle.SetHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="ce309-293">Istniejące dojście do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-293">The pre-existing handle to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ce309-294">Ustawia określone dojście istniejące uchwytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-294">Sets the handle to the specified pre-existing handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-295">Użyj <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> metody tylko wtedy, gdy potrzeba do obsługi istniejących uchwyt (na przykład, jeśli uchwyt jest zwracany w strukturze), ponieważ infrastruktury międzyoperacyjnego modelu COM programu .NET Framework nie obsługuje przekazywanie danych wyjściowych uchwytów w strukturze.</span><span class="sxs-lookup"><span data-stu-id="ce309-295">Use the <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> method only if you need to support a pre-existing handle (for example, if the handle is returned in a structure) because the .NET Framework COM interop infrastructure does not support marshaling output handles in a structure.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-296">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-296">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-297">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-297">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-298">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-298">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetHandleAsInvalid">
      <MemberSignature Language="C#" Value="public void SetHandleAsInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHandleAsInvalid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHandleAsInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHandleAsInvalid();" />
      <MemberSignature Language="F#" Value="member this.SetHandleAsInvalid : unit -&gt; unit" Usage="safeHandle.SetHandleAsInvalid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Handles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-1.5;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ce309-299">Oznacza uchwyt tak nie jest już używana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-299">Marks a handle as no longer used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce309-300">Wywołaj <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> metody tylko wtedy, gdy wiesz, że swoje dojście nie jest już odwołuje się do zasobu.</span><span class="sxs-lookup"><span data-stu-id="ce309-300">Call the <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> method only when you know that your handle no longer references a resource.</span></span> <span data-ttu-id="ce309-301">Ten sposób nie zmienia wartość <xref:System.Runtime.InteropServices.SafeHandle.handle> pola tylko program oznacza uchwytu jako zamknięte.</span><span class="sxs-lookup"><span data-stu-id="ce309-301">Doing so does not change the value of the <xref:System.Runtime.InteropServices.SafeHandle.handle> field; it only marks the handle as closed.</span></span> <span data-ttu-id="ce309-302">Dojście następnie może zawierać potencjalnie nieodświeżoną wartość.</span><span class="sxs-lookup"><span data-stu-id="ce309-302">The handle might then contain a potentially stale value.</span></span> <span data-ttu-id="ce309-303">To wywołanie powoduje, że nie są podejmowane próby zwolnienie zasobów.</span><span class="sxs-lookup"><span data-stu-id="ce309-303">The effect of this call is that no attempt is made to free the resources.</span></span>  
  
 <span data-ttu-id="ce309-304">Podobnie jak w przypadku <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> metody, użyj <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> tylko wtedy, gdy potrzeba do obsługi istniejących dojście.</span><span class="sxs-lookup"><span data-stu-id="ce309-304">As with the <xref:System.Runtime.InteropServices.SafeHandle.SetHandle%2A> method, use <xref:System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid%2A> only if you need to support a pre-existing handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ce309-305">Aby uzyskać uprawnienie wywoływać kod niezarządzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-305">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ce309-306">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-306">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="ce309-307">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ce309-307">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>