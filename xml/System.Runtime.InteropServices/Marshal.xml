<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Marshal.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b582e89d8a536a45d26354652aab5d4e97b21f0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b582e89d8a536a45d26354652aab5d4e97b21f0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</source>
          <target state="translated">Zawiera kolekcję metod podziału niezarządzanej pamięci, kopiowanie bloki pamięci niezarządzane i konwertowanie zarządzanych do niezarządzanych typów, a także inne różne metody używane podczas interakcji z kodem niezarządzanym.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>The <ph id="ph1">`static`</ph> methods defined on the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class are essential to working with unmanaged code.</source>
          <target state="translated"><ph id="ph1">`static`</ph> Metody zdefiniowane w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy są niezbędne do pracy z kodem niezarządzanym.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</source>
          <target state="translated">Większość metody zdefiniowane w tej klasie są zwykle używane przez deweloperów, którzy chcą zapewnić mostka między zarządzanymi i niezarządzanymi, modele programowania.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>For example, the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> metody kopiuje znaków ANSI z określonego ciągu (w stercie zarządzanej) do buforu w stosie niezarządzane.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>It also allocates the target heap of the right size.</source>
          <target state="translated">Przydzielania sterty docelowy właściwego rozmiaru.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>The common language runtime provides specific marshaling capabilities.</source>
          <target state="translated">Środowisko uruchomieniowe języka wspólnego zawiera określone możliwości kierowania.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>For details on marshaling behavior, see <bpt id="p1">[</bpt>Interop Marshaling<ept id="p1">](~/docs/framework/interop/interop-marshaling.md)</ept>.</source>
          <target state="translated">Aby uzyskać szczegółowe informacje na przekazywanie zachowania, zobacz <bpt id="p1">[</bpt>organizowanie międzyoperacyjne<ept id="p1">](~/docs/framework/interop/interop-marshaling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>The <ph id="ph1">`Read`</ph> and <ph id="ph2">`Write`</ph> methods in the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class support both aligned and unaligned access.</source>
          <target state="translated"><ph id="ph1">`Read`</ph> i <ph id="ph2">`Write`</ph> metod w <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasa obsługuje zarówno wyrównany i niewyrównany dostęp.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.Marshal">
          <source>The following example shows how to use various methods defined by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Poniższy przykład przedstawia użycie różnych metod zdefiniowane przez <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>The interface reference count to increment.</source>
          <target state="translated">Liczba odwołań interfejsu Aby zwiększyć.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>Increments the reference count on the specified interface.</source>
          <target state="translated">Zwiększa liczbę odwołania dla określonego interfejsu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>The new value of the reference count on the <ph id="ph1">&lt;paramref name="pUnk" /&gt;</ph> parameter.</source>
          <target state="translated">Nowa wartość odwołania count <ph id="ph1">&lt;paramref name="pUnk" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</source>
          <target state="translated">Środowisko uruchomieniowe języka wspólnego zarządza liczebności referencyjnej obiektu COM dla Ciebie, dzięki czemu bezpośrednio przy użyciu tej metody nie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</source>
          <target state="translated">W rzadkich przypadkach, takich jak testowanie organizatora niestandardowego użytkownik może być konieczne do manipulowania okres istnienia obiektu ręcznie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>After calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph>, you must decrement the reference count by using a method such as <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph>, należy zmniejszyć liczbę odwołań przy użyciu metody, takie jak <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>Do not rely on the return value of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph>, as it can sometimes be unstable.</source>
          <target state="translated">Nie należy polegać na wartość zwracaną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph>, ponieważ czasami może być niestabilny.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>You can call <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> to obtain an <ph id="ph4">&lt;xref:System.IntPtr&gt;</ph> value that represents an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface pointer.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, lub <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> uzyskanie <ph id="ph4">&lt;xref:System.IntPtr&gt;</ph> wartość, która reprezentuje <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika interfejsu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>You can also use these methods and the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</source>
          <target state="translated">Można także używać tych metod i <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A&gt;</ph> metody dla zarządzanych obiektów uzyskanie interfejsy modelu COM reprezentowany przez wywoływana otoka COM obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>If you are not familiar with the details of this wrapper type, see <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</source>
          <target state="translated">Jeśli nie znasz ze szczegółami tego typu otoki, zobacz <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>The size of the block of memory to be allocated.</source>
          <target state="translated">Rozmiar bloku pamięci do przydzielenia.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>Allocates a block of memory of specified size from the COM task memory allocator.</source>
          <target state="translated">Przydziela bloku pamięci o rozmiarze określonym z alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>An integer representing the address of the block of memory allocated.</source>
          <target state="translated">Liczba całkowita reprezentująca adres blok pamięci przydzielony.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>This memory must be released with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Ta pamięć musi zostać zwolniony za <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> is one of two memory allocation API methods in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> jest jednym z alokacji pamięci dwie metody interfejsu API w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType&gt;</ph> jest innych.) Zawartość pamięci początkowej, zwracana jest niezdefiniowana i alokacji pamięci może być większy niż żądana liczba bajtów.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>This method exposes the COM <bpt id="p1">[</bpt>CoTaskMemAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148626)</ept> function, which is referred to as the COM task memory allocator.</source>
          <target state="translated">Ta metoda przedstawia COM <bpt id="p1">[</bpt>CoTaskMemAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148626)</ept> funkcji, która jest określana jako alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>There is insufficient memory to satisfy the request.</source>
          <target state="translated">Jest za mało pamięci do spełnienia żądania.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Allocates memory from the unmanaged memory of the process.</source>
          <target state="translated">Przydziela pamięć z niezarządzanej pamięci procesu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>The required number of bytes in memory.</source>
          <target state="translated">Wymagana liczba bajtów w pamięci.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</source>
          <target state="translated">Przydziela pamięć z niezarządzanej pamięci procesu przy użyciu określoną liczbę bajtów.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>A pointer to the newly allocated memory.</source>
          <target state="translated">Wskaźnik do nowo alokacji pamięci.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>This memory must be released using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph> method.</source>
          <target state="translated">Ta pamięć muszą zostać zwolnione, przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> is one of two memory allocation methods in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> jest jednym z dwóch metod alokacji pamięci w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> is the other.) This method exposes the Win32 <bpt id="p1">[</bpt>LocalAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148628)</ept> function from Kernel32.dll.</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> jest innych.) Ta metoda przedstawia Win32 <bpt id="p1">[</bpt>Funkcja LocalAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148628)</ept> funkcji Kernel32.dll.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>When <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> calls <ph id="ph2">`LocalAlloc`</ph>, it passes a <ph id="ph3">`LMEM_FIXED`</ph> flag, which causes the allocated memory to be locked in place.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> wywołania <ph id="ph2">`LocalAlloc`</ph>, przekazaniem <ph id="ph3">`LMEM_FIXED`</ph> flagi, co powoduje, że alokacji pamięci do zablokowania w miejscu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>Also, the allocated memory is not zero-filled.</source>
          <target state="translated">Ponadto alokacji pamięci nie jest zero wypełnione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>There is insufficient memory to satisfy the request.</source>
          <target state="translated">Jest za mało pamięci do spełnienia żądania.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>The required number of bytes in memory.</source>
          <target state="translated">Wymagana liczba bajtów w pamięci.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</source>
          <target state="translated">Przydziela pamięć z niezarządzanej pamięci procesu za pomocą wskaźnika do określonej liczby bajtów.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>A pointer to the newly allocated memory.</source>
          <target state="translated">Wskaźnik do nowo alokacji pamięci.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>This memory must be released using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph> method.</source>
          <target state="translated">Ta pamięć muszą zostać zwolnione, przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> is one of two memory allocation methods in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> jest jednym z dwóch metod alokacji pamięci w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> is the other.) This method exposes the Win32 <bpt id="p1">[</bpt>LocalAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148628)</ept> function from Kernel32.dll.</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> jest innych.) Ta metoda przedstawia Win32 <bpt id="p1">[</bpt>Funkcja LocalAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148628)</ept> funkcji Kernel32.dll.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>When <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> calls <ph id="ph2">`LocalAlloc`</ph>, it passes a <ph id="ph3">`LMEM_FIXED`</ph> flag, which causes the allocated memory to be locked in place.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> wywołania <ph id="ph2">`LocalAlloc`</ph>, przekazaniem <ph id="ph3">`LMEM_FIXED`</ph> flagi, co powoduje, że alokacji pamięci do zablokowania w miejscu.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>Also, the allocated memory is not zero-filled.</source>
          <target state="translated">Ponadto alokacji pamięci nie jest zero wypełnione.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>For example code, see <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Na przykład kodu, zobacz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>There is insufficient memory to satisfy the request.</source>
          <target state="translated">Jest za mało pamięci do spełnienia żądania.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</source>
          <target state="translated">Wskazuje, czy dostępne oczyszczania są wywoływane otoki środowiska uruchomieniowego (RCWs) z żadnego kontekstu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are any RCWs available for cleanup; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dostępne są wszystkie RCWs dla oczyszczania; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</source>
          <target state="translated">Jeśli istnieje wiele odwołań między kodu zarządzanego i natywnego wykresami zależności bezpośrednich może to zająć dużo czasu dla wszystkich obiektów wyczyścić.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</source>
          <target state="translated">Każdym uruchomieniu GC spowoduje zwolnienie niektórych liczby RCWs, które z kolei spowoduje zwolnienie obiektów COM.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</source>
          <target state="translated">Te obiekty COM zostanie następnie zwolnij ich zarządzanych odwołań i udostępnić więcej obiektów oczyszczania przy następnym przebiegów GC, które uruchamia proces ponownego.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A&gt;</ph> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A&gt;</ph> Metody umożliwia aplikacji określić liczbę cykli operacji wyrzucania elementów bezużytecznych. Zbieranie i wykazu Globalnego. WaitForPendingFinalizers muszą mieć miejsce, aby wyczyścić wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>The moniker corresponding to the desired interface pointer.</source>
          <target state="translated">Krótka nazwa odpowiadający wskaźnika żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>Gets an interface pointer identified by the specified moniker.</source>
          <target state="translated">Pobiera wskaźnika interfejsu identyfikowana na podstawie określonego krótkiej nazwy.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>An object containing a reference to the interface pointer identified by the <ph id="ph1">&lt;paramref name="monikerName" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający odwołanie do wskaźnika interfejsu identyfikowane przez <ph id="ph1">&lt;paramref name="monikerName" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>A moniker is a name, and in this case, the moniker is defined by an interface.</source>
          <target state="translated">Krótka nazwa jest nazwą, a w tym przypadku krótka nazwa jest definiowana za pomocą interfejsu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A&gt;</ph> exposes the COM <ph id="ph2">`BindToMoniker`</ph> method, which produces an object that you can cast to any COM interface you require.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A&gt;</ph> przedstawia COM <ph id="ph2">`BindToMoniker`</ph> metodę, która tworzy obiekt, który można rzutować na każdy interfejs COM wymagane.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>This method provides the same functionality as the <ph id="ph1">`GetObject`</ph> method in Visual Basic 6.0 and <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph>.</source>
          <target state="translated">Ta metoda zapewnia te same funkcje co <ph id="ph1">`GetObject`</ph> metody w Visual Basic 6.0 i <ph id="ph2">[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>An unrecognized HRESULT was returned by the unmanaged <ph id="ph1">&lt;see langword="BindToMoniker" /&gt;</ph> method.</source>
          <target state="translated">Nierozpoznany HRESULT został zwrócony przez niezarządzanej <ph id="ph1">&lt;see langword="BindToMoniker" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source>The object whose CCW holds a reference counted handle.</source>
          <target state="translated">Obiekt, którego CCW zawiera odwołanie zliczane dojścia.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source>The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</source>
          <target state="translated">Dojście jest silne, jeśli liczba odwołań na lewo jest większa niż zero; w przeciwnym razie jest słaba.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to change the strength of the handle on the <bpt id="p1">&lt;c&gt;</bpt>otp<ept id="p1">&lt;/c&gt;</ept> parameter to weak, regardless of its reference count; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to reset the handle strength on <bpt id="p2">&lt;c&gt;</bpt>otp<ept id="p2">&lt;/c&gt;</ept> to be reference counted.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zmienić siły uchwytu na <bpt id="p1">&lt;c&gt;</bpt>otp<ept id="p1">&lt;/c&gt;</ept> parametr niska, niezależnie od jego liczba odwołań; <ph id="ph2">&lt;see langword="false" /&gt;</ph> można zresetować siły uchwytu na <bpt id="p2">&lt;c&gt;</bpt>otp<ept id="p2">&lt;/c&gt;</ept> zliczane odwołania.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source>Changes the strength of an object's <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> (CCW) handle.</source>
          <target state="translated">Zmienia siły obiektu <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> dojścia (CCW).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A&gt;</ph> is used for object pooling functionality and should never be called by user code directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A&gt;</ph> jest używany dla obiekt buforowanie funkcjonalność i nigdy nie powinna być wywoływana przez kod użytkownika bezpośrednio.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>Notifies the runtime to clean up all <bpt id="p1">[</bpt>Runtime Callable Wrappers<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCWs) allocated in the current context.</source>
          <target state="translated">Powiadamia środowiska wykonawczego, aby wyczyścić wszystkie <bpt id="p1">[</bpt>wywoływane otoki środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCWs) przydzielone w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>The interop system pumps messages while it attempts to clean up RCWs.</source>
          <target state="translated">Międzyoperacyjne systemu pompy wiadomości, gdy próbuje wyczyścić RCWs.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</source>
          <target state="translated">To zapewnia który Oczyszczanie RCWs jednowątkowego apartamentu (STA) odbywa się w wszystkich aplikacji, w tym aplikacji, które nie pompa wystarczająco często.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>However, some applications that do pump appropriately are very sensitive to where pumping occurs.</source>
          <target state="translated">Jednak niektóre aplikacje, które pompa odpowiednio są bardzo poufne, do której występuje przekazywania.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</source>
          <target state="translated">Gdy system międzyoperacyjnego pompy wiadomości w tych aplikacjach w miejscach, które są nieoczekiwany, aplikacja może wystąpić problemy ponowne wejście, które są trudne do diagnozowania.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</source>
          <target state="translated">W związku z tym aplikacje muszą mieć możliwość kontrolowania własnych przekazywanie dla konkretnego STA oraz kontrolowanie oczyszczania RCWs.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</source>
          <target state="translated">Jednak deweloperzy kontrolować często tylko podzbiór wątków używanych w aplikacjach i w związku z tym nie upewnij się, że wszystkie wątki są prawidłowo pompowania.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>To solve this problem:</source>
          <target state="translated">Aby rozwiązać ten problem:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>Use the <ph id="ph1">&lt;xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType&gt;</ph> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType&gt;</ph> metodę, aby wyłączyć automatyczne oczyszczanie RCWs i przekazywanie komunikatów występujący na podstawie dla każdego wątku.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</source>
          <target state="translated">Dzięki temu deweloperzy mogą zrezygnować z automatycznego czyszczenia i odpowiednie przekazywanie komunikatów.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A&gt;</ph> method to notify the runtime to clean up all RCWs that are allocated in the current context.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A&gt;</ph> metodę, aby powiadomić środowiska uruchomieniowego, aby wyczyścić wszystkie RCWs, które są przydzielane w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</source>
          <target state="translated">Ta metoda pomocnika umożliwia deweloperom precyzyjne sterowanie, gdy środowisko uruchomieniowe wykonuje oczyszczania w bieżącym kontekście.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</source>
          <target state="translated">Kopiuje dane z tablicą zarządzanego na niezarządzany wskaźnik pamięci lub niezarządzany wskaźnik pamięci do zarządzanego tablicy.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</source>
          <target state="translated">Kopie danych z jednowymiarowa, zarządzane tablicy 8-bitową liczbę całkowitą bez znaku, tak aby niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29&gt;</ph> overload, and then copies the unmanaged array back to managed memory by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> overload.</source>
          <target state="translated">Poniższy przykładowy kod kopiuje tablicy w pamięci niezarządzanej przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29&gt;</ph> przeciążenia, a następnie kopiuje niezarządzane tablicy z powrotem na pamięci zarządzanej przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> przeciążenia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</source>
          <target state="translated">Kopie danych z jednowymiarowa, zarządzane tablicy znaków do niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="length" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph3">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</source>
          <target state="translated">Kopie danych z jednowymiarowa, zarządzane podwójnej precyzji zmiennoprzecinkowe numer tablicy, tak aby niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</source>
          <target state="translated">Kopiuje dane z tablicą jednowymiarową, zarządzane 16-bitową liczbę całkowitą ze znakiem niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</source>
          <target state="translated">Kopiuje dane z tablicą jednowymiarową, zarządzane 32-bitowych liczbę całkowitą ze znakiem niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</source>
          <target state="translated">Kopiuje dane z tablicą jednowymiarową, zarządzane 64-bitowych liczbę całkowitą ze znakiem niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci do tablicy zarządzanej 8-bitową nieznakowaną liczbą całkowitą.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed character array.</source>
          <target state="translated">Kopiuje dane z niezarządzany wskaźnik pamięci, do tablicy znaków zarządzanych.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci, zarządzanych tablicy numer zmiennoprzecinkowe podwójnej precyzji.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci do tablicy zarządzanej 16-bitową liczbę całkowitą ze znakiem.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci do tablicy zarządzanej 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci do tablicy zarządzanej 64-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the<ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające<ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</source>
          <target state="translated">W poniższym przykładzie kopiuje tablicy do niezarządzanej pamięci i następnie kopiuje niezarządzane tablicy pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> array.</source>
          <target state="translated">Kopiuje dane z niezarządzany wskaźnik pamięci do zarządzanego <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> tablicy.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>Therefore, the unmanaged data that corresponds to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiada <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Należy zainicjować tablicy zarządzanej z rozmiarem odpowiedniego przed wywołaniem <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>The memory pointer to copy from.</source>
          <target state="translated">Wskaźnik pamięci do skopiowania.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">Aby skopiować do tablicy.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>The zero-based index in the destination array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy docelowej, gdzie powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</source>
          <target state="translated">Kopie danych z niezarządzany wskaźnik pamięci, zarządzanych tablicy numer zmiennoprzecinkowych pojedynczej precyzji.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>Unmanaged, C-style arrays do not contain bounds information, which prevents the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`length`</ph> parameters from being validated.</source>
          <target state="translated">Niezarządzane, tablic w stylu języka C nie zawierają informacji granic, co zapobiega <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`length`</ph> parametry z weryfikacji.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>Thus, the unmanaged data corresponding to the <ph id="ph1">`source`</ph> parameter populates the managed array regardless of its usefulness.</source>
          <target state="translated">W związku z tym niezarządzanych danych odpowiadające <ph id="ph1">`source`</ph> parametru wypełnia tablicy zarządzanej, niezależnie od jego użyteczność.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>You must initialize the managed array with the appropriate size before calling this method.</source>
          <target state="translated">Przed wywołaniem tej metody należy zainicjować tablicy zarządzanej z odpowiedniego rozmiaru.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> array to an unmanaged memory pointer.</source>
          <target state="translated">Zarządzane kopie danych z jednowymiarowa, <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> tablicy, tak aby niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu jednowymiarowa zarządzane <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> tablicy do niezarządzanego tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>, <ph id="ph3">&lt;paramref name="startIndex" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>The one-dimensional array to copy from.</source>
          <target state="translated">Jednowymiarowa tablica, do skopiowania.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>The zero-based index in the source array where copying should start.</source>
          <target state="translated">Liczony od zera indeks w tablicy źródłowej, na którym powinna zaczynać się kopiowanie.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>The memory pointer to copy to.</source>
          <target state="translated">Wskaźnik pamięci, aby skopiować do.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>The number of array elements to copy.</source>
          <target state="translated">Liczba elementów tablicy do skopiowania.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</source>
          <target state="translated">Kopie danych z jednowymiarowa, zarządzane pojedynczej precyzji zmiennoprzecinkowe numer tablicy, tak aby niezarządzany wskaźnik pamięci.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</source>
          <target state="translated">Ta metoda służy do kopiowania podzestawu tablicą jednowymiarową zarządzanych do niezarządzanych tablicy w stylu języka C.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="length" /&gt;</ph> are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> i <ph id="ph2">&lt;paramref name="length" /&gt;</ph> nie są prawidłowe.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="length" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph>, <ph id="ph2">&lt;paramref name="startIndex" /&gt;</ph>, <ph id="ph3">&lt;paramref name="destination" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="length" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>The outer <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> pointer.</source>
          <target state="translated">Zewnętrznego <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> wskaźnika.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>An object to aggregate.</source>
          <target state="translated">Obiekt do zagregowania.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>Aggregates a managed object with the specified COM object.</source>
          <target state="translated">Agreguje zarządzanego obiektu z określonym obiektem COM.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>The inner <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> pointer of the managed object.</source>
          <target state="translated">Wewnętrzny <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> wskaźnika obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A&gt;</ph> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer of the managed object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A&gt;</ph> Metody agreguje wewnętrzny wskaźnik zarządzanego obiektu zarządzanego przy użyciu określonego wskaźnika zewnętrzne, a następnie zwraca wewnętrzny <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>The type of the managed object to aggregate.</source>
          <target state="translated">Typ obiektu zarządzanego do zagregowania.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>The outer <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer.</source>
          <target state="translated">Zewnętrznego <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>The managed object to aggregate.</source>
          <target state="translated">Obiekt zarządzany do zagregowania.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>Aggregates a managed object of the specified type with the specified COM object.</source>
          <target state="translated">Agreguje zarządzanego obiektu określonego typu z określonym obiektem COM.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>The inner <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer of the managed object.</source>
          <target state="translated">Wewnętrzny <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A&gt;</ph> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer of the managed object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A&gt;</ph> Metoda agreguje wewnętrzny wskaźnik zarządzanych zarządzanego obiektu określonego typu z określonego wskaźnika zewnętrzne i zwraca wewnętrzny <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The object to be wrapped.</source>
          <target state="translated">Obiekt w celu jej opakowania.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The type of wrapper to create.</source>
          <target state="translated">Typ otoki do utworzenia.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>Wraps the specified COM object in an object of the specified type.</source>
          <target state="translated">Otacza określonego obiektu COM obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The newly wrapped object that is an instance of the desired type.</source>
          <target state="translated">Nowo opakowana obiekt, który jest wystąpieniem żądanego typu.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A&gt;</ph> converts one COM class type, typically the base <ph id="ph2">`__ComObject`</ph> type, to another COM class type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A&gt;</ph> Konwertuje jeden typ klasy COM, zwykle base <ph id="ph2">`__ComObject`</ph> typu do innego typu klasy COM.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The input COM object, represented by parameter <ph id="ph1">`o`</ph>, is a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW).</source>
          <target state="translated">Obiekt wejściowy COM reprezentowanego przez parametr <ph id="ph1">`o`</ph>, jest <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>Both the <ph id="ph1">`t`</ph> and <ph id="ph2">`o`</ph> parameters must be classes whose signatures are attributed with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Zarówno <ph id="ph1">`t`</ph> i <ph id="ph2">`o`</ph> parametry muszą być klasy, których podpisy są opatrzone <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool applies this attribute for you when it imports a type library.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzie dotyczy ten atrybut można podczas importowania biblioteki typów.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</source>
          <target state="translated">W kodzie źródłowym w przypadku utworzenia otoki RCW ręcznie, zarządzane podpisie, który reprezentuje oryginalnego coclass oznaczającego jego źródeł COM należy zastosować ten atrybut.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>Tlbimp.exe imports a COM <bpt id="p1">[</bpt>coclass<ept id="p1">](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)</ept> as a managed class and an interface.</source>
          <target state="translated">Tlbimp.exe importuje COM <bpt id="p1">[</bpt>coclass<ept id="p1">](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)</ept> jako zarządzanej klasy i interfejsu.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</source>
          <target state="translated">Interfejs coclass ma taką samą nazwę jak oryginalny klasy coclass i zarządzanej klasy ma nazwę oryginalnego coclass dołączony "Class".</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>For example, a coclass called <ph id="ph1">`MyCoclass`</ph> becomes a coclass interface called <ph id="ph2">`MyCoclass`</ph> and a managed class called <ph id="ph3">`MyCoclassClass`</ph>.</source>
          <target state="translated">Na przykład o nazwie klasy coclass <ph id="ph1">`MyCoclass`</ph> staje się interfejs coclass, o nazwie <ph id="ph2">`MyCoclass`</ph> i zarządzanej klasy o nazwie <ph id="ph3">`MyCoclassClass`</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>Since <ph id="ph1">`t`</ph> must be a class, not an interface, be sure to specify the managed class (<ph id="ph2">`MyCoclassClass`</ph>) and not the coclass interface.</source>
          <target state="translated">Ponieważ <ph id="ph1">`t`</ph> musi być klasą nie interfejs, należy określić zarządzanej klasy (<ph id="ph2">`MyCoclassClass`</ph>) i nie interfejsu klasy coclass.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>You lose the identity of the input COM object because a new RCW instance wraps the <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer exposed by the original RCW.</source>
          <target state="translated">Utracisz tożsamość dane wejściowe obiektu modelu COM, ponieważ nowe wystąpienie otoki RCW opakowuje <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika udostępnianych przez oryginalnego otoki RCW.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> must derive from <ph id="ph2">&lt;see langword="__ComObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> musi pochodzić od <ph id="ph2">&lt;see langword="__ComObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> typu.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> cannot be converted to the destination type because it does not support all required interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Nie można przekonwertować na typ docelowy, ponieważ nie obsługuje wszystkich wymaganych interfejsów.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The type of object to wrap.</source>
          <target state="translated">Typ obiektu do zakodowania.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The type of object to return.</source>
          <target state="translated">Typ obiektu, który będzie zwracany.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The object to be wrapped.</source>
          <target state="translated">Obiekt w celu jej opakowania.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>Wraps the specified COM object in an object of the specified type.</source>
          <target state="translated">Otacza określonego obiektu COM obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The newly wrapped object.</source>
          <target state="translated">Obiekt nowo opakowana.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29&gt;</ph> converts a COM object of type <ph id="ph2">`T`</ph> to the <ph id="ph3">`TWrapper`</ph> COM class type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29&gt;</ph> Konwertuje obiekt modelu COM typu <ph id="ph2">`T`</ph> do <ph id="ph3">`TWrapper`</ph> modelu COM typu klasy.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The input COM object, represented by parameter <ph id="ph1">`o`</ph>, is a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW).</source>
          <target state="translated">Obiekt wejściowy COM reprezentowanego przez parametr <ph id="ph1">`o`</ph>, jest <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW).</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>Both the <ph id="ph1">`T`</ph> generic type parameter and the <ph id="ph2">`o`</ph> parameter must be classes whose signatures are attributed with the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> attribute.</source>
          <target state="translated">Zarówno <ph id="ph1">`T`</ph> parametr typu ogólnego i <ph id="ph2">`o`</ph> parametr musi być klasy, których podpisy są opatrzone <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool applies this attribute for you when it imports a type library.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzie dotyczy ten atrybut można podczas importowania biblioteki typów.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</source>
          <target state="translated">W kodzie źródłowym w przypadku utworzenia otoki RCW ręcznie, zarządzane podpisie, który reprezentuje oryginalnego coclass oznaczającego jego źródeł COM należy zastosować ten atrybut.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>Tlbimp.exe imports a COM <bpt id="p1">[</bpt>coclass<ept id="p1">](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)</ept> as a managed class and an interface.</source>
          <target state="translated">Tlbimp.exe importuje COM <bpt id="p1">[</bpt>coclass<ept id="p1">](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)</ept> jako zarządzanej klasy i interfejsu.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</source>
          <target state="translated">Interfejs coclass ma taką samą nazwę jak oryginalny klasy coclass i zarządzanej klasy ma nazwę oryginalnego coclass dołączony "Class".</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>For example, a coclass called <ph id="ph1">`MyCoclass`</ph> becomes a coclass interface called <ph id="ph2">`MyCoclass`</ph> and a managed class called <ph id="ph3">`MyCoclassClass`</ph>.</source>
          <target state="translated">Na przykład o nazwie klasy coclass <ph id="ph1">`MyCoclass`</ph> staje się interfejs coclass, o nazwie <ph id="ph2">`MyCoclass`</ph> i zarządzanej klasy o nazwie <ph id="ph3">`MyCoclassClass`</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>Because<ph id="ph1">`T`</ph> must be a class, not an interface, be sure to specify the managed class (<ph id="ph2">`MyCoclassClass`</ph>) and not the <ph id="ph3">`coclass`</ph> interface.</source>
          <target state="translated">Ponieważ<ph id="ph1">`T`</ph> musi być klasą nie interfejs, należy określić zarządzanej klasy (<ph id="ph2">`MyCoclassClass`</ph>) i nie <ph id="ph3">`coclass`</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>You lose the identity of the input COM object, because a new RCW instance wraps the <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> pointer exposed by the original RCW.</source>
          <target state="translated">Utrata tożsamości wprowadzanego obiektu modelu COM, ponieważ nowe wystąpienie otoki RCW opakowuje <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> udostępnianych przez oryginalnego otoki RCW wskaźnika.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> must derive from <ph id="ph2">&lt;see langword="__ComObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> musi pochodzić od <ph id="ph2">&lt;see langword="__ComObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> typu.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> cannot be converted to the <ph id="ph2">&lt;paramref name="TWrapper" /&gt;</ph> because it does not support all required interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Nie można przekonwertować na <ph id="ph2">&lt;paramref name="TWrapper" /&gt;</ph> , ponieważ nie obsługuje wszystkich wymaganych interfejsów.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>Type of a formatted class.</source>
          <target state="translated">Typ klasy sformatowany.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>This provides the layout information necessary to delete the buffer in the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Zapewnia informacje o układzie, należy usunąć buforu w <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>Frees all substructures that the specified unmanaged memory block points to.</source>
          <target state="translated">Zwalnia wszystkie struktur podrzędnych, które wskazuje blok określonego niezarządzanego pamięci.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</source>
          <target state="translated">Ta metoda służy do zwolnienia pola typu odwołania, na przykład ciągi niezarządzane struktury.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>Unlike its fields, a structure can be a value type or a reference type.</source>
          <target state="translated">W przeciwieństwie do jego pola struktury może być typem wartościowym lub typem referencyjnym.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</source>
          <target state="translated">Typ wartości struktury, zawierające pola typu wartości (wszystkie kopiowalne) nie mają odwołań należy oddzielić którego pamięci.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType&gt;</ph> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType&gt;</ph> — Metoda używa tej metody w celu uniknięcia przecieki pamięci, gdy ponowne użycie pamięci zajmowane przez strukturę.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> calls the COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148633)</ept> function, which, in turn, frees an allocated string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> wywołuje COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148633)</ept> funkcji, która z kolei zwalnia przydzielone ciągu.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>In addition to <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class provides two other memory-deallocation methods: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Oprócz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasa udostępnia dwie metody dezalokacja pamięci: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> has an automatic layout.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> ma układ automatyczny.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>Use sequential or explicit instead.</source>
          <target state="translated">Zamiast tego użyj sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>The type of the formatted structure.</source>
          <target state="translated">Typ struktury sformatowany.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>This provides the layout information necessary to delete the buffer in the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Zapewnia informacje o układzie, należy usunąć buforu w <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>Frees all substructures of a specified type that the specified unmanaged memory block points to.</source>
          <target state="translated">Zwalnia wszystkie podstruktury określonego typu, który wskazuje blok określonego niezarządzanego pamięci.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>You can use this method to free reference type fields, such as strings, of an unmanaged structure.</source>
          <target state="translated">Ta metoda służy do zwolnienia odwołania pola typu, na przykład ciągi niezarządzane struktury.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>Unlike its fields, a structure can be a value type or a reference type.</source>
          <target state="translated">W przeciwieństwie do jego pola struktury może być typem wartościowym lub typem referencyjnym.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</source>
          <target state="translated">Wartość typu struktury, zawierające pola typu wartości (wszystkie kopiowalne) nie mają odwołań należy oddzielić którego pamięci.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType&gt;</ph> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType&gt;</ph> — Metoda używa tej metody w celu uniknięcia przecieki pamięci, gdy ponowne użycie pamięci zajmowane przez strukturę.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> calls the COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148633)</ept> function, which, in turn, frees an allocated string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> wywołuje COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148633)</ept> funkcji, która z kolei zwalnia przydzielone ciągu.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> has an automatic layout.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> ma układ automatyczny.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>Use sequential or explicit instead.</source>
          <target state="translated">Zamiast tego użyj sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>The RCW to be released.</source>
          <target state="translated">Otoka RCW do zwolnienia.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>Releases all references to a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW) by setting its reference count to 0.</source>
          <target state="translated">Zwalnia wszystkie odwołania do <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW) ustawiając jego liczebności referencyjnej równą 0.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>The new value of the reference count of the RCW associated with the <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter, which is 0 (zero) if the release is successful.</source>
          <target state="translated">Nowa wartość liczebności referencyjnej równej otoki RCW skojarzone z <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parametru, który jest 0 (zero), jeśli wersji zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> method releases the managed reference to a COM object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> Metoda zwalnia zarządzane odwołania do obiektu COM.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method in a loop until it returns 0 (zero).</source>
          <target state="translated">Wywołanie tej metody jest odpowiednikiem wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> w pętli do momentu zwraca 0 (zero).</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</source>
          <target state="translated">Gdy liczba odwołań do obiektu COM staje się 0, obiektu COM zazwyczaj zostanie zwolniona, chociaż to zależy od implementacji obiektu modelu COM, niezależnych od środowiska uruchomieniowego.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>However, the RCW can still exist, waiting to be garbage-collected.</source>
          <target state="translated">Otoka RCW może jednak nadal istnieć, oczekujących na przetworzenie zbierane pamięci.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>The COM object cannot be used after it has been separated from its underlying RCW.</source>
          <target state="translated">Nie można użyć obiektu COM, po został oddzielony od swojej podstawowej otoki RCW.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>If you try to call a method on the RCW after its reference count becomes 0, a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InvalidComObjectException&gt;</ph> will be thrown.</source>
          <target state="translated">Próba wywołania metody na otoki RCW, po jego liczebności referencyjnej 0, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InvalidComObjectException&gt;</ph> zostanie wygenerowany.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is not a valid COM object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie jest prawidłowym obiektem COM.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>The address of the BSTR to be freed.</source>
          <target state="translated">Adres BSTR ma zostać zwolniony.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>Frees a <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph> using the COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148633)</ept> function.</source>
          <target state="translated">Zwalnia <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph> za pomocą modelu COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148633)</ept> funkcji.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>Like <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType&gt;</ph>, you can use this method to deallocate memory.</source>
          <target state="translated">Podobnie jak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType&gt;</ph>, można użyć tej metody można cofnąć alokacji pamięci.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A&gt;</ph> calls the COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148633)</ept> function, which frees memory allocated by any of the following unmanaged methods: <ph id="ph2">`SysAllocString`</ph>, <ph id="ph3">`SysAllocStringByteLen`</ph>, <ph id="ph4">`SysAllocStringLen`</ph>, <ph id="ph5">`SysReAllocString`</ph>, <ph id="ph6">`SysReAllocStringLen`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A&gt;</ph> wywołuje COM <bpt id="p1">[</bpt>SysFreeString<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148633)</ept> funkcji, dzięki czemu pamięci przydzielonej przy użyciu jednej z następujących metod niezarządzanego: <ph id="ph2">`SysAllocString`</ph>, <ph id="ph3">`SysAllocStringByteLen`</ph>, <ph id="ph4">`SysAllocStringLen`</ph>, <ph id="ph5">`SysReAllocString`</ph>, <ph id="ph6">`SysReAllocStringLen`</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>You can call unmanaged methods such as these with platform invoke.</source>
          <target state="translated">Można wywoływać metod niezarządzanych, takich jak te z platformą wywołania.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>For details, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>wykorzystywanie niezarządzanych funkcji DLL<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>The address of the memory to be freed.</source>
          <target state="translated">Adres pamięci, który ma zostać zwolniony.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>Frees a block of memory allocated by the unmanaged COM task memory allocator.</source>
          <target state="translated">Zwalnia blok pamięci przydzielonej przez niezarządzane okno alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> to free any memory allocated by <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A&gt;</ph>, or any equivalent unmanaged method.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> można zwolnić wszystkie pamięci przydzielonej przez <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A&gt;</ph>, lub dowolnego równoważna niezarządzanych metody.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>If the <ph id="ph1">`ptr`</ph> parameter is <ph id="ph2">`null`</ph>, the method does nothing.</source>
          <target state="translated">Jeśli <ph id="ph1">`ptr`</ph> parametr jest <ph id="ph2">`null`</ph>, metoda nie działa.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> exposes the COM <bpt id="p1">[</bpt>CoTaskMemFree<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148638)</ept> function, which frees all bytes so that you can no longer use the memory that the <ph id="ph2">`ptr`</ph> parameter points to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph> przedstawia COM <bpt id="p1">[</bpt>CoTaskMemFree<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148638)</ept> funkcji, dzięki czemu wszystkie bajty, dzięki czemu może już używać pamięci który <ph id="ph2">`ptr`</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>In addition to <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class provides two other memory-deallocation methods: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Oprócz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasa udostępnia dwie metody dezalokacja pamięci: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>The handle returned by the original matching call to <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Dojście zwrócony przez wywołanie oryginalnego pasującego <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>Frees memory previously allocated from the unmanaged memory of the process.</source>
          <target state="translated">Zwalnia pamięć przydzielona wcześniej z niezarządzanej pamięci procesu.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> to free any memory from the global heap allocated by <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph>, or any equivalent unmanaged API method.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> można zwolnić wszystkie pamięci sterty globalne przydzielonej przez <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph>, lub równoważne żadnych niezarządzanych metody interfejsu API.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>If the <ph id="ph1">`hglobal`</ph> parameter is <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> the method does nothing.</source>
          <target state="translated">Jeśli <ph id="ph1">`hglobal`</ph> jest parametr <ph id="ph2">&lt;xref:System.IntPtr.Zero?displayProperty=nameWithType&gt;</ph> metody nie działają.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> exposes the <bpt id="p1">[</bpt>LocalFree<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148640)</ept> function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by <ph id="ph2">`hglobal`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> przedstawia <bpt id="p1">[</bpt>LocalFree<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148640)</ept> funkcji Kernel32.DLL, dzięki czemu wszystkie bajty, dzięki czemu może już używać pamięci wskazywanej przez <ph id="ph2">`hglobal`</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>In addition to <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class provides two other memory-deallocation API methods: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</source>
          <target state="translated">Oprócz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasa udostępnia dwa inne-dezalokacja pamięci metody interfejsu API: <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>The following example demonstrates how to convert the contents of a managed <ph id="ph1">&lt;xref:System.String&gt;</ph> class to unmanaged memory and then dispose of the unmanaged memory when done.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób konwertowania zawartości zarządzanego <ph id="ph1">&lt;xref:System.String&gt;</ph> klasy do niezarządzanej pamięci, a następnie usuwa niezarządzanej pamięci, jeśli zostaną wykonane.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>The type to generate a GUID for.</source>
          <target state="translated">Typ do generowania identyfikatora GUID dla.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</source>
          <target state="translated">Zwraca unikatowy identyfikator globalny (GUID) dla określonego typu lub generuje identyfikator GUID przy użyciu algorytmu używane przez Eksporter biblioteki typów (Tlbexp.exe).</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>An identifier for the specified type.</source>
          <target state="translated">Identyfikator dla określonego typu.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>If the type has a GUID in the metadata, it is returned.</source>
          <target state="translated">Jeśli typ ma identyfikator GUID w metadanych, jest zwracana.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>Otherwise, a GUID is automatically generated.</source>
          <target state="translated">W przeciwnym razie identyfikator GUID jest generowany automatycznie.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</source>
          <target state="translated">Ta metoda umożliwia programowo należy określić identyfikator GUID modelu COM dla dowolnego typu zarządzanego, w tym typy COM niewidoczne.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>Class interfaces are the only exception because they do not correspond to a managed type.</source>
          <target state="translated">Interfejsy klasy są jedynym wyjątkiem, ponieważ nie odpowiadają typu zarządzanego.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A&gt;</ph> provides the same functionality as the <ph id="ph2">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A&gt;</ph> zapewnia te same funkcje co <ph id="ph2">&lt;xref:System.Type.GUID%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>The type to get a ProgID for.</source>
          <target state="translated">Typ do pobrania identyfikatora programu.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>Returns a programmatic identifier (ProgID) for the specified type.</source>
          <target state="translated">Zwraca identyfikator programowy (ProgID) dla określonego typu.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>The ProgID of the specified type.</source>
          <target state="translated">Identyfikator ProgID określonego typu.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>If the type has a ProgID in the metadata, that ProgID is returned.</source>
          <target state="translated">Jeśli typ ma identyfikator ProgID w metadanych, zwracana ProgID.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>Otherwise, a ProgID is generated based on the fully qualified name of the type.</source>
          <target state="translated">W przeciwnym razie identyfikator ProgID jest generowany, oparte na w pełni kwalifikowana nazwa typu.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not a class that can be create by COM.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Parametr nie jest klasą, który można utworzyć w modelu COM.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>The class must be public, have a public default constructor, and be COM visible.</source>
          <target state="translated">Klasa musi być publiczna, mieć publicznego konstruktora domyślnego i musi być widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The programmatic identifier (ProgID) of the object that was requested.</source>
          <target state="translated">Identyfikator programowy (ProgID) żądanego obiektu.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Obtains a running instance of the specified object from the running object table (ROT).</source>
          <target state="translated">Pobiera działającego wystąpienia określonego obiektu z tabeli uruchomionego obiektu. (zaprojektowana).</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The object that was requested; otherwise <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Obiekt, którego zażądano; w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>You can cast this object to any COM interface that it supports.</source>
          <target state="translated">Można rzutować tego obiektu do dowolnego interfejsu COM, który go obsługuje.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A&gt;</ph> exposes the COM <bpt id="p1">[</bpt>GetActiveObject<ept id="p1">](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)</ept> function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (<ph id="ph2">`ProgID`</ph>) expected by this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A&gt;</ph> przedstawia COM <bpt id="p1">[</bpt>GetActiveObject<ept id="p1">](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)</ept> funkcji OLEAUT32. BIBLIOTEKI DLL; Jednak te ostatnie oczekuje identyfikator klasy (CLSID) zamiast identyfikator programowy (<ph id="ph2">`ProgID`</ph>) oczekiwany przez tę metodę.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>To obtain a running instance of a COM object without a registered <ph id="ph1">`ProgID`</ph>, use platform invoke to define the COM <bpt id="p1">[</bpt>GetActiveObject<ept id="p1">](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)</ept> function.</source>
          <target state="translated">Uzyskanie uruchomione wystąpienie obiektu COM bez zarejestrowanego <ph id="ph1">`ProgID`</ph>, użycie wywołania platformy do definiowania modelu COM <bpt id="p1">[</bpt>GetActiveObject<ept id="p1">](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)</ept> funkcji.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>For a description of platform invoke, see <bpt id="p1">[</bpt>Consuming Unmanaged DLL Functions<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</source>
          <target state="translated">Opis platformy invoke, zobacz <bpt id="p1">[</bpt>wykorzystywanie niezarządzanych funkcji DLL<ept id="p1">](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>ProgID and CLSID</source>
          <target state="translated">ProgID i CLSID</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</source>
          <target state="translated">Klucze w poddrzewie wpisów z HKEY_CLASSES_ROOT rejestru zawiera różne typy podkluczy.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</source>
          <target state="translated">Większość podkluczy to ProgID, które mapują przyjazną dla użytkownika ciąg identyfikator CLSID.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Applications often use these human-readable strings instead of the numeric CLSIDs.</source>
          <target state="translated">Aplikacje często wykorzystują te ciągi czytelny dla człowieka zamiast CLSID liczbowych.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</source>
          <target state="translated">Składnik ma często ProgID niezależny od wersji, który jest zamapowany do najnowszej wersji składnika, który jest zainstalowany w systemie.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</source>
          <target state="translated">Aplikacje i składniki służy głównie ProgID do pobierania ich odpowiednich CLSID.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The following example was run on a computer that was configured with a running instance of Microsoft Word.</source>
          <target state="translated">Poniższy przykład została uruchomiona na komputerze, który został skonfigurowany z działającego wystąpienia programu Microsoft Word.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>There were no instances of Microsoft Excel running.</source>
          <target state="translated">Nie znaleziono żadnych wystąpień programu Microsoft Excel.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The example calls <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A&gt;</ph> twice.</source>
          <target state="translated">Przykład wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A&gt;</ph> dwa razy.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the <ph id="ph1">`Word.Application`</ph> object).</source>
          <target state="translated">Pierwsze wywołanie próbuje pobrać odwołania do wystąpienia programu Microsoft Word (wystąpienie <ph id="ph1">`Word.Application`</ph> obiektu).</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an <ph id="ph1">`Excel.Application`</ph> object).</source>
          <target state="translated">Drugie wywołanie próbuje pobrać odwołania do wystąpienia programu Microsoft Excel (wystąpienie <ph id="ph1">`Excel.Application`</ph> obiektu).</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The code retrieves a reference to an instance of Microsoft Word successfully.</source>
          <target state="translated">Ten kod pobiera odwołanie do wystąpienia programu Microsoft Word pomyślnie.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>.</source>
          <target state="translated">Jednakże, ponieważ nie jest uruchomiony program Microsoft Excel, próba pobrania drugi obiekt zgłasza <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>The object was not found.</source>
          <target state="translated">Nie znaleziono obiektu.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Returns an interface pointer that represents an interface for an object.</source>
          <target state="translated">Zwraca wskaźnika interfejsu, który reprezentuje interfejs dla obiekt.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The object that provides the interface.</source>
          <target state="translated">Obiekt, który udostępnia interfejs.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The type of interface that is requested.</source>
          <target state="translated">Typ interfejsu, który jest wymagane.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Returns a pointer to an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface that represents the specified interface on the specified object.</source>
          <target state="translated">Zwraca wskaźnik do <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejs, który reprezentuje określonego interfejsu określonego obiektu.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Custom query interface access is enabled by default.</source>
          <target state="translated">Dostęp do interfejsu niestandardowe zapytania jest domyślnie włączona.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The interface pointer that represents the specified interface for the object.</source>
          <target state="translated">Wskaźnik interfejsu reprezentujący określonego interfejsu dla obiektu.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>This method returns an interface pointer that represents the requested interface on the specified object.</source>
          <target state="translated">Ta metoda zwraca wartość wskaźnika interfejsu, reprezentujący żądanego interfejsu określonego obiektu.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</source>
          <target state="translated">Jest szczególnie przydatne, jeśli masz niezarządzane metody, która oczekuje wskaźnika interfejsu, należy przesłać.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu ta metoda powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Always use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> to decrement the reference count once you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> Aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>You must adhere to the rules defined by COM when using raw COM interface pointers.</source>
          <target state="translated">Musi być zgodny z regułami zdefiniowany w modelu COM w przypadku stosowania wskaźników interfejsów COM. raw.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> is useful when calling a method that exposes a COM object parameter as an <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type, or with custom marshaling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> jest przydatne w przypadku wywołania metody, która opisuje parametr obiektu modelu COM jako <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> typu, lub za pomocą przekazywanie niestandardowych.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</source>
          <target state="translated">Mimo że mniej typowe, służy ta metoda obiektu zarządzanego uzyskać wskaźnika do obiektu wywoływana otoka COM.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>For example, you can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> on a managed object that is exported to COM to obtain an interface pointer for <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Na przykład można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> wyeksportowany do modelu COM, aby uzyskać wskaźnika interfejsu dla obiektu zarządzanego <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (<ph id="ph1">`t`</ph>).</source>
          <target state="translated">Nie można uzyskać wskaźnika do klasy interfejsu, ponieważ interfejs klasy nie ma odpowiedniego typu do przekazania do drugiego parametru (<ph id="ph1">`t`</ph>).</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>Instead, use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</source>
          <target state="translated">Zamiast tego należy użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> do wywołania elementów członkowskich na domyślny interfejs wywoływana otoka COM, który jest zwykle interfejsu klasy automatycznego wysyłania.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> method overload allows query interface customization by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> Przeciążenie metody umożliwia dostosowywanie interfejsu zapytania domyślnie.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>To specify whether to apply query interface customization, use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> method overload.</source>
          <target state="translated">Aby określić, czy ma być stosowana dostosowywania interfejsu zapytania, użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> przeciążenie metody.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>For additional information, see the <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>, <bpt id="p2">[</bpt>Runtime Callable Wrapper<ept id="p2">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, and <bpt id="p3">[</bpt>Introducing the Class Interface<ept id="p3">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept> topics.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>, <bpt id="p2">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p2">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, i <bpt id="p3">[</bpt>wprowadzenie interfejsu klasy<ept id="p3">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept> tematów.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr nie jest interfejsem.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The type is not visible to COM.</source>
          <target state="translated">Typ nie jest widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter does not support the requested interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Parametru nie obsługuje żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The object that provides the interface.</source>
          <target state="translated">Obiekt, który udostępnia interfejs.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The type of interface that is requested.</source>
          <target state="translated">Typ interfejsu, który jest wymagane.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>One of the enumeration values that indicates whether to apply an <ph id="ph1">&lt;see langword="IUnknown::QueryInterface" /&gt;</ph> customization that is supplied by an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /&gt;</ph>.</source>
          <target state="translated">Jedną z wartości wyliczenia, które wskazuje, czy ma być stosowana <ph id="ph1">&lt;see langword="IUnknown::QueryInterface" /&gt;</ph> dostosowywania, która jest dostarczana przez <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>Returns a pointer to an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface that represents the specified interface on the specified object.</source>
          <target state="translated">Zwraca wskaźnik do <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejs, który reprezentuje określonego interfejsu określonego obiektu.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>Custom query interface access is controlled by the specified customization mode.</source>
          <target state="translated">Zapytanie niestandardowe interfejsu dostęp jest kontrolowany przez tryb określonego dostosowywania.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The interface pointer that represents the interface for the object.</source>
          <target state="translated">Wskaźnik interfejsu, który reprezentuje interfejs dla obiektu.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> lets you specify whether to apply query interface customization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> Umożliwia określenie, czy ma być stosowana dostosowywania interfejsu zapytania.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> overload to apply query interface customization by default.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29&gt;</ph> przeciążenia, aby domyślnie zastosować dostosowywania interfejsu zapytania.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr nie jest interfejsem.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The type is not visible to COM.</source>
          <target state="translated">Typ nie jest widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The object <ph id="ph1">&lt;paramref name="o" /&gt;</ph> does not support the requested interface.</source>
          <target state="translated">Obiekt <ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie obsługuje żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The type of <bpt id="p1">&lt;c&gt;</bpt>o<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ <bpt id="p1">&lt;c&gt;</bpt>o<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The type of interface to return.</source>
          <target state="translated">Typ interfejsu do zwrócenia.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The object that provides the interface.</source>
          <target state="translated">Obiekt, który udostępnia interfejs.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>Returns a pointer to an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface that represents the specified interface on an object of the specified type.</source>
          <target state="translated">Zwraca wskaźnik do <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejs, który reprezentuje określonego interfejsu obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>Custom query interface access is enabled by default.</source>
          <target state="translated">Dostęp do interfejsu niestandardowe zapytania jest domyślnie włączona.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The interface pointer that represents the <ph id="ph1">&lt;paramref name="TInterface" /&gt;</ph> interface.</source>
          <target state="translated">Wskaźnik interfejsu, który reprezentuje <ph id="ph1">&lt;paramref name="TInterface" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>This method returns an interface pointer that represents the <ph id="ph1">`TInterface`</ph> interface on the specified object.</source>
          <target state="translated">Ta metoda zwraca wartość wskaźnika interfejsu, który reprezentuje <ph id="ph1">`TInterface`</ph> interfejsu określonego obiektu.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</source>
          <target state="translated">Jest szczególnie przydatne, jeśli masz niezarządzane metody, która oczekuje wskaźnika interfejsu, należy przesłać.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu ta metoda powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>Always use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> method to decrement the reference count when you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> metody, aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>You must adhere to the rules defined by COM when using raw COM interface pointers.</source>
          <target state="translated">Musi być zgodny z regułami zdefiniowany w modelu COM w przypadku stosowania wskaźników interfejsów COM. raw.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> is useful when calling a method that exposes a COM object parameter as an <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type, or with custom marshaling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> jest przydatne w przypadku wywołania metody, która opisuje parametr obiektu modelu COM jako <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> typu, lub za pomocą przekazywanie niestandardowych.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</source>
          <target state="translated">Umożliwia także ta metoda obiektu zarządzanego uzyskać wskaźnika do obiektu wywoływana otoka COM, ale jest to mniej typowych.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>For example, you can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> on a managed object that is exported to COM to obtain an interface pointer for <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Na przykład można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> wyeksportowany do modelu COM, aby uzyskać wskaźnika interfejsu dla obiektu zarządzanego <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> method overload allows query interface customization by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29&gt;</ph> Przeciążenie metody umożliwia dostosowywanie interfejsu zapytania domyślnie.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>To specify whether to apply query interface customization, use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> method overload.</source>
          <target state="translated">Aby określić, czy ma być stosowana dostosowywania interfejsu zapytania, użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29&gt;</ph> przeciążenie metody.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>For additional information, see the <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>, <bpt id="p2">[</bpt>Runtime Callable Wrapper<ept id="p2">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, and <bpt id="p3">[</bpt>Introducing the Class Interface<ept id="p3">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept> topics.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>, <bpt id="p2">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p2">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, i <bpt id="p3">[</bpt>wprowadzenie interfejsu klasy<ept id="p3">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept> tematów.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The <ph id="ph1">&lt;paramref name="TInterface" /&gt;</ph> parameter is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TInterface" /&gt;</ph> Parametr nie jest interfejsem.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The type is not visible to COM.</source>
          <target state="translated">Typ nie jest widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parameter is an open generic type.</source>
          <target state="translated"><ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> Parametr jest otwartym typem ogólnym.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter does not support the <ph id="ph2">&lt;paramref name="TInterface" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Nie obsługuje parametru <ph id="ph2">&lt;paramref name="TInterface" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>The <ph id="ph1">&lt;paramref name="o" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>The object that provides the interface.</source>
          <target state="translated">Obiekt, który udostępnia interfejs.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>The type of interface that is requested.</source>
          <target state="translated">Typ interfejsu, który jest wymagane.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</source>
          <target state="translated">Zwraca wskaźnika interfejsu, reprezentujący określonego interfejsu dla obiektu, jeśli element wywołujący jest w tym samym kontekście co ten obiekt.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>The interface pointer specified by <ph id="ph1">&lt;paramref name="t" /&gt;</ph> that represents the interface for the specified object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the caller is not in the same context as the object.</source>
          <target state="translated">Wskaźnik interfejsu określonego przez <ph id="ph1">&lt;paramref name="t" /&gt;</ph> reprezentujący interfejs dla określonego obiektu lub <ph id="ph2">&lt;see langword="null" /&gt;</ph> Jeśli element wywołujący nie jest w tym samym kontekście jako obiekt.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>This method is the same as <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A&gt;</ph> except that it returns <ph id="ph2">`null`</ph> if the caller is not in the same context as the object.</source>
          <target state="translated">Ta metoda jest taka sama jak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A&gt;</ph> z tą różnicą, że zwraca <ph id="ph2">`null`</ph> Jeśli element wywołujący nie jest w tym samym kontekście jako obiekt.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</source>
          <target state="translated">Jest szczególnie przydatne, jeśli masz niezarządzane metody, która oczekuje wskaźnika interfejsu, należy przesłać.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is not an interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> nie jest interfejsem.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>The type is not visible to COM.</source>
          <target state="translated">Typ nie jest widoczne dla modelu COM.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> does not support the requested interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie obsługuje żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>The COM object that contains the data that you want.</source>
          <target state="translated">Obiekt COM, który zawiera dane, które mają.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>The key in the internal hash table of <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> to retrieve the data from.</source>
          <target state="translated">Klucz w tabeli skrótu wewnętrznego <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> można pobrać danych z.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>Retrieves data that is referenced by the specified key from the specified COM object.</source>
          <target state="translated">Pobiera dane, do którego odwołuje się przy użyciu określonego klucza z określonego obiektu COM.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>The data represented by the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter in the internal hash table of the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter.</source>
          <target state="translated">Dane reprezentowane przez <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parametru w tabeli skrótu wewnętrznego <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>All COM objects wrapped in a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> have an associated hash table, which <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A&gt;</ph> retrieves.</source>
          <target state="translated">Wszystkie obiekty COM ujęte w <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> ma skojarzone skrótu tabeli, która <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A&gt;</ph> pobiera.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType&gt;</ph> adds data to the hash table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType&gt;</ph> dodaje dane do tablicy skrótów.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>You should never have to call either method from your code.</source>
          <target state="translated">Nie trzeba należy wywołać metodę albo w kodzie.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a COM object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> Obiekt COM nie jest.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>An object that represents an interface method.</source>
          <target state="translated">Obiekt, który reprezentuje metodę interfejsu.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>Retrieves the virtual function table (v-table or VTBL) slot for a specified <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> type when that type is exposed to COM.</source>
          <target state="translated">Pobiera miejsca tabeli (v-table lub VTBL) funkcji wirtualnej dla określonej <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> wpisz podczas tego typu jest uwidaczniany w modelu COM.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The VTBL slot <ph id="ph1">&lt;paramref name="m" /&gt;</ph> identifier when it is exposed to COM.</source>
          <target state="translated">Gniazdo VTBL <ph id="ph1">&lt;paramref name="m" /&gt;</ph> identyfikator, gdy jest on ujawniać modelowi COM.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The zero-based slot number returned by this method accounts for three <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> and possibly four <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> methods, making the value of the first available slot either 3 or 7.</source>
          <target state="translated">Numer gniazda liczony od zera zwrócony przez konta tej metody dla trzech <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> i prawdopodobnie cztery <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> metod, określając wartość pierwszego dostępnego gniazda 3 lub 7.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</source>
          <target state="translated">Ta metoda służy do pobierania liczby miejsca dla członków interfejsów, które nie są widoczne z modelu COM i dla elementów interfejsów prywatnych.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</source>
          <target state="translated">Numery miejsca zwrócił odpowiadają numery v tabeli, które będzie zastrzeżone, jeśli typ został ujawniać modelowi COM.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</source>
          <target state="translated">Elementy członkowskie niewidoczne COM faktycznie zajmują miejsca w narażonych v-table, nawet jeśli klient modelu COM nie można użyć tego gniazda.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A&gt;</ph> on a class interface by passing <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> from a class.</source>
          <target state="translated">Nie można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A&gt;</ph> interfejsu klasy, przekazując <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> z klasy.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>For additional information, see <bpt id="p1">[</bpt>Introducing the Class Interface<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wprowadzenie interfejsu klasy<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is not an interface method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr nie jest metodą interfejsu.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The unmanaged function pointer to be converted.</source>
          <target state="translated">Wskaźnik funkcji niezarządzanej do skonwertowania.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The type of the delegate to be returned.</source>
          <target state="translated">Typ delegata, który ma zostać zwrócona.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>Converts an unmanaged function pointer to a delegate.</source>
          <target state="translated">Konwertuje wskaźnika funkcji niezarządzanej delegata.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>A delegate instance that can be cast to the appropriate delegate type.</source>
          <target state="translated">Wystąpienia delegata, która może być rzutowana na typ delegata odpowiednie.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</source>
          <target state="translated">W wersjach 1.0 i 1.1 programu .NET Framework było możliwe przekazywanie obiektu delegate reprezentujący metodę zarządzanego do kodu niezarządzanego jako wskaźnik funkcji, umożliwiając kodu niezarządzanego wywołać metodę zarządzanych za pomocą wskaźnika funkcji.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</source>
          <target state="translated">Można było również dla niezarządzanego kodu przekazywać ten wskaźnik funkcji kodu zarządzanego i wskaźnik został rozwiązany prawidłowo podstawowej metody zarządzanych.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>In the .NET Framework 2.0 and later versions, you can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A&gt;</ph> methods to marshal delegates in both directions.</source>
          <target state="translated">W programie .NET Framework 2.0 i nowszych wersjach, można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A&gt;</ph> metody kierowanie delegatów w obu kierunkach.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>With <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph>, <ph id="ph2">`ptr`</ph> is imported as a <ph id="ph3">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Z <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph>, <ph id="ph2">`ptr`</ph> zostanie zaimportowana jako <ph id="ph3">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>A <ph id="ph1">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> can be obtained for a managed delegate by calling <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A&gt;</ph> and passed as a parameter; it can then be called from inside the unmanaged method.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> można uzyskać przez wywołanie do zarządzanego obiektu delegowanego <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A&gt;</ph> i przekazać jako parametru; go może następnie zostać wywołana z wewnątrz metody niezarządzane.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</source>
          <target state="translated">Należy pamiętać, że organizator parametr może również kierować wskaźników funkcji do delegatów w programie .NET Framework 2.0 i nowszych wersjach.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph> method has the following restrictions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A&gt;</ph> Metoda ma następujące ograniczenia:</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>Generics are not supported in interop scenarios.</source>
          <target state="translated">Typy ogólne nie są obsługiwane w scenariuszach międzyoperacyjnego.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>You cannot pass an invalid function pointer to this method.</source>
          <target state="translated">Nieprawidłowy wskaźnik funkcji nie można przekazać do tej metody.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>You can use this method only for pure unmanaged function pointers.</source>
          <target state="translated">Tej metody można użyć tylko w przypadku czysty niezarządzanych wskaźników funkcji.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>You cannot use this method with function pointers obtained through C++ or from the <ph id="ph1">&lt;xref:System.RuntimeMethodHandle.GetFunctionPointer%2A&gt;</ph> method.</source>
          <target state="translated">Nie można użyć tej metody z wskaźników funkcji uzyskany za pomocą języka C++, lub z <ph id="ph1">&lt;xref:System.RuntimeMethodHandle.GetFunctionPointer%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>You cannot use this method to create a delegate from a function pointer to another managed delegate.</source>
          <target state="translated">Tej metody nie można użyć do utworzenia delegata z wskaźnik funkcji do innego obiektu delegowanego zarządzanych.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is not a delegate or is generic.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr nie jest obiektem delegowanym lub jest rodzajowy.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>The type of the delegate to return.</source>
          <target state="translated">Typ delegata do zwrócenia.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>The unmanaged function pointer to convert.</source>
          <target state="translated">Wskaźnik funkcji niezarządzanej do konwersji.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>Converts an unmanaged function pointer to a delegate of a specified type.</source>
          <target state="translated">Konwertuje wskaźnika funkcji niezarządzanej delegata określonego typu.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>A instance of the specified delegate type.</source>
          <target state="translated">Wystąpienie typu określonego delegata.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29&gt;</ph> methods to marshal delegates in both directions.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29&gt;</ph> metody kierowanie delegatów w obu kierunkach.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29&gt;</ph> method has the following restrictions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29&gt;</ph> Metoda ma następujące ograniczenia:</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>You cannot pass an invalid function pointer to this method.</source>
          <target state="translated">Nieprawidłowy wskaźnik funkcji nie można przekazać do tej metody.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>You can use this method only for pure unmanaged function pointers.</source>
          <target state="translated">Tej metody można użyć tylko w przypadku czysty niezarządzanych wskaźników funkcji.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>You cannot use this method with function pointers obtained through C++ or from the <ph id="ph1">&lt;xref:System.RuntimeMethodHandle.GetFunctionPointer%2A&gt;</ph> method.</source>
          <target state="translated">Nie można użyć tej metody z wskaźników funkcji uzyskany za pomocą języka C++, lub z <ph id="ph1">&lt;xref:System.RuntimeMethodHandle.GetFunctionPointer%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>You cannot use this method to create a delegate from a function pointer to another managed delegate.</source>
          <target state="translated">Tej metody nie można użyć do utworzenia delegata z wskaźnik funkcji do innego obiektu delegowanego zarządzanych.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>The <ph id="ph1">&lt;paramref name="TDelegate" /&gt;</ph> generic parameter is not a delegate, or it is an open generic type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TDelegate" /&gt;</ph> Parametr ogólny nie jest obiektem delegowanym lub jest otwartym typem ogólnym.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>The <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>A type that represents an interface or class.</source>
          <target state="translated">Typ, który reprezentuje interfejs lub klasa.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</source>
          <target state="translated">Pobiera ostatni miejsca w tabeli funkcji wirtualnych (v-table lub VTBL) typu po ujawniać modelowi COM.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>The last VTBL slot of the interface when exposed to COM.</source>
          <target state="translated">Ostatni miejsca VTBL interfejsu podczas ujawniać modelowi COM.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>If the <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parametru jest klasą, zwracane miejsce VTBL jest ostatnim miejsca w interfejsie są generowane na podstawie klasy.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>This method returns the zero-based, v-table number for an interface or a class.</source>
          <target state="translated">Ta metoda zwraca liczony od zera, numer v-table interfejsu lub klasy.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>When used on a class, the slot number returned refers to the class interface for the class.</source>
          <target state="translated">Gdy jest używany w klasie, numer gniazda zwrócił odnosi się do interfejsu klasy dla klasy.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</source>
          <target state="translated">Jeśli interfejs klasy jest auto dual, ta metoda zawsze zwraca wartość -1, aby wskazać interfejs tylko do wysyłania nie ujawnia tabelę v do zarządzanych klientów.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType&gt;</ph> in conjunction with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph> to pass slots within a specified range.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType&gt;</ph> w połączeniu z <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph> do przekazania miejsc w określonym zakresie.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>For additional information, see <bpt id="p1">[</bpt>Introducing the Class Interface<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wprowadzenie interfejsu klasy<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source>Retrieves a code that identifies the type of the exception that occurred.</source>
          <target state="translated">Pobiera kod określający typ wyjątku, który wystąpił.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source>The type of the exception.</source>
          <target state="translated">Typ wyjątku.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A&gt;</ph> is exposed for compiler support of structured exception handling (SEH) only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A&gt;</ph> jest widoczne dla kompilatora Obsługa wyjątków strukturalnych tylko obsługi (SEH).</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source>If this method is called before an exception is thrown, it returns 0x0.</source>
          <target state="translated">Jeśli ta metoda jest wywoływana przed jest zgłaszany wyjątek, zwraca 0x0.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionCode">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Converts an HRESULT error code to a corresponding <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> object.</source>
          <target state="translated">Konwertuje kod błędu HRESULT na odpowiadający jej <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>The HRESULT to be converted.</source>
          <target state="translated">HRESULT do skonwertowania.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>Converts the specified HRESULT error code to a corresponding <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> object.</source>
          <target state="translated">Konwertuje określony kod błędu HRESULT na odpowiadający jej <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>An object that represents the converted HRESULT.</source>
          <target state="translated">Obiekt reprezentujący skonwertowany HRESULT.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A&gt;</ph> method to get an <ph id="ph2">&lt;xref:System.Exception&gt;</ph> based on an HRESULT without having to call the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> method and catch the exception.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A&gt;</ph> metodę, aby pobrać <ph id="ph2">&lt;xref:System.Exception&gt;</ph> oparte na HRESULT bez konieczności kontaktowania się <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> — metoda i catch wyjątku.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>The current <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interface is used to construct the exception.</source>
          <target state="translated">Bieżący <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interfejs jest używany do tworzenia wyjątek.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
          <target state="translated">Mapowanie z każdym HRESULT do jej klasy można porównywać pod względem wyjątek w programie .NET Framework, zobacz <bpt id="p1">[</bpt>porady: mapy wyników HRESULT i wyjątków<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>The HRESULT to be converted.</source>
          <target state="translated">HRESULT do skonwertowania.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>A pointer to the <ph id="ph1">&lt;see langword="IErrorInfo" /&gt;</ph> interface that provides more information about the error.</source>
          <target state="translated">Wskaźnik do <ph id="ph1">&lt;see langword="IErrorInfo" /&gt;</ph> interfejs, który zawiera więcej informacji o tym błędzie.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>You can specify <bpt id="p1">&lt;c&gt;</bpt>IntPtr(0)<ept id="p1">&lt;/c&gt;</ept> to use the current <ph id="ph1">&lt;see langword="IErrorInfo" /&gt;</ph> interface, or <bpt id="p2">&lt;c&gt;</bpt>IntPtr(-1)<ept id="p2">&lt;/c&gt;</ept> to ignore the current <ph id="ph2">&lt;see langword="IErrorInfo" /&gt;</ph> interface and construct the exception just from the error code.</source>
          <target state="translated">Można określić <bpt id="p1">&lt;c&gt;</bpt>IntPtr(0)<ept id="p1">&lt;/c&gt;</ept> do użycia bieżącego <ph id="ph1">&lt;see langword="IErrorInfo" /&gt;</ph> interfejsu, lub <bpt id="p2">&lt;c&gt;</bpt>IntPtr(-1)<ept id="p2">&lt;/c&gt;</ept> Ignorowanie bieżącego <ph id="ph2">&lt;see langword="IErrorInfo" /&gt;</ph> interfejsu i utworzyć wyjątek tylko z kodu błędu.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>Converts the specified HRESULT error code to a corresponding <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> object, with additional error information passed in an <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interface for the exception object.</source>
          <target state="translated">Konwertuje określony kod błędu HRESULT na odpowiadający jej <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> obiektu o dodatkowe informacje o błędzie przekazano <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)</ept> interfejs dla obiekt wyjątku.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>An object that represents the converted HRESULT and information obtained from <ph id="ph1">&lt;paramref name="errorInfo" /&gt;</ph>.</source>
          <target state="translated">Obiekt reprezentujący skonwertowany HRESULT i informacje uzyskane z <ph id="ph1">&lt;paramref name="errorInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A&gt;</ph> method to get an <ph id="ph2">&lt;xref:System.Exception&gt;</ph> based on an HRESULT without having to call the <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> method and catch the exception (thus avoiding the corresponding performance overhead).</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A&gt;</ph> metodę, aby pobrać <ph id="ph2">&lt;xref:System.Exception&gt;</ph> oparte na HRESULT bez konieczności kontaktowania się <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> — metoda i catch wyjątku (co umożliwia uniknięcie narzut odpowiedniej wydajności).</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>The <ph id="ph1">`errorInfo`</ph> parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</source>
          <target state="translated"><ph id="ph1">`errorInfo`</ph> Parametru zapewnia dodatkowe informacje o błędzie, takie jak jej opis tekstowy i unikatowy identyfikator globalny (GUID) dla interfejsu, który jest zdefiniowany kod błędu.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>Use this method overload if you have custom error information that you have to supply in the conversion.</source>
          <target state="translated">Przeciążenie tej metody należy użyć, jeśli istnieją informacje o błędów niestandardowych, które należy podać podczas konwersji.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
          <target state="translated">Mapowanie z każdym HRESULT do jej klasy można porównywać pod względem wyjątek w programie .NET Framework, zobacz <bpt id="p1">[</bpt>porady: mapy wyników HRESULT i wyjątków<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
          <source>Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</source>
          <target state="translated">Pobiera opis niezależny od komputera wyjątku i informacje o stanie, który istniał w wątku, gdy wystąpił wyjątek.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
          <source>A pointer to an <bpt id="p1">[</bpt>EXCEPTION_POINTERS<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148648)</ept> structure.</source>
          <target state="translated">Wskaźnik do <bpt id="p1">[</bpt>exception_pointers —<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148648)</ept> struktury.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A&gt;</ph> is exposed for compiler support of structured exception handling (SEH) only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A&gt;</ph> jest widoczne dla kompilatora Obsługa wyjątków strukturalnych tylko obsługi (SEH).</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>The delegate to be passed to unmanaged code.</source>
          <target state="translated">Delegat, które mają być przekazane do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>Converts a delegate into a function pointer that is callable from unmanaged code.</source>
          <target state="translated">Konwertuje delegata na wskaźnik funkcji, które można wywołać z kodem niezarządzanym.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</source>
          <target state="translated">Wartość, która mogą zostać przekazane do kodu niezarządzanego, który z kolei może użyć go do wywołania odpowiadającego zarządzane delegata.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>The delegate <ph id="ph1">`d`</ph> is converted to a function pointer that can be passed to unmanaged code using the <bpt id="p1">[</bpt>__stdcall<ept id="p1">](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)</ept> calling convention.</source>
          <target state="translated">Delegat <ph id="ph1">`d`</ph> jest konwertowana na wskaźnik funkcji, które mogą zostać przekazane do kodu niezarządzanego za pomocą <bpt id="p1">[</bpt>__stdcall<ept id="p1">](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)</ept> konwencji wywoływania.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>You must manually keep the delegate from being collected by the garbage collector from managed code.</source>
          <target state="translated">Obiekt delegowany musi ręcznie zapobiec zbieranych przez moduł garbage collector z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>The garbage collector does not track references to unmanaged code.</source>
          <target state="translated">Moduł zbierający elementy bezużyteczne nie śledzi odwołania do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>The <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>The <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The type of delegate to convert.</source>
          <target state="translated">Typ delegata do konwersji.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The delegate to be passed to unmanaged code.</source>
          <target state="translated">Delegat, które mają być przekazane do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</source>
          <target state="translated">Konwertuje delegata określonego typu wskaźnik funkcji, które można wywołać z kodem niezarządzanym.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</source>
          <target state="translated">Wartość, która mogą zostać przekazane do kodu niezarządzanego, który z kolei może użyć go do wywołania odpowiadającego zarządzane delegata.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The delegate <ph id="ph1">`d`</ph> is converted to a function pointer that can be passed to unmanaged code by using the <bpt id="p1">[</bpt>__stdcall<ept id="p1">](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)</ept> calling convention.</source>
          <target state="translated">Delegat <ph id="ph1">`d`</ph> jest konwertowana na wskaźnik funkcji, które mogą zostać przekazane do kodu niezarządzanego, przy użyciu <bpt id="p1">[</bpt>__stdcall<ept id="p1">](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)</ept> konwencji wywoływania.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>You must manually keep the delegate from being collected by the garbage collector from managed code.</source>
          <target state="translated">Obiekt delegowany musi ręcznie zapobiec zbieranych przez moduł garbage collector z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The garbage collector does not track references to unmanaged code.</source>
          <target state="translated">Moduł zbierający elementy bezużyteczne nie śledzi odwołania do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>The <ph id="ph1">&lt;paramref name="d" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>The module whose HINSTANCE is desired.</source>
          <target state="translated">Moduł, którego wystąpienie HINSTANCE jest pożądane.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>Returns the instance handle (HINSTANCE) for the specified module.</source>
          <target state="translated">Zwraca dojście wystąpienia (wystąpienie HINSTANCE) dla określonego modułu.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>The HINSTANCE for <ph id="ph1">&lt;paramref name="m" /&gt;</ph>; or -1 if the module does not have an HINSTANCE.</source>
          <target state="translated">Wystąpienie HINSTANCE dla <ph id="ph1">&lt;paramref name="m" /&gt;</ph>; lub wartość -1, jeśli moduł nie ma wystąpienie HINSTANCE.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>When dynamic or in-memory, modules do not have an HINSTANCE.</source>
          <target state="translated">Gdy dynamicznej lub w pamięci, moduły nie masz wystąpienie HINSTANCE.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>The exception to convert to an HRESULT.</source>
          <target state="translated">Wyjątek do przekonwertowania na HRESULT.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>Converts the specified exception to an HRESULT.</source>
          <target state="translated">Konwertuje określony wyjątek HRESULT.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>The HRESULT mapped to the supplied exception.</source>
          <target state="translated">Wynik HRESULT mapowane na podany wyjątku.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> also sets up an <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> konfiguruje również <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejs dla wyjątku, który można uzyskać przez wywołanie funkcji COM GetErrorInfoNEEDGUID.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.PreserveSigAttribute&gt;</ph> attribute.</source>
          <target state="translated">Ta funkcja umożliwia zwracają wartość HRESULT na zarządzanej klasy stosowania interfejsu COM, w którym należy zastosować <ph id="ph1">&lt;xref:System.Runtime.InteropServices.PreserveSigAttribute&gt;</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>Have the attributed method catch all exceptions and use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> method to return the appropriate HRESULT value.</source>
          <target state="translated">Masz wyjątki catch wszystkie metody oparte na atrybutach i używać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> metodę, aby powrócić na odpowiednią wartość HRESULT.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>Allowing an exception to propagate outside the method produces incorrect behavior.</source>
          <target state="translated">Stosowanie wyjątek propagację poza metodą tworzy niepoprawnego zachowania.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</source>
          <target state="translated">(W rzeczywistości środowisko uruchomieniowe języka wspólnego nie można przekazać wyjątek do klient modelu COM, który wywołuje metodę za pośrednictwem v-table.)</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> method sets the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface of the current thread.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A&gt;</ph> zestawy metody <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu bieżącego wątku.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>This can cause unexpected results for methods like the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> methods that default to using the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> of the current thread if it is set.</source>
          <target state="translated">Może to spowodować nieoczekiwane wyniki dla metod, takich jak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> metod, które domyślnie przy użyciu <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> bieżącego wątku, jeśli jest ustawiona.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.Marshal" /&gt;</ph>.</source>
          <target state="translated">Zwraca wartość HRESULT odpowiadającego ostatniej błąd poniesionych przez wykonywane przy użyciu systemu Win32 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.Marshal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>The HRESULT corresponding to the last Win32 error code.</source>
          <target state="translated">Wynik HRESULT odpowiadającego ostatni kod błędu Win32.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>The target function must have had the <ph id="ph1">`setLastError`</ph> metadata flag set.</source>
          <target state="translated">Funkcja docelowej musi mieć <ph id="ph1">`setLastError`</ph> ustawiona flaga metadanych.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>For example, the <ph id="ph1">`SetLastError`</ph> field of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType&gt;</ph> must be <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Na przykład <ph id="ph1">`SetLastError`</ph> pole <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType&gt;</ph> musi być <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>The process for setting this flag depends on the source language used: C# and C++ are <ph id="ph1">`false`</ph> by default, but the <ph id="ph2">`Declare`</ph> statement in Visual Basic is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Proces ustawienie tej flagi zależy od języka źródłowego: C# i C++ są <ph id="ph1">`false`</ph> domyślnie, ale <ph id="ph2">`Declare`</ph> jest instrukcji w języku Visual Basic <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak pobrać HRESULT odpowiadający using kod błędu Win32 <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>The object whose <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> interface is requested.</source>
          <target state="translated">Obiekt którego <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> wymagany jest interfejs.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>Returns an <bpt id="p1">[</bpt>IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> interface from a managed object.</source>
          <target state="translated">Zwraca <bpt id="p1">[</bpt>IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> interfejsu z obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> pointer for the <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> Wskaźnik <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>In managed code, you seldom work directly with the <ph id="ph1">`IDispatch`</ph> interface.</source>
          <target state="translated">W kodzie zarządzanym rzadko pracę bezpośrednio z <ph id="ph1">`IDispatch`</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>However, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A&gt;</ph> is useful when calling a method that exposes a COM object parameter as an <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type, or with custom marshaling.</source>
          <target state="translated">Jednak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A&gt;</ph> jest przydatne w przypadku wywołania metody, która opisuje parametr obiektu modelu COM jako <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> typu, lub za pomocą przekazywanie niestandardowych.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu ta metoda powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>Always use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> to decrement the reference count once you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> Aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</source>
          <target state="translated">Umożliwia także ta metoda obiektu zarządzanego uzyskać wskaźnika interfejsu do wywoływana otoka COM dla obiekt.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>For additional information, see <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> does not support the requested interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie obsługuje żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>The object whose <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> interface is requested.</source>
          <target state="translated">Obiekt którego <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> wymagany jest interfejs.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>Returns an <bpt id="p1">[</bpt>IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> interface pointer from a managed object, if the caller is in the same context as that object.</source>
          <target state="translated">Zwraca <bpt id="p1">[</bpt>IDispatch<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> interfejsu wskaźnika z obiektu zarządzanego, jeśli element wywołujący jest w tym samym kontekście co ten obiekt.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> interface pointer for the specified object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the caller is not in the same context as the specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> Wskaźnika interfejsu dla określonego obiektu lub <ph id="ph2">&lt;see langword="null" /&gt;</ph> Jeśli element wywołujący nie znajduje się w tym samym kontekście co określony obiekt.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>This method is the same as <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A&gt;</ph> except that it returns <ph id="ph2">`null`</ph> if the caller is not in the same context as the object.</source>
          <target state="translated">Ta metoda jest taka sama jak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A&gt;</ph> z tą różnicą, że zwraca <ph id="ph2">`null`</ph> Jeśli element wywołujący nie jest w tym samym kontekście jako obiekt.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> does not support the requested interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie obsługuje żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>The type whose <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interface is being requested.</source>
          <target state="translated">Typ którego <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interfejsu jest wymagany.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /&gt;</ph> interface from a managed type.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /&gt;</ph> interfejsu typu zarządzanego.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>A pointer to the <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interface for the <ph id="ph2">&lt;paramref name="t" /&gt;</ph> parameter.</source>
          <target state="translated">Wskaźnik do <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interfejs na potrzeby <ph id="ph2">&lt;paramref name="t" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>This method returns a pointer to an <ph id="ph1">`ITypeInfo`</ph> implementation that is based on the original type.</source>
          <target state="translated">Ta metoda zwraca wskaźnik do <ph id="ph1">`ITypeInfo`</ph> implementację, która jest oparty na typie oryginalnego.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>Calling an object with <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu z <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>Always use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> to decrement the reference count once you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> Aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> to replace standard interop marshaling behavior with this custom marshaler.</source>
          <target state="translated">Możesz zastosować <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> należy zastąpić standardowe zachowanie marshalingu międzyoperacyjnego tego organizatora niestandardowego.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>The following example demonstrates how to retrieve a pointer to the <ph id="ph1">`ITypeInfo`</ph> interface for a type using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak pobrać wskaźnik do <ph id="ph1">`ITypeInfo`</ph> interfejsu typu przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is not a visible type to COM.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> nie jest typem widoczne do modelu COM.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> typu.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>A type library is registered for the assembly that contains the type, but the type definition cannot be found.</source>
          <target state="translated">Biblioteki typów jest zarejestrowany dla zestawu zawierającego typ, ale nie można odnaleźć definicji typu.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>The object whose <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface is requested.</source>
          <target state="translated">Obiekt którego <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> wymagany jest interfejs.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>Returns an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface from a managed object.</source>
          <target state="translated">Zwraca <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejsu z obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> pointer for the <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> Wskaźnik <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>In managed code, you seldom work directly with the <ph id="ph1">`IUnknown`</ph> interface.</source>
          <target state="translated">W kodzie zarządzanym rzadko pracę bezpośrednio z <ph id="ph1">`IUnknown`</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>However, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> is useful when calling a method that exposes a COM object parameter as an <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> type, or with custom marshaling.</source>
          <target state="translated">Jednak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> jest przydatne w przypadku wywołania metody, która opisuje parametr obiektu modelu COM jako <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> typu, lub za pomocą przekazywanie niestandardowych.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu ta metoda powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>Always use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> to decrement the reference count once you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> Aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>You can also use this method on a managed object to obtain an interface pointer to the <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> for the object.</source>
          <target state="translated">Tej metody można użyć obiektu zarządzanego, wskaźnika interfejsu, aby uzyskać <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept> dla obiekt.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>The following example demonstrates how to retrieve an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface for a managed object using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak pobrać <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejs dla obiekt zarządzany przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>The object whose <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface is requested.</source>
          <target state="translated">Obiekt którego <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> wymagany jest interfejs.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>Returns an <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface from a managed object, if the caller is in the same context as that object.</source>
          <target state="translated">Zwraca <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejsu z obiektu zarządzanego, jeśli element wywołujący jest w tym samym kontekście co ten obiekt.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> pointer for the specified object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the caller is not in the same context as the specified object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> Wskaźnika do określonego obiektu lub <ph id="ph2">&lt;see langword="null" /&gt;</ph> Jeśli element wywołujący nie znajduje się w tym samym kontekście co określony obiekt.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>This method is the same as <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> except that it returns <ph id="ph2">`null`</ph> if the caller is not in the same context as the object.</source>
          <target state="translated">Ta metoda jest taka sama jak <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> z tą różnicą, że zwraca <ph id="ph2">`null`</ph> Jeśli element wywołujący nie jest w tym samym kontekście jako obiekt.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>The following example demonstrates how to retrieve an <ph id="ph1">`IUnknown`</ph> interface for a managed object using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak pobrać <ph id="ph1">`IUnknown`</ph> interfejs dla obiekt zarządzany przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /&gt;</ph> flag set.</source>
          <target state="translated">Zwraca kod błędu zwrócony przez funkcję niezarządzane ostatniego została wywołana przy użyciu platformy wywołania, które ma <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /&gt;</ph> Flaga.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>The last error code set by a call to the Win32 <bpt id="p1">[</bpt>SetLastError<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148656)</ept> function.</source>
          <target state="translated">Kod ostatniego błędu ustawiony przez wywołanie do środowiska Win32 <bpt id="p1">[</bpt>SetLastError<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148656)</ept> funkcji.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> exposes the Win32 <bpt id="p1">[</bpt>GetLastError<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148657)</ept> function from Kernel32.DLL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> przedstawia Win32 <bpt id="p1">[</bpt>GetLastError<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148657)</ept> funkcji Kernel32.DLL.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>This method exists because it is not safe to make a direct platform invoke call to <ph id="ph1">`GetLastError`</ph> to obtain this information.</source>
          <target state="translated">Ta metoda nie istnieje, ponieważ nie jest bezpieczne nawiązać bezpośrednie wywołania wywołania platformy <ph id="ph1">`GetLastError`</ph> uzyskać te informacje.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>If you want to access this error code, you must call <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> instead of writing your own platform invoke definition for <ph id="ph2">`GetLastError`</ph> and calling it.</source>
          <target state="translated">Jeśli chcesz uzyskać dostępu do tego kodu błędu, należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> zamiast zapisywania wywołanie definicji własne platformy <ph id="ph2">`GetLastError`</ph> i wywoływania go.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>The common language runtime can make internal calls to APIs that overwrite the <ph id="ph1">`GetLastError`</ph> maintained by the operating system.</source>
          <target state="translated">Środowisko uruchomieniowe języka wspólnego ułatwia wewnętrzny wywołania interfejsów API zastąpić <ph id="ph1">`GetLastError`</ph> obsługiwanego przez system operacyjny.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>You can use this method to obtain error codes only if you apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType&gt;</ph> to the method signature and set the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError&gt;</ph> field to<ph id="ph3">`true`</ph>.</source>
          <target state="translated">Ta metoda służy do uzyskania kody błędów tylko wtedy, gdy zastosujesz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType&gt;</ph> podpis metody i zestawu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError&gt;</ph> do<ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>The process for this varies depending upon the source language used: C# and C++ are <ph id="ph1">`false`</ph> by default, but the <ph id="ph2">`Declare`</ph> statement in Visual Basic is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Dla tego procesu zależy od języka źródłowego: C# i C++ są <ph id="ph1">`false`</ph> domyślnie, ale <ph id="ph2">`Declare`</ph> instrukcji w języku Visual Basic jest <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</source>
          <target state="translated">W przykładzie najpierw pokazuje wywołanie metody nie występuje błąd i pokazuje, wywołanie metody występuje błąd.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to the method to marshal.</source>
          <target state="translated">Wskaźnik do metody w celu zorganizowania.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to the method signature.</source>
          <target state="translated">Wskaźnik do podpis metody.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>The number of bytes in <bpt id="p1">&lt;c&gt;</bpt>pbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczba bajtów w <bpt id="p1">&lt;c&gt;</bpt>pbSignature<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</source>
          <target state="translated">Pobiera wskaźnik do funkcji generowanych przez środowisko uruchomieniowe, która marshals wywołania z kodu zarządzanego do niezarządzanego.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to the function that will marshal a call from the <ph id="ph1">&lt;paramref name="pfnMethodToWrap" /&gt;</ph> parameter to unmanaged code.</source>
          <target state="translated">Wskaźnik funkcji, które będzie kierować wywołania <ph id="ph1">&lt;paramref name="pfnMethodToWrap" /&gt;</ph> parametru do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A&gt;</ph> is exposed for compiler support only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A&gt;</ph> jest widoczne tylko kompilatora pomocy technicznej.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The type for which the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> is to be retrieved.</source>
          <target state="translated">Typ, dla którego <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> mają zostać pobrane.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The VTBL slot.</source>
          <target state="translated">Gniazdo VTBL.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>On successful return, one of the enumeration values that specifies the type of the member.</source>
          <target state="translated">Na pomyślne zwracany, jedną z wartości wyliczenia określający typ elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> object for the specified virtual function table (v-table or VTBL) slot.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> obiektu dla określonej funkcji wirtualnej gniazda tabeli (v-table lub VTBL).</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The object that represents the member at the specified VTBL slot.</source>
          <target state="translated">Obiekt, który reprezentuje element członkowski w określonym miejscu VTBL.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The return value may be a <ph id="ph1">&lt;xref:System.Reflection.FieldInfo&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph>, or <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object.</source>
          <target state="translated">Wartość zwracana może być <ph id="ph1">&lt;xref:System.Reflection.FieldInfo&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MethodInfo&gt;</ph>, lub <ph id="ph3">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> from which all three derive).</source>
          <target state="translated">Zwracana wartość zależy od typu zarządzanego elementu członkowskiego, który istnieje w miejscu danego modelu COM (stąd uogólniony zwracany typ <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> z wszystkie trzy pochodzi).</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The zero-based slot number that is returned by this method accounts for three <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> and possibly four <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> methods, making the value of the first available slot either 3 or 7.</source>
          <target state="translated">Numer gniazda liczony od zera, która jest zwracana przez tę metodę konta dla trzech <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> i prawdopodobnie cztery <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> metod, określając wartość pierwszego dostępnego gniazda 3 lub 7.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType&gt;</ph> in conjunction with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A&gt;</ph> to pass slots within a specified range.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType&gt;</ph> w połączeniu z <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A&gt;</ph> do przekazania miejsc w określonym zakresie.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>The <ph id="ph1">`memberType`</ph> parameter is important only on return.</source>
          <target state="translated"><ph id="ph1">`memberType`</ph> Parametr jest ważny tylko w przypadku powrotu.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> object.</source>
          <target state="translated">Zawiera typ elementu członkowskiego COM (regularne metody lub metoda dostępu do właściwości), umożliwiająca zwróconego <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is not visible from COM.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> nie jest widoczne z modelu COM.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>The object for which to get a COM VARIANT.</source>
          <target state="translated">Obiekt, dla którego można pobrać typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>A pointer to receive the VARIANT that corresponds to the <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Wskaźnik do odbierania VARIANT, który odpowiada <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>Converts an object to a COM VARIANT.</source>
          <target state="translated">Konwertuje obiekt typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>The <ph id="ph1">`pDstNativeVariant`</ph> parameter must point to sufficient memory to store the resulting VARIANT.</source>
          <target state="translated"><ph id="ph1">`pDstNativeVariant`</ph> Parametru musi wskazywać wystarczającej ilości pamięci do przechowywania wynikowy typ VARIANT.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>Also, the implementation of this method calls the <bpt id="p1">[</bpt>VariantInit<ept id="p1">](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)</ept> function on the raw memory that the <ph id="ph1">`pDstNativeVariant`</ph> parameter points to.</source>
          <target state="translated">Implementacja tej metody wymaga także, <bpt id="p1">[</bpt>VariantInit<ept id="p1">](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)</ept> funkcja raw pamięci który <ph id="ph1">`pDstNativeVariant`</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter is an instance of a generic type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> Parametr jest wystąpieniem typu ogólnego.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>The type of the object to convert.</source>
          <target state="translated">Typ obiektu do skonwertowania.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>The object for which to get a COM VARIANT.</source>
          <target state="translated">Obiekt, dla którego można pobrać typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>A pointer to receive the VARIANT that corresponds to the <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Wskaźnik do odbierania VARIANT, który odpowiada <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>Converts an object of a specified type to a COM VARIANT.</source>
          <target state="translated">Konwertuje obiekt określonego typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>The <ph id="ph1">`pDstNativeVariant`</ph> parameter must point to sufficient memory to store the resulting VARIANT.</source>
          <target state="translated"><ph id="ph1">`pDstNativeVariant`</ph> Parametru musi wskazywać wystarczającej ilości pamięci do przechowywania wynikowy typ VARIANT.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>Also, the implementation of this method calls <bpt id="p1">[</bpt>VariantInit<ept id="p1">](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)</ept> function on the raw memory that the <ph id="ph1">`pDstNativeVariant`</ph> parameter points to.</source>
          <target state="translated">Implementacja tej metody wymaga także, <bpt id="p1">[</bpt>VariantInit<ept id="p1">](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)</ept> funkcja raw pamięci który <ph id="ph1">`pDstNativeVariant`</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>A pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface.</source>
          <target state="translated">Wskaźnik do <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>Returns an instance of a type that represents a COM object by a pointer to its <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface.</source>
          <target state="translated">Zwraca wystąpienie typu, który reprezentuje wskaźnik do obiektu COM jego <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejsu.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>An object that represents the specified unmanaged COM object.</source>
          <target state="translated">Obiekt reprezentujący określony obiekt COM niezarządzane.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>This method wraps <ph id="ph1">`IUnknown`</ph> in a managed object.</source>
          <target state="translated">Ta metoda opakowuje <ph id="ph1">`IUnknown`</ph> w zarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>This has the effect of incrementing the reference count of the COM component.</source>
          <target state="translated">To powoduje zwiększenie liczby odwołanie do składnika COM.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</source>
          <target state="translated">Liczba odwołań będzie zmniejszana, gdy środowisko uruchomieniowe wykonuje odzyskiwanie pamięci na zarządzany obiekt, który reprezentuje obiekt COM.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>The <ph id="ph1">`pUnk`</ph> parameter represents an <ph id="ph2">`IUnknown`</ph> interface pointer; however, because all COM interfaces derive directly or indirectly from <ph id="ph3">`IUnknown`</ph>, you can pass any COM interface to this method.</source>
          <target state="translated"><ph id="ph1">`pUnk`</ph> Reprezentuje parametr <ph id="ph2">`IUnknown`</ph> wskaźnika interfejsu; ponieważ wszystkie interfejsy modelu COM dziedziczyć bezpośrednio lub pośrednio <ph id="ph3">`IUnknown`</ph>, każdy interfejs COM może przekazać do tej metody.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>The object returned by <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A&gt;</ph> is a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, which the common language runtime manages as it does any other managed object.</source>
          <target state="translated">Obiekt zwrócony przez <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A&gt;</ph> jest <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept>, która zarządza środowisko uruchomieniowe języka wspólnego, ponieważ działa zarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>The type of this wrapper is often a base <ph id="ph1">`System.__ComObject`</ph> type, which is a hidden type used when the wrapper type is ambiguous.</source>
          <target state="translated">Typ tej otoki jest często podstawowej <ph id="ph1">`System.__ComObject`</ph> typu, który jest ukryty typ używany, gdy typ otoki jest niejednoznaczna.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>You can still make late-bound calls to such a base type as long as the COM object implements the <bpt id="p1">[</bpt>IDispatch<ept id="p1">](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85))</ept> interface.</source>
          <target state="translated">Można nadal prowadzić rozmowy późnym wiązaniem do typu podstawowego, tak długo, jak obiekt COM implementuje <bpt id="p1">[</bpt>IDispatch<ept id="p1">](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85))</ept> interfejsu.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>Likewise, you can cast the returned object to an appropriate COM interface.</source>
          <target state="translated">Podobnie można rzutować zwróconego obiektu do odpowiedniego interfejsu COM.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</source>
          <target state="translated">W przypadku obiektu w celu jej opakowania z określonych zarządzanego typu klasy (i nie jest typem ogólnym otoki) trzeba spełnić następujące wymagania:</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>Implement the <bpt id="p1">[</bpt>IProvideClassInfo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148012)</ept> interface for the COM object.</source>
          <target state="translated">Implementowanie <bpt id="p1">[</bpt>IProvideClassInfo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=148012)</ept> interfejs dla obiekt COM.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>Register the containing assembly with the <bpt id="p1">[</bpt>Regasm.exe (Assembly Registration Tool)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept>.</source>
          <target state="translated">Zarejestruj zawierający zestaw o <bpt id="p1">[</bpt>Regasm.exe (narzędzie rejestracji zestawów)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept>.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Alternatywnie można uniknąć tych wymagań i nadal otrzymywać obiekt, który jest ujęte w określonych zarządzanego typu klasy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>A pointer to a COM VARIANT.</source>
          <target state="translated">Wskaźnik do typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>Converts a COM VARIANT to an object.</source>
          <target state="translated">Konwertuje typu VARIANT modelu COM na obiekt.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>An object that corresponds to the <ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt, który odpowiada <ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> Zwraca obiekt zarządzany, który odpowiada do nieprzetworzonej wskaźnik do niezarządzanego typu VARIANT.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</source>
          <target state="translated">Interopmarshaler wykonuje przekształcenie identyczne, gdy udostępnianie typu VARIANT do kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>When the VARIANT type is VT_ERROR, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> returns an object of type <ph id="ph2">`Int32`</ph> instead of <ph id="ph3">`UInt32`</ph>.</source>
          <target state="translated">W przypadku typu VARIANT VT_ERROR, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A&gt;</ph> zwraca obiekt typu <ph id="ph2">`Int32`</ph> zamiast <ph id="ph3">`UInt32`</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> is not a valid VARIANT type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> nie jest prawidłowym typem VARIANT.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> has an unsupported type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> ma nieobsługiwany typ.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>The type to which to convert the COM VARIANT.</source>
          <target state="translated">Typ, do którego można przekonwertować COM VARIANT.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>A pointer to a COM VARIANT.</source>
          <target state="translated">Wskaźnik do typu VARIANT modelu COM.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>Converts a COM VARIANT to an object of a specified type.</source>
          <target state="translated">Konwertuje typu VARIANT modelu COM na obiekt określonego typu.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>An object of the specified type that corresponds to the <ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt określonego typu, który odpowiada <ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29&gt;</ph> returns a managed object of type <ph id="ph2">`T`</ph> that corresponds to a raw pointer to an unmanaged VARIANT type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29&gt;</ph> Zwraca wartość typu zarządzanego obiektu <ph id="ph2">`T`</ph> odpowiadający raw wskaźnik do niezarządzanego typu VARIANT.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</source>
          <target state="translated">Interopmarshaler wykonuje przekształcenie identyczne, gdy udostępnianie typu VARIANT do kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> is not a valid VARIANT type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> nie jest prawidłowym typem VARIANT.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> has an unsupported type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pSrcNativeVariant" /&gt;</ph> ma nieobsługiwany typ.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>A pointer to the first element of an array of COM VARIANTs.</source>
          <target state="translated">Wskaźnik do pierwszego elementu obiektu tablicą typu Variant modelu COM.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>The count of COM VARIANTs in <bpt id="p1">&lt;c&gt;</bpt>aSrcNativeVariant<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczba elementów typu Variant modelu COM w <bpt id="p1">&lt;c&gt;</bpt>aSrcNativeVariant<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>Converts an array of COM <bpt id="p1">[</bpt>VARIANTs<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148670)</ept> to an array of objects.</source>
          <target state="translated">Konwertuje tablicę COM <bpt id="p1">[</bpt>wariantów<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148670)</ept> na tablicę obiektów.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>An object array that corresponds to <ph id="ph1">&lt;paramref name="aSrcNativeVariant" /&gt;</ph>.</source>
          <target state="translated">Tablica obiektów, umożliwiająca <ph id="ph1">&lt;paramref name="aSrcNativeVariant" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A&gt;</ph> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A&gt;</ph> Zwraca Tablica obiektów zarządzanych, która odpowiada na pierwotnych wskaźnik tablicy stylu języka C niezarządzane typów VARIANT.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</source>
          <target state="translated">Interopmarshaler wykonuje przekształcenie identyczne, gdy udostępnianie typu VARIANT do kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>The method returns an empty array when the <ph id="ph1">`cVars`</ph> parameter is 0.</source>
          <target state="translated">Zwraca metodę pusta tablica podczas obliczania <ph id="ph1">`cVars`</ph> parametru jest 0.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>The object array (the return value) gets garbage collected as usual.</source>
          <target state="translated">Tablica obiektów (wartość zwracaną) pobiera bezużytecznych w zwykły sposób.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>The unmanaged input array or individual VARIANTs in the input array are not freed.</source>
          <target state="translated">Nie są zwalniane niezarządzane tablicy wejściowej lub poszczególnych warianty w tablicy wejściowej.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>Therefore it is your responsibility to free them as appropriate.</source>
          <target state="translated">Dlatego jest obowiązek zwolnij je zgodnie z potrzebami.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="cVars" /&gt;</ph> is a negative number.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cVars" /&gt;</ph> jest to liczba ujemna.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The type of the array to return.</source>
          <target state="translated">Typ tablicy do zwrócenia.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>A pointer to the first element of an array of COM VARIANTs.</source>
          <target state="translated">Wskaźnik do pierwszego elementu obiektu tablicą typu Variant modelu COM.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The count of COM VARIANTs in <bpt id="p1">&lt;c&gt;</bpt>aSrcNativeVariant<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczba elementów typu Variant modelu COM w <bpt id="p1">&lt;c&gt;</bpt>aSrcNativeVariant<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>Converts an array of COM VARIANTs to an array of a specified type.</source>
          <target state="translated">Konwertuje tablicę elementów typu Variant modelu COM na tablicę określonego typu.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>An array of <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> objects that corresponds to <ph id="ph2">&lt;paramref name="aSrcNativeVariant" /&gt;</ph>.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> obiektów, które odpowiada <ph id="ph2">&lt;paramref name="aSrcNativeVariant" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29&gt;</ph> returns an array of <ph id="ph2">`T`</ph> that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29&gt;</ph> Zwraca tablicę <ph id="ph2">`T`</ph> odpowiadający raw wskaźnik do stylu języka C tablicę niezarządzane typów VARIANT.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</source>
          <target state="translated">Interopmarshaler wykonuje przekształcenie identyczne, gdy udostępnianie typu VARIANT do kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The method returns an empty array when the <ph id="ph1">`cVars`</ph> parameter is 0.</source>
          <target state="translated">Zwraca metodę pusta tablica podczas obliczania <ph id="ph1">`cVars`</ph> parametru jest 0.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The returned array is garbage-collected as usual.</source>
          <target state="translated">Tablica zwrócona jest zbierane pamięci w zwykły sposób.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>The unmanaged input array or individual VARIANTs in the input array are not freed.</source>
          <target state="translated">Nie są zwalniane niezarządzane tablicy wejściowej lub poszczególnych warianty w tablicy wejściowej.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>Therefore, it is your responsibility to free them as appropriate.</source>
          <target state="translated">W związku z tym jest obowiązek zwolnij je zgodnie z potrzebami.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="cVars" /&gt;</ph> is a negative number.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cVars" /&gt;</ph> jest to liczba ujemna.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>A type that represents an interface.</source>
          <target state="translated">Typ, który reprezentuje interfejs.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</source>
          <target state="translated">Pobiera pierwszy miejsca w tabeli funkcji wirtualnych (v-table lub VTBL), która zawiera metody zdefiniowane przez użytkownika.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>The first VTBL slot that contains user-defined methods.</source>
          <target state="translated">Pierwszego gniazda VTBL zawiera metody zdefiniowane przez użytkownika.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>The first slot is 3 if the interface is based on <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept>, and 7 if the interface is based on <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">Pierwszego gniazda wynosi 3, jeśli interfejs jest oparty na <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept>i 7, jeśli interfejs jest oparty na <bpt id="p2">[</bpt>IDispatch<ept id="p2">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>This method returns the zero-based v-table number for an interface or a class.</source>
          <target state="translated">Ta metoda zwraca liczony od zera v-table numer interfejsu lub klasy.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>When used on a class, the slot number that is returned refers to the class interface for the class.</source>
          <target state="translated">Gdy jest używany w klasie, numer gniazda, która jest zwracana odnosi się do interfejsu klasy dla klasy.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</source>
          <target state="translated">Jeśli interfejs klasy automatycznego wysyłania, ta metoda zawsze zwraca wartość -1, aby wskazać interfejs tylko do wysyłania nie ujawnia tabelę v do zarządzanych klientów.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType&gt;</ph> in conjunction with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph> to pass slots within a specified range.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType&gt;</ph> w połączeniu z <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType&gt;</ph> do przekazania miejsc w określonym zakresie.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>For additional information, see <bpt id="p1">[</bpt>Introducing the Class Interface<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>wprowadzenie interfejsu klasy<ept id="p1">](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)</ept>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is not visible from COM.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> nie jest widoczne z modelu COM.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>An integer that represents a fiber cookie.</source>
          <target state="translated">Liczba całkowita, która reprezentuje plik cookie włókien.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>Converts a fiber cookie into the corresponding <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> instance.</source>
          <target state="translated">Konwertuje plik cookie fiber odpowiadającego <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>A thread that corresponds to the <ph id="ph1">&lt;paramref name="cookie" /&gt;</ph> parameter.</source>
          <target state="translated">Wątek, który odpowiada <ph id="ph1">&lt;paramref name="cookie" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</source>
          <target state="translated">Fiber pliki cookie są nieprzezroczyste tokeny, które są używane przez hosta, gdy alerty środowisko uruchomieniowe języka wspólnego do planowania fiber decyzje.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>They consist of a stack and register context.</source>
          <target state="translated">One zawierać stosu i zarejestruj kontekstu.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="cookie" /&gt;</ph> parameter is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cookie" /&gt;</ph> Parametr ma wartość 0.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>A pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface of the unmanaged object.</source>
          <target state="translated">Wskaźnik do <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interfejsu niezarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>The type of the requested managed class.</source>
          <target state="translated">Typ żądanej klasy zarządzanej.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>Returns a managed object of a specified type that represents a COM object.</source>
          <target state="translated">Zwraca zarządzanego obiektu określonego typu, który reprezentuje obiekt COM.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>An instance of the class corresponding to the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the requested unmanaged COM object.</source>
          <target state="translated">Wystąpienie klasy odpowiadający <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> obiekt, który reprezentuje żądanego obiektu COM niezarządzane.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">`t`</ph> parameter must be either a COM-imported type or a subtype of a COM-imported type.</source>
          <target state="translated"><ph id="ph1">`t`</ph> Parametr musi być typu zaimportować modelu COM lub podtyp typu zaimportować modelu COM.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>In addition, <ph id="ph1">`t`</ph> must be a type whose metadata was imported by the <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool.</source>
          <target state="translated">Ponadto <ph id="ph1">`t`</ph> musi być typem, którego metadanych został zaimportowany przez <bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzia.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>This type must be a class and not an associated coclass interface, which carries the name of the COM class.</source>
          <target state="translated">Ten typ musi być klasą i nie interfejs skojarzone coclass i zawiera nazwę klasy COM.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>For example, if Tlbimp.exe imports <ph id="ph1">`Myclass`</ph> as a class called <ph id="ph2">`MyclassClass`</ph> and as a coclass interface called <ph id="ph3">`Myclass`</ph>, you must use <ph id="ph4">`MyclassClass`</ph> (not <ph id="ph5">`Myclass`</ph>) with this method.</source>
          <target state="translated">Na przykład, jeśli importuje Tlbimp.exe <ph id="ph1">`Myclass`</ph> jako klasy o nazwie <ph id="ph2">`MyclassClass`</ph> i jako interfejs coclass wywołać <ph id="ph3">`Myclass`</ph>, należy użyć <ph id="ph4">`MyclassClass`</ph> (nie <ph id="ph5">`Myclass`</ph>) przy użyciu tej metody.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>For additional information about imported classes and coclass interfaces, see <bpt id="p1">[</bpt>Imported Type Conversion<ept id="p1">](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje na temat importowanych klasy i interfejsy coclass, zobacz <bpt id="p1">[</bpt>zaimportowane konwersji typu<ept id="p1">](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)</ept>.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>If an object has already been obtained for the <ph id="ph1">`pUnk`</ph> parameter, <ph id="ph2">`t`</ph> is ignored and the existing object is returned.</source>
          <target state="translated">Jeśli obiekt został uzyskany dla <ph id="ph1">`pUnk`</ph> parametru <ph id="ph2">`t`</ph> jest ignorowana, a istniejący obiekt jest zwracany.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source><ph id="ph1">`pUnk`</ph> represents an<bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface pointer; however, because all COM interfaces derive directly or indirectly from <ph id="ph2">`IUnknown`</ph>, you can pass any COM interface to this method.</source>
          <target state="translated"><ph id="ph1">`pUnk`</ph> reprezentuje<bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika interfejsu; ponieważ wszystkie interfejsy modelu COM dziedziczyć bezpośrednio lub pośrednio <ph id="ph2">`IUnknown`</ph>, każdy interfejs COM może przekazać do tej metody.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>The object returned by <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A&gt;</ph> is a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW), which the common language runtime manages as it does any other managed object.</source>
          <target state="translated">Obiekt zwrócony przez <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A&gt;</ph> jest <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW), która zarządza środowisko uruchomieniowe języka wspólnego, ponieważ działa zarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is not attributed with <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> nie ma atrybutu <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ComImportAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;paramref name="t" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> typu.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> interface to marshal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> Interfejs do organizowania.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>Converts an unmanaged <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> object into a managed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated">Konwertuje niezarządzane <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> obiektu do zarządzanego <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>A managed type that represents the unmanaged <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> object.</source>
          <target state="translated">Typ zarządzany, który reprezentuje niezarządzanej <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> instance that is based on the original type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph> Zwraca <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> wystąpienia, który jest oparty na typie oryginalnego.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> to replace standard interop marshaling behavior with this custom marshaler.</source>
          <target state="translated">Możesz zastosować <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType&gt;</ph> należy zastąpić standardowe zachowanie marshalingu międzyoperacyjnego tego organizatora niestandardowego.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool uses the custom marshaler to translate <ph id="ph1">`ITypeInfo`</ph> parameters to <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> parameters.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzie używa organizatora niestandardowego do przekształcania <ph id="ph1">`ITypeInfo`</ph> parametry <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>However, if you obtain an <ph id="ph1">`ITypeInfo`</ph> interface by some means other than Tlbimp.exe, you can use <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph> to manually perform the same translation.</source>
          <target state="translated">Jednak po uzyskaniu <ph id="ph1">`ITypeInfo`</ph> interfejsu przez niektóre inny sposób niż Tlbimp.exe, możesz użyć <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A&gt;</ph> ręcznie wykonać tego samego tłumaczenia.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
          <source>The CLSID of the type to return.</source>
          <target state="translated">Identyfikator CLSID typu do zwrócenia.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
          <source>Returns the type associated with the specified class identifier (CLSID).</source>
          <target state="translated">Zwraca typ skojarzony z identyfikatorem określonej klasy (CLSID).</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)">
          <source><ph id="ph1">&lt;see langword="System.__ComObject" /&gt;</ph> regardless of whether the CLSID is valid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.__ComObject" /&gt;</ph> niezależnie od tego, czy identyfikator CLSID jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Retrieves the name of the type represented by an <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> object.</source>
          <target state="translated">Pobiera nazwę typu reprezentowanego przez <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>An object that represents an <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> pointer.</source>
          <target state="translated">Obiekt reprezentujący <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> wskaźnika.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>Retrieves the name of the type represented by an <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> object.</source>
          <target state="translated">Pobiera nazwę typu reprezentowanego przez <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>The name of the type that the <ph id="ph1">&lt;paramref name="typeInfo" /&gt;</ph> parameter points to.</source>
          <target state="translated">Nazwa typu który <ph id="ph1">&lt;paramref name="typeInfo" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>You can also retrieve the name of the type represented by an <ph id="ph1">`ITypeInfo`</ph> by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> method and passing -1 for its first parameter.</source>
          <target state="translated">Możesz również pobrać nazwę typu reprezentowanego przez <ph id="ph1">`ITypeInfo`</ph> przez wywołanie metody <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazywanie wartości-1 spowoduje jej pierwszym parametrem.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>The <ph id="ph1">&lt;paramref name="typeInfo" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeInfo" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>An object that represents an <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> pointer.</source>
          <target state="translated">Obiekt reprezentujący <ph id="ph1">&lt;see langword="ITypeInfo" /&gt;</ph> wskaźnika.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>Retrieves the name of the type represented by an <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> object.</source>
          <target state="translated">Pobiera nazwę typu reprezentowanego przez <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680)</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>The name of the type that the <ph id="ph1">&lt;paramref name="pTI" /&gt;</ph> parameter points to.</source>
          <target state="translated">Nazwa typu który <ph id="ph1">&lt;paramref name="pTI" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>You can also retrieve the name of the type represented by an <ph id="ph1">`ITypeInfo`</ph> object by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> method and passing -1 for its first parameter.</source>
          <target state="translated">Możesz również pobrać nazwę typu reprezentowanego przez <ph id="ph1">`ITypeInfo`</ph> obiektu przez wywołanie metody <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazywanie wartości-1 spowoduje jej pierwszym parametrem.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Retrieves the library identifier (LIBID) of a type library.</source>
          <target state="translated">Pobiera identyfikator biblioteki (identyfikator biblioteki) biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The type library whose LIBID is to be retrieved.</source>
          <target state="translated">Biblioteki typów, której identyfikator biblioteki ma być pobrana.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>Retrieves the library identifier (LIBID) of a type library.</source>
          <target state="translated">Pobiera identyfikator biblioteki (identyfikator biblioteki) biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The LIBID of the specified type library.</source>
          <target state="translated">Identyfikator biblioteki biblioteki określonego typu.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> extracts the LIBID directly from an existing type library.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> Wyodrębnianie identyfikatora LIBID bezpośrednio z istniejącej biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>This action differs from that of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType&gt;</ph> method, which calculates what the LIBID should be based on the current assembly.</source>
          <target state="translated">Ta akcja różni się od <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType&gt;</ph> metodę, która oblicza, jakie identyfikatora LIBID powinny być oparte na bieżącego zestawu.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>For more information about library identifiers, see <bpt id="p1">[</bpt>Exported Assembly Conversion<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o identyfikatorach biblioteki, zobacz <bpt id="p1">[</bpt>wyeksportowane konwersji zestawu<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept>.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The type library whose LIBID is to be retrieved.</source>
          <target state="translated">Biblioteki typów, której identyfikator biblioteki ma być pobrana.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>Retrieves the library identifier (LIBID) of a type library.</source>
          <target state="translated">Pobiera identyfikator biblioteki (identyfikator biblioteki) biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The LIBID of the type library that the <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> parameter points to.</source>
          <target state="translated">Identyfikator biblioteki biblioteki typów który <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> extracts the LIBID directly from an existing type library.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> Wyodrębnianie identyfikatora LIBID bezpośrednio z istniejącej biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>This action differs from that of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType&gt;</ph> method, which calculates what the LIBID should be based on the current assembly.</source>
          <target state="translated">Ta akcja różni się od <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType&gt;</ph> metodę, która oblicza, jakie identyfikatora LIBID powinny być oparte na bieżącego zestawu.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>For more information about library identifiers, see <bpt id="p1">[</bpt>Exported Assembly Conversion<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o identyfikatorach biblioteki, zobacz <bpt id="p1">[</bpt>wyeksportowane konwersji zestawu<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>The assembly from which the type library was exported.</source>
          <target state="translated">Zestaw, z którego został wyeksportowany do biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</source>
          <target state="translated">Pobiera identyfikator biblioteki (identyfikator biblioteki), który jest przypisany do biblioteki typów, gdy został wyeksportowany z określonego zestawu.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>The LIBID that is assigned to a type library when it is exported from the specified assembly.</source>
          <target state="translated">Identyfikator biblioteki jest przypisany do biblioteki typów podczas eksportowania z określonego zestawu.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>When assemblies are exported to type libraries, the type library is assigned a LIBID.</source>
          <target state="translated">Gdy zestawy zostaną wyeksportowane do biblioteki typów, biblioteki typów jest przypisany identyfikator biblioteki.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>You can set the LIBID explicitly by applying the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph> at the assembly level, or it can be generated automatically.</source>
          <target state="translated">Identyfikator biblioteki można ustawić jawnie przez zastosowanie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType&gt;</ph> w zestawie poziom lub może zostać wygenerowany automatycznie.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool calculates a LIBID value based on the identity of the assembly.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzie oblicza wartość identyfikatora LIBID na podstawie tożsamości zestawu.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> returns the LIBID that is associated with the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph>, if the attribute is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> Zwraca identyfikator biblioteki, z którym skojarzony jest <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GuidAttribute&gt;</ph>, jeśli ten atrybut jest stosowany.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A&gt;</ph> returns the calculated value.</source>
          <target state="translated">W przeciwnym razie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A&gt;</ph> zwraca obliczoną wartość.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> method to extract the actual LIBID from an existing type library.</source>
          <target state="translated">Alternatywnie można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A&gt;</ph> metodę, aby wyodrębnić rzeczywisty identyfikator biblioteki z istniejącej biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>See the <bpt id="p1">[</bpt>Exported Assembly Conversion<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept> topic for more information about library identifiers.</source>
          <target state="translated">Zobacz <bpt id="p1">[</bpt>wyeksportowane konwersji zestawu<ept id="p1">](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)</ept> tematu, aby uzyskać więcej informacji o identyfikatorach biblioteki.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source><ph id="ph1">&lt;paramref name="asm" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asm" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Retrieves the LCID of a type library.</source>
          <target state="translated">Pobiera identyfikator LCID biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The type library whose LCID is to be retrieved.</source>
          <target state="translated">Biblioteki typów, których atrybut LCID jest mają zostać pobrane.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>Retrieves the LCID of a type library.</source>
          <target state="translated">Pobiera identyfikator LCID biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The LCID of the type library that the <ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> parameter points to.</source>
          <target state="translated">Identyfikator LCID biblioteki typów który <ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The type library whose LCID is to be retrieved.</source>
          <target state="translated">Biblioteki typów, których atrybut LCID jest mają zostać pobrane.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>Retrieves the LCID of a type library.</source>
          <target state="translated">Pobiera identyfikator LCID biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The LCID of the type library that the <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> parameter points to.</source>
          <target state="translated">Identyfikator LCID biblioteki typów który <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Retrieves the name of a type library.</source>
          <target state="translated">Pobiera nazwę biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The type library whose name is to be retrieved.</source>
          <target state="translated">Biblioteki typów, której nazwa ma być pobrana.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>Retrieves the name of a type library.</source>
          <target state="translated">Pobiera nazwę biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The name of the type library that the <ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> parameter points to.</source>
          <target state="translated">Nazwa biblioteki typu który <ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</source>
          <target state="translated">Nazwa zwracane przez tę metodę jest identyfikator używany z instrukcją biblioteki, takich jak ADODB dla biblioteki typów ADO firmy Microsoft.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The name is not a file name.</source>
          <target state="translated">Nazwa nie jest nazwą pliku.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>You can also retrieve the type library name by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> method and passing -1 for its first parameter.</source>
          <target state="translated">Można również pobierać nazwy biblioteki typów, wywołując <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazywanie wartości-1 spowoduje jej pierwszym parametrem.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>The <ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typelib" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The type library whose name is to be retrieved.</source>
          <target state="translated">Biblioteki typów, której nazwa ma być pobrana.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>Retrieves the name of a type library.</source>
          <target state="translated">Pobiera nazwę biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The name of the type library that the <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> parameter points to.</source>
          <target state="translated">Nazwa biblioteki typu który <ph id="ph1">&lt;paramref name="pTLB" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</source>
          <target state="translated">Nazwa zwracane przez tę metodę jest identyfikator używany z instrukcją biblioteki, takich jak ADODB dla biblioteki typów ADO firmy Microsoft.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>The name is not a file name.</source>
          <target state="translated">Nazwa nie jest nazwą pliku.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>You can also retrieve the type library name by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> method and passing -1 for its first parameter.</source>
          <target state="translated">Można również pobierać nazwy biblioteki typów, wywołując <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazywanie wartości-1 spowoduje jej pierwszym parametrem.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>A managed assembly.</source>
          <target state="translated">Zestaw zarządzany.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>The major version number.</source>
          <target state="translated">Główny numer wersji.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>The minor version number.</source>
          <target state="translated">Pomocniczy numer wersji.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>Retrieves the version number of a type library that will be exported from the specified assembly.</source>
          <target state="translated">Pobiera numer wersji biblioteki typów, które zostaną wyeksportowane z określonego zestawu.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>Before exporting an assembly by using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeLibExporterFlags&gt;</ph> with the <ph id="ph2">`CallerResolvedReferences`</ph> value, you can use this method to retrieve the type library version from the assembly.</source>
          <target state="translated">Przed wyeksportowaniem zestawu za pomocą <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeLibExporterFlags&gt;</ph> z <ph id="ph2">`CallerResolvedReferences`</ph> wartość, można Użyj tej metody można pobrać wersji biblioteki typów z zestawu.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>If you do not apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeLibVersionAttribute&gt;</ph> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</source>
          <target state="translated">Jeśli nie mają zastosowania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeLibVersionAttribute&gt;</ph> atrybutu do zestawu wyeksportowanego do formantu jawnie numer wersji biblioteki typów wygenerowanego, biblioteka typów ma numer wersji tego samego zestawu.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="inputAssembly" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputAssembly" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>A managed pointer to an <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface.</source>
          <target state="translated">Zarządzane wskaźnik do <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>Creates a unique <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW) object for a given <bpt id="p2">[</bpt>IUnknown<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface.</source>
          <target state="translated">Tworzy unikatowy <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> obiektu (otoki RCW) dla danej <bpt id="p2">[</bpt>IUnknown<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interfejsu.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>A unique RCW for the specified <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface.</source>
          <target state="translated">Unikatowy otoki RCW dla określonego <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A&gt;</ph> method ensures that you receive a unique RCW, because it does not match an <ph id="ph2">`IUnknown`</ph> pointer to an existing object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A&gt;</ph> — Metoda zapewnia użytkownikowi unikatowe otoki RCW, ponieważ nie odpowiada <ph id="ph2">`IUnknown`</ph> wskaźnik do obiektu.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>Use this method when you have to create a unique RCW that is not impacted by other code that calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method.</source>
          <target state="translated">Użyj tej metody, gdy trzeba utworzyć unikatową otoki RCW, która nie ma wpływu na inne kod, który wywołuje <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to the method to marshal.</source>
          <target state="translated">Wskaźnik do metody w celu zorganizowania.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to the method signature.</source>
          <target state="translated">Wskaźnik do podpis metody.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>The number of bytes in <bpt id="p1">&lt;c&gt;</bpt>pbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Liczba bajtów w <bpt id="p1">&lt;c&gt;</bpt>pbSignature<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</source>
          <target state="translated">Pobiera wskaźnik do funkcji generowanych przez środowisko uruchomieniowe, która marshals wywołania niezarządzanego kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>A pointer to a function that will marshal a call from <ph id="ph1">&lt;paramref name="pfnMethodToWrap" /&gt;</ph> to managed code.</source>
          <target state="translated">Wskaźnik funkcji, które będzie kierować wywołania <ph id="ph1">&lt;paramref name="pfnMethodToWrap" /&gt;</ph> do kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A&gt;</ph> is exposed for compiler support only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A&gt;</ph> jest widoczne tylko kompilatora pomocy technicznej.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source>The object to check.</source>
          <target state="translated">Obiekt do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source>Indicates whether a specified object represents a COM object.</source>
          <target state="translated">Wskazuje, czy określony obiekt reprezentuje obiekt COM.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parameter is a COM type; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="o" /&gt;</ph> parametr ma typ modelu COM; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.IsComObject%2A&gt;</ph> returns <ph id="ph2">`true`</ph> if the class type of the instance is attributed with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> or if it derives directly or indirectly from a class attributed with <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.IsComObject%2A&gt;</ph> Zwraca <ph id="ph2">`true`</ph> jeśli ma atrybut typu klasy wystąpienia <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType&gt;</ph> lub jeśli pochodzi z klasy z bezpośrednio lub pośrednio <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source>The <bpt id="p1">[</bpt>Tlbimp.exe (Type Library Importer)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> tool applies this attribute for you when it imports a type library.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbimp.exe (Importer biblioteki typów)<ept id="p1">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> narzędzie dotyczy ten atrybut można podczas importowania biblioteki typów.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source>Two other methods also determine whether a specified object represents a COM object, but the requirements for returning <ph id="ph1">`true`</ph> differ from this method's requirements.</source>
          <target state="translated">Dwa inne metody ustalić, czy określony obiekt reprezentuje obiekt COM, ale wymagania dla zwracania <ph id="ph1">`true`</ph> różnią się od wymagań tej metody.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> returns <ph id="ph2">`true`</ph> if the class (or interface) is attributed with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph> directly; it does not return <ph id="ph4">`true`</ph> for derived types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type.IsImport%2A?displayProperty=nameWithType&gt;</ph> Zwraca <ph id="ph2">`true`</ph> Jeśli klasy (lub interface) ma atrybut <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph> bezpośrednio; zwraca <ph id="ph4">`true`</ph> dla typów pochodnych.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType&gt;</ph> returns <ph id="ph2">`true`</ph> if the type is attributed with <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph> or derives from a type with the same GUID.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType&gt;</ph> Zwraca <ph id="ph2">`true`</ph> Jeśli typ ma atrybut <ph id="ph3">&lt;xref:System.Runtime.InteropServices.ComImportAttribute&gt;</ph> lub pochodzącego od typu z tym samym identyfikatorze GUID.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source>The type to check for COM visibility.</source>
          <target state="translated">Typ do sprawdzenia COM widoczności.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source>Indicates whether a type is visible to COM clients.</source>
          <target state="translated">Wskazuje, czy typ jest widoczne dla klientów modelu COM.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type is visible to COM; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli typ jest widoczne dla modelu COM; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A&gt;</ph> enables you to check for COM visibility in one step.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A&gt;</ph> Umożliwia sprawdzenie widoczności COM w jednym kroku.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source>Types that are not visible cannot be used from COM.</source>
          <target state="translated">Nie można używać typów, które nie są widoczne z modelu COM.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)">
          <source>A type is visible if it is <ph id="ph1">`public`</ph> and not hidden with the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Typ jest widoczny, jeśli jest <ph id="ph1">`public`</ph> i nie jest ukryty z <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>The method to be checked.</source>
          <target state="translated">Metoda ma być sprawdzany.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</source>
          <target state="translated">Oblicza liczbę bajtów w niezarządzanej pamięci, które są wymagane do przechowywania parametrów dla określonej metody.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>The number of bytes required to represent the method parameters in unmanaged memory.</source>
          <target state="translated">Liczba bajtów wymaganą do przedstawiania parametrów metody w pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A&gt;</ph> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A&gt;</ph> Metoda zwraca rozmiar stosu (w bajtach) potrzebne do przedstawiania parametrów w pamięci niezarządzanej podpisu metody.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>Note that the return value of this method is platform-dependent.</source>
          <target state="translated">Należy pamiętać, że zwracana wartość ta metoda jest zależny od platformy.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</source>
          <target state="translated">Na przykład podpisu z parametrem jeden zwraca wartość 4 w 32-bitowych platform i wartości 8 na platformach 64-bitowych.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>A value type or formatted reference type that specifies the managed class.</source>
          <target state="translated">Typ wartości lub typ odwołania sformatowany zarządzanej klasy.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>You must apply the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> to the class.</source>
          <target state="translated">Należy najpierw zastosować <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> do klasy.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>The field within the <bpt id="p1">&lt;c&gt;</bpt>t<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Pole w <bpt id="p1">&lt;c&gt;</bpt>t<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>Returns the field offset of the unmanaged form of the managed class.</source>
          <target state="translated">Zwraca przesunięcie pola formularza niezarządzane zarządzanej klasy.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>The offset, in bytes, for the <ph id="ph1">&lt;paramref name="fieldName" /&gt;</ph> parameter within the specified class that is declared by platform invoke.</source>
          <target state="translated">Przesunięcie, w bajtach dla <ph id="ph1">&lt;paramref name="fieldName" /&gt;</ph> wywołania parametr w ramach określonej klasy, która jest zadeklarowana jako platforma.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> udostępnia przesunięcie w układzie struktura niezarządzana nie musi odpowiadać do przesunięcia układ struktury zarządzanej.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>Marshaling the structure can transform the layout and alter the offset.</source>
          <target state="translated">Organizowanie struktury można przekształcić układ i zmień przesunięcie.</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>The <ph id="ph1">`t`</ph> parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</source>
          <target state="translated"><ph id="ph1">`t`</ph> Parametr może być typem wartości lub typ referencyjny sformatowany (z obu układ sekwencyjny lub jawny).</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>You can obtain the size of the entire layout by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Rozmiar całego układu można uzyskać za pomocą <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Value Types<ept id="p1">](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>domyślny Marshaling dla typów wartości<ept id="p1">](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept>.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>Beginning with the .NET Framework version 2.0, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> may expose private fields.</source>
          <target state="translated">Począwszy od programu .NET Framework w wersji 2.0, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> mogą uwidaczniać pól prywatnych.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>The class cannot be exported as a structure or the field is nonpublic.</source>
          <target state="translated">Nie można wyeksportować klasy, struktury lub pole jest niepubliczny.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>Beginning with the .NET Framework version 2.0, the field may be private.</source>
          <target state="translated">Począwszy od programu .NET Framework w wersji 2.0, pole może być prywatny.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>A managed value type or formatted reference type.</source>
          <target state="translated">Typ wartości zarządzanych lub typ referencyjny sformatowany.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>You must apply the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> attribute to the class.</source>
          <target state="translated">Należy najpierw zastosować <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /&gt;</ph> do klasy atrybutu.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>The name of the field in the <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> type.</source>
          <target state="translated">Nazwa pola w <bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> typu.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>Returns the field offset of the unmanaged form of a specified managed class.</source>
          <target state="translated">Zwraca przesunięcie pola formularza niezarządzane określonej zarządzanej klasy.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>The offset, in bytes, for the <ph id="ph1">&lt;paramref name="fieldName" /&gt;</ph> parameter within the specified class that is declared by platform invoke.</source>
          <target state="translated">Przesunięcie, w bajtach dla <ph id="ph1">&lt;paramref name="fieldName" /&gt;</ph> wywołania parametr w ramach określonej klasy, która jest zadeklarowana jako platforma.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29&gt;</ph> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29&gt;</ph> udostępnia przesunięcie w układzie struktura niezarządzana nie musi odpowiadać do przesunięcia układ struktury zarządzanej.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>Marshaling the structure can transform the layout and alter the offset.</source>
          <target state="translated">Organizowanie struktury można przekształcić układ i zmień przesunięcie.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>The <ph id="ph1">`T`</ph> generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</source>
          <target state="translated"><ph id="ph1">`T`</ph> Parametr typu ogólnego może być typem wartości lub typ referencyjny sformatowany (z obu układ sekwencyjny lub jawny).</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>You can obtain the size of the entire layout by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29&gt;</ph> method.</source>
          <target state="translated">Rozmiar całego układu można uzyskać za pomocą <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>For additional information, see <bpt id="p1">[</bpt>Default Marshaling for Value Types<ept id="p1">](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept>.</source>
          <target state="translated">Aby uzyskać dodatkowe informacje, zobacz <bpt id="p1">[</bpt>domyślny Marshaling dla typów wartości<ept id="p1">](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)</ept>.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)">
          <source>Beginning with the .NET Framework version 2.0, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> may expose private fields.</source>
          <target state="translated">Począwszy od programu .NET Framework w wersji 2.0, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A&gt;</ph> mogą uwidaczniać pól prywatnych.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>The method to be checked.</source>
          <target state="translated">Metoda ma być sprawdzany.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Executes one-time method setup tasks without calling the method.</source>
          <target state="translated">Wykonuje zadania konfiguracji jednorazowej metody bez wywoływania metody.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Setup tasks provide early initialization and are performed automatically when the target method is invoked.</source>
          <target state="translated">Zadań konfiguracyjnych zapewnić wczesne inicjowania i są wykonywane automatycznie po wywołaniu metody docelowej.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>First-time tasks include the following:</source>
          <target state="translated">Zadania po raz pierwszy, obejmują:</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Verifying that the platform invoke metadata is correctly formatted.</source>
          <target state="translated">Weryfikowanie czy platforma wywołania metadanych jest poprawnie sformatowana.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Verifying that all the managed types are valid parameters of platform invoke functions.</source>
          <target state="translated">Weryfikowanie, czy wszystkie typy zarządzane są prawidłowe parametry platformy wywołania funkcji.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Locating and loading the unmanaged DLL into the process.</source>
          <target state="translated">Lokalizowania i ładowania niezarządzanych do procesu.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Locating the entry point in the process.</source>
          <target state="translated">Znajdowania punktu wejścia procesu.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>Calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A&gt;</ph> on a method outside of platform invoke has no effect.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A&gt;</ph> dla metody poza platformy wywołania nie ma wpływu.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>To execute setup tasks on all platform invoke methods in a type, use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Do wykonania instalacji zadania na platformie wszystkie wywołania metody w typie, użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>The <ph id="ph1">&lt;paramref name="m" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="m" /&gt;</ph> Parametr nie jest <ph id="ph2">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>The class whose methods are to be checked.</source>
          <target state="translated">Klasa, której metody mają być sprawdzone.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>Performs a pre-link check for all methods on a class.</source>
          <target state="translated">Sprawdza prekonsolidacyjnego dla wszystkich metod w klasie.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A&gt;</ph> method invokes <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType&gt;</ph> on every method for a given type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A&gt;</ph> Wywołuje metodę <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType&gt;</ph> na każdej metody dla danego typu.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A&gt;</ph> executes one-time method setup tasks without calling each method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Prelink%2A&gt;</ph> wykonuje zadania instalacji jednorazowe metody bez wywoływania każdej metody.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>You can use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A&gt;</ph> only for platform invoke calls.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A&gt;</ph> tylko dla platformy wywołania wywołania.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="c" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="c" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies all or part of an unmanaged ANSI string into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje całość lub część ciągu ANSI niezarządzanych do niego.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>The address of the first character of the unmanaged string.</source>
          <target state="translated">Adres pierwszego znaku ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>Copies all characters up to the first null character from an unmanaged ANSI string to a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, and widens each ANSI character to Unicode.</source>
          <target state="translated">Kopie wszystkich znaków do pierwszego znaku null z niezarządzanego ANSI ciągu do zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, a rozszerzenie każdego znaków ANSI na Unicode.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>A managed string that holds a copy of the unmanaged ANSI string.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię niezarządzane ciągu ANSI.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>If <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the method returns a null string.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>, metoda zwraca pusty ciąg.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> method to create a managed string from an unmanaged <ph id="ph2">`char`</ph> array.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> metodę w celu utworzenia ciąg zarządzanego z niezarządzanej <ph id="ph2">`char`</ph> tablicy.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>The address of the first character of the unmanaged string.</source>
          <target state="translated">Adres pierwszego znaku ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>The byte count of the input string to copy.</source>
          <target state="translated">Liczba bajtów ciąg wejściowy można skopiować.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, kopiuje określoną liczbę znaków z ciągu ANSI niezarządzanych do niego i rozszerzenie każdego znaków ANSI na Unicode.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>A managed string that holds a copy of the native ANSI string if the value of the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię natywnego ANSI string, jeśli wartość <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>; w przeciwnym razie ta metoda zwraca <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> method to create a managed string from an unmanaged<ph id="ph2">`char`</ph> array.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph> metodę w celu utworzenia ciąg zarządzanego z niezarządzanej<ph id="ph2">`char`</ph> tablicy.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies all or part of an unmanaged string into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje całość lub część ciągu niezarządzanych do niego.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>For Unicode platforms, the address of the first Unicode character.</source>
          <target state="translated">W przypadku platform Unicode adres pierwszego znaku Unicode.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>For ANSI plaforms, the address of the first ANSI character.</source>
          <target state="translated">Dla Platforms ANSI, adres pierwszego znaku, ANSI.</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje wszystkie znaki do pierwszego znaku null z ciągu przechowywane w pamięci niezarządzanej do niego.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>A managed string that holds a copy of the unmanaged string if the value of the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię niezarządzane ciągu, jeśli wartość <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>; w przeciwnym razie ta metoda zwraca <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph>.</source>
          <target state="translated">Jeśli bieżąca platforma jest Unicode, każdy znak ANSI jest rozszerzeniami znak Unicode i ta metoda wywołuje <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>Otherwise, this method calls <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph>.</source>
          <target state="translated">W przeciwnym razie ta metoda wywołuje <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> provides the opposite functionality of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>For Unicode platforms, the address of the first Unicode character.</source>
          <target state="translated">W przypadku platform Unicode adres pierwszego znaku Unicode.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>For ANSI plaforms, the address of the first ANSI character.</source>
          <target state="translated">Dla Platforms ANSI, adres pierwszego znaku, ANSI.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>The number of characters to copy.</source>
          <target state="translated">Liczba znaków do skopiowania.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies the specified number of characters from a string stored in unmanaged memory into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje określoną liczbę znaków z ciągu przechowywane w pamięci niezarządzanej do niego.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>A managed string that holds a copy of the native string if the value of the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię natywnego ciągu, jeśli wartość <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>; w przeciwnym razie ta metoda zwraca <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>On Unicode platforms, this method calls <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph>; on ANSI platforms, it calls <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph>.</source>
          <target state="translated">Na platformach Unicode, ta metoda wywołuje <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph>; na platformach ANSI wywołuje <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>No transformations are done before these methods are called.</source>
          <target state="translated">Nie przekształceń są wykonywane przed te metody są wywoływane.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>The address of the first character of the unmanaged string.</source>
          <target state="translated">Adres pierwszego znaku ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies a <bpt id="p1">[</bpt>binary string (BSTR)<ept id="p1">](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)</ept> stored in unmanaged memory into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje <bpt id="p1">[</bpt>ciągu binarnego (BSTR)<ept id="p1">](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)</ept> przechowywane w pamięci niezarządzanej do niego.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>A managed string that holds a copy of the unmanaged string.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię niezarządzane ciągu.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>Call this method only on strings that were allocated with the unmanaged <bpt id="p1">[</bpt>SysAllocString<ept id="p1">](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx)</ept> and <bpt id="p2">[</bpt>SysAllocStringLen<ept id="p2">](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx)</ept> functions.</source>
          <target state="translated">Tę metodę można wywołać tylko dla ciągów, które zostały przydzielone z niezarządzanej <bpt id="p1">[</bpt>SysAllocString<ept id="p1">](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx)</ept> i <bpt id="p2">[</bpt>SysAllocStringLen<ept id="p2">](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx)</ept> funkcji.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> equals <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> Equals <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies all or part of an unmanaged Unicode string into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje do niego całość lub część niezarządzane ciąg Unicode.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>The address of the first character of the unmanaged string.</source>
          <target state="translated">Adres pierwszego znaku ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies all characters up to the first null character from an unmanaged Unicode string into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje wszystkie znaki do pierwszego znaku null z niezarządzanego ciągu Unicode do niego.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>A managed string that holds a copy of the unmanaged string if the value of the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię niezarządzane ciągu, jeśli wartość <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>; w przeciwnym razie ta metoda zwraca <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph> is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph> jest przydatne, przekazywanie niestandardowych lub do użytku podczas mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>The address of the first character of the unmanaged string.</source>
          <target state="translated">Adres pierwszego znaku ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>The number of Unicode characters to copy.</source>
          <target state="translated">Liczba znaków Unicode, aby skopiować.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>Allocates a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> and copies a specified number of characters from an unmanaged Unicode string into it.</source>
          <target state="translated">Przydziela zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> i kopiuje określoną liczbę znaków z ciągu Unicode niezarządzane do niego.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>A managed string that holds a copy of the unmanaged string if the value of the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>; otherwise, this method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zarządzane ciąg, który przechowuje kopię niezarządzane ciągu, jeśli wartość <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametr nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>; w przeciwnym razie ta metoda zwraca <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</source>
          <target state="translated">Ponieważ ta metoda tworzy kopię niezarządzane ciągu zawartości, należy zwolnić oryginalnego ciągu zależnie od potrzeb.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>This method provides the opposite functionality of the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Marshals data from an unmanaged block of memory to a managed object.</source>
          <target state="translated">Dane marshals z niezarządzanego bloku pamięci do zarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>The object to which the data is to be copied.</source>
          <target state="translated">Obiekt, do którego ma zostać skopiowany danych.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>This must be an instance of a formatted class.</source>
          <target state="translated">Musi to być wystąpienia klasy sformatowany.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>Marshals data from an unmanaged block of memory to a managed object.</source>
          <target state="translated">Dane marshals z niezarządzanego bloku pamięci do zarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> is often necessary in COM interop and platform invoke when structure parameters are represented as an <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> często jest to konieczne w modelu COM interop i platforma wywołania, gdy parametry struktury są reprezentowane jako <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>You cannot use this overload method with value types.</source>
          <target state="translated">Ta metoda przeciążenia nie można używać typów wartości.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>Structure layout is not sequential or explicit.</source>
          <target state="translated">Układ struktury nie jest sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>Structure is a boxed value type.</source>
          <target state="translated">Struktura jest opakowanym typem wartościowym.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The type of object to be created.</source>
          <target state="translated">Typ obiektu do utworzenia.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>This object must represent a formatted class or a structure.</source>
          <target state="translated">Ten obiekt musi reprezentować sformatowany klasy lub struktury.</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</source>
          <target state="translated">Dane marshals z niezarządzanego bloku pamięci do nowoprzydzielonych zarządzanego obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>A managed object containing the data pointed to by the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter.</source>
          <target state="translated">Zarządzanego obiektu zawierającego dane wskazywana przez <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> is often necessary in COM interop and platform invoke when structure parameters are represented as an <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> często jest to konieczne w modelu COM interop i platforma wywołania, gdy parametry struktury są reprezentowane jako <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>You can pass a value type to this overload method.</source>
          <target state="translated">Typ wartości można przekazać do tej metody przeciążenia.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>In this case, the returned object is a boxed instance.</source>
          <target state="translated">W takim przypadku zwrócony obiekt jest wystąpieniem ramce.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład tworzy struktury zarządzanej, przeniesienie jej do niezarządzanej pamięci i przekazuje ją do pamięci zarządzanej przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób organizowania niezarządzane bloku pamięci do struktury zarządzanych za pomocą <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>This code assumes 32-bit compilation.</source>
          <target state="translated">Ten kod zakłada kompilacji 32-bitowych.</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>Before using a 64-bit compiler, replace <ph id="ph1">&lt;xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Przed użyciem kompilator 64-bitowy, Zastąp <ph id="ph1">&lt;xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType&gt;</ph> z <ph id="ph2">&lt;xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> parameter layout is not sequential or explicit.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> Nie jest parametr układ sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>The class specified by <ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> does not have an accessible default constructor.</source>
          <target state="translated">Z klasą określoną przez <ph id="ph1">&lt;paramref name="structureType" /&gt;</ph> nie ma dostępnych domyślnego konstruktora.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>The type of the object to which the data is to be copied.</source>
          <target state="translated">Typ obiektu, do którego ma zostać skopiowany danych.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>This must be a formatted class or a structure.</source>
          <target state="translated">Musi to być sformatowany klasy lub struktury.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</source>
          <target state="translated">Dane marshals z niezarządzanego bloku pamięci do nowoprzydzielonych zarządzanego obiektu o typie określonym przez parametr typu ogólnego.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>A managed object that contains the data that the <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> parameter points to.</source>
          <target state="translated">Obiektu zarządzanego, zawierający dane, które <ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29&gt;</ph> is often necessary in COM interop and platform invoke when structure parameters are represented as <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29&gt;</ph> często jest to konieczne w modelu COM interop i platforma wywołania, gdy parametry struktury są reprezentowane jako <ph id="ph2">&lt;xref:System.IntPtr?displayProperty=nameWithType&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>You can pass a value type to this method overload.</source>
          <target state="translated">Typ wartości można przekazać do przeciążenie tej metody.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>The layout of <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> is not sequential or explicit.</source>
          <target state="translated">Układ <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nie jest sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>The class specified by <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> does not have an accessible default constructor.</source>
          <target state="translated">Z klasą określoną przez <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> nie ma dostępnych domyślnego konstruktora.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>The type of <bpt id="p1">&lt;c&gt;</bpt>structure<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ <bpt id="p1">&lt;c&gt;</bpt>struktury<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>This must be a formatted class.</source>
          <target state="translated">Musi to być sformatowany klasy.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>A pointer to an unmanaged block of memory.</source>
          <target state="translated">Wskaźnik do niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>The object to which the data is to be copied.</source>
          <target state="translated">Obiekt, do którego ma zostać skopiowany danych.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>Marshals data from an unmanaged block of memory to a managed object of the specified type.</source>
          <target state="translated">Dane marshals z niezarządzanego bloku pamięci do zarządzanego obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29&gt;</ph> is often necessary in COM interop and platform invoke when structure parameters are represented as <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29&gt;</ph> często jest to konieczne w modelu COM interop i platforma wywołania, gdy parametry struktury są reprezentowane jako <ph id="ph2">&lt;xref:System.IntPtr&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>You cannot use this method overload with value types.</source>
          <target state="translated">Przeciążenie tej metody nie można używać z typami wartości.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>Structure layout is not sequential or explicit.</source>
          <target state="translated">Układ struktury nie jest sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>The interface to be queried.</source>
          <target state="translated">Interfejs, który ma zostać zbadany.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>The interface identifier (IID) of the requested interface.</source>
          <target state="translated">Identyfikator interfejsu (IID) żądanego interfejsu.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>When this method returns, contains a reference to the returned interface.</source>
          <target state="translated">Gdy metoda zwróci wartość, zawiera odwołanie do interfejsu zwrócony.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>Requests a pointer to a specified interface from a COM object.</source>
          <target state="translated">Żądanie obiektu COM wskaźnik do określonego interfejsu.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>An HRESULT that indicates the success or failure of the call.</source>
          <target state="translated">HRESULT, która wskazuje powodzenie lub Niepowodzenie wywołania.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A&gt;</ph> method exposes the <bpt id="p1">[</bpt>IUnknown::QueryInterface<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=144867)</ept> method of a COM object, which attempts to obtain a specific interface pointer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A&gt;</ph> Ujawnia metody <bpt id="p1">[</bpt>IUnknown::QueryInterface<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=144867)</ept> metody obiektu modelu COM, który próbuje uzyskać wskaźnik określonego interfejsu.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>Using <ph id="ph1">`QueryInterface`</ph> on a COM object is the same as performing a cast operation in managed code.</source>
          <target state="translated">Przy użyciu <ph id="ph1">`QueryInterface`</ph> COM obiekt jest taki sam jak wykonywanie operacji rzutowania w kodzie zarządzanym.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</source>
          <target state="translated">Wywołanie obiektu ta metoda powoduje, że liczba odwołań zwiększyć na wskaźnik interfejsu przed zwróceniem wskaźnika.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>Always use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> to decrement the reference count once you have finished with the pointer.</source>
          <target state="translated">Zawsze używaj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType&gt;</ph> Aby zmniejszyć liczbę odwołań, po zakończeniu ze wskaźnikiem.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>To obtain an <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> value that represents a <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface pointer, you can call <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aby uzyskać <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> wartość, która reprezentuje <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika interfejsu, należy wywołać <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, lub <ph id="ph4">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reads a single byte from unmanaged memory.</source>
          <target state="translated">Odczytuje jednobajtowych z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>The address in unmanaged memory from which to read.</source>
          <target state="translated">Adres w pamięci niezarządzanej, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>Reads a single byte from unmanaged memory.</source>
          <target state="translated">Odczytuje jednobajtowych z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>The byte read from unmanaged memory.</source>
          <target state="translated">Bajtów odczytanych z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> has an implied offset of 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> ma domniemanych przesunięciem równym 0.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated">Ta metoda umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</source>
          <target state="translated">Poniższy przykład tworzy blok pamięci niezarządzanej, zapisuje bajt niezarządzanej pamięci, odczyta z niezarządzanej pamięci, a następnie usuwa niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> method to read the value of an unmanaged character.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> metody można odczytać wartości znaku niezarządzane.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>The base address in unmanaged memory from which to read.</source>
          <target state="translated">Adres podstawowy w niezarządzanej pamięci, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>Reads a single byte at a given offset (or index) from unmanaged memory.</source>
          <target state="translated">Odczytuje jednobajtowych danego przesunięcia (lub indeks) z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>The byte read from unmanaged memory at the given offset.</source>
          <target state="translated">Bajtów odczytanych z niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> method to read the value of an unmanaged character.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> metody można odczytać wartości znaku niezarządzane.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>The base address in unmanaged memory of the source object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu źródłowego.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>Reads a single byte at a given offset (or index) from unmanaged memory.</source>
          <target state="translated">Odczytuje jednobajtowych danego przesunięcia (lub indeks) z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>The byte read from unmanaged memory at the given offset.</source>
          <target state="translated">Bajtów odczytanych z niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reads a 16-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje 16-bitową liczbę całkowitą ze znakiem z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>The address in unmanaged memory from which to read.</source>
          <target state="translated">Adres w pamięci niezarządzanej, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>Reads a 16-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje 16-bitową liczbę całkowitą ze znakiem z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>The 16-bit signed integer read from unmanaged memory.</source>
          <target state="translated">16-bitową liczbę całkowitą ze znakiem odczytywać niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> has an implied offset of 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> ma domniemanych przesunięciem równym 0.</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>This method enables direct interaction with an unmanaged C-style <ph id="ph1">`Int16`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated">Ta metoda umożliwia bezpośrednie interakcji z niezarządzanego stylu języka C <ph id="ph1">`Int16`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`short`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`short`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>The base address in unmanaged memory from which to read.</source>
          <target state="translated">Adres podstawowy w niezarządzanej pamięci, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>Reads a 16-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje 16-bitową liczbę całkowitą ze znakiem od danego przesunięcia z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>The 16-bit signed integer read from unmanaged memory at the given offset.</source>
          <target state="translated">16-bitową liczbę całkowitą ze znakiem odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`short`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`short`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>The base address in unmanaged memory of the source object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu źródłowego.</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>Reads a 16-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje 16-bitową liczbę całkowitą ze znakiem od danego przesunięcia z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>The 16-bit signed integer read from unmanaged memory at the given offset.</source>
          <target state="translated">16-bitową liczbę całkowitą ze znakiem odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reads a 32-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 32-bitowych z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>The address in unmanaged memory from which to read.</source>
          <target state="translated">Adres w pamięci niezarządzanej, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>Reads a 32-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 32-bitowych z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>The 32-bit signed integer read from unmanaged memory.</source>
          <target state="translated">32-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> has an implied offset of 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> ma domniemanych przesunięciem równym 0.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>This method enables direct interaction with an unmanaged C-style <ph id="ph1">`Int32`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated">Ta metoda umożliwia bezpośrednie interakcji z niezarządzanego stylu języka C <ph id="ph1">`Int32`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`int`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`int`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>The base address in unmanaged memory from which to read.</source>
          <target state="translated">Adres podstawowy w niezarządzanej pamięci, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>Reads a 32-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 32-bitowe w danym przesunięciu z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>The 32-bit signed integer read from unmanaged memory.</source>
          <target state="translated">32-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 32-bitowe podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`int`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`int`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>The base address in unmanaged memory of the source object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu źródłowego.</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>Reads a 32-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 32-bitowe w danym przesunięciu z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>The 32-bit signed integer read from unmanaged memory at the given offset.</source>
          <target state="translated">32-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 32-bitowe podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reads a 64-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 64-bitowym z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>The address in unmanaged memory from which to read.</source>
          <target state="translated">Adres w pamięci niezarządzanej, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>Reads a 64-bit signed integer from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 64-bitowym z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>The 64-bit signed integer read from unmanaged memory.</source>
          <target state="translated">64-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> has an implied offset of 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> ma domniemanych przesunięciem równym 0.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>This method enables direct interaction with an unmanaged C-style <ph id="ph1">`Int64`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated">Ta metoda umożliwia bezpośrednie interakcji z niezarządzanego stylu języka C <ph id="ph1">`Int64`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`__int64`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`__int64`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>The base address in unmanaged memory from which to read.</source>
          <target state="translated">Adres podstawowy w niezarządzanej pamięci, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>Reads a 64-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 64-bitowych od danego przesunięcia z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>The 64-bit signed integer read from unmanaged memory at the given offset.</source>
          <target state="translated">64-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 64-bitowych podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> method to read the value of an unmanaged <ph id="ph2">`__int64`</ph> variable.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> metodę, aby odczytać wartość niezarządzane <ph id="ph2">`__int64`</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>The base address in unmanaged memory of the source object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu źródłowego.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>Reads a 64-bit signed integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowita 64-bitowych od danego przesunięcia z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>The 64-bit signed integer read from unmanaged memory at the given offset.</source>
          <target state="translated">64-bitowej podpisanej liczby całkowitej odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 64-bitowych podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reads a processor native sized integer from unmanaged memory.</source>
          <target state="translated">Odczytuje procesora natywnego całkowite o określonym rozmiarze z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>The address in unmanaged memory from which to read.</source>
          <target state="translated">Adres w pamięci niezarządzanej, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>Reads a processor native-sized integer from unmanaged memory.</source>
          <target state="translated">Odczytuje całkowitą liczbą procesorów o rozmiarze macierzystego z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>The integer read from unmanaged memory.</source>
          <target state="translated">Liczba całkowita odczytywać niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</source>
          <target state="translated">32-bitowa liczba całkowita jest zwracana na komputerach z 32-bitowe i 64-bitowa liczba całkowita jest zwracana na komputerach 64-bitowych.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> has an implied offset of 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> ma domniemanych przesunięciem równym 0.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>This method enables direct interaction with an unmanaged C-style <ph id="ph1">`IntPtr`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated">Ta metoda umożliwia bezpośrednie interakcji z niezarządzanego stylu języka C <ph id="ph1">`IntPtr`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>The base address in unmanaged memory from which to read.</source>
          <target state="translated">Adres podstawowy w niezarządzanej pamięci, z której mają być odczytywane.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>Reads a processor native sized integer at a given offset from unmanaged memory.</source>
          <target state="translated">Odczytuje procesora macierzysty rozmiar całkowitą od danego przesunięcia z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>The integer read from unmanaged memory at the given offset.</source>
          <target state="translated">Liczba całkowita odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> enables direct interaction with an unmanaged C-style <ph id="ph2">`IntPtr`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego stylu języka C <ph id="ph2">`IntPtr`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>The base address in unmanaged memory of the source object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu źródłowego.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before reading.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed czytaniem.</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>Reads a processor native sized integer from unmanaged memory.</source>
          <target state="translated">Odczytuje procesora natywnego całkowite o określonym rozmiarze z niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>The integer read from unmanaged memory at the given offset.</source>
          <target state="translated">Liczba całkowita odczytywać niezarządzanej pamięci od danego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> enables direct interaction with an unmanaged C-style <ph id="ph2">`IntPtr`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before reading its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego stylu języka C <ph id="ph2">`IntPtr`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed odczytaniem wartości jego elementów.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>Reading from unaligned memory locations is supported.</source>
          <target state="translated">Odczyt z lokalizacji pamięci niewyrównany jest obsługiwany.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>A pointer to memory allocated with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Wskaźnik do pamięci przydzielonej z <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>The new size of the allocated block.</source>
          <target state="translated">Nowy rozmiar przydzielony blok.</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>Resizes a block of memory previously allocated with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Zmienia rozmiar bloku pamięci przydzielona wcześniej z <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>An integer representing the address of the reallocated block of memory.</source>
          <target state="translated">Liczba całkowita reprezentująca adres reallocated bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>This memory must be released with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Ta pamięć musi zostać zwolniony za <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A&gt;</ph> is one of two memory reallocation methods in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A&gt;</ph> jest jednym z dwóch metod; Ponowna alokacja pamięci w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph> jest innych.) Na początku zawartość przydzielić pamięci jest taka sama jak oryginalną zawartość; jednak blok całej pamięci może być w innej lokalizacji.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>This method exposes the COM <bpt id="p1">[</bpt>CoTaskMemRealloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148778)</ept> function, which is referred to as the COM task memory allocator.</source>
          <target state="translated">Ta metoda przedstawia COM <bpt id="p1">[</bpt>CoTaskMemRealloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148778)</ept> funkcji, która jest określana jako alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>There is insufficient memory to satisfy the request.</source>
          <target state="translated">Jest za mało pamięci do spełnienia żądania.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>A pointer to memory allocated with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Wskaźnik do pamięci przydzielonej z <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>The new size of the allocated block.</source>
          <target state="translated">Nowy rozmiar przydzielony blok.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>This is not a pointer; it is the byte count you are requesting, cast to type <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</source>
          <target state="translated">Nie jest wskaźnikiem; jest to liczba bajtów zażądano, rzutowanie na typ <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>If you pass a pointer, it is treated as a size.</source>
          <target state="translated">W przypadku przekazania wskaźnik, będzie traktowane jako o rozmiarze.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>Resizes a block of memory previously allocated with <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Zmienia rozmiar bloku pamięci przydzielona wcześniej z <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>A pointer to the reallocated memory.</source>
          <target state="translated">Wskaźnik do reallocated pamięci.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>This memory must be released using <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph>.</source>
          <target state="translated">Ta pamięć muszą zostać zwolnione, przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph> is one of two memory reallocation API methods in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A&gt;</ph> jest jednym z dwóch pamięci; Ponowna alokacja metody interfejsu API w <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> is the other.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType&gt;</ph> jest innych.)</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>This method exposes the Win32 <bpt id="p1">[</bpt>GlobalReAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148780)</ept> function from Kernel32.dll.</source>
          <target state="translated">Ta metoda przedstawia Win32 <bpt id="p1">[</bpt>GlobalReAlloc<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148780)</ept> funkcji Kernel32.dll.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>The returned pointer can differ from the original.</source>
          <target state="translated">Zwrócony wskaźnik może się różnić od oryginału.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</source>
          <target state="translated">Jeśli jest inny, zawartość oryginalnego bloku pamięci zostały skopiowane do nowego bloku i został zwolniony oryginalnego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>There is insufficient memory to satisfy the request.</source>
          <target state="translated">Jest za mało pamięci do spełnienia żądania.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>The interface to release.</source>
          <target state="translated">Interfejs do zwolnienia.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>Decrements the reference count on the specified interface.</source>
          <target state="translated">Zmniejsza odwołania są liczone dla określonego interfejsu.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>The new value of the reference count on the interface specified by the <ph id="ph1">&lt;paramref name="pUnk" /&gt;</ph> parameter.</source>
          <target state="translated">Nowa wartość odwołania liczba w interfejsie, określona przez <ph id="ph1">&lt;paramref name="pUnk" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</source>
          <target state="translated">Środowisko uruchomieniowe języka wspólnego zarządza liczebności referencyjnej obiektu COM dla Ciebie, dzięki czemu bezpośrednio przy użyciu tej metody nie.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>Use this value only for testing purposes.</source>
          <target state="translated">Ta wartość może być użyta tylko do celów testowych.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</source>
          <target state="translated">W rzadkich przypadkach, takich jak testowanie organizatora niestandardowego użytkownik może być konieczne do manipulowania okres istnienia obiektu ręcznie.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>Only programs that call <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType&gt;</ph> should call <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph>.</source>
          <target state="translated">Tylko programy tego wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType&gt;</ph> powinny wywoływać <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>Calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> after the reference count has reached zero causes undefined behavior.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> po osiągnięciu liczebności referencyjnej zero spowoduje, że niezdefiniowane zachowanie.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>You can call <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> to obtain an <ph id="ph4">&lt;xref:System.IntPtr&gt;</ph> value that represents a <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> interface pointer to release.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType&gt;</ph>, lub <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType&gt;</ph> uzyskanie <ph id="ph4">&lt;xref:System.IntPtr&gt;</ph> wartość, która reprezentuje <bpt id="p1">[</bpt>IUnknown<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=148003)</ept> wskaźnika interfejsu do zwolnienia.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>You can also use these methods and the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> method on managed objects to release the COM interfaces represented by the managed object's <bpt id="p1">[</bpt>COM Callable Wrapper<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</source>
          <target state="translated">Można także używać tych metod i <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> metody dla zarządzanych obiektów, aby zwolnić interfejsy modelu COM reprezentowanych przez obiekt zarządzany <bpt id="p1">[</bpt>wywoływana otoka COM<ept id="p1">](~/docs/framework/interop/com-callable-wrapper.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>The following example demonstrates how to retrieve an <ph id="ph1">`IUnknown`</ph> interface for a managed object using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak pobrać <ph id="ph1">`IUnknown`</ph> interfejs dla obiekt zarządzany przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>The example then releases the interface pointer by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> method.</source>
          <target state="translated">Następnie w przykładzie zwalniany wskaźnika interfejsu, wywołując <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.Release%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>The COM object to release.</source>
          <target state="translated">Obiekt COM do zwolnienia.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Decrements the reference count of the <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW) associated with the specified COM object.</source>
          <target state="translated">Zmniejsza liczba odwołanie <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW) skojarzony z określonym obiektem COM.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>The new value of the reference count of the RCW associated with <ph id="ph1">&lt;paramref name="o" /&gt;</ph>.</source>
          <target state="translated">Nowa wartość liczebności referencyjnej równej otoki RCW skojarzone z <ph id="ph1">&lt;paramref name="o" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</source>
          <target state="translated">Ta wartość jest zazwyczaj zero, ponieważ otoki RCW przechowuje tylko jedno odwołanie do opakowana obiektu COM, niezależnie od liczby zarządzanych klientów wywoływania go.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This method is used to explicitly control the lifetime of a COM object used from managed code.</source>
          <target state="translated">Ta metoda jest używana do sterowania jawnie istnienia obiektu COM używany z kodu zarządzanego.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</source>
          <target state="translated">Należy używać tej metody można zwolnić obiekt COM, który zawiera odwołania do zasobów w odpowiednim czasie lub musi zostać zwolniony obiekty w określonej kolejności.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</source>
          <target state="translated">Za każdym razem, gdy wskaźnika interfejsu COM wprowadza środowisko uruchomieniowe języka wspólnego (CLR), jest on zawijany w otoki RCW.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</source>
          <target state="translated">Otoka RCW jest liczba odwołań, który jest zwiększany za każdym razem wskaźnika interfejsu COM jest zamapowana do niego.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method decrements the reference count of an RCW.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> Odwołanie liczba otoki RCW zmniejsza metody.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <ph id="ph1">&lt;xref:System.NullReferenceException?displayProperty=nameWithType&gt;</ph> if you attempt to use the object further.</source>
          <target state="translated">Gdy liczba odwołań do zera, środowisko uruchomieniowe zwalnia jego odwołań do niezarządzanego obiektu modelu COM i zgłasza <ph id="ph1">&lt;xref:System.NullReferenceException?displayProperty=nameWithType&gt;</ph> użytkownik podejmie próbę dalszego użyć obiektu.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> returns the number of remaining references.</source>
          <target state="translated">Jeśli ten sam interfejs COM jest przekazywany więcej niż jeden raz z niezarządzanych do kodu zarządzanego, liczba odwołań na otoki jest zwiększany zawsze i wywoływania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> zwraca liczbę pozostałych odwołań.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</source>
          <target state="translated">Ta metoda umożliwia wymuszenie otoki RCW odwołanie liczba wersji, tak aby znalazła dokładnie gdy ma się.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>However, improper use of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> may cause your application to fail, or may cause an access violation.</source>
          <target state="translated">Jednak nieprawidłowe użycie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> może spowodować, że aplikacja, Niepowodzenie lub może spowodować naruszenie zasad dostępu.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</source>
          <target state="translated">Rozważmy scenariusz wstrzymał kodu zarządzanego w domenie aplikacji na otoki RCW, która reprezentuje składnik COM.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method on the RCW, the managed code will be unable to access the RCW and will raise an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.InvalidComObjectException&gt;</ph> exception.</source>
          <target state="translated">Jeśli należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> metoda otoki RCW, nie będzie można uzyskać dostępu do otoki RCW kodu zarządzanego i zgłosi <ph id="ph2">&lt;xref:System.Runtime.InteropServices.InvalidComObjectException&gt;</ph> wyjątku.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>A more serious error may occur if a call to the RCW is executing when the RCW is released.</source>
          <target state="translated">Bardziej błąd może wystąpić, jeśli wywołanie otoki RCW jest wykonywany po zwolnieniu otoki RCW.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>In this case, there is a good chance that the thread making the call will cause an access violation.</source>
          <target state="translated">W takim przypadku istnieje duże prawdopodobieństwo, że wątek wywołania spowoduje naruszenie zasad dostępu.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</source>
          <target state="translated">Jednak pamięci procesu może zostać uszkodzona i proces może kontynuować działanie do momentu jej nie powiedzie się z przyczyn, które są bardzo trudne do debugowania.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM <bpt id="p1">[</bpt>CoCreateInstance<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=142894)</ept> function, which returns the same interface pointer every time it is called for singleton COM components.</source>
          <target state="translated">To zagrożenie jest rozliczana, gdy składnik modelu COM, który jest używany jest klasą pojedynczą z następującej przyczyny: CLR aktywuje składniki modelu COM, wywołując modelu COM <bpt id="p1">[</bpt>wywołanie funkcji CoCreateInstance<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=142894)</ept> funkcji, która zwraca wskaźnik tego samego interfejsu co razem, gdy jest ona wywoływana dla składników COM pojedynczego wystąpienia.</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method on the COM component, the other will be broken.</source>
          <target state="translated">W związku z tym oddzielne i niezależne fragmenty kodu zarządzanego w domenie aplikacji można używać tego samego otoki RCW dla składnika modelu COM pojedyncze i jeśli jednego wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> metody dla składnika modelu COM, innych zostanie przerwany.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Therefore, use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> only if it is absolutely required.</source>
          <target state="translated">Dlatego należy używać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> tylko wtedy, gdy jest to bezwzględnie wymagane.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>If you want to call this method to ensure that a COM component is released at a determined time, consider using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> method instead.</source>
          <target state="translated">Aby wywołać tę metodę w celu zapewnienia zwolnienie składnika modelu COM na określony czas, należy rozważyć użycie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> will release the underlying COM component regardless of how many times it has re-entered the CLR.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> Spowoduje to zwolnienie podstawowy składnik modelu COM, niezależnie od tego, ile razy ponownie przeszedł środowiska CLR.</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</source>
          <target state="translated">Wewnętrzny odwołanie liczba otoki RCW jest zwiększany o jeden za każdym razem składnika modelu COM ponownie wprowadza środowiska CLR.</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>Therefore, you could call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> method in a loop until the value returned is zero.</source>
          <target state="translated">W związku z tym można wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A&gt;</ph> metoda w pętli, dopóki wartość zwracana jest wartość zero.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This achieves the same result as the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> method.</source>
          <target state="translated">To osiąga ten sam rezultat jako <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is not a valid COM object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> nie jest prawidłowym obiektem COM.</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source><ph id="ph1">&lt;paramref name="o" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="o" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache">
          <source>Releases the thread cache.</source>
          <target state="translated">Zwalnia pamięć podręczna wątku.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Obiekt zarządzany do skopiowania.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>Allocates an unmanaged <bpt id="p1">[</bpt>binary string (BSTR)<ept id="p1">](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)</ept> and copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object into it.</source>
          <target state="translated">Przydziela niezarządzane <bpt id="p1">[</bpt>ciągu binarnego (BSTR)<ept id="p1">](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)</ept> i kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu do niego.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied to, or 0 if a null object was supplied.</source>
          <target state="translated">Adres w pamięci niezarządzanej, gdzie <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parametr został skopiowany do, lub 0, jeśli został dostarczony obiekt zerowy.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A&gt;</ph> Metoda jest przydatna do przekazywanie niestandardowych lub gdy mieszanie zarządzanych i niezarządzanych kodu.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the <ph id="ph1">`BSTR`</ph> when finished by calling the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, zawsze bezpłatne <ph id="ph1">`BSTR`</ph> po zakończeniu przez wywołanie metody <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Bieżący komputer nie działa system Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Ta metoda jest obsługiwana tylko na komputerach z systemem Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Obiekt zarządzany do skopiowania.</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu na blok pamięci przydzielony z niezarządzanego alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied to, or 0 if a null object was supplied.</source>
          <target state="translated">Adres w pamięci niezarządzanej, gdzie <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parametr został skopiowany do, lub 0, jeśli został dostarczony obiekt zerowy.</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> Metoda jest przydatna do przekazywanie niestandardowych lub gdy mieszanie zarządzanych i niezarządzanych kodu.</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The characters of the string are copied as ANSI characters.</source>
          <target state="translated">Znaków ciągu są kopiowane jako znaków ANSI.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> method to marshal and decrypt the contents of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to a block of unmanaged memory.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> sposób organizowania i odszyfrowywania zawartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu do bloku pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> method to zero out and dispose the unmanaged block.</source>
          <target state="translated">Następnie używa <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> metody do zera wychodzących i usuwania niezarządzane bloku.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Bieżący komputer nie działa system Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Ta metoda jest obsługiwana tylko na komputerach z systemem Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Obiekt zarządzany do skopiowania.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu na blok pamięci przydzielony z niezarządzanego alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied to, or 0 if a null object was supplied.</source>
          <target state="translated">Adres w pamięci niezarządzanej, gdzie <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parametr został skopiowany do, lub 0, jeśli został dostarczony obiekt zerowy.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> Metoda jest przydatna do przekazywanie niestandardowych lub gdy mieszanie zarządzanych i niezarządzanych kodu.</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze bezpłatne pamięć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The characters of the string are copied as Unicode characters.</source>
          <target state="translated">Znaków ciągu są kopiowane jako znaków Unicode.</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> method to marshal and decrypt the contents of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to a block of unmanaged memory.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> sposób organizowania i odszyfrowywania zawartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu do bloku pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> method to zero out and dispose the unmanaged block.</source>
          <target state="translated">Następnie używa <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> metody do zera wychodzących i usuwania niezarządzane bloku.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Bieżący komputer nie działa system Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Ta metoda jest obsługiwana tylko na komputerach z systemem Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Obiekt zarządzany do skopiowania.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> into unmanaged memory, converting into ANSI format as it copies.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> do niezarządzanej pamięci, konwersji do formatu ANSI, jak są kopiowane.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The address, in unmanaged memory, to where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter was copied, or 0 if a null object was supplied.</source>
          <target state="translated">Adres w niezarządzanej pamięci, aby wskazywała <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parametru została skopiowana, lub wartość 0, jeśli został dostarczony obiekt zerowy.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> method is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> Metoda jest przydatna do przekazywanie niestandardowych lub gdy mieszanie zarządzanych i niezarządzanych kodu.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze bezpłatne pamięć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> method to marshal and decrypt the contents of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to a block of unmanaged memory.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> sposób organizowania i odszyfrowywania zawartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu do bloku pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> method to zero out and dispose the unmanaged block.</source>
          <target state="translated">Następnie używa <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> metody do zera wychodzących i usuwania niezarządzane bloku.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Bieżący komputer nie działa system Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Ta metoda jest obsługiwana tylko na komputerach z systemem Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The managed object to copy.</source>
          <target state="translated">Obiekt zarządzany do skopiowania.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object into unmanaged memory.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu w pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The address, in unmanaged memory, where <ph id="ph1">&lt;paramref name="s" /&gt;</ph> was copied, or 0 if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> object whose length is 0.</source>
          <target state="translated">Adres w pamięci niezarządzanej, gdzie <ph id="ph1">&lt;paramref name="s" /&gt;</ph> został skopiowany lub równa 0, jeśli <ph id="ph2">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph3">&lt;see cref="T:System.Security.SecureString" /&gt;</ph> obiektu, którego długość jest 0.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> — Metoda przydaje się do przekazywanie niestandardowych lub do wykorzystania podczas mieszania zarządzanych i niezarządzanych kodu.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze bezpłatne pamięć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> method with the unmanaged <ph id="ph2">`LogonUser`</ph> function to perform impersonation with the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> class.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> metody z niezarządzanej <ph id="ph2">`LogonUser`</ph> funkcja do wykonania personifikacji z <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The example then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> method to zero out and free the unmanaged string reference.</source>
          <target state="translated">W przykładzie następnie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> metody na zero wychodzących i zwolnij odwołanie do ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>The current computer is not running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Bieżący komputer nie działa system Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
          <source>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</source>
          <target state="translated">Ta metoda jest obsługiwana tylko na komputerach z systemem Windows 2000 z dodatkiem Service Pack 3 lub nowszym.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>The COM object in which to store the data.</source>
          <target state="translated">Obiekt COM, w którym mają być zapisane dane.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>The key in the internal hash table of the COM object in which to store the data.</source>
          <target state="translated">Klucz w tablicy skrótów wewnętrznego obiektu COM, w którym mają być zapisane dane.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>The data to set.</source>
          <target state="translated">Dane można ustawić.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>Sets data referenced by the specified key in the specified COM object.</source>
          <target state="translated">Ustawia dane odwołuje się określony klucz w określonym obiekcie COM.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data was set successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dane są ustawione pomyślnie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>All COM objects wrapped in a <bpt id="p1">[</bpt>Runtime Callable Wrapper<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (RCW) have an associated hash table, to which <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A&gt;</ph> adds data.</source>
          <target state="translated">Wszystkie obiekty COM ujęte w <bpt id="p1">[</bpt>wywoływana otoka środowiska uruchomieniowego<ept id="p1">](~/docs/framework/interop/runtime-callable-wrapper.md)</ept> (otoki RCW) mają tablicy skrótów skojarzony, do którego <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A&gt;</ph> dodaje dane.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType&gt;</ph> retrieves data from the hash table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType&gt;</ph> pobiera dane z tablicy skrótów.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>You should never have to call either method from your code.</source>
          <target state="translated">Nie trzeba należy wywołać metodę albo w kodzie.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a COM object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> Obiekt COM nie jest.</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> jest <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Returns the unmanaged size, in bytes, of a class.</source>
          <target state="translated">Zwraca niezarządzane rozmiar w bajtach klasy.</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The object whose size is to be returned.</source>
          <target state="translated">Obiekt, którego rozmiar jest zwracana.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>Returns the unmanaged size of an object in bytes.</source>
          <target state="translated">Zwraca niezarządzane rozmiar obiektu w bajtach.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The size of the specified object in unmanaged code.</source>
          <target state="translated">Rozmiar określonego obiektu za pomocą kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>This method accepts an instance of a structure, which can be a reference type or a boxed value type.</source>
          <target state="translated">Ta metoda przyjmuje wystąpienia struktury, który może być typem referencyjnym lub opakowanym typem wartościowym.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The layout must be sequential or explicit.</source>
          <target state="translated">Układ musi być sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The size returned is the size of the unmanaged object.</source>
          <target state="translated">Rozmiar, zwracany jest rozmiar niezarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The unmanaged and managed sizes of an object can differ.</source>
          <target state="translated">Niezarządzane i zarządzane rozmiarów obiektu może się różnić.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>For character types, the size is affected by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> value applied to that class.</source>
          <target state="translated">Dla typów znakowych wpływ rozmiar <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> wartość stosowana do tej klasy.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> method to determine how much unmanaged memory to allocate using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> methods.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> metodę, aby określić, ile niezarządzanej pamięci, aby przydzielić, przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</source>
          <target state="translated">Poniższy przykład tworzy struktury zarządzanej, przeniesienie jej do niezarządzanej pamięci i przekazuje ją do pamięci zarządzanej.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> method to determine how much unmanaged memory to allocate.</source>
          <target state="translated">W tym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> metodę, aby określić, ile niezarządzanej pamięci do przydzielenia.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="structure" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The type whose size is to be returned.</source>
          <target state="translated">Typ, którego rozmiar jest zwracana.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>Returns the size of an unmanaged type in bytes.</source>
          <target state="translated">Zwraca rozmiar typem niezarządzanym w bajtach.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The size of the specified type in unmanaged code.</source>
          <target state="translated">Rozmiar określonego typu za pomocą kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>You can use this method when you do not have a structure.</source>
          <target state="translated">Można użyć tej metody, jeśli nie masz struktury.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The layout must be sequential or explicit.</source>
          <target state="translated">Układ musi być sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The size returned is the size of the unmanaged type.</source>
          <target state="translated">Rozmiar, zwracana jest rozmiar typu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The unmanaged and managed sizes of an object can differ.</source>
          <target state="translated">Niezarządzane i zarządzane rozmiarów obiektu może się różnić.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>For character types, the size is affected by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> value applied to that class.</source>
          <target state="translated">Dla typów znakowych wpływ rozmiar <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> wartość stosowana do tej klasy.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The following example demonstrates calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie pokazano wywołania <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is a generic type definition.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr jest definicją typu ogólnego.</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>The type whose size is to be returned.</source>
          <target state="translated">Typ, którego rozmiar jest zwracana.</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>Returns the size of an unmanaged type in bytes.</source>
          <target state="translated">Zwraca rozmiar typem niezarządzanym w bajtach.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>The size, in bytes, of the type that is specified by the <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> generic type parameter.</source>
          <target state="translated">Rozmiar w bajtach, typu, który jest określony przez <ph id="ph1">&lt;typeparamref name="T" /&gt;</ph> parametr typu ogólnego.</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>You can use this method when you do not have a structure.</source>
          <target state="translated">Można użyć tej metody, jeśli nie masz struktury.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>The layout must be sequential or explicit.</source>
          <target state="translated">Układ musi być sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>The size returned is the size of the unmanaged type.</source>
          <target state="translated">Rozmiar, zwracana jest rozmiar typu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>The unmanaged and managed sizes of an object can differ.</source>
          <target state="translated">Niezarządzane i zarządzane rozmiarów obiektu może się różnić.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1">
          <source>For character types, the size is affected by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> value applied to that class.</source>
          <target state="translated">Dla typów znakowych wpływ rozmiar <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> wartość stosowana do tej klasy.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The type of the <bpt id="p1">&lt;c&gt;</bpt>structure<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">Typ <bpt id="p1">&lt;c&gt;</bpt>struktury<ept id="p1">&lt;/c&gt;</ept> parametru.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The object whose size is to be returned.</source>
          <target state="translated">Obiekt, którego rozmiar jest zwracana.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>Returns the unmanaged size of an object of a specified type in bytes.</source>
          <target state="translated">Zwraca rozmiar niezarządzanego obiektu określonego typu w bajtach.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The size, in bytes, of the specified object in unmanaged code.</source>
          <target state="translated">Rozmiar w bajtach określonego obiektu za pomocą kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>This method accepts an instance of a structure, which can be a reference type or a boxed value type.</source>
          <target state="translated">Ta metoda przyjmuje wystąpienia struktury, który może być typem referencyjnym lub opakowanym typem wartościowym.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The layout must be sequential or explicit.</source>
          <target state="translated">Układ musi być sekwencyjny lub jawny.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The size returned is the size of the unmanaged object.</source>
          <target state="translated">Rozmiar, zwracany jest rozmiar niezarządzanego obiektu.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The unmanaged and managed sizes of an object can differ.</source>
          <target state="translated">Niezarządzane i zarządzane rozmiarów obiektu może się różnić.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>For character types, the size is affected by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> value applied to that class.</source>
          <target state="translated">Dla typów znakowych wpływ rozmiar <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> wartość stosowana do tej klasy.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29&gt;</ph> method to determine how much unmanaged memory to allocate by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> methods.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29&gt;</ph> metodę, aby określić, ile niezarządzanej pamięci, aby przydzielić przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)">
          <source>The <ph id="ph1">&lt;paramref name="structure" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>The managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>Allocates a <bpt id="p1">[</bpt>BSTR<ept id="p1">](https://msdn.microsoft.com/library/ms221069.aspx)</ept> and copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into it.</source>
          <target state="translated">Przydziela <bpt id="p1">[</bpt>BSTR<ept id="p1">](https://msdn.microsoft.com/library/ms221069.aspx)</ept> i kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> do niego.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>An unmanaged pointer to the <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph>, or 0 if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> is null.</source>
          <target state="translated">Niezarządzany wskaźnik do <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph>, lub 0, jeśli <ph id="ph2">&lt;paramref name="s" /&gt;</ph> ma wartość null.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the <ph id="ph1">`BSTR`</ph> when finished by calling <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, zawsze bezpłatne <ph id="ph1">`BSTR`</ph> po zakończeniu przez wywołanie metody <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>The length for <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is out of range.</source>
          <target state="translated">Długość <ph id="ph1">&lt;paramref name="s" /&gt;</ph> jest poza zakresem.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> na blok pamięci przydzielony z niezarządzanego alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>An integer representing a pointer to the block of memory allocated for the string, or 0 if <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Liczba całkowita reprezentująca wskaźnik do bloku pamięci przydzielonej dla ciągu lub 0, jeśli <ph id="ph1">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>The characters of the string are copied as ANSI characters.</source>
          <target state="translated">Znaków ciągu są kopiowane jako znaków ANSI.</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter exceeds the maximum length allowed by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametru przekracza maksymalną długość dozwoloną przez system operacyjny.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> na blok pamięci przydzielony z niezarządzanego alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>The allocated memory block, or 0 if <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Blok pamięci przydzielony lub 0, jeśli <ph id="ph1">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A&gt;</ph> is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A&gt;</ph> jest przydatne, przekazywanie niestandardowych lub do użytku podczas mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</source>
          <target state="translated">Znaków ciągu są kopiowane jako znaków ANSI lub Unicode, w zależności od systemu operacyjnego, w którym jest wykonywany kod.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>On Windows 98, the characters are copied as ANSI characters.</source>
          <target state="translated">W systemach Windows 98 znaki są kopiowane jako znaków ANSI.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</source>
          <target state="translated">Na Windows NT 4.0, Windows 2000, Windows XP i z rodziny Windows Server 2003 znaki są kopiowane jako znaków Unicode.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>The length for <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is out of range.</source>
          <target state="translated">Długość <ph id="ph1">&lt;paramref name="s" /&gt;</ph> jest poza zakresem.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to a block of memory allocated from the unmanaged COM task allocator.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> na blok pamięci przydzielony z niezarządzanego alokatora zadań COM.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Liczba całkowita reprezentująca wskaźnik do bloku pamięci przydzielonej dla ciągu lub 0, jeśli jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A&gt;</ph> is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A&gt;</ph> jest przydatne, przekazywanie niestandardowych lub do użytku podczas mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>The characters of the string are copied as Unicode characters.</source>
          <target state="translated">Znaków ciągu są kopiowane jako znaków Unicode.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter exceeds the maximum length allowed by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametru przekracza maksymalną długość dozwoloną przez system operacyjny.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into unmanaged memory, converting into ANSI format as it copies.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> do niezarządzanej pamięci, konwersji do formatu ANSI, jak są kopiowane.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>The address, in unmanaged memory, to where <ph id="ph1">&lt;paramref name="s" /&gt;</ph> was copied, or 0 if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Adres w niezarządzanej pamięci, aby wskazywała <ph id="ph1">&lt;paramref name="s" /&gt;</ph> został skopiowany lub równa 0, jeśli <ph id="ph2">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> is useful for custom marshaling or when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> przydaje się przekazywanie niestandardowych lub gdy mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> provides the opposite functionality of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A&gt;</ph> udostępnia funkcjonalność przeciwną <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>This method copies embedded null characters, and includes a terminating null character.</source>
          <target state="translated">Ta metoda kopiuje osadzonych znaki null i zawiera znak końcowy null.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>The following example demonstrates how to convert the contents of a managed <ph id="ph1">&lt;xref:System.String&gt;</ph> class to unmanaged memory and then dispose of the unmanaged memory when done.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób konwertowania zawartości zarządzanego <ph id="ph1">&lt;xref:System.String&gt;</ph> klasy do niezarządzanej pamięci, a następnie usuwa niezarządzanej pamięci, jeśli zostaną wykonane.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter exceeds the maximum length allowed by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametru przekracza maksymalną długość dozwoloną przez system operacyjny.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into unmanaged memory, converting into ANSI format if required.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> do niezarządzanej pamięci, konwersji do formatu ANSI, jeśli jest to wymagane.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>The address, in unmanaged memory, to where the string was copied, or 0 if <ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Adres w pamięci niezarządzanej, do której został skopiowany ciąg lub 0, jeśli <ph id="ph1">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A&gt;</ph> is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A&gt;</ph> jest przydatne, przekazywanie niestandardowych lub do użytku podczas mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>This method copies embedded null characters, and includes a terminating null character.</source>
          <target state="translated">Ta metoda kopiuje osadzonych znaki null i zawiera znak końcowy null.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>The following example demonstrates how to convert the contents of a managed <ph id="ph1">&lt;xref:System.String&gt;</ph> class to unmanaged memory and then dispose of the unmanaged memory when done.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób konwertowania zawartości zarządzanego <ph id="ph1">&lt;xref:System.String&gt;</ph> klasy do niezarządzanej pamięci, a następnie usuwa niezarządzanej pamięci, jeśli zostaną wykonane.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>There is insufficient memory available.</source>
          <target state="translated">Dostępnych jest za mało pamięci.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>A managed string to be copied.</source>
          <target state="translated">Ciąg zarządzanych do skopiowania.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>Copies the contents of a managed <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into unmanaged memory.</source>
          <target state="translated">Kopiuje zawartość zarządzanego <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> do niezarządzanego pamięci.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>The address, in unmanaged memory, to where the <ph id="ph1">&lt;paramref name="s" /&gt;</ph> was copied, or 0 if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Adres w niezarządzanej pamięci, aby wskazywała <ph id="ph1">&lt;paramref name="s" /&gt;</ph> został skopiowany lub równa 0, jeśli <ph id="ph2">&lt;paramref name="s" /&gt;</ph> jest <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A&gt;</ph> is useful for custom marshaling or for use when mixing managed and unmanaged code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A&gt;</ph> jest przydatne, przekazywanie niestandardowych lub do użytku podczas mieszanie zarządzane i niezarządzane kodu.</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>Because this method allocates the unmanaged memory required for a string, always free the memory by calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</source>
          <target state="translated">Ponieważ ta metoda przydziela niezarządzane ilość pamięci wymaganej dla ciągu, wywołując zawsze zwolnienia pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>This method provides the opposite functionality of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ta metoda zapewnia funkcje przeciwną <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>This method copies embedded null characters, and includes a terminating null character.</source>
          <target state="translated">Ta metoda kopiuje osadzonych znaki null i zawiera znak końcowy null.</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>The method could not allocate enough native heap memory.</source>
          <target state="translated">Metoda nie może przydzielić wystarczającej ilości pamięci natywnej sterty.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="s" /&gt;</ph> parameter exceeds the maximum length allowed by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> Parametru przekracza maksymalną długość dozwoloną przez system operacyjny.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>A managed object that holds the data to be marshaled.</source>
          <target state="translated">Obiektu zarządzanego, która przechowuje dane można zorganizować.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>This object must be a structure or an instance of a formatted class.</source>
          <target state="translated">Ten obiekt musi być strukturą lub wystąpienia klasy sformatowany.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>A pointer to an unmanaged block of memory, which must be allocated before this method is called.</source>
          <target state="translated">Wskaźnik do niezarządzanego blok pamięci, która musi być przydzielona, aby wywołać tę metodę.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to call the <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /&gt;</ph> method on the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before this method copies the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby wywołać <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /&gt;</ph> metoda <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru zanim ta metoda umożliwia skopiowanie danych.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>The block must contain valid data.</source>
          <target state="translated">Blok musi zawierać prawidłowe dane.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>Note that passing <ph id="ph1">&lt;see langword="false" /&gt;</ph> when the memory block already contains data can lead to a memory leak.</source>
          <target state="translated">Należy pamiętać, że przekazywanie <ph id="ph1">&lt;see langword="false" /&gt;</ph> gdy blok pamięci zawiera już danych może doprowadzić do wycieku pamięci.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>Marshals data from a managed object to an unmanaged block of memory.</source>
          <target state="translated">Marshals danych z obiektu zarządzanego na niezarządzany bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If <ph id="ph1">`structure`</ph> is a value type, it can be boxed or unboxed.</source>
          <target state="translated">Jeśli <ph id="ph1">`structure`</ph> jest typem wartości może zostać opakowany lub rozpakowany.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If it is boxed, it is unboxed before copying.</source>
          <target state="translated">Jeśli jest on opakowany, jest rozpakowany przed kopiowanie.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>A formatted class is a reference type whose layout is specified by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> attribute, as either <ph id="ph2">&lt;xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Klasa sformatowany jest typem referencyjnym, którego układ jest określona przez <ph id="ph1">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> atrybutu jako <ph id="ph2">&lt;xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> copies the contents of <ph id="ph2">`structure`</ph> to the pre-allocated block of memory that the <ph id="ph3">`ptr`</ph> parameter points to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> kopiuje zawartość <ph id="ph2">`structure`</ph> można wstępnie przydzielić bloku pamięci który <ph id="ph3">`ptr`</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If <ph id="ph1">`structure`</ph> contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <ph id="ph2">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph>), the managed objects are kept alive with reference counts.</source>
          <target state="translated">Jeśli <ph id="ph1">`structure`</ph> zawiera typy odwołań, które kierować do wskaźników interfejsów COM. (interfejsy, klasy bez układ i <ph id="ph2">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph>), są utrzymywane obiektów zarządzanych z liczby odwołań.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>All other reference types (for example, strings and arrays) are marshaled to copies.</source>
          <target state="translated">Wszystkie inne typy odwołań (na przykład, ciągi i tablice) są przekazywane do kopii.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>To release these managed or unmanaged objects, you must call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType&gt;</ph> method before you free the memory block.</source>
          <target state="translated">Aby zwolnić te obiekty zarządzane lub niezarządzane, należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType&gt;</ph> metoda przed wolne bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> method to copy a different instance to the memory block at a later time, specify <ph id="ph2">`true`</ph> for <ph id="ph3">`fDeleteOld`</ph> to remove reference counts for reference types in the previous instance.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> Określ metodę, aby skopiować inne wystąpienie do bloku pamięci w późniejszym czasie, <ph id="ph2">`true`</ph> dla <ph id="ph3">`fDeleteOld`</ph> usunąć odwołanie zlicza dla typów odwołań w poprzednie wystąpienie.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</source>
          <target state="translated">W przeciwnym razie kopie typesand niezarządzanych zarządzane odniesienia są skutecznie ujawnione.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>The overall pattern for using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> is as follows:</source>
          <target state="translated">Ogólny wzór przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> wygląda następująco:</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>On the first call to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> method after a memory block has been allocated, <ph id="ph2">`fDeleteOld`</ph> must be <ph id="ph3">`false`</ph>, because there are no contents to clear.</source>
          <target state="translated">W pierwszym wywołaniu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> metody po przydzieleniu blok pamięci <ph id="ph2">`fDeleteOld`</ph> musi być <ph id="ph3">`false`</ph>, ponieważ nie zawartość, nie można wyczyścić.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>Specify <ph id="ph1">`true`</ph> for <ph id="ph2">`fDeleteOld`</ph> only if the block contains valid data.</source>
          <target state="translated">Określ <ph id="ph1">`true`</ph> dla <ph id="ph2">`fDeleteOld`</ph> tylko, jeśli blok zawiera prawidłowe dane.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If you copy a different instance to the memory block, and the object contains reference types, <ph id="ph1">`fDeleteOld`</ph> must be <ph id="ph2">`true`</ph> to free reference types in the old contents.</source>
          <target state="translated">Jeśli kopiowanie inne wystąpienie do bloku pamięci, a obiekt zawiera typy referencyjne <ph id="ph1">`fDeleteOld`</ph> musi być <ph id="ph2">`true`</ph> zwolnienia typy odwołań w stara zawartość.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>If the object contains reference types, you must call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> method before you free the memory block.</source>
          <target state="translated">Jeśli obiekt zawiera typy odwołań, należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> metoda przed wolne bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>To pin an existing structure instead of copying it, use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType&gt;</ph> type to create a pinned handle for the structure.</source>
          <target state="translated">Aby przypiąć istniejącej struktury zamiast go kopiować, użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType&gt;</ph> typ do utworzenia uchwytu przypiętych dla struktury.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>For details on how to pin, see <bpt id="p1">[</bpt>Copying and Pinning<ept id="p1">](~/docs/framework/interop/copying-and-pinning.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu numer pin, zobacz <bpt id="p1">[</bpt>kopiowanie i przypinanie<ept id="p1">](~/docs/framework/interop/copying-and-pinning.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>The following example creates a managed structure, transfers it to unmanaged memory using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> method, and then transfers it back to managed memory using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykład tworzy struktury zarządzanej, transferuje je przy użyciu niezarządzanej pamięci <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> metody, a następnie transferów go z powrotem do pamięci zarządzanej przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> is a reference type that is not a formatted class.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> jest typem referencyjnym, który nie jest klasą sformatowany.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> jest wystąpieniem typu ogólnego (w programie .NET Framework 4.5 i tylko wcześniejsze wersje).</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>The type of the managed object.</source>
          <target state="translated">Typ obiektu zarządzanego.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>A managed object that holds the data to be marshaled.</source>
          <target state="translated">Obiektu zarządzanego, która przechowuje dane można zorganizować.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>The object must be a structure or an instance of a formatted class.</source>
          <target state="translated">Obiekt musi być strukturą lub wystąpienia klasy sformatowany.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>A pointer to an unmanaged block of memory, which must be allocated before this method is called.</source>
          <target state="translated">Wskaźnik do niezarządzanego blok pamięci, która musi być przydzielona, aby wywołać tę metodę.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to call the <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /&gt;</ph> method on the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before this method copies the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby wywołać <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /&gt;</ph> metoda <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru zanim ta metoda umożliwia skopiowanie danych.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>The block must contain valid data.</source>
          <target state="translated">Blok musi zawierać prawidłowe dane.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>Note that passing <ph id="ph1">&lt;see langword="false" /&gt;</ph> when the memory block already contains data can lead to a memory leak.</source>
          <target state="translated">Należy pamiętać, że przekazywanie <ph id="ph1">&lt;see langword="false" /&gt;</ph> gdy blok pamięci zawiera już danych może doprowadzić do wycieku pamięci.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>Marshals data from a managed object of a specified type to an unmanaged block of memory.</source>
          <target state="translated">Marshals dane z zarządzanego obiektu określonego typu niezarządzanego bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>A formatted class is a reference type whose layout is specified by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> attribute, as either <ph id="ph2">&lt;xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Klasa sformatowany jest typem referencyjnym, którego układ jest określona przez <ph id="ph1">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> atrybutu jako <ph id="ph2">&lt;xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">&lt;xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> copies the contents of <ph id="ph2">`structure`</ph> to the pre-allocated block of memory that the <ph id="ph3">`ptr`</ph> parameter points to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> kopiuje zawartość <ph id="ph2">`structure`</ph> można wstępnie przydzielić bloku pamięci który <ph id="ph3">`ptr`</ph> wskazuje parametr.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>If <ph id="ph1">`structure`</ph> contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <ph id="ph2">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph>), the managed objects are kept alive with reference counts.</source>
          <target state="translated">Jeśli <ph id="ph1">`structure`</ph> zawiera typy odwołań, które kierować do wskaźników interfejsów COM. (interfejsy, klasy bez układ i <ph id="ph2">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph>), są utrzymywane obiektów zarządzanych z liczby odwołań.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>All other reference types (for example, strings and arrays) are marshaled to copies.</source>
          <target state="translated">Wszystkie inne typy odwołań (na przykład, ciągi i tablice) są przekazywane do kopii.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>To release these managed or unmanaged objects, you must call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29&gt;</ph> method before you free the memory block.</source>
          <target state="translated">Aby zwolnić te obiekty zarządzane lub niezarządzane, należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29&gt;</ph> metoda przed wolne bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> method to copy a different instance to the memory block at a later time, specify <ph id="ph2">`true`</ph> for <ph id="ph3">`fDeleteOld`</ph> to remove reference counts for reference types in the previous instance.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> Określ metodę, aby skopiować inne wystąpienie do bloku pamięci w późniejszym czasie, <ph id="ph2">`true`</ph> dla <ph id="ph3">`fDeleteOld`</ph> usunąć odwołanie zlicza dla typów odwołań w poprzednie wystąpienie.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>Otherwise, the managed reference types and unmanaged copies are effectively leaked.</source>
          <target state="translated">W przeciwnym razie typy referencyjne zarządzanych i niezarządzanych kopie są wydajnie ujawnione.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>The overall pattern for using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> is as follows:</source>
          <target state="translated">Ogólny wzór przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29&gt;</ph> wygląda następująco:</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>On the first call to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> method after a memory block has been allocated, <ph id="ph2">`fDeleteOld`</ph> must be <ph id="ph3">`false`</ph>, because there are no contents to clear.</source>
          <target state="translated">W pierwszym wywołaniu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A&gt;</ph> metody po przydzieleniu blok pamięci <ph id="ph2">`fDeleteOld`</ph> musi być <ph id="ph3">`false`</ph>, ponieważ nie zawartość, nie można wyczyścić.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>Specify <ph id="ph1">`true`</ph> for <ph id="ph2">`fDeleteOld`</ph> only if the block contains valid data.</source>
          <target state="translated">Określ <ph id="ph1">`true`</ph> dla <ph id="ph2">`fDeleteOld`</ph> tylko, jeśli blok zawiera prawidłowe dane.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>If you copy a different instance to the memory block, and the object contains reference types, <ph id="ph1">`fDeleteOld`</ph> must be <ph id="ph2">`true`</ph> to free reference types in the old contents.</source>
          <target state="translated">Jeśli kopiowanie inne wystąpienie do bloku pamięci, a obiekt zawiera typy referencyjne <ph id="ph1">`fDeleteOld`</ph> musi być <ph id="ph2">`true`</ph> zwolnienia typy odwołań w stara zawartość.</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>If the object contains reference types, you must call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> method before you free the memory block.</source>
          <target state="translated">Jeśli obiekt zawiera typy odwołań, należy wywołać <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A&gt;</ph> metoda przed wolne bloku pamięci.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>To pin an existing structure instead of copying it, use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType&gt;</ph> type to create a pinned handle for the structure.</source>
          <target state="translated">Aby przypiąć istniejącej struktury zamiast go kopiować, użyj <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType&gt;</ph> typ do utworzenia uchwytu przypiętych dla struktury.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>For details on how to pin, see <bpt id="p1">[</bpt>Copying and Pinning<ept id="p1">](~/docs/framework/interop/copying-and-pinning.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu numer pin, zobacz <bpt id="p1">[</bpt>kopiowanie i przypinanie<ept id="p1">](~/docs/framework/interop/copying-and-pinning.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> is a reference type that is not a formatted class.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="structure" /&gt;</ph> jest typem referencyjnym, który nie jest klasą sformatowany.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
          <source>Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</source>
          <target state="translated">Reprezentuje domyślny rozmiar znaków w systemie; Wartość domyślna to 2 dla systemów Unicode i 1 dla systemów ANSI.</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
          <source>This field is read-only.</source>
          <target state="translated">To pole jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize&gt;</ph> field.</source>
          <target state="translated">W poniższym przykładzie pokazano <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize&gt;</ph> pola.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
          <source>Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</source>
          <target state="translated">Reprezentuje maksymalny rozmiar dwubajtowych znaków dwubajtowych (DBCS) rozmiar w bajtach bieżący system operacyjny.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
          <source>This field is read-only.</source>
          <target state="translated">To pole jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize&gt;</ph> field.</source>
          <target state="translated">W poniższym przykładzie pokazano <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize&gt;</ph> pola.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> class.</source>
          <target state="translated">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Throws an exception with a specific failure HRESULT value.</source>
          <target state="translated">Zgłasza wyjątek z określony błąd wartość HRESULT.</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>The HRESULT corresponding to the desired exception.</source>
          <target state="translated">Wynik HRESULT odpowiadającej żądanej wyjątku.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>Throws an exception with a specific failure HRESULT value.</source>
          <target state="translated">Zgłasza wyjątek z określony błąd wartość HRESULT.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>This method creates an exception object for the specified failure HRESULT.</source>
          <target state="translated">Ta metoda tworzy obiekt wyjątku określonego błędu HRESULT.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</source>
          <target state="translated">W przypadku HRESULT 0 lub dodatnia (kod Powodzenie), metoda zwraca bez tworzenia lub generowania wyjątku.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29&gt;</ph> method returns an exception based on the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface of the current thread if one is set.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29&gt;</ph> metoda zwraca wyjątek, na podstawie <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu bieżącego wątku, jeśli jest on ustawiony.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>When this happens, the <ph id="ph1">`errorCode`</ph> parameter is ignored.</source>
          <target state="translated">W takim przypadku <ph id="ph1">`errorCode`</ph> parametru jest ignorowana.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>Some failure HRESULTs map to defined exceptions, whereas others do not.</source>
          <target state="translated">Niektóre wyników błędu HRESULT są mapowane na zdefiniowanych wyjątków innych nie.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>If the HRESULT maps to a defined exception, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> creates an instance of the exception and throws it.</source>
          <target state="translated">Jeśli wynik HRESULT mapowany zdefiniowany wyjątek, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> tworzy wystąpienie wyjątku i zwraca go.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>Otherwise, it creates an instance of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>, initializes the error code field with the HRESULT, and throws that exception.</source>
          <target state="translated">W przeciwnym razie tworzy wystąpienie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>inicjuje polu Kod błędu HRESULT i ten wyjątek.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>When <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged <bpt id="p1">[</bpt>GetErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx)</ept> function.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> jest wywołane, próbuje pobrać dodatkowe informacje dotyczące błędu przy użyciu niezarządzanych <bpt id="p1">[</bpt>GetErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx)</ept> funkcji.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
          <target state="translated">Mapowanie z każdym HRESULT do jej klasy można porównywać pod względem wyjątek w programie .NET Framework, zobacz <bpt id="p1">[</bpt>porady: mapy wyników HRESULT i wyjątków<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>Occasionally, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> might return an exception from a previous COM call.</source>
          <target state="translated">Czasami <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> mogą zwracać wyjątek z poprzedniego wywołania COM.</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>In this case, you can use the following workaround and pass <ph id="ph1">`IntPtr(-1)`</ph> as the second parameter (<ph id="ph2">`errorInfo`</ph>):</source>
          <target state="translated">W takim przypadku można użyć następującego obejścia i przekazać <ph id="ph1">`IntPtr(-1)`</ph> jako drugiego parametru (<ph id="ph2">`errorInfo`</ph>):</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>The HRESULT corresponding to the desired exception.</source>
          <target state="translated">Wynik HRESULT odpowiadającej żądanej wyjątku.</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>A pointer to the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface that provides more information about the error.</source>
          <target state="translated">Wskaźnik do <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejs, który zawiera więcej informacji o tym błędzie.</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>You can specify <bpt id="p1">&lt;c&gt;</bpt>IntPtr(0)<ept id="p1">&lt;/c&gt;</ept> to use the current <bpt id="p2">[</bpt>IErrorInfo<ept id="p2">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface, or <bpt id="p3">&lt;c&gt;</bpt>IntPtr(-1)<ept id="p3">&lt;/c&gt;</ept> to ignore the current <bpt id="p4">[</bpt>IErrorInfo<ept id="p4">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface and construct the exception just from the error code.</source>
          <target state="translated">Można określić <bpt id="p1">&lt;c&gt;</bpt>IntPtr(0)<ept id="p1">&lt;/c&gt;</ept> do użycia bieżącego <bpt id="p2">[</bpt>IErrorInfo<ept id="p2">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu, lub <bpt id="p3">&lt;c&gt;</bpt>IntPtr(-1)<ept id="p3">&lt;/c&gt;</ept> Ignorowanie bieżącego <bpt id="p4">[</bpt>IErrorInfo<ept id="p4">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejs i konstrukcja wyjątek tylko z kodu błędu.</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>Throws an exception with a specific failure HRESULT, based on the specified <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface.</source>
          <target state="translated">Zwraca wyjątek z określony błąd HRESULT, oparte na określony <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu.</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>This method creates an exception object for the specified failure HRESULT.</source>
          <target state="translated">Ta metoda tworzy obiekt wyjątku określonego błędu HRESULT.</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</source>
          <target state="translated">W przypadku HRESULT 0 lub dodatnia (kod Powodzenie), metoda zwraca bez tworzenia lub generowania wyjątku.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> method releases the <ph id="ph2">`errorInfo`</ph> parameter, decreasing the COM reference count of the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> Wersje metody <ph id="ph2">`errorInfo`</ph> parametru zmniejszenie COM odwołanie liczba <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu.</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> method returns an exception based on the <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interface of the current thread if one is set.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> metoda zwraca wyjątek, na podstawie <bpt id="p1">[</bpt>IErrorInfo<ept id="p1">](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)</ept> interfejsu bieżącego wątku, jeśli jest on ustawiony.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>When this happens, the <ph id="ph1">`errorCode`</ph> parameter is ignored.</source>
          <target state="translated">W takim przypadku <ph id="ph1">`errorCode`</ph> parametru jest ignorowana.</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>Some failure HRESULTs map to defined exceptions, whereas others do not.</source>
          <target state="translated">Niektóre wyników błędu HRESULT są mapowane na zdefiniowanych wyjątków innych nie.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>If the HRESULT maps to a defined exception, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> creates an instance of the exception and throws it.</source>
          <target state="translated">Jeśli wynik HRESULT mapowany zdefiniowany wyjątek, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A&gt;</ph> tworzy wystąpienie wyjątku i zwraca go.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>Otherwise, it creates an instance of <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType&gt;</ph>, initializes the error code field with the HRESULT, and throws that exception.</source>
          <target state="translated">W przeciwnym razie tworzy wystąpienie <ph id="ph1">&lt;xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType&gt;</ph>inicjuje polu Kod błędu HRESULT i ten wyjątek.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>The <ph id="ph1">`errorInfo`</ph> parameter is used to retrieve extra information regarding the error.</source>
          <target state="translated"><ph id="ph1">`errorInfo`</ph> Parametr jest używany do pobierania dodatkowe informacje dotyczące błędu.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
          <target state="translated">Mapowanie z każdym HRESULT do jej klasy można porównywać pod względem wyjątek w programie .NET Framework, zobacz <bpt id="p1">[</bpt>porady: mapy wyników HRESULT i wyjątków<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>The array that contains the desired element.</source>
          <target state="translated">Tablica, która zawiera określony element.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>The index in the <bpt id="p1">&lt;c&gt;</bpt>arr<ept id="p1">&lt;/c&gt;</ept> parameter of the desired element.</source>
          <target state="translated">Indeks w <bpt id="p1">&lt;c&gt;</bpt>arr<ept id="p1">&lt;/c&gt;</ept> parametru żądanego elementu.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>Gets the address of the element at the specified index inside the specified array.</source>
          <target state="translated">Pobiera adres elementu pod określonym indeksem w określonej tablicy.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>The address of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> inside <ph id="ph2">&lt;paramref name="arr" /&gt;</ph>.</source>
          <target state="translated">Adres <ph id="ph1">&lt;paramref name="index" /&gt;</ph> wewnątrz <ph id="ph2">&lt;paramref name="arr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>The array must be pinned using a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> before it is passed to this method.</source>
          <target state="translated">Tablica musi zostać unieruchomiony przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> zanim zostanie przekazany do tej metody.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</source>
          <target state="translated">Aby uzyskać maksymalną wydajność tej metody nie można zweryfikować; w przekazanej tablicy może to spowodować nieoczekiwane zachowanie.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>The type of the array.</source>
          <target state="translated">Typ tablicy.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>The array that contains the desired element.</source>
          <target state="translated">Tablica, która zawiera określony element.</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>The index of the desired element in the <bpt id="p1">&lt;c&gt;</bpt>arr<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Indeks elementu żądaną w <bpt id="p1">&lt;c&gt;</bpt>arr<ept id="p1">&lt;/c&gt;</ept> tablicy.</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Obsługiwane w programie .NET Framework 4.5.1 i nowszych wersjach]</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>Gets the address of the element at the specified index in an array of a specified type.</source>
          <target state="translated">Pobiera adres elementu pod określonym indeksem w tablicy o określonym typie.</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>The address of <ph id="ph1">&lt;paramref name="index" /&gt;</ph> in <ph id="ph2">&lt;paramref name="arr" /&gt;</ph>.</source>
          <target state="translated">Adres <ph id="ph1">&lt;paramref name="index" /&gt;</ph> w <ph id="ph2">&lt;paramref name="arr" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>The array must be pinned by using a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> before it is passed to this method.</source>
          <target state="translated">Tablica musi przypięty przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> zanim zostanie przekazany do tej metody.</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</source>
          <target state="translated">Aby uzyskać maksymalną wydajność tej metody nie można zweryfikować; w przekazanej tablicy może to spowodować nieoczekiwane zachowanie.</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writes a single byte value to unmanaged memory.</source>
          <target state="translated">Zapisuje pojedynczy bajt niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>Writes a single byte value to unmanaged memory.</source>
          <target state="translated">Zapisuje pojedynczy bajt niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</source>
          <target state="translated">Poniższy przykład tworzy blok pamięci niezarządzanej, zapisuje bajt niezarządzanej pamięci, odczyta z niezarządzanej pamięci, a następnie usuwa niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>The base address in unmanaged memory to write to.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>Writes a single byte value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje pojedynczy bajt niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadByte%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>Writes a single byte value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje pojedynczy bajt niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteByte%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writes a 16-bit signed integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą ze znakiem niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>Writes a character as a 16-bit integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje znak jako wartość 16-bitową liczbę całkowitą niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>Writes a 16-bit integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>The base address in the native heap to write to.</source>
          <target state="translated">Adres podstawowy w stercie natywnej do zapisu.</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą ze znakiem niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>The base address in unmanaged memory to write to.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą ze znakiem do niezarządzanego pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą ze znakiem niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 16-bitową liczbę całkowitą ze znakiem niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 16-bitowych podpisem tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writes a 32-bit signed integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 32-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>Writes a 32-bit signed integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 32-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 32-bitowe podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>The base address in unmanaged memory to write to.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość całkowita 32-bitowej do niezarządzanego pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 32-bitowe podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje niezarządzanej pamięci od określonego przesunięcia wartość 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 32-bitowe podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writes a 64-bit signed integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 64-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>Writes a 64-bit signed integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość 64-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 64-bitowych podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>The base address in unmanaged memory to write.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 64-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 64-bitowych podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość 64-bitowej liczby całkowitej ze znakiem niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanych 64-bitowych podpisem tablicy, eliminując wydatków kopiowania tablicy niezarządzane całego (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writes a processor native-sized integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość całkowitą o rozmiarze native procesora niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</source>
          <target state="translated">32-bitowych liczb całkowitych są zapisywane w systemach 32-bitowych i 64-bitowych liczb całkowitych są zapisywane w systemach 64-bitowych.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.Marshal">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>The address in unmanaged memory to write to.</source>
          <target state="translated">Adres w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>Writes a processor native sized integer value into unmanaged memory.</source>
          <target state="translated">Zapisuje wartość native całkowite o określonym rozmiarze procesora do niezarządzanego pamięci.</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> enables direct interaction with an unmanaged C-style <ph id="ph2">`IntPtr`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego stylu języka C <ph id="ph2">`IntPtr`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is not a recognized format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> nie jest rozpoznawanym formacie.</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>The base address in unmanaged memory to write to.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej do zapisu.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>Writes a processor native-sized integer value to unmanaged memory at a specified offset.</source>
          <target state="translated">Zapisuje wartość całkowitą o rozmiarze native procesora niezarządzanej pamięci od określonego przesunięcia.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</source>
          <target state="translated">Ta metoda zapisuje liczba całkowita 32-bitowych systemów 32-bitowych i 64-bitowa liczba całkowita w systemach 64-bitowych.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> enables direct interaction with an unmanaged C-style <ph id="ph2">`IntPtr`</ph> array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego stylu języka C <ph id="ph2">`IntPtr`</ph> tablicy, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>The following example demonstrates how to read and write to an unmanaged array using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> methods.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób odczytu i zapisu do niezarządzanego tablicy przy użyciu <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>The base address in unmanaged memory of the target object.</source>
          <target state="translated">Adres podstawowy w pamięci niezarządzanej obiektu docelowego.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>An additional byte offset, which is added to the <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parameter before writing.</source>
          <target state="translated">Przesunięcie bajtów dodatkowe, które jest dodawane do <bpt id="p1">&lt;c&gt;</bpt>ptr<ept id="p1">&lt;/c&gt;</ept> parametru przed zapisu.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisu.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>Writes a processor native sized integer value to unmanaged memory.</source>
          <target state="translated">Zapisuje wartość native całkowite o określonym rozmiarze procesora niezarządzanej pamięci.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) to a separate managed array before setting its element values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A&gt;</ph> Umożliwia bezpośredniej interakcji z niezarządzanego tablicy bajtów stylu języka C, eliminując wydatków kopiowania całą tablicę niezarządzane (przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType&gt;</ph>) do oddzielnych tablicy zarządzanej przed ustawieniem jego wartości elementu.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>Writing to unaligned memory locations is supported.</source>
          <target state="translated">Zapisywanie w lokalizacji pamięci niewyrównany jest obsługiwana.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>Base address (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) plus offset byte (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) produces a null or invalid address.</source>
          <target state="translated">Adres bazowy (<ph id="ph1">&lt;paramref name="ptr" /&gt;</ph>) oraz przesunięcia bajtów (<ph id="ph2">&lt;paramref name="ofs" /&gt;</ph>) daje adres zerowy lub nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> is an <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ptr" /&gt;</ph> jest <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>This method does not accept <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parameters.</source>
          <target state="translated">Ta metoda nie akceptuje <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
          <source>The address of the <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph> to free.</source>
          <target state="translated">Adres <ph id="ph1">&lt;see langword="BSTR" /&gt;</ph> zwolnienia.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
          <source>Frees a <bpt id="p1">[</bpt>BSTR<ept id="p1">](https://msdn.microsoft.com/library/ms221069.aspx)</ept> pointer that was allocated using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /&gt;</ph> method.</source>
          <target state="translated">Zwalnia <bpt id="p1">[</bpt>BSTR<ept id="p1">](https://msdn.microsoft.com/library/ms221069.aspx)</ept> wskaźnika, który został przydzielony przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A&gt;</ph> method first sets the contents of the BSTR to zero, and then frees the BSTR.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A&gt;</ph> Metody najpierw ustawienie zawartość BSTR zero, a następnie zwalnia BSTR.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>The address of the unmanaged string to free.</source>
          <target state="translated">Adres niezarządzane ciąg do zwolnienia.</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>Frees an unmanaged string pointer that was allocated using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /&gt;</ph> method.</source>
          <target state="translated">Zwalnia niezarządzane ciąg wskaźnik, który został przydzielony przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> method first zeros out and then frees unmanaged memory that was allocated using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> Metody najpierw Zeruje wychodzących i następnie zwalnia niezarządzanej pamięci, który został przydzielony przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> method to marshal and decrypt the contents of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to a block of unmanaged memory.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A&gt;</ph> sposób organizowania i odszyfrowywania zawartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu do bloku pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> method to zero out and dispose the unmanaged block.</source>
          <target state="translated">Następnie używa <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A&gt;</ph> metody do zera wychodzących i usuwania niezarządzane bloku.</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
          <source>The address of the unmanaged string to free.</source>
          <target state="translated">Adres niezarządzane ciąg do zwolnienia.</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
          <source>Frees an unmanaged string pointer that was allocated using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /&gt;</ph> method.</source>
          <target state="translated">Zwalnia niezarządzane ciąg wskaźnik, który został przydzielony przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> method first zeros out and then frees unmanaged memory that was allocated using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A&gt;</ph> Metody najpierw Zeruje wychodzących i następnie zwalnia niezarządzanej pamięci, który został przydzielony przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>The address of the unmanaged string to free.</source>
          <target state="translated">Adres niezarządzane ciąg do zwolnienia.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>Frees an unmanaged string pointer that was allocated using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /&gt;</ph> method.</source>
          <target state="translated">Zwalnia niezarządzane ciąg wskaźnik, który został przydzielony przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> method first zeros out and then frees unmanaged memory that was allocated using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> Metody najpierw Zeruje wychodzących i następnie zwalnia niezarządzanej pamięci, który został przydzielony przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> method to marshal and decrypt the contents of a <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> object to a block of unmanaged memory.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A&gt;</ph> sposób organizowania i odszyfrowywania zawartości <ph id="ph2">&lt;xref:System.Security.SecureString&gt;</ph> obiektu do bloku pamięci niezarządzanej.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>It then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> method to zero out and dispose the unmanaged block.</source>
          <target state="translated">Następnie używa <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A&gt;</ph> metody do zera wychodzących i usuwania niezarządzane bloku.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>The address of the unmanaged string to free.</source>
          <target state="translated">Adres niezarządzane ciąg do zwolnienia.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>Frees an unmanaged string pointer that was allocated using the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /&gt;</ph> method.</source>
          <target state="translated">Zwalnia niezarządzane ciąg wskaźnik, który został przydzielony przy użyciu <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> method first zeros out and then frees unmanaged memory that was allocated using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> Metody najpierw Zeruje wychodzących i następnie zwalnia niezarządzanej pamięci, który został przydzielony przy użyciu <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> method with the unmanaged <ph id="ph2">`LogonUser`</ph> function to perform impersonation with the <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> class.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A&gt;</ph> metody z niezarządzanej <ph id="ph2">`LogonUser`</ph> funkcja do wykonania personifikacji z <ph id="ph3">&lt;xref:System.Security.SecureString&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>The example then uses the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> method to zero out and free the unmanaged string reference.</source>
          <target state="translated">W przykładzie następnie użyto <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A&gt;</ph> metody na zero wychodzących i zwolnij odwołanie do ciągu niezarządzane.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>