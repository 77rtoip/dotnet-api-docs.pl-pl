<Type Name="_EventInfo" FullName="System.Runtime.InteropServices._EventInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="463d251d1b194ab963e94a1c875a93b44296b0fc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567604" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _EventInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _EventInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._EventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _EventInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _EventInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("9DE59C64-D889-35A1-B897-587D74469E5B")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.EventInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="84b75-101">Udostępnia publiczne elementy członkowskie <see cref="T:System.Reflection.EventInfo" /> klasy do kodu niezarządzanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84b75-101">Exposes the public members of the <see cref="T:System.Reflection.EventInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-102">Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-103">Ten interfejs zachowuje kolejność vtable <xref:System.Reflection.EventInfo?displayProperty=nameWithType> klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</span><span class="sxs-lookup"><span data-stu-id="84b75-103">This interface preserves the vtable order of the <xref:System.Reflection.EventInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public void AddEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="84b75-104">Źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-104">The event source.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="84b75-105">Metodę lub metody do wywołania, gdy zdarzenie zostanie wywołane przez element docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-105">A method or methods to be invoked when the event is raised by the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-106">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-106">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.AddEventHandler(System.Object,System.Delegate)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-107">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-107">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-108"><xref:System.Reflection.EventInfo.AddEventHandler%2A> Metody dodaje program obsługi zdarzeń do źródła zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="84b75-108">The <xref:System.Reflection.EventInfo.AddEventHandler%2A> method adds an event handler to an event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.EventAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.EventAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As EventAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::EventAttributes Attributes { System::Reflection::EventAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-109">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.EventInfo.Attributes" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-109">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.EventInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-110">Atrybut tylko do odczytu dla tego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-110">The read-only attributes for this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-111">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-111">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-112"><xref:System.Reflection.EventInfo.Attributes%2A> Właściwość pobiera atrybuty dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="84b75-112">The <xref:System.Reflection.EventInfo.Attributes%2A> property gets the attributes for this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-113">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-113">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-114">
            <see langword="Type" /> Obiektu klasy, która deklaruje tego elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-114">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-115">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-115">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-116"><xref:System.Reflection.MemberInfo.DeclaringType%2A> Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="84b75-116">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="84b75-117">
            <see cref="T:System.Object" /> Do porównania z bieżącym <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-117">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-118">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.Equals(System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-118">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-119">
            <see langword="true" /> Jeśli określony <see cref="T:System.Object" /> jest taki sam, jak bieżący <see cref="T:System.Object" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-119">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-120">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-120">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-121"><xref:System.Object.Equals%2A> Metoda określa, czy określony <xref:System.Object> jest taki sam, jak bieżący <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="84b75-121">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandlerType">
      <MemberSignature Language="C#" Value="public Type EventHandlerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EventHandlerType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.EventHandlerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventHandlerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EventHandlerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-122">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.EventInfo.EventHandlerType" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-122">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.EventInfo.EventHandlerType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-123">Tylko do odczytu <see cref="T:System.Type" /> obiekt reprezentujący obiektu delegowanego obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-123">A read-only <see cref="T:System.Type" /> object representing the delegate event handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-124">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-124">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-125"><xref:System.Reflection.EventInfo.EventHandlerType%2A> Pobiera właściwość <xref:System.Type> obiektu źródłowego obiektu delegowanego obsługi zdarzeń skojarzonych z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="84b75-125">The <xref:System.Reflection.EventInfo.EventHandlerType%2A> property gets the <xref:System.Type> object of the underlying event-handler delegate associated with this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAddMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-126">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.EventInfo.GetAddMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-126">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.EventInfo.GetAddMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-127">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-127">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-128"><xref:System.Reflection.EventInfo.GetAddMethod%2A> Metody zwracają metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="84b75-128">The <xref:System.Reflection.EventInfo.GetAddMethod%2A> methods return the method used to add an event-handler delegate to the event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetAddMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetAddMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAddMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetAddMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-129">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetAddMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-129">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetAddMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-130">A <see cref="T:System.Reflection.MethodInfo" /> obiekt reprezentujący metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-130">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method used to add an event-handler delegate to the event source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-131">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-131">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-132"><xref:System.Reflection.EventInfo.GetAddMethod%2A> Metoda zwraca metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="84b75-132">The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method returns the method used to add an event-handler delegate to the event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetAddMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetAddMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAddMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetAddMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="84b75-133">
            <see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-133">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-134">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetAddMethod(System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-134">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetAddMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-135">A <see cref="T:System.Reflection.MethodInfo" /> obiekt reprezentujący metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-135">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method used to add an event-handler delegate to the event source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-136">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-136">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-137"><xref:System.Reflection.EventInfo.GetAddMethod%2A> Metoda pobiera <xref:System.Reflection.MethodInfo> obiekt do <xref:System.Reflection.EventInfo.AddEventHandler%2A> metody zdarzenia i określa, czy mają być zwracane metody niepublicznej</span><span class="sxs-lookup"><span data-stu-id="84b75-137">The <xref:System.Reflection.EventInfo.GetAddMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-138">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-138">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-139">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-139">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-140"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Metody zwracają wszystkie atrybuty stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="84b75-140">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="84b75-141">
            <see langword="true" /> Aby przeszukać łańcuch dziedziczenia członka w celu znalezienia atrybutów; w przeciwnym razie wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-141">
              <see langword="true" /> to search a member's inheritance chain to find the attributes; otherwise, false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-142">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-142">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-143">Tablica zawierająca wszystkie atrybuty niestandardowe lub tablica nie zawierająca żadnego elementu (0), jeśli zostały zdefiniowane żadne atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-143">An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-144">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-144">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-145"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Metoda pobiera <xref:System.Reflection.MethodInfo> obiekt do <xref:System.Reflection.EventInfo.AddEventHandler%2A> metody zdarzenia i określa, czy mają być zwracane metody niepublicznej</span><span class="sxs-lookup"><span data-stu-id="84b75-145">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for the <xref:System.Reflection.EventInfo.AddEventHandler%2A> method of the event and specifies whether to return non-public methods</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="84b75-146">Typ atrybutu do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-146">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="84b75-147">Zwracane są tylko atrybuty, które są przypisane do tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-147">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="84b75-148">
            <see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-148">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-149">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-149">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-150">Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-150">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-151">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-151">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-152"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Metoda zwraca tablicę atrybutów niestandardowych identyfikowane przez <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="84b75-152">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-153">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetHashCode" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-153">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-154">Wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-154">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-155">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-155">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-156"><xref:System.Object.GetHashCode%2A> Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="84b75-156">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="84b75-157"><xref:System.Object.GetHashCode%2A> nadaje się do użytku w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</span><span class="sxs-lookup"><span data-stu-id="84b75-157"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="84b75-158">Zarezerwowane do użytku w przyszłości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-158">Reserved for future use.</span>
          </span>
          <span data-ttu-id="84b75-159">Musi być wartością IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-159">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="84b75-160">Tablica nazw można mapować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-160">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="84b75-161">Liczba nazw, które mają być mapowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-161">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="84b75-162">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-162">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="84b75-163">Tablica przydzielone przez obiekt wywołujący odbierająca identyfikatory, odpowiadających nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-163">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-164">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-164">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-165">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-165">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="84b75-166">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="84b75-166">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRaiseMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-167">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.EventInfo.GetRaiseMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-167">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.EventInfo.GetRaiseMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-168">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-168">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-169"><xref:System.Reflection.EventInfo.GetRaiseMethod%2A> Metody zwracać metoda wywoływana, gdy zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="84b75-169">The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> methods return the method that is called when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetRaiseMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetRaiseMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetRaiseMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRaiseMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetRaiseMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-170">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetRaiseMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-170">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetRaiseMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-171">Metoda wywoływana, gdy zdarzenie jest wywoływane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-171">The method that is called when the event is raised.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-172">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-172">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-173"><xref:System.Reflection.EventInfo.GetRaiseMethod%2A> Metoda zwraca metodę wywoływaną, gdy zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="84b75-173">The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetRaiseMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRaiseMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetRaiseMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="84b75-174">
            <see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-174">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-175">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetRaiseMethod(System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-175">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetRaiseMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-176">
            <see cref="T:System.Reflection.MethodInfo" /> Obiekt, który został wywołany po zdarzeniu został zgłoszony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-176">The <see cref="T:System.Reflection.MethodInfo" /> object that was called when the event was raised.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-177">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-177">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-178"><xref:System.Reflection.EventInfo.GetRaiseMethod%2A> Metoda zwraca metodę wywoływaną, gdy zdarzenie jest zgłaszane i określa, czy mają być zwracane metody niepublicznej.</span><span class="sxs-lookup"><span data-stu-id="84b75-178">The <xref:System.Reflection.EventInfo.GetRaiseMethod%2A> method returns the method that is called when the event is raised and specifies whether to return non-public methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRemoveMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-179">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.EventInfo.GetRemoveMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-179">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.EventInfo.GetRemoveMethod" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-180">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-181"><xref:System.Reflection.EventInfo.GetRemoveMethod%2A> Metoda zwraca metodę używaną do usunięcia obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="84b75-181">The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetRemoveMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetRemoveMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetRemoveMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoveMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetRemoveMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-182">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetRemoveMethod" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetRemoveMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-183">A <see cref="T:System.Reflection.MethodInfo" /> obiekt reprezentujący metodę używaną do usunięcia obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-183">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method used to remove an event-handler delegate from the event source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-184">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-185"><xref:System.Reflection.EventInfo.GetRemoveMethod%2A> Metoda zwraca metodę używaną do usunięcia obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="84b75-185">The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method returns the method used to remove an event-handler delegate from the event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetRemoveMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoveMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetRemoveMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="84b75-186">
            <see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-186">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-187">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.GetRemoveMethod(System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-187">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.GetRemoveMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-188">A <see cref="T:System.Reflection.MethodInfo" /> obiekt reprezentujący metodę używaną do usunięcia obiektu delegowanego obsługi zdarzeń w źródle zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-188">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method used to remove an event-handler delegate from the event source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-189">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-189">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-190"><xref:System.Reflection.EventInfo.GetRemoveMethod%2A> Metoda pobiera <xref:System.Reflection.MethodInfo> obiektu do usunięcia metody zdarzenia i określa, czy mają być zwracane metody niepublicznej.</span><span class="sxs-lookup"><span data-stu-id="84b75-190">The <xref:System.Reflection.EventInfo.GetRemoveMethod%2A> method retrieves the <xref:System.Reflection.MethodInfo> object for removing a method of the event and specifies whether to return non-public methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-191">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetType" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-191">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-192">A <see cref="T:System.Type" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-192">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-193">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-193">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-194"><xref:System.Object.GetType%2A> Metoda pobiera typ bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="84b75-194">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="84b75-195">Informacje o typie, który będzie zwracany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-195">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="84b75-196">Identyfikator regionalny dla informacji o typie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-196">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="84b75-197">Wskaźnik do obiektu informacji żądanego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-197">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-198">Pobiera informacje o typie dla obiekt, który można uzyskać informacji o typie dla interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-198">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-199">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-199">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="84b75-200">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="84b75-200">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="84b75-201">Gdy metoda zwróci wartość, zawiera wskaźnik do lokalizacji, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-201">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="84b75-202">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-202">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-203">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-203">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-204">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-204">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="84b75-205">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="84b75-205">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="84b75-206">Identyfikator elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-206">An identifier for the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="84b75-207">Zarezerwowane do użytku w przyszłości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-207">Reserved for future use.</span>
          </span>
          <span data-ttu-id="84b75-208">Musi być wartością IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-208">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="84b75-209">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-209">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="84b75-210">Flagi opisujące kontekst wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-210">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="84b75-211">Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-211">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="84b75-212">Wskaźnik do lokalizacji, w którym będzie przechowywany wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-212">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="84b75-213">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-213">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="84b75-214">Indeks pierwszego argumentu, który zawiera błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-214">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-215">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-215">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-216">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-216">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="84b75-217">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="84b75-217">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="84b75-218">
            <see langword="Type" /> Obiektów, dla których są stosowane atrybuty niestandardowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-218">The <see langword="Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="84b75-219">
            <see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-219">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-220">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-221">
            <see langword="true" /> Jeśli jeden lub więcej wystąpienie <paramref name="attributeType" /> parametr jest stosowane do tego elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-221">
              <see langword="true" /> if one or more instance of the <paramref name="attributeType" /> parameter is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-222">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-222">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-223"><xref:System.Reflection.MemberInfo.IsDefined%2A> Metoda wskazuje czy jednego lub więcej wystąpień `attributeType` parametru są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="84b75-223">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instances of the `attributeType` parameter are applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMulticast">
      <MemberSignature Language="C#" Value="public bool IsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.IsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-224">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.EventInfo.IsMulticast" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-224">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.EventInfo.IsMulticast" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-225">
            <see langword="true" /> Jeśli delegat jest wystąpieniem multiemisji delegata; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-225">
              <see langword="true" /> if the delegate is an instance of a multicast delegate; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-226">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-226">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-227"><xref:System.Reflection.EventInfo.IsMulticast%2A> Właściwość pobiera wartość wskazującą, czy zdarzenie jest multiemisji.</span><span class="sxs-lookup"><span data-stu-id="84b75-227">The <xref:System.Reflection.EventInfo.IsMulticast%2A> property gets a value indicating whether the event is multicast.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-228">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.EventInfo.IsSpecialName" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-228">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.EventInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-229">
            <see langword="true" /> Jeśli to zdarzenie ma specjalną nazwą; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-229">
              <see langword="true" /> if this event has a special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-230">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-230">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-231"><xref:System.Reflection.EventInfo.IsSpecialName%2A> Właściwości pobiera wartość wskazującą czy <xref:System.Reflection.EventInfo> obiekt ma nazwę za pomocą specjalnego znaczenia.</span><span class="sxs-lookup"><span data-stu-id="84b75-231">The <xref:System.Reflection.EventInfo.IsSpecialName%2A> property gets a value indicating whether the <xref:System.Reflection.EventInfo> object has a name with a special meaning.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-232">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.EventInfo.MemberType" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-232">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.EventInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-233">A <see cref="T:System.Reflection.MemberTypes" /> wartość wskazującą, czy ten element członkowski jest zdarzeniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-233">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is an event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-234">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-234">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-235"><xref:System.Reflection.EventInfo.MemberType%2A> Pobiera właściwość <xref:System.Reflection.MemberTypes> wartość wskazującą, czy ten element członkowski jest zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="84b75-235">The <xref:System.Reflection.EventInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is an event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-236">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.Name" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-236">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-237">A <see cref="T:System.String" /> obiektu zawierającego nazwę tego elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-237">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-238">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-238">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-239"><xref:System.Reflection.MemberInfo.Name%2A> Właściwość pobiera nazwę bieżącego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="84b75-239">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._EventInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b75-240">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-240">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b75-241">
            <see cref="T:System.Type" /> Obiekt, który został użyty do uzyskania tego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-241">The <see cref="T:System.Type" /> object that was used to obtain this object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-242">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-242">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-243"><xref:System.Reflection.MemberInfo.ReflectedType%2A> Właściwości pobiera obiekt klasy, które zostało użyte do uzyskania tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="84b75-243">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public void RemoveEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="84b75-244">Źródło zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-244">The event source.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="84b75-245">Delegat do skojarzona z zdarzenia wygenerowane przez obiekt docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-245">The delegate to be disassociated from the events raised by target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b75-246">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.EventInfo.RemoveEventHandler(System.Object,System.Delegate)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.EventInfo.RemoveEventHandler(System.Object,System.Delegate)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-247">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-247">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="84b75-248"><xref:System.Reflection.EventInfo.RemoveEventHandler%2A> Metoda usuwa program obsługi zdarzeń źródła zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="84b75-248">The <xref:System.Reflection.EventInfo.RemoveEventHandler%2A> method removes an event handler from an event source.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._EventInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b75-249">Udostępnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.ToString" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-249">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b75-250">Ciąg reprezentujący bieżące <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b75-250">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b75-251">Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="84b75-251">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>