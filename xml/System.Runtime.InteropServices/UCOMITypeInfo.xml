<Type Name="UCOMITypeInfo" FullName="System.Runtime.InteropServices.UCOMITypeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39d1410b90acfbc56d4f3e72b81836410ac1c6c4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69268809" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMITypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMITypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMITypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMITypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMITypeInfo" />
  <TypeSignature Language="F#" Value="type UCOMITypeInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.ITypeInfo instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a7854-101">Zamiast nich należy używać słów kluczowych <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" />.</span><span class="sxs-lookup"><span data-stu-id="a7854-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-102">Aby uzyskać dodatkowe informacje `ITypeInfo`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-102">For additional information about `ITypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddressOfMember">
      <MemberSignature Language="C#" Value="public void AddressOfMember (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddressOfMember(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddressOfMember (memid As Integer, invKind As INVOKEKIND, ByRef ppv As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddressOfMember(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="abstract member AddressOfMember : int * System.Runtime.InteropServices.INVOKEKIND *  -&gt; unit" Usage="uCOMITypeInfo.AddressOfMember (memid, invKind, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="a7854-103">Identyfikator <see langword="static" /> elementu członkowskiego do pobrania.</span><span class="sxs-lookup"><span data-stu-id="a7854-103">Member ID of the <see langword="static" /> member's address to retrieve.</span></span></param>
        <param name="invKind"><span data-ttu-id="a7854-104">Określa, czy element członkowski jest właściwością, a jeśli tak, jakiego rodzaju.</span><span class="sxs-lookup"><span data-stu-id="a7854-104">Specifies whether the member is a property, and if so, what kind.</span></span></param>
        <param name="ppv"><span data-ttu-id="a7854-105">W przypadku pomyślnego zwrócenia odwołanie do <see langword="static" /> elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="a7854-105">On successful return, a reference to the <see langword="static" /> member.</span></span></param>
        <summary><span data-ttu-id="a7854-106">Pobiera adresy statycznych funkcji lub zmiennych, takich jak te zdefiniowane w bibliotece DLL.</span><span class="sxs-lookup"><span data-stu-id="a7854-106">Retrieves the addresses of static functions or variables, such as those defined in a DLL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-107">Aby uzyskać dodatkowe informacje `ITypeInfo::AddressOfMember`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-107">For additional information about `ITypeInfo::AddressOfMember`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public void CreateInstance (object pUnkOuter, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateInstance(object pUnkOuter, valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateInstance (pUnkOuter As Object, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateInstance(System::Object ^ pUnkOuter, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj *  *  -&gt; unit" Usage="uCOMITypeInfo.CreateInstance (pUnkOuter, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkOuter" Type="System.Object" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkOuter"><span data-ttu-id="a7854-108">Obiekt, który działa jako kontrolka <see langword="IUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="a7854-108">Object which acts as the controlling <see langword="IUnknown" />.</span></span></param>
        <param name="riid"><span data-ttu-id="a7854-109">Identyfikator IID interfejsu, który będzie używany przez obiekt wywołujący do komunikowania się z obiektem wyników.</span><span class="sxs-lookup"><span data-stu-id="a7854-109">The IID of the interface that the caller will use to communicate with the resulting object.</span></span></param>
        <param name="ppvObj"><span data-ttu-id="a7854-110">W przypadku pomyślnego powrotu odwołanie do utworzonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7854-110">On successful return, a reference to the created object.</span></span></param>
        <summary><span data-ttu-id="a7854-111">Tworzy nowe wystąpienie typu, które opisuje klasę składnika (klasy coclass).</span><span class="sxs-lookup"><span data-stu-id="a7854-111">Creates a new instance of a type that describes a component class (coclass).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-112">Aby uzyskać dodatkowe informacje `ITypeInfo::CreateInstance`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-112">For additional information about `ITypeInfo::CreateInstance`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingTypeLib">
      <MemberSignature Language="C#" Value="public void GetContainingTypeLib (out System.Runtime.InteropServices.UCOMITypeLib ppTLB, out int pIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetContainingTypeLib([out] class System.Runtime.InteropServices.UCOMITypeLib&amp; ppTLB, [out] int32&amp; pIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetContainingTypeLib (ByRef ppTLB As UCOMITypeLib, ByRef pIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetContainingTypeLib([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeLib ^ % ppTLB, [Runtime::InteropServices::Out] int % pIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetContainingTypeLib :  *  -&gt; unit" Usage="uCOMITypeInfo.GetContainingTypeLib (ppTLB, pIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" RefType="out" />
        <Parameter Name="pIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTLB"><span data-ttu-id="a7854-113">W przypadku pomyślnego powrotu odwołanie do biblioteki zawierającej typy.</span><span class="sxs-lookup"><span data-stu-id="a7854-113">On successful return, a reference to the containing type library.</span></span></param>
        <param name="pIndex"><span data-ttu-id="a7854-114">W przypadku pomyślnego powrotu odwołanie do indeksu opisu typu w bibliotece zawierającej typy.</span><span class="sxs-lookup"><span data-stu-id="a7854-114">On successful return, a reference to the index of the type description within the containing type library.</span></span></param>
        <summary><span data-ttu-id="a7854-115">Pobiera bibliotekę typów, która zawiera opis tego typu i jego indeks w tej bibliotece typów.</span><span class="sxs-lookup"><span data-stu-id="a7854-115">Retrieves the type library that contains this type description and its index within that type library.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-116">Aby uzyskać dodatkowe informacje `ITypeInfo::GetContainingTypeLib`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-116">For additional information about `ITypeInfo::GetContainingTypeLib`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDllEntry">
      <MemberSignature Language="C#" Value="public void GetDllEntry (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDllEntry(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] string&amp; pBstrDllName, [out] string&amp; pBstrName, [out] int16&amp; pwOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDllEntry (memid As Integer, invKind As INVOKEKIND, ByRef pBstrDllName As String, ByRef pBstrName As String, ByRef pwOrdinal As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDllEntry(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] System::String ^ % pBstrDllName, [Runtime::InteropServices::Out] System::String ^ % pBstrName, [Runtime::InteropServices::Out] short % pwOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDllEntry : int * System.Runtime.InteropServices.INVOKEKIND *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDllEntry (memid, invKind, pBstrDllName, pBstrName, pwOrdinal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="pBstrDllName" Type="System.String" RefType="out" />
        <Parameter Name="pBstrName" Type="System.String" RefType="out" />
        <Parameter Name="pwOrdinal" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="a7854-117">Identyfikator funkcji składowej, której opis elementu DLL ma zostać zwrócony.</span><span class="sxs-lookup"><span data-stu-id="a7854-117">ID of the member function whose DLL entry description is to be returned.</span></span></param>
        <param name="invKind"><span data-ttu-id="a7854-118">Określa typ elementu członkowskiego identyfikowanego <paramref name="memid" />przez.</span><span class="sxs-lookup"><span data-stu-id="a7854-118">Specifies the kind of member identified by <paramref name="memid" />.</span></span></param>
        <param name="pBstrDllName"><span data-ttu-id="a7854-119">Jeśli nie <see langword="null" />, funkcja jest ustawiana <paramref name="pBstrDllName" /> na <see langword="BSTR" /> , która zawiera nazwę biblioteki DLL.</span><span class="sxs-lookup"><span data-stu-id="a7854-119">If not <see langword="null" />, the function sets <paramref name="pBstrDllName" /> to a <see langword="BSTR" /> that contains the name of the DLL.</span></span></param>
        <param name="pBstrName"><span data-ttu-id="a7854-120">Jeśli nie <see langword="null" />, funkcja ustawia <see langword="BSTR" /> <c>lpbstrName</c> na, który zawiera nazwę punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="a7854-120">If not <see langword="null" />, the function sets <c>lpbstrName</c> to a <see langword="BSTR" /> that contains the name of the entry point.</span></span></param>
        <param name="pwOrdinal"><span data-ttu-id="a7854-121">Jeśli nie <see langword="null" />, a funkcja jest definiowana przez numer porządkowy, a następnie <c>lpwOrdinal</c> jest ustawiony na wartość porządkową.</span><span class="sxs-lookup"><span data-stu-id="a7854-121">If not <see langword="null" />, and the function is defined by an ordinal, then <c>lpwOrdinal</c> is set to point to the ordinal.</span></span></param>
        <summary><span data-ttu-id="a7854-122">Pobiera opis lub specyfikację punktu wejścia dla funkcji w bibliotece DLL.</span><span class="sxs-lookup"><span data-stu-id="a7854-122">Retrieves a description or specification of an entry point for a function in a DLL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-123">Aby uzyskać dodatkowe informacje `ITypeInfo::GetDllEntry`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-123">For additional information about `ITypeInfo::GetDllEntry`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentation">
      <MemberSignature Language="C#" Value="public void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDocumentation(int32 index, [out] string&amp; strName, [out] string&amp; strDocString, [out] int32&amp; dwHelpContext, [out] string&amp; strHelpFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDocumentation (index As Integer, ByRef strName As String, ByRef strDocString As String, ByRef dwHelpContext As Integer, ByRef strHelpFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDocumentation(int index, [Runtime::InteropServices::Out] System::String ^ % strName, [Runtime::InteropServices::Out] System::String ^ % strDocString, [Runtime::InteropServices::Out] int % dwHelpContext, [Runtime::InteropServices::Out] System::String ^ % strHelpFile);" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentation : int *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDocumentation (index, strName, strDocString, dwHelpContext, strHelpFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="strName" Type="System.String" RefType="out" />
        <Parameter Name="strDocString" Type="System.String" RefType="out" />
        <Parameter Name="dwHelpContext" Type="System.Int32" RefType="out" />
        <Parameter Name="strHelpFile" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a7854-124">Identyfikator elementu członkowskiego, którego dokumentacja ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7854-124">ID of the member whose documentation is to be returned.</span></span></param>
        <param name="strName"><span data-ttu-id="a7854-125">Po pomyślnym powrocie, nazwa metody elementu.</span><span class="sxs-lookup"><span data-stu-id="a7854-125">On successful return, the name of the item method.</span></span></param>
        <param name="strDocString"><span data-ttu-id="a7854-126">Po pomyślnym powrocie, ciąg dokumentacji dla określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="a7854-126">On successful return, the documentation string for the specified item.</span></span></param>
        <param name="dwHelpContext"><span data-ttu-id="a7854-127">Po pomyślnym zwrocie odwołanie do kontekstu pomocy skojarzonego z określonym elementem.</span><span class="sxs-lookup"><span data-stu-id="a7854-127">On successful return, a reference to the Help context associated with the specified item.</span></span></param>
        <param name="strHelpFile"><span data-ttu-id="a7854-128">Po pomyślnym powrocie, w pełni kwalifikowana nazwa pliku pomocy.</span><span class="sxs-lookup"><span data-stu-id="a7854-128">On successful return, the fully qualified name of the Help file.</span></span></param>
        <summary><span data-ttu-id="a7854-129">Pobiera ciąg dokumentacji, pełną nazwę i ścieżkę pliku pomocy oraz identyfikator kontekstu dla tematu pomocy dla określonego typu opisu.</span><span class="sxs-lookup"><span data-stu-id="a7854-129">Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-130">Aby uzyskać dodatkowe informacje `ITypeInfo::GetDocumentation`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-130">For additional information about `ITypeInfo::GetDocumentation`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncDesc">
      <MemberSignature Language="C#" Value="public void GetFuncDesc (int index, out IntPtr ppFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFuncDesc(int32 index, [out] native int&amp; ppFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFuncDesc (index As Integer, ByRef ppFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFuncDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetFuncDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetFuncDesc (index, ppFuncDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppFuncDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a7854-131">Indeks opisu funkcji do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="a7854-131">Index of the function description to return.</span></span></param>
        <param name="ppFuncDesc"><span data-ttu-id="a7854-132">Odwołanie do elementu <see langword="FUNCDESC" /> , który opisuje określoną funkcję.</span><span class="sxs-lookup"><span data-stu-id="a7854-132">Reference to a <see langword="FUNCDESC" /> that describes the specified function.</span></span></param>
        <summary><span data-ttu-id="a7854-133"><see cref="T:System.Runtime.InteropServices.FUNCDESC" /> Pobiera strukturę, która zawiera informacje o określonej funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7854-133">Retrieves the <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> structure that contains information about a specified function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-134">Wartości `ppFuncDesc` dostępu można uzyskać za pomocą <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7854-134">The values of `ppFuncDesc` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="a7854-135">Aby uzyskać dodatkowe informacje `ITypeInfo::GetFuncDesc`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-135">For additional information about `ITypeInfo::GetFuncDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (string[] rgszNames, int cNames, int[] pMemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]string[] rgszNames, int32 cNames, [out] int32[] pMemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (rgszNames As String(), cNames As Integer, pMemId As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(cli::array &lt;System::String ^&gt; ^ rgszNames, int cNames, cli::array &lt;int&gt; ^ pMemId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : string[] * int * int[] -&gt; unit" Usage="uCOMITypeInfo.GetIDsOfNames (rgszNames, cNames, pMemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgszNames" Type="System.String[]" />
        <Parameter Name="cNames" Type="System.Int32" />
        <Parameter Name="pMemId" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="rgszNames"><span data-ttu-id="a7854-136">Po pomyślnym powrocie, Tablica nazw do mapowania.</span><span class="sxs-lookup"><span data-stu-id="a7854-136">On successful return, an array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="a7854-137">Liczba nazw do mapowania.</span><span class="sxs-lookup"><span data-stu-id="a7854-137">Count of names to map.</span></span></param>
        <param name="pMemId"><span data-ttu-id="a7854-138">Odwołanie do tablicy, w której umieszczane są mapowania nazw.</span><span class="sxs-lookup"><span data-stu-id="a7854-138">Reference to an array in which name mappings are placed.</span></span></param>
        <summary><span data-ttu-id="a7854-139">Mapuje między nazwami elementów członkowskich i identyfikatorami elementów członkowskich oraz nazwami parametrów i identyfikatorami parametrów.</span><span class="sxs-lookup"><span data-stu-id="a7854-139">Maps between member names and member IDs, and parameter names and parameter IDs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-140">Aby uzyskać dodatkowe informacje `ITypeInfo::GetIDsOfNames`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-140">For additional information about `ITypeInfo::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplTypeFlags">
      <MemberSignature Language="C#" Value="public void GetImplTypeFlags (int index, out int pImplTypeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetImplTypeFlags(int32 index, [out] int32&amp; pImplTypeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetImplTypeFlags (index As Integer, ByRef pImplTypeFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetImplTypeFlags(int index, [Runtime::InteropServices::Out] int % pImplTypeFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetImplTypeFlags : int *  -&gt; unit" Usage="uCOMITypeInfo.GetImplTypeFlags (index, pImplTypeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pImplTypeFlags" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a7854-141">Indeks zaimplementowanego interfejsu lub interfejsu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="a7854-141">Index of the implemented interface or base interface.</span></span></param>
        <param name="pImplTypeFlags"><span data-ttu-id="a7854-142">W przypadku pomyślnego powrotu odwołanie do <see langword="IMPLTYPEFLAGS" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="a7854-142">On successful return, a reference to the <see langword="IMPLTYPEFLAGS" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="a7854-143"><see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> Pobiera wartość dla jednego zaimplementowanego interfejsu lub interfejsu podstawowego w opisie typu.</span><span class="sxs-lookup"><span data-stu-id="a7854-143">Retrieves the <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> value for one implemented interface or base interface in a type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-144">Aby uzyskać dodatkowe informacje `ITypeInfo::GetImplTypeFlags`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-144">For additional information about `ITypeInfo::GetImplTypeFlags`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMops">
      <MemberSignature Language="C#" Value="public void GetMops (int memid, out string pBstrMops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMops(int32 memid, [out] string&amp; pBstrMops) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMops (memid As Integer, ByRef pBstrMops As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetMops(int memid, [Runtime::InteropServices::Out] System::String ^ % pBstrMops);" />
      <MemberSignature Language="F#" Value="abstract member GetMops : int *  -&gt; unit" Usage="uCOMITypeInfo.GetMops (memid, pBstrMops)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="pBstrMops" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="a7854-145">Identyfikator elementu członkowskiego, który wskazuje, które informacje o kierowaniu są zbędne.</span><span class="sxs-lookup"><span data-stu-id="a7854-145">The member ID that indicates which marshaling information is needed.</span></span></param>
        <param name="pBstrMops"><span data-ttu-id="a7854-146">Odwołanie do ciągu kodu operacji używanego podczas organizowania pól struktury opisanej w opisie typu odwołania lub zwraca <see langword="null" /> , jeśli nie ma informacji do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="a7854-146">A reference to the opcode string used in marshaling the fields of the structure described by the referenced type description, or returns <see langword="null" /> if there is no information to return.</span></span></param>
        <summary><span data-ttu-id="a7854-147">Pobiera informacje o kierowaniu.</span><span class="sxs-lookup"><span data-stu-id="a7854-147">Retrieves marshaling information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-148">Aby uzyskać dodatkowe informacje `ITypeInfo::GetMops`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-148">For additional information about `ITypeInfo::GetMops`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public void GetNames (int memid, string[] rgBstrNames, int cMaxNames, out int pcNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNames(int32 memid, [out] string[] rgBstrNames, int32 cMaxNames, [out] int32&amp; pcNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNames (memid As Integer, rgBstrNames As String(), cMaxNames As Integer, ByRef pcNames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNames(int memid, cli::array &lt;System::String ^&gt; ^ rgBstrNames, int cMaxNames, [Runtime::InteropServices::Out] int % pcNames);" />
      <MemberSignature Language="F#" Value="abstract member GetNames : int * string[] * int *  -&gt; unit" Usage="uCOMITypeInfo.GetNames (memid, rgBstrNames, cMaxNames, pcNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="rgBstrNames" Type="System.String[]" />
        <Parameter Name="cMaxNames" Type="System.Int32" />
        <Parameter Name="pcNames" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="a7854-149">Identyfikator elementu członkowskiego, którego nazwa (lub nazwy) ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a7854-149">The ID of the member whose name (or names) is to be returned.</span></span></param>
        <param name="rgBstrNames"><span data-ttu-id="a7854-150">Po pomyślnym powrocie, zawiera nazwę (lub nazwy) skojarzoną z elementem członkowskim.</span><span class="sxs-lookup"><span data-stu-id="a7854-150">On successful return, contains the name (or names) associated with the member.</span></span></param>
        <param name="cMaxNames"><span data-ttu-id="a7854-151"><paramref name="rgBstrNames" /> Długość tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7854-151">Length of the <paramref name="rgBstrNames" /> array.</span></span></param>
        <param name="pcNames"><span data-ttu-id="a7854-152">Po pomyślnym powrocie, liczba nazw w <paramref name="rgBstrNames" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7854-152">On successful return, the number of names in the <paramref name="rgBstrNames" /> array.</span></span></param>
        <summary><span data-ttu-id="a7854-153">Pobiera zmienną z określonym IDENTYFIKATORem elementu członkowskiego (lub nazwą właściwości lub metody i jej parametrów) odpowiadającej określonemu IDENTYFIKATORowi funkcji.</span><span class="sxs-lookup"><span data-stu-id="a7854-153">Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that correspond to the specified function ID.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-154">Aby uzyskać dodatkowe informacje `ITypeInfo::GetNames`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-154">For additional information about `ITypeInfo::GetNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeInfo">
      <MemberSignature Language="C#" Value="public void GetRefTypeInfo (int hRef, out System.Runtime.InteropServices.UCOMITypeInfo ppTI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeInfo(int32 hRef, [out] class System.Runtime.InteropServices.UCOMITypeInfo&amp; ppTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeInfo (hRef As Integer, ByRef ppTI As UCOMITypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeInfo(int hRef, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeInfo ^ % ppTI);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeInfo : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeInfo (hRef, ppTI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hRef" Type="System.Int32" />
        <Parameter Name="ppTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hRef"><span data-ttu-id="a7854-155">Dojście do opisu typu, który ma zostać zwrócony.</span><span class="sxs-lookup"><span data-stu-id="a7854-155">Handle to the referenced type description to return.</span></span></param>
        <param name="ppTI"><span data-ttu-id="a7854-156">Po pomyślnym powrocie, opis typu, którego dotyczy odwołanie.</span><span class="sxs-lookup"><span data-stu-id="a7854-156">On successful return, the referenced type description.</span></span></param>
        <summary><span data-ttu-id="a7854-157">Jeśli opis typu odwołuje się do innych opisów typów, pobiera opisy typu, do których się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="a7854-157">If a type description references other type descriptions, it retrieves the referenced type descriptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-158">Aby uzyskać dodatkowe informacje `ITypeInfo::GetRefTypeInfo`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-158">For additional information about `ITypeInfo::GetRefTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeOfImplType">
      <MemberSignature Language="C#" Value="public void GetRefTypeOfImplType (int index, out int href);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeOfImplType(int32 index, [out] int32&amp; href) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeOfImplType (index As Integer, ByRef href As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeOfImplType(int index, [Runtime::InteropServices::Out] int % href);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeOfImplType : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeOfImplType (index, href)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="href" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a7854-159">Indeks zaimplementowanego typu, którego dojście zostało zwrócone.</span><span class="sxs-lookup"><span data-stu-id="a7854-159">Index of the implemented type whose handle is returned.</span></span></param>
        <param name="href"><span data-ttu-id="a7854-160">Odwołanie do dojścia dla zaimplementowanego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a7854-160">Reference to a handle for the implemented interface.</span></span></param>
        <summary><span data-ttu-id="a7854-161">Jeśli opis typu zawiera opis klasy COM, pobiera typ opis zaimplementowanych typów interfejsów.</span><span class="sxs-lookup"><span data-stu-id="a7854-161">If a type description describes a COM class, it retrieves the type description of the implemented interface types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-162">Aby uzyskać dodatkowe informacje `ITypeInfo::GetRefTypeOfImplType`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-162">For additional information about `ITypeInfo::GetRefTypeOfImplType`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeAttr">
      <MemberSignature Language="C#" Value="public void GetTypeAttr (out IntPtr ppTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeAttr([out] native int&amp; ppTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeAttr (ByRef ppTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeAttr([Runtime::InteropServices::Out] IntPtr % ppTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeAttr :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeAttr ppTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTypeAttr" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTypeAttr"><span data-ttu-id="a7854-163">W przypadku pomyślnego powrotu odwołanie do struktury zawierającej atrybuty tego typu opisu.</span><span class="sxs-lookup"><span data-stu-id="a7854-163">On successful return, a reference to the structure that contains the attributes of this type description.</span></span></param>
        <summary><span data-ttu-id="a7854-164"><see cref="T:System.Runtime.InteropServices.TYPEATTR" /> Pobiera strukturę, która zawiera atrybuty opisu typu.</span><span class="sxs-lookup"><span data-stu-id="a7854-164">Retrieves a <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> structure that contains the attributes of the type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-165">Wartości `ppTypeAttr` dostępu można uzyskać za pomocą <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7854-165">The values of `ppTypeAttr` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="a7854-166">Aby uzyskać dodatkowe informacje `ITypeInfo::GetTypeAttr`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-166">For additional information about `ITypeInfo::GetTypeAttr`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeComp">
      <MemberSignature Language="C#" Value="public void GetTypeComp (out System.Runtime.InteropServices.UCOMITypeComp ppTComp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeComp([out] class System.Runtime.InteropServices.UCOMITypeComp&amp; ppTComp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeComp (ByRef ppTComp As UCOMITypeComp)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeComp([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeComp ^ % ppTComp);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeComp :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeComp ppTComp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTComp" Type="System.Runtime.InteropServices.UCOMITypeComp" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTComp"><span data-ttu-id="a7854-167">W przypadku pomyślnego powrotu odwołanie do <see langword="UCOMITypeComp" /> elementu z biblioteki typu zawierającego.</span><span class="sxs-lookup"><span data-stu-id="a7854-167">On successful return, a reference to the <see langword="UCOMITypeComp" /> of the containing type library.</span></span></param>
        <summary><span data-ttu-id="a7854-168"><see langword="ITypeComp" /> Pobiera interfejs dla opisu typu, który umożliwia kompilatorowi klienta powiązanie z elementami członkowskimi opisu typu.</span><span class="sxs-lookup"><span data-stu-id="a7854-168">Retrieves the <see langword="ITypeComp" /> interface for the type description, which enables a client compiler to bind to the type description's members.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-169">Aby uzyskać dodatkowe informacje `ITypeInfo::GetTypeComp`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-169">For additional information about `ITypeInfo::GetTypeComp`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVarDesc">
      <MemberSignature Language="C#" Value="public void GetVarDesc (int index, out IntPtr ppVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVarDesc(int32 index, [out] native int&amp; ppVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVarDesc (index As Integer, ByRef ppVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVarDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetVarDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetVarDesc (index, ppVarDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppVarDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a7854-170">Indeks opisu zmiennej do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="a7854-170">Index of the variable description to return.</span></span></param>
        <param name="ppVarDesc"><span data-ttu-id="a7854-171">W przypadku pomyślnego powrotu odwołanie do <see langword="VARDESC" /> , które opisuje określoną zmienną.</span><span class="sxs-lookup"><span data-stu-id="a7854-171">On successful return, a reference to the <see langword="VARDESC" /> that describes the specified variable.</span></span></param>
        <summary><span data-ttu-id="a7854-172"><see langword="VARDESC" /> Pobiera strukturę opisującą określoną zmienną.</span><span class="sxs-lookup"><span data-stu-id="a7854-172">Retrieves a <see langword="VARDESC" /> structure that describes the specified variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-173">Wartości `ppVarDesc` dostępu można uzyskać za pomocą <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7854-173">The values of `ppVarDesc` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="a7854-174">Aby uzyskać dodatkowe informacje `ITypeInfo::GetVarDesc`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-174">For additional information about `ITypeInfo::GetVarDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.DISPPARAMS pDispParams, out object pVarResult, out System.Runtime.InteropServices.EXCEPINFO pExcepInfo, out int puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object pvInstance, int32 memid, int16 wFlags, valuetype System.Runtime.InteropServices.DISPPARAMS&amp; pDispParams, [out] object&amp; pVarResult, [out] valuetype System.Runtime.InteropServices.EXCEPINFO&amp; pExcepInfo, [out] int32&amp; puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (pvInstance As Object, memid As Integer, wFlags As Short, ByRef pDispParams As DISPPARAMS, ByRef pVarResult As Object, ByRef pExcepInfo As EXCEPINFO, ByRef puArgErr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::Object ^ pvInstance, int memid, short wFlags, System::Runtime::InteropServices::DISPPARAMS % pDispParams, [Runtime::InteropServices::Out] System::Object ^ % pVarResult, [Runtime::InteropServices::Out] System::Runtime::InteropServices::EXCEPINFO % pExcepInfo, [Runtime::InteropServices::Out] int % puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * int * int16 *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.Invoke (pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pvInstance" Type="System.Object" />
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.Runtime.InteropServices.DISPPARAMS" RefType="ref" />
        <Parameter Name="pVarResult" Type="System.Object" RefType="out" />
        <Parameter Name="pExcepInfo" Type="System.Runtime.InteropServices.EXCEPINFO" RefType="out" />
        <Parameter Name="puArgErr" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pvInstance"><span data-ttu-id="a7854-175">Odwołanie do interfejsu opisanego w opisie tego typu.</span><span class="sxs-lookup"><span data-stu-id="a7854-175">Reference to the interface described by this type description.</span></span></param>
        <param name="memid"><span data-ttu-id="a7854-176">Identyfikuje element członkowski interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a7854-176">Identifies the interface member.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a7854-177">Flagi opisujące kontekst wywołania wywołania.</span><span class="sxs-lookup"><span data-stu-id="a7854-177">Flags describing the context of the invoke call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a7854-178">Odwołanie do struktury zawierającej tablicę argumentów, tablicę identyfikatorów SPID dla nazwanych argumentów oraz liczbę elementów w każdej tablicy.</span><span class="sxs-lookup"><span data-stu-id="a7854-178">Reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a7854-179">Odwołanie do lokalizacji, w której ma zostać zapisany wynik.</span><span class="sxs-lookup"><span data-stu-id="a7854-179">Reference to the location at which the result is to be stored.</span></span> <span data-ttu-id="a7854-180">Jeśli <paramref name="wFlags" /> określono <see langword="DISPATCH_PROPERTYPUT" /> lub <see langword="DISPATCH_PROPERTYPUTREF" />, jestignorowany.<paramref name="pVarResult" /></span><span class="sxs-lookup"><span data-stu-id="a7854-180">If <paramref name="wFlags" /> specifies <see langword="DISPATCH_PROPERTYPUT" /> or <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> is ignored.</span></span> <span data-ttu-id="a7854-181">Ustaw na <see langword="null" /> , jeśli nie jest pożądany żaden wynik.</span><span class="sxs-lookup"><span data-stu-id="a7854-181">Set to <see langword="null" /> if no result is desired.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a7854-182">Wskazuje strukturę informacji o wyjątku, która jest wypełniana tylko wtedy, <see langword="DISP_E_EXCEPTION" /> gdy jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="a7854-182">Points to an exception information structure, which is filled in only if <see langword="DISP_E_EXCEPTION" /> is returned.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a7854-183">Jeśli <see langword="Invoke" /> zwraca <see langword="DISP_E_TYPEMISMATCH" /> ,<paramref name="puArgErr" /> wskazuje indeks w <c>rgvarg</c> argumentu z nieprawidłowym typem.</span><span class="sxs-lookup"><span data-stu-id="a7854-183">If <see langword="Invoke" /> returns <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indicates the index within <c>rgvarg</c> of the argument with incorrect type.</span></span> <span data-ttu-id="a7854-184">Jeśli więcej niż jeden argument zwraca błąd, <paramref name="puArgErr" /> wskazuje tylko pierwszy argument z błędem.</span><span class="sxs-lookup"><span data-stu-id="a7854-184">If more than one argument returns an error, <paramref name="puArgErr" /> indicates only the first argument with an error.</span></span></param>
        <summary><span data-ttu-id="a7854-185">Wywołuje metodę lub uzyskuje dostęp do właściwości obiektu, który implementuje interfejs opisany przez opis typu.</span><span class="sxs-lookup"><span data-stu-id="a7854-185">Invokes a method, or accesses a property of an object, that implements the interface described by the type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-186">Wartości `pDispParams` dostępu można uzyskać za pomocą <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7854-186">The values of `pDispParams` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="a7854-187">Prawidłowe wartości dla `wFlags` :</span><span class="sxs-lookup"><span data-stu-id="a7854-187">Valid values for `wFlags` are:</span></span>  
  
|<span data-ttu-id="a7854-188">Wartość</span><span class="sxs-lookup"><span data-stu-id="a7854-188">Value</span></span>|<span data-ttu-id="a7854-189">Opis</span><span class="sxs-lookup"><span data-stu-id="a7854-189">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="a7854-190">DISPATCH_METHOD</span><span class="sxs-lookup"><span data-stu-id="a7854-190">DISPATCH_METHOD</span></span>|<span data-ttu-id="a7854-191">Członek uzyskuje dostęp jako metodę.</span><span class="sxs-lookup"><span data-stu-id="a7854-191">The member is accessed as a method.</span></span> <span data-ttu-id="a7854-192">Jeśli występuje niejednoznaczność, można ustawić zarówno tę, `DISPATCH_PROPERTYGET` jak i flagę.</span><span class="sxs-lookup"><span data-stu-id="a7854-192">If there is ambiguity, both this and the `DISPATCH_PROPERTYGET` flag can be set.</span></span>|  
|<span data-ttu-id="a7854-193">DISPATCH_PROPERTYGET</span><span class="sxs-lookup"><span data-stu-id="a7854-193">DISPATCH_PROPERTYGET</span></span>|<span data-ttu-id="a7854-194">Element członkowski zostanie pobrany jako właściwość lub element członkowski danych.</span><span class="sxs-lookup"><span data-stu-id="a7854-194">The member is retrieved as a property or data member.</span></span>|  
|<span data-ttu-id="a7854-195">DISPATCH_PROPERTYPUT</span><span class="sxs-lookup"><span data-stu-id="a7854-195">DISPATCH_PROPERTYPUT</span></span>|<span data-ttu-id="a7854-196">Element członkowski zostanie zmieniony jako właściwość lub element członkowski danych.</span><span class="sxs-lookup"><span data-stu-id="a7854-196">The member is changed as a property or data member.</span></span>|  
|<span data-ttu-id="a7854-197">DISPATCH_PROPERTYPUTREF</span><span class="sxs-lookup"><span data-stu-id="a7854-197">DISPATCH_PROPERTYPUTREF</span></span>|<span data-ttu-id="a7854-198">Element członkowski jest zmieniany przy użyciu przypisania odwołania, a nie przypisania wartości.</span><span class="sxs-lookup"><span data-stu-id="a7854-198">The member is changed by using a reference assignment, rather than a value assignment.</span></span> <span data-ttu-id="a7854-199">Ta wartość jest prawidłowa tylko wtedy, gdy Właściwość akceptuje odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7854-199">This value is only valid when the property accepts a reference to an object.</span></span>|  
  
 <span data-ttu-id="a7854-200">Aby uzyskać dodatkowe informacje `ITypeInfo::Invoke`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-200">For additional information about `ITypeInfo::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseFuncDesc">
      <MemberSignature Language="C#" Value="public void ReleaseFuncDesc (IntPtr pFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseFuncDesc(native int pFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseFuncDesc (pFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseFuncDesc(IntPtr pFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseFuncDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseFuncDesc pFuncDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFuncDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pFuncDesc"><span data-ttu-id="a7854-201">Odwołanie do wersji do wydania. <see langword="FUNCDESC" /></span><span class="sxs-lookup"><span data-stu-id="a7854-201">Reference to the <see langword="FUNCDESC" /> to release.</span></span></param>
        <summary><span data-ttu-id="a7854-202">Zwalnia wcześniej zwrócone przez <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />. <see cref="T:System.Runtime.InteropServices.FUNCDESC" /></span><span class="sxs-lookup"><span data-stu-id="a7854-202">Releases a <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-203">Aby uzyskać dodatkowe informacje `ITypeInfo::ReleaseFuncDesc`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-203">For additional information about `ITypeInfo::ReleaseFuncDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTypeAttr">
      <MemberSignature Language="C#" Value="public void ReleaseTypeAttr (IntPtr pTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseTypeAttr(native int pTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseTypeAttr (pTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseTypeAttr(IntPtr pTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseTypeAttr : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseTypeAttr pTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTypeAttr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pTypeAttr"><span data-ttu-id="a7854-204">Odwołanie do wersji do wydania. <see langword="TYPEATTR" /></span><span class="sxs-lookup"><span data-stu-id="a7854-204">Reference to the <see langword="TYPEATTR" /> to release.</span></span></param>
        <summary><span data-ttu-id="a7854-205">Zwalnia wcześniej zwrócone przez <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />. <see cref="T:System.Runtime.InteropServices.TYPEATTR" /></span><span class="sxs-lookup"><span data-stu-id="a7854-205">Releases a <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-206">Aby uzyskać dodatkowe informacje `ITypeInfo::ReleaseTypeAttr`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-206">For additional information about `ITypeInfo::ReleaseTypeAttr`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseVarDesc">
      <MemberSignature Language="C#" Value="public void ReleaseVarDesc (IntPtr pVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseVarDesc(native int pVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseVarDesc (pVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseVarDesc(IntPtr pVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseVarDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseVarDesc pVarDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pVarDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pVarDesc"><span data-ttu-id="a7854-207">Odwołanie do wersji do wydania. <see langword="VARDESC" /></span><span class="sxs-lookup"><span data-stu-id="a7854-207">Reference to the <see langword="VARDESC" /> to release.</span></span></param>
        <summary><span data-ttu-id="a7854-208">Zwalnia wcześniej zwrócone przez <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />. <see langword="VARDESC" /></span><span class="sxs-lookup"><span data-stu-id="a7854-208">Releases a <see langword="VARDESC" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7854-209">Aby uzyskać dodatkowe informacje `ITypeInfo::ReleaseVarDesc`na temat programu, zobacz Biblioteka MSDN.</span><span class="sxs-lookup"><span data-stu-id="a7854-209">For additional information about `ITypeInfo::ReleaseVarDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
