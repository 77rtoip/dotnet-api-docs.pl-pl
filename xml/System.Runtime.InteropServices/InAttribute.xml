<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43793657aa1cb6a44d6b6ddcf4041dcb78600510" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52211248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f55d4-101">Wskazuje, że dane powinny być wprowadzane od elementu wywołującego / / wywoływany, ale nie do obiektu wywołującego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f55d4-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f55d4-102">Ten atrybut można stosować do parametrów.</span><span class="sxs-lookup"><span data-stu-id="f55d4-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="f55d4-103"><xref:System.Runtime.InteropServices.InAttribute> Jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="f55d4-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="f55d4-104">Ten atrybut jest obsługiwana w przypadku współdziałania z modelem COM i tylko wywołania platformy.</span><span class="sxs-lookup"><span data-stu-id="f55d4-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="f55d4-105">W przypadku braku ustawienia jawne Organizator międzyoperacyjny przyjęto założenie, że zasady na podstawie parametru typu, czy parametr jest przekazywany przez odwołanie, lub według wartości i czy typ jest kopiowalne i niekopiowalne.</span><span class="sxs-lookup"><span data-stu-id="f55d4-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="f55d4-106">Na przykład <xref:System.Text.StringBuilder> klasy zawsze zakłada się, że we/wy i Tablica ciągów, przekazać przez wartość zakłada, że w.</span><span class="sxs-lookup"><span data-stu-id="f55d4-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="f55d4-107">Nie można zastosować <xref:System.Runtime.InteropServices.InAttribute> parametrowi modyfikować za pomocą języka C# — różne `out` — słowo kluczowe.</span><span class="sxs-lookup"><span data-stu-id="f55d4-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="f55d4-108">Aby uniknąć mylące `In` — słowo kluczowe w języku Visual Basic z <xref:System.Runtime.InteropServices.InAttribute>, minus atrybutu, należy użyć `<[In]>` formularza za pomocą atrybutu w nawiasach.</span><span class="sxs-lookup"><span data-stu-id="f55d4-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="f55d4-109">Łącząc <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> jest szczególnie przydatne w przypadku gdy stosowane do tablic i formatowania, typów niekopiowalnych.</span><span class="sxs-lookup"><span data-stu-id="f55d4-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="f55d4-110">Obiekty wywołujące zobaczyć zmiany wprowadzone przez obiekt wywoływany do tych typów tylko wtedy, gdy stosujesz obu atrybutów.</span><span class="sxs-lookup"><span data-stu-id="f55d4-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="f55d4-111">Ponieważ te typy wymagają kopiowania podczas kierowania, możesz użyć <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> Aby ograniczyć niepotrzebne kopii.</span><span class="sxs-lookup"><span data-stu-id="f55d4-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="f55d4-112">Aby uzyskać więcej informacji na temat wpływu <xref:System.Runtime.InteropServices.InAttribute> na zachowanie marshalingu, zobacz [atrybuty kierunkowe](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="f55d4-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f55d4-113">Poniższy przykład pokazuje, jak zastosować <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> platformę wywołania prototypu, który przekazuje tablicę jako parametr.</span><span class="sxs-lookup"><span data-stu-id="f55d4-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="f55d4-114">Kombinacja atrybuty kierunkowe umożliwia obiektowi wywołującemu zobaczyć zmiany wprowadzone przez obiekt wywoływany.</span><span class="sxs-lookup"><span data-stu-id="f55d4-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="~/docs/framework/interop/blittable-and-non-blittable-types.md">
      <span data-ttu-id="f55d4-115">Typy kopiowalne i niekopiowalne</span>
      <span class="sxs-lookup">
        <span data-stu-id="f55d4-115">Blittable and Non-Blittable Types</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f55d4-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.InAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f55d4-116">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>