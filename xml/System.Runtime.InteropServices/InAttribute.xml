<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4aa58acbbdf5072aae1b3b19890732bc6678529" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36633401" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="44a80-101">Wskazuje, czy dane powinny być przekazywane z wywołującego wywoływany, ale nie z powrotem do wywołującego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44a80-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44a80-102">Ten atrybut można stosować do parametrów.</span><span class="sxs-lookup"><span data-stu-id="44a80-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="44a80-103"><xref:System.Runtime.InteropServices.InAttribute> Jest opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="44a80-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="44a80-104">Ten atrybut jest obsługiwany dla międzyoperacyjności z modelem COM i tylko wywołania platformy.</span><span class="sxs-lookup"><span data-stu-id="44a80-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="44a80-105">W przypadku braku ustawienia jawne międzyoperacyjnego organizatora przyjęto założenie, że reguły na podstawie parametru typu, czy parametr jest przekazywany przez odwołanie lub wartość i określa, czy typ jest kopiowalne i niekopiowalne.</span><span class="sxs-lookup"><span data-stu-id="44a80-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="44a80-106">Na przykład <xref:System.Text.StringBuilder> klasy zawsze zakłada się, że we/wy i Tablica ciągów przekazany przez wartość zakłada, że w.</span><span class="sxs-lookup"><span data-stu-id="44a80-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="44a80-107">Nie można zastosować <xref:System.Runtime.InteropServices.InAttribute> do parametru zmodyfikowana przy użyciu języka C# — styl `out` — słowo kluczowe.</span><span class="sxs-lookup"><span data-stu-id="44a80-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="44a80-108">Aby uniknąć skomplikowana `In` słów kluczowych w języku Visual Basic z <xref:System.Runtime.InteropServices.InAttribute>, minus atrybutu, użyj `<[In]>` formularza z atrybutu w nawiasach.</span><span class="sxs-lookup"><span data-stu-id="44a80-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="44a80-109">Łączenie <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> jest szczególnie przydatne w przypadku gdy stosowane do tablic i sformatowany niekopiowalne.</span><span class="sxs-lookup"><span data-stu-id="44a80-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="44a80-110">Obiekty wywołujące Zobacz zmiany wprowadzone przez wywoływany do tych typów tylko wtedy, gdy stosowanie obu atrybutów.</span><span class="sxs-lookup"><span data-stu-id="44a80-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="44a80-111">Ponieważ te typy wymaga kopiowanie podczas przekazywania międzyprocesowego, można użyć <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> Aby ograniczyć niepotrzebne kopie.</span><span class="sxs-lookup"><span data-stu-id="44a80-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="44a80-112">Aby uzyskać więcej informacji na temat wpływu <xref:System.Runtime.InteropServices.InAttribute> na przekazywanie zachowania, zobacz [kierunkową atrybutów](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="44a80-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44a80-113">Poniższy przykład przedstawia sposób zastosowania <xref:System.Runtime.InteropServices.InAttribute> i <xref:System.Runtime.InteropServices.OutAttribute> do platformy wywołania prototyp, która przekazuje tablicy jako parametr.</span><span class="sxs-lookup"><span data-stu-id="44a80-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="44a80-114">Kombinację atrybutów kierunkową umożliwia obiekt wywołujący, aby zobaczyć zmiany wprowadzone przez funkcję wywołującą.</span><span class="sxs-lookup"><span data-stu-id="44a80-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44a80-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.InAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44a80-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>