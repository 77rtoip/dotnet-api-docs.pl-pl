<Type Name="NativeLibrary" FullName="System.Runtime.InteropServices.NativeLibrary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d5c953481310a9a72ba623f369bd37a1c9531e8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69269757" /></Metadata><TypeSignature Language="C#" Value="public static class NativeLibrary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NativeLibrary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.NativeLibrary" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeLibrary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeLibrary abstract sealed" />
  <TypeSignature Language="F#" Value="type NativeLibrary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="03cf9-101">Udostępnia interfejsy API do zarządzania bibliotekami macierzystymi.</span><span class="sxs-lookup"><span data-stu-id="03cf9-101">Provides APIs for managing native libraries.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Free (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member Free : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.Free handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="03cf9-102">Dojście do biblioteki natywnej, które ma zostać zwolnione.</span><span class="sxs-lookup"><span data-stu-id="03cf9-102">The native library handle to be freed.</span></span></param>
        <summary><span data-ttu-id="03cf9-103">Zwalnia dany załadowany uchwyt biblioteki lub nie podejmuje żadnej akcji, jeśli dojście do danych wejściowych <see cref="F:System.IntPtr.Zero" />jest.</span><span class="sxs-lookup"><span data-stu-id="03cf9-103">Frees a given a loaded library handle, or takes no action if the input handle is <see cref="F:System.IntPtr.Zero" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public static IntPtr GetExport (IntPtr handle, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExport(native int handle, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExport (handle As IntPtr, name As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExport(IntPtr handle, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetExport : nativeint * string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.GetExport (handle, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="03cf9-104">Uchwyt biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-104">The native library handle.</span></span></param>
        <param name="name"><span data-ttu-id="03cf9-105">Nazwa wyeksportowanego symbolu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-105">The name of the exported symbol.</span></span></param>
        <summary><span data-ttu-id="03cf9-106">Pobiera adres wyeksportowanego symbolu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-106">Gets the address of an exported symbol.</span></span></summary>
        <returns><span data-ttu-id="03cf9-107">Adres symbolu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-107">The address of the symbol.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="03cf9-108">Jest to prosty otoka wokół wywołań systemu operacyjnego i nie wykonuje żadnej nazwy dekorowanie.</span><span class="sxs-lookup"><span data-stu-id="03cf9-108">This is a simple wrapper around OS calls and does not perform any name mangling.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-109"><paramref name="handle" />lub <paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-109"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.EntryPointNotFoundException"><span data-ttu-id="03cf9-110">Symbol nie został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="03cf9-110">The symbol is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryPath);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load libraryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="03cf9-111">Nazwa natywnej biblioteki, która ma zostać załadowana.</span><span class="sxs-lookup"><span data-stu-id="03cf9-111">The name of the native library to be loaded.</span></span></param>
        <summary><span data-ttu-id="03cf9-112">Udostępnia prosty interfejs API do ładowania biblioteki natywnej, która otacza moduł ładujący system operacyjny i używa domyślnych flag.</span><span class="sxs-lookup"><span data-stu-id="03cf9-112">Provides a simple API for loading a native library that wraps the OS loader and uses default flags.</span></span></summary>
        <returns><span data-ttu-id="03cf9-113">Uchwyt dla załadowanej biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-113">The handle for the loaded native library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-114"><paramref name="libraryPath" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-114"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="03cf9-115">Nie można znaleźć biblioteki.</span><span class="sxs-lookup"><span data-stu-id="03cf9-115">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="03cf9-116">Biblioteka jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="03cf9-116">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryName, System.Reflection.Assembly assembly, Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load (libraryName, assembly, searchPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="03cf9-117">Nazwa natywnej biblioteki, która ma zostać załadowana.</span><span class="sxs-lookup"><span data-stu-id="03cf9-117">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="03cf9-118">Zestaw ładujący bibliotekę natywną.</span><span class="sxs-lookup"><span data-stu-id="03cf9-118">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="03cf9-119">Ścieżka wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="03cf9-119">The search path.</span></span></param>
        <summary><span data-ttu-id="03cf9-120">Zapewnia interfejs API wysokiego poziomu do ładowania biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-120">Provides a high-level API for loading a native library.</span></span></summary>
        <returns><span data-ttu-id="03cf9-121">Uchwyt dla załadowanej biblioteki.</span><span class="sxs-lookup"><span data-stu-id="03cf9-121">The handle for the loaded library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="03cf9-122">Mając nazwę biblioteki, ta metoda przeszukuje określone ścieżki na podstawie konfiguracji środowiska uruchomieniowego, parametrów wejściowych i atrybutów zestawu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="03cf9-122">Given a library name, this method searches specific paths based on the  runtime configuration, input parameters, and attributes of the calling assembly.</span></span> <span data-ttu-id="03cf9-123">`searchPath` Jeśli parametr ma wartość różną od null, są używane flagi w tym wyliczeniu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-123">If the `searchPath` parameter is non-null, the flags in this enumeration are used.</span></span> <span data-ttu-id="03cf9-124">W przeciwnym razie są używane flagi określone <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> przez zestaw wywołujący, jeśli istnieją.</span><span class="sxs-lookup"><span data-stu-id="03cf9-124">Otherwise, the flags specified by the <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> on the calling assembly, if any are present, are used.</span></span> <span data-ttu-id="03cf9-125">Ta metoda nie wywołuje następujących zarządzanych wywołań zwrotnych do rozpoznawania biblioteki natywnej:</span><span class="sxs-lookup"><span data-stu-id="03cf9-125">This method does not invoke the following managed callbacks for native library resolution:</span></span> 

- <span data-ttu-id="03cf9-126">Zarejestrowane wywołanie zwrotne dla każdego zestawu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-126">The per-assembly registered callback.</span></span>
- <span data-ttu-id="03cf9-127"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> Metoda.</span><span class="sxs-lookup"><span data-stu-id="03cf9-127">The <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> method.</span></span>
- <span data-ttu-id="03cf9-128"><xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> Zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="03cf9-128">The <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> event.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-129"><paramref name="libraryName" />lub <paramref name="assembly" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-129"><paramref name="libraryName" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03cf9-130"><paramref name="assembly" />nie <see langword="RuntimeAssembly" />jest.</span><span class="sxs-lookup"><span data-stu-id="03cf9-130"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="03cf9-131">Nie można znaleźć biblioteki.</span><span class="sxs-lookup"><span data-stu-id="03cf9-131">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="03cf9-132">Biblioteka jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="03cf9-132">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDllImportResolver">
      <MemberSignature Language="C#" Value="public static void SetDllImportResolver (System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDllImportResolver(class System.Reflection.Assembly assembly, class System.Runtime.InteropServices.DllImportResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDllImportResolver(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::DllImportResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member SetDllImportResolver : System.Reflection.Assembly * System.Runtime.InteropServices.DllImportResolver -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver (assembly, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resolver" Type="System.Runtime.InteropServices.DllImportResolver" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="03cf9-133">Zestaw, dla którego zarejestrowano program rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="03cf9-133">The assembly for which the resolver is registered.</span></span></param>
        <param name="resolver"><span data-ttu-id="03cf9-134">Wywołanie zwrotne programu rozpoznawania nazw do rejestracji.</span><span class="sxs-lookup"><span data-stu-id="03cf9-134">The resolver callback to register.</span></span></param>
        <summary><span data-ttu-id="03cf9-135">Ustawia wywołanie zwrotne służące do rozpoznawania importów biblioteki natywnej z zestawu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-135">Sets a callback for resolving native library imports from an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="03cf9-136">Ten program rozpoznawania na zestaw jest pierwszą próbą rozpoznania natywnych obciążeń biblioteki inicjowanych przez ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="03cf9-136">This per-assembly resolver is the first attempt to resolve native library loads initiated by this assembly.</span></span> 

<span data-ttu-id="03cf9-137">Dla każdego zestawu można zarejestrować tylko jeden mechanizm rozpoznawania nazw.</span><span class="sxs-lookup"><span data-stu-id="03cf9-137">Only one resolver can be registered per assembly.</span></span> <span data-ttu-id="03cf9-138">Próba zarejestrowania drugiego programu rozpoznawania nazw kończy się <xref:System.InvalidOperationException>niepowodzeniem z.</span><span class="sxs-lookup"><span data-stu-id="03cf9-138">Trying to register a second resolver fails with an <xref:System.InvalidOperationException>.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-139"><paramref name="assembly" />lub paramref Name = "resolver"/&gt; is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-139"><paramref name="assembly" /> or paramref name="resolver" /&gt; is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03cf9-140">Mechanizm rozwiązywania konfliktów został już ustawiony dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-140">A resolver is already set for this assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public static bool TryGetExport (IntPtr handle, string name, out IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetExport(native int handle, string name, [out] native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetExport (handle As IntPtr, name As String, ByRef address As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetExport(IntPtr handle, System::String ^ name, [Runtime::InteropServices::Out] IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member TryGetExport : nativeint * string *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryGetExport (handle, name, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="address" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="03cf9-141">Uchwyt biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-141">The  native library handle.</span></span></param>
        <param name="name"><span data-ttu-id="03cf9-142">Nazwa wyeksportowanego symbolu.</span><span class="sxs-lookup"><span data-stu-id="03cf9-142">The name of the exported symbol.</span></span></param>
        <param name="address"><span data-ttu-id="03cf9-143">Gdy metoda zwraca, zawiera adres symbolu, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="03cf9-143">When the method returns, contains the symbol address, if it exists.</span></span></param>
        <summary><span data-ttu-id="03cf9-144">Pobiera adres wyeksportowanego symbolu i zwraca wartość wskazującą, czy wywołanie metody powiodło się.</span><span class="sxs-lookup"><span data-stu-id="03cf9-144">Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.</span></span></summary>
        <returns><span data-ttu-id="03cf9-145"><see langword="true" />Jeśli metoda została pomyślnie zwrócona; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="03cf9-145"><see langword="true" /> if the method returned successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-146"><paramref name="handle" />lub <paramref name="name" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-146"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryPath As String, ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="03cf9-147">Nazwa natywnej biblioteki, która ma zostać załadowana.</span><span class="sxs-lookup"><span data-stu-id="03cf9-147">The name of the native library to be loaded.</span></span></param>
        <param name="handle"><span data-ttu-id="03cf9-148">Gdy metoda zwraca, dojście załadowanej biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-148">When the method returns, the handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="03cf9-149">Udostępnia prosty interfejs API do ładowania biblioteki natywnej i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="03cf9-149">Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="03cf9-150"><see langword="true" />Jeśli biblioteka natywna została załadowana pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="03cf9-150"><see langword="true" /> if the native library was loaded successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-151"><paramref name="libraryPath" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-151"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryName, System.Reflection.Assembly assembly, Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; *  -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryName, assembly, searchPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="03cf9-152">Nazwa natywnej biblioteki, która ma zostać załadowana.</span><span class="sxs-lookup"><span data-stu-id="03cf9-152">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="03cf9-153">Zestaw ładujący bibliotekę natywną.</span><span class="sxs-lookup"><span data-stu-id="03cf9-153">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="03cf9-154">Ścieżka wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="03cf9-154">The search path.</span></span></param>
        <param name="handle"><span data-ttu-id="03cf9-155">Gdy metoda zwraca, dojście załadowanej biblioteki natywnej.</span><span class="sxs-lookup"><span data-stu-id="03cf9-155">When the method returns, the handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="03cf9-156">Udostępnia interfejs API wysokiego poziomu, który ładuje bibliotekę natywną i zwraca wartość wskazującą, czy operacja zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="03cf9-156">Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="03cf9-157"><see langword="true" />Jeśli operacja ładowania zakończyła się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="03cf9-157"><see langword="true" /> if the load operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="03cf9-158"><paramref name="libraryPath" />lub <paramref name="assembly" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="03cf9-158"><paramref name="libraryPath" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="03cf9-159"><paramref name="assembly" />nie <see langword="RuntimeAssembly" />jest.</span><span class="sxs-lookup"><span data-stu-id="03cf9-159"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
