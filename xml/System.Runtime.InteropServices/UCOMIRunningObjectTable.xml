<Type Name="UCOMIRunningObjectTable" FullName="System.Runtime.InteropServices.UCOMIRunningObjectTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50c13f2dd7dbb3f1a8216beec19e47238b589821" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30566224" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIRunningObjectTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIRunningObjectTable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIRunningObjectTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIRunningObjectTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIRunningObjectTable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c9d10-101">Zamiast nich należy używać słów kluczowych <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9d10-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" /> instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-102">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable` w podfolderze com w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-102">For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumRunning">
      <MemberSignature Language="C#" Value="public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumRunning([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumRunning (ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumRunning([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenumMoniker">
          <span data-ttu-id="c9d10-103">Przy powrocie pomyślne, nowego modułu wyliczającego dla zaprojektowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-103">On successful return, the new enumerator for the ROT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-104">Wylicza obiektów w danym momencie zarejestrowany jako uruchomione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-104">Enumerates the objects currently registered as running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-105">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::EnumRunning` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-105">For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObject(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] object&amp; ppunkObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObject (pmkObjectName As UCOMIMoniker, ByRef ppunkObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObject(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Object ^ % ppunkObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppunkObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="c9d10-106">Odwołanie do krótkiej nazwy do wyszukania w zaprojektowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-106">Reference to the moniker to search for in the ROT.</span>
          </span>
        </param>
        <param name="ppunkObject">
          <span data-ttu-id="c9d10-107">Przy powrocie pomyślne zawiera żądanego uruchomionego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-107">On successful return, contains the requested running object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-108">Zwraca obiekt zarejestrowane, jeśli nazwa podanego obiektu jest rejestrowana jako uruchomione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-108">Returns the registered object if the supplied object name is registered as running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-109">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::GetObject` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-109">For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pmkObjectName As UCOMIMoniker, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="c9d10-110">Odwołanie do krótkiej nazwy do wyszukania w zaprojektowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-110">Reference to the moniker to search for in the ROT.</span>
          </span>
        </param>
        <param name="pfiletime">
          <span data-ttu-id="c9d10-111">Przy powrocie pomyślne zawiera obiekty czas ostatniej zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-111">On successful return, contains the objects last change time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-112">Szuka tego krótkiej nazwy w zaprojektowana i raporty zarejestrowane czasie zmiany, jeśli jest obecny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-112">Searches for this moniker in the ROT and reports the recorded time of change, if present.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-113">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::GetTimeOfLastChange` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-113">For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pmkObjectName As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">
          <span data-ttu-id="c9d10-114">Odwołanie do krótkiej nazwy do wyszukania w tabeli działających obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-114">Reference to the moniker to search for in the Running Object Table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-115">Określa, jeśli określony moniker jest już zarejestrowana w tabeli obiektu uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-115">Determines if the specified moniker is currently registered in the Running Object Table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-116">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::IsRunning` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-116">For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteChangeTime">
      <MemberSignature Language="C#" Value="public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoteChangeTime(int32 dwRegister, valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NoteChangeTime (dwRegister As Integer, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NoteChangeTime(int dwRegister, System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dwRegister">
          <span data-ttu-id="c9d10-117">Wpis zaprojektowana zmienionych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-117">The ROT entry of the changed object.</span>
          </span>
        </param>
        <param name="pfiletime">
          <span data-ttu-id="c9d10-118">Odwołanie do czas ostatniej zmiany obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-118">Reference to the object's last change time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-119">Odnotowuje czasu określonego obiektu został zmieniony tak <see langword="IMoniker::GetTimeOfLastChange" /> może raportować czas odpowiednie zmiany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-119">Makes a note of the time that a particular object has changed so <see langword="IMoniker::GetTimeOfLastChange" /> can report an appropriate change time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-120">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::NoteChangeTime` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-120">For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(int32 grfFlags, object punkObject, class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] int32&amp; pdwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (grfFlags As Integer, punkObject As Object, pmkObjectName As UCOMIMoniker, ByRef pdwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(int grfFlags, System::Object ^ punkObject, System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] int % pdwRegister);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfFlags" Type="System.Int32" />
        <Parameter Name="punkObject" Type="System.Object" />
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pdwRegister" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="grfFlags">
          <span data-ttu-id="c9d10-121">Określa, czy uruchomiona obiektu tabeli (zaprojektowana) odwołanie do <c>punkObject</c> jest słabych lub silne i kontroluje dostęp do obiektu za pomocą jego wpis w zaprojektowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-121">Specifies whether the Running Object Table's (ROT) reference to <c>punkObject</c> is weak or strong, and controls access to the object through its entry in the ROT.</span>
          </span>
        </param>
        <param name="punkObject">
          <span data-ttu-id="c9d10-122">Odwołanie do obiektu jest zarejestrowany jako uruchomione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-122">Reference to the object being registered as running.</span>
          </span>
        </param>
        <param name="pmkObjectName">
          <span data-ttu-id="c9d10-123">Odwołanie do krótkiej nazwy, która identyfikuje <c>punkObject</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-123">Reference to the moniker that identifies <c>punkObject</c>.</span>
          </span>
        </param>
        <param name="pdwRegister">
          <span data-ttu-id="c9d10-124">Odwołanie do 32-bitową wartość, która może służyć do identyfikowania tego wpisu zaprojektowana w kolejnych wywołaniach <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> lub <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-124">Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> or <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-125">Rejestruje, czy podany obiekt ma została uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-125">Registers that the supplied object has entered the running state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-126">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::Register` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-126">For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revoke">
      <MemberSignature Language="C#" Value="public void Revoke (int dwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revoke(int32 dwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revoke (dwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revoke(int dwRegister);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwRegister">
          <span data-ttu-id="c9d10-127">Wpis zaprojektowana, aby można było odwołać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-127">The ROT entry to revoke.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d10-128">Wyrejestrowuje określony obiekt z zaprojektowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d10-128">Unregisters the specified object from the ROT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d10-129">Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IRunningObjectTable::Revoke` w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="c9d10-129">For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>