<Type Name="UCOMIRunningObjectTable" FullName="System.Runtime.InteropServices.UCOMIRunningObjectTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="252d1f59beda0a0aa9abb350430dda8621949af3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69268885" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMIRunningObjectTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIRunningObjectTable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIRunningObjectTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIRunningObjectTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIRunningObjectTable" />
  <TypeSignature Language="F#" Value="type UCOMIRunningObjectTable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IRunningObjectTable instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="179b5-101">Zamiast nich należy używać słów kluczowych <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" />.</span><span class="sxs-lookup"><span data-stu-id="179b5-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-102">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable` dokumentacją w podfolderze com biblioteki MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-102">For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumRunning">
      <MemberSignature Language="C#" Value="public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumRunning([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumRunning (ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumRunning([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member EnumRunning :  -&gt; unit" Usage="uCOMIRunningObjectTable.EnumRunning ppenumMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenumMoniker"><span data-ttu-id="179b5-103">W przypadku pomyślnego powrotu nowy moduł wyliczający dla elementu "GNICIe".</span><span class="sxs-lookup"><span data-stu-id="179b5-103">On successful return, the new enumerator for the ROT.</span></span></param>
        <summary><span data-ttu-id="179b5-104">Wylicza obiekty aktualnie zarejestrowane jako uruchomione.</span><span class="sxs-lookup"><span data-stu-id="179b5-104">Enumerates the objects currently registered as running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-105">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::EnumRunning` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-105">For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObject(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] object&amp; ppunkObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObject (pmkObjectName As UCOMIMoniker, ByRef ppunkObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObject(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Object ^ % ppunkObject);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetObject (pmkObjectName, ppunkObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppunkObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName"><span data-ttu-id="179b5-106">Odwołanie do monikera do wyszukania w przypadku GNICIa.</span><span class="sxs-lookup"><span data-stu-id="179b5-106">Reference to the moniker to search for in the ROT.</span></span></param>
        <param name="ppunkObject"><span data-ttu-id="179b5-107">Po pomyślnym powrocie, zawiera żądany uruchomiony obiekt.</span><span class="sxs-lookup"><span data-stu-id="179b5-107">On successful return, contains the requested running object.</span></span></param>
        <summary><span data-ttu-id="179b5-108">Zwraca zarejestrowany obiekt, jeśli podana nazwa obiektu jest zarejestrowana jako uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="179b5-108">Returns the registered object if the supplied object name is registered as running.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-109">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::GetObject` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-109">For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pmkObjectName As UCOMIMoniker, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetTimeOfLastChange (pmkObjectName, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName"><span data-ttu-id="179b5-110">Odwołanie do monikera do wyszukania w przypadku GNICIa.</span><span class="sxs-lookup"><span data-stu-id="179b5-110">Reference to the moniker to search for in the ROT.</span></span></param>
        <param name="pfiletime"><span data-ttu-id="179b5-111">Po pomyślnym powrocie program zawiera czas ostatniej zmiany obiektu.</span><span class="sxs-lookup"><span data-stu-id="179b5-111">On successful return, contains the objects last change time.</span></span></param>
        <summary><span data-ttu-id="179b5-112">Wyszukuje ten moniker w przypadku GNICIa i zgłasza zarejestrowany czas zmiany, jeśli jest obecny.</span><span class="sxs-lookup"><span data-stu-id="179b5-112">Searches for this moniker in the ROT and reports the recorded time of change, if present.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-113">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::GetTimeOfLastChange` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-113">For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pmkObjectName As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.UCOMIMoniker -&gt; unit" Usage="uCOMIRunningObjectTable.IsRunning pmkObjectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName"><span data-ttu-id="179b5-114">Odwołanie do monikera do wyszukania w tabeli uruchomionego obiektu.</span><span class="sxs-lookup"><span data-stu-id="179b5-114">Reference to the moniker to search for in the Running Object Table.</span></span></param>
        <summary><span data-ttu-id="179b5-115">Określa, czy określony moniker jest obecnie zarejestrowany w tabeli uruchomionego obiektu.</span><span class="sxs-lookup"><span data-stu-id="179b5-115">Determines if the specified moniker is currently registered in the Running Object Table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-116">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::IsRunning` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-116">For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteChangeTime">
      <MemberSignature Language="C#" Value="public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoteChangeTime(int32 dwRegister, valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NoteChangeTime (dwRegister As Integer, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NoteChangeTime(int dwRegister, System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member NoteChangeTime : int *  -&gt; unit" Usage="uCOMIRunningObjectTable.NoteChangeTime (dwRegister, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dwRegister"><span data-ttu-id="179b5-117">Wpis "GNICIe" zmienionego obiektu.</span><span class="sxs-lookup"><span data-stu-id="179b5-117">The ROT entry of the changed object.</span></span></param>
        <param name="pfiletime"><span data-ttu-id="179b5-118">Odwołanie do czasu ostatniej zmiany obiektu.</span><span class="sxs-lookup"><span data-stu-id="179b5-118">Reference to the object's last change time.</span></span></param>
        <summary><span data-ttu-id="179b5-119">Powoduje zanotowanie czasu zmiany określonego obiektu, co <see langword="IMoniker::GetTimeOfLastChange" /> może zgłosić odpowiedni czas zmiany.</span><span class="sxs-lookup"><span data-stu-id="179b5-119">Makes a note of the time that a particular object has changed so <see langword="IMoniker::GetTimeOfLastChange" /> can report an appropriate change time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-120">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::NoteChangeTime` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-120">For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(int32 grfFlags, object punkObject, class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] int32&amp; pdwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (grfFlags As Integer, punkObject As Object, pmkObjectName As UCOMIMoniker, ByRef pdwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(int grfFlags, System::Object ^ punkObject, System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] int % pdwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Register : int * obj * System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.Register (grfFlags, punkObject, pmkObjectName, pdwRegister)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfFlags" Type="System.Int32" />
        <Parameter Name="punkObject" Type="System.Object" />
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pdwRegister" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="grfFlags"><span data-ttu-id="179b5-121">Określa, czy odwołanie <paramref name="punkObject" /> do tabeli uruchomionego obiektu (gnicia) jest słabe czy silne i kontroluje dostęp do obiektu za pomocą jego wejścia w gnicie.</span><span class="sxs-lookup"><span data-stu-id="179b5-121">Specifies whether the Running Object Table's (ROT) reference to <paramref name="punkObject" /> is weak or strong, and controls access to the object through its entry in the ROT.</span></span></param>
        <param name="punkObject"><span data-ttu-id="179b5-122">Odwołanie do obiektu, który jest rejestrowany jako uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="179b5-122">Reference to the object being registered as running.</span></span></param>
        <param name="pmkObjectName"><span data-ttu-id="179b5-123">Odwołanie do monikera, który <paramref name="punkObject" />identyfikuje.</span><span class="sxs-lookup"><span data-stu-id="179b5-123">Reference to the moniker that identifies <paramref name="punkObject" />.</span></span></param>
        <param name="pdwRegister"><span data-ttu-id="179b5-124">Odwołanie do 32-bitowej wartości, która może służyć do identyfikowania tego wpisu gnicia podczas kolejnych wywołań <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> do <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />lub.</span><span class="sxs-lookup"><span data-stu-id="179b5-124">Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> or <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</span></span></param>
        <summary><span data-ttu-id="179b5-125">Rejestruje, czy dostarczony obiekt został uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="179b5-125">Registers that the supplied object has entered the running state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-126">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::Register` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-126">For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revoke">
      <MemberSignature Language="C#" Value="public void Revoke (int dwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revoke(int32 dwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revoke (dwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revoke(int dwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Revoke : int -&gt; unit" Usage="uCOMIRunningObjectTable.Revoke dwRegister" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwRegister"><span data-ttu-id="179b5-127">Wpis "GNICIe" do odwołania.</span><span class="sxs-lookup"><span data-stu-id="179b5-127">The ROT entry to revoke.</span></span></param>
        <summary><span data-ttu-id="179b5-128">Wyrejestrowuje określony obiekt z obiektu "GNICIe".</span><span class="sxs-lookup"><span data-stu-id="179b5-128">Unregisters the specified object from the ROT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="179b5-129">Aby uzyskać więcej informacji, zapoznaj się z istniejącą `IRunningObjectTable::Revoke` dokumentacją dla programu w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="179b5-129">For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
