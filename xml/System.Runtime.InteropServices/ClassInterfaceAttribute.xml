<Type Name="ClassInterfaceAttribute" FullName="System.Runtime.InteropServices.ClassInterfaceAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22885b9e9704325229ae4e4688727e3be90e630f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClassInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClassInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClassInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassInterfaceAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje typ interfejsu klasy ma zostać wygenerowane klasy ujawniony dla modelu COM, jeśli interfejs jest generowany w ogóle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten atrybut można stosować do zestawów lub klasy.  
  
 Ten atrybut określa, czy Eksporter biblioteki typów (Tlbexp.exe) automatycznie generuje interfejsu klasy dla klasy oparte na atrybutach. Interfejs klasy wiąże się z taką samą nazwę jak samej klasy, ale nazwa jest prefiksem znaku podkreślenia. Jeśli połączenie, interfejsu klasy zawiera wszystkie `public`, nie- `static` członkami zarządzanej klasy, w tym elementów członkowskich odziedziczone po klasie podstawowej. Klasy zarządzane nie można uzyskać dostępu do interfejsu klasy i nie ma potrzeby jako mogą uzyskiwać dostęp do elementów członkowskich klasy bezpośrednio. Tlbexp.exe generuje identyfikator unikatowy interfejsu (IID) dla interfejsu klasy.  
  
 Interfejsy klasy może być dwie lub tylko do wysyłania interfejsów. Opcjonalnie można blokować Generowanie interfejsu klasy i zamiast tego Podaj niestandardowy interfejs. Pominąć interfejsu klasy, określając lub ujawnić <xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType> element członkowski wyliczenia. Po zastosowaniu <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> do zestawu, atrybut odnoszą się do wszystkich klas w zestawie chyba, że poszczególne klasy zastąpić ustawienie własnych atrybutem.  
  
 Mimo że interfejsy klasy wyeliminować zadanie jawnie definiowanie interfejsów dla każdej klasy, ich użycia w aplikacjach produkcyjnych jest zalecane. Klasa dwa interfejsy Zezwalaj klientom na powiązać układu określonego interfejsu, która może ulec zmianie w miarę rozwoju środowisko klasy. Rozważmy na przykład zarządzanej klasy, która uwidacznia interfejs klasy dla klientów modelu COM. Pierwszą wersję klasa zawiera metody `North` i `South`. Klient niezarządzany można powiązać z interfejsu klasy, która dostarcza `North` jako pierwsza metoda w interfejsie klasy i metody `South` jako drugiej z metod. Teraz Rozważmy następnej wersji klasy, która ma nowej metody, `East`wstawienia jedną z metod `North` i `South`. Klienci Niezarządzani, którzy spróbuj powiązać nowej klasy za pomocą starego interfejsu klasy przechodzili wywołanie metody `East` po zamierzają Wywołaj metodę `South`, ponieważ zmienił się pozycjonowanie metod w interfejsie. Ponadto każda zmiana układu klasy podstawowej również ma wpływ na układ interfejsu klasy dla wszystkich klas pochodnych. Zarządzanych klientów, wiążących bezpośrednio do klasy, nie wykazują takie same problemy z kontroli wersji. Aby uzyskać szczegółowe wytyczne dotyczące używania interfejsu klasy, zobacz [wywoływana otoka COM](~/docs/framework/interop/com-callable-wrapper.md).  
  
 [Tlbimp.exe (Importer biblioteki typów)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) zawsze ma zastosowanie do importowanych klasy <xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType> element członkowski wyliczenia wskazująca istniejącego modelu COM klasy nigdy nie uwidocznia zarządzane interfejsy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób zastosowania <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> z <xref:System.Runtime.InteropServices.ClassInterfaceType> wartość <xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch>, który generuje `IDispatch` interfejs na potrzeby `MyClass`.  
  
 [!code-cpp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (short classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classInterfaceType As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(short classInterfaceType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType">Opisuje typ interfejsu, który jest generowany dla klasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> klasy z określonym <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> wartości wyliczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ma podstawowej 16-bitową liczbę całkowitą ze znakiem reprezentujący każdego <xref:System.Runtime.InteropServices.ClassInterfaceType> element członkowski wyliczenia. [Tlbimp.exe (Importer biblioteki typów)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) używa tego konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (System.Runtime.InteropServices.ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.ClassInterfaceType classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(System::Runtime::InteropServices::ClassInterfaceType classInterfaceType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType">Jeden z <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> wartości, które opisuje typ interfejsu, który jest generowany dla klasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> klasy z określonym <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> element członkowski wyliczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czytelny kod jest mniej podatne na błędy należy zawsze używać tego konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.ClassInterfaceType Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.ClassInterfaceType Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As ClassInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::ClassInterfaceType Value { System::Runtime::InteropServices::ClassInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ClassInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> wartość, która opisuje typ interfejsu powinny być generowane dla klasy.</summary>
        <value>
          <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> Wartość, która opisuje typ interfejsu powinny być generowane dla klasy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>