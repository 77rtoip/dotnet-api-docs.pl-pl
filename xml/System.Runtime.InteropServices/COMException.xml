<Type Name="COMException" FullName="System.Runtime.InteropServices.COMException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2abd8cdbf5baad3890827c00163d7d68c4d8fd13" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69064785" /></Metadata><TypeSignature Language="C#" Value="public class COMException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit COMException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.COMException" />
  <TypeSignature Language="VB.NET" Value="Public Class COMException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class COMException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type COMException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wyjątek, który jest generowany, gdy Nierozpoznana wartość HRESULT jest zwracana z wywołania metody COM.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko uruchomieniowe języka wspólnego przekształceń dobrze znanego HRESULT do .NET Framework wyjątków, umożliwiając obiektom COM zwracanie znaczących informacji o błędach do zarządzanych klientów. Mapowanie HRESULT do wyjątku działa również w innym kierunku przez zwrócenie określonych wartości HRESULT do niezarządzanych klientów. Aby uzyskać szczegółowe informacje dotyczące [mapowania, zobacz How to: Mapuj HRESULTs i Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  
  
 Gdy środowisko uruchomieniowe napotka nieznaną wartość HRESULT (HRESULT, która nie ma określonego, odpowiadającego wyjątku), zgłasza wystąpienie <xref:System.Runtime.InteropServices.COMException> klasy. Ten wyjątek dotyczący tego samego celu uwidacznia te same elementy członkowskie co dowolny wyjątek i dziedziczy <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> publiczną właściwość, która zawiera wartość HRESULT zwracaną przez element wywoływany. Jeśli komunikat o błędzie jest dostępny dla środowiska uruchomieniowego (uzyskany z interfejsu [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) lub `Err` obiektu w Visual Basic lub w niektórych przypadkach z systemu operacyjnego), komunikat jest zwracany do obiektu wywołującego. Jeśli jednak deweloper składnika modelu COM nie dołączy komunikatu o błędzie, środowisko uruchomieniowe zwróci osiem cyfr HRESULT zamiast ciągu komunikatu. WYNIK HRESULT umożliwia obiektowi wywołującemu określenie przyczyny wyjątku generycznego.  
  
## <a name="handling-a-comexception-exception"></a>Obsługa wyjątku COMException  
 Poniżej przedstawiono niektóre zagadnienia dotyczące rozwiązywania <xref:System.Runtime.InteropServices.COMException> problemów z wyjątkiem.  
  
 <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> Sprawdź Właściwość  
 Gdy środowisko uruchomieniowe napotka nieznaną wartość HRESULT i zgłosi <xref:System.Runtime.InteropServices.COMException> wyjątek <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> , właściwość zawiera komunikat o błędzie lub, jeśli komunikat o błędzie jest niedostępny, osiem cyfr wartość HRESULT.  Komunikat o błędzie lub wartość HRESULT mogą pomóc w ustaleniu przyczyny wyjątku.  
  
 Aby zapoznać się z listą wartości HRESULT, zobacz [typowe wartości HRESULT](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx).  
  
 Argumenty z późnym wiązaniem i obiekty Microsoft Office  
 Podczas przekazywania argumentów z późnym wiązaniem do metod Microsoft Office obiektów, <xref:System.Runtime.InteropServices.COMException> wyjątek może być generowany, gdy obiekty są obiektami com. Opóźniony spinacz zakłada, że takie wywołania metody obejmują `ByRef` parametr i że przekazana Właściwość `set` ma metodę dostępu. Jeśli właściwość nie jest, .NET Framework generuje <xref:System.MissingMethodException> wyjątek (z wartością `CORE_E_MISSINGMETHOD` HRESULT). Aby obejść to zachowanie, Użyj obiektów wczesnego wiązania lub Przekaż zmienną zamiast właściwości obiektu.  
  
 Visual Studio i proces hostingu  
 Model COM jest używany do komunikacji między programem Visual Studio i [procesem hostingu](https://msdn.microsoft.com/library/ms185331.aspx). Ponieważ jest używany przed uruchomieniem kodu, wywołanie [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) powoduje zgłoszenie tego wyjątku.  
  
 W niektórych przypadkach uruchomienie programu Visual Studio jako administrator może rozwiązać ten problem. Możesz również [wyłączyć proces hostingu](https://msdn.microsoft.com/library/ms185330.aspx).  
  
## <a name="throwing-a-comexception-exception"></a>Zgłaszanie wyjątku COMException  
 Chociaż można użyć <xref:System.Runtime.InteropServices.COMException> klasy w celu zwrócenia określonych wartości HRESULT do niezarządzanych klientów, zgłaszanie określonego wyjątku .NET Framework jest lepszym rozwiązaniem niż użycie wyjątku generycznego. Należy wziąć pod uwagę, że zarządzani klienci oraz niezarządzani klienci mogą używać obiektu .NET Framework, a wynik HRESULT do zarządzanego obiektu wywołującego jest mniej zrozumiały niż zgłaszanie wyjątku.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.COMException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.COMException" /> klasy z wartościami domyślnymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.InteropServices.COMException>dziedziczy z <xref:System.Runtime.InteropServices.ExternalException>. W poniższej tabeli pokazano, jak ten konstruktor ustawia właściwości <xref:System.Exception> obiektu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.Exception.Message%2A>|Zlokalizowany ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat, który wskazuje przyczynę wyjątku.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.COMException" /> klasy z określonym komunikatem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.InteropServices.COMException>dziedziczy z <xref:System.Runtime.InteropServices.ExternalException>. W poniższej tabeli pokazano, jak ten konstruktor ustawia właściwości <xref:System.Exception> obiektu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; COMException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt, który przechowuje serializowane dane obiektu.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Obiekt, który dostarcza informacje kontekstowe o źródle lub miejscu docelowym.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.COMException" /> klasy z danych serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana podczas deserializacji do odtworzenia obiektu wyjątku przesyłanego za pomocą strumienia. Aby uzyskać więcej informacji, zobacz [XML oraz serializacji protokołu SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 <xref:System.Runtime.InteropServices.COMException>dziedziczy z <xref:System.Runtime.InteropServices.ExternalException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="info" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Runtime.InteropServices.ExternalException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * Exception -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="inner">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli parametr nie <see langword="null" />jest, bieżący <see langword="catch" /> wyjątek jest wywoływany w bloku, który obsługuje wyjątek wewnętrzny. <paramref name="inner" /></param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.COMException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. Właściwość zwraca tę samą wartość, która jest przenoszona do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwość nie poda wewnętrznej wartości wyjątku do konstruktora. <xref:System.Exception.InnerException%2A>  
  
 W poniższej tabeli pokazano, jak ten konstruktor ustawia właściwości <xref:System.Exception> obiektu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Odwołanie do wewnętrznego wyjątku.|  
|<xref:System.Exception.Message%2A>|Ciąg komunikatu o błędzie.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Obsługa i zgłaszanie wyjątków na platformie .NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * int -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat wskazujący powód wystąpienia wyjątku.</param>
        <param name="errorCode">Wartość kod błędu (HRESULT) skojarzona z tym wyjątkiem.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Runtime.InteropServices.COMException" /> klasy z określonym komunikatem i kodem błędu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten <xref:System.Runtime.InteropServices.COMException> Konstruktor ustawia podstawowy komunikat z kodem błędu.  
  
 <xref:System.Runtime.InteropServices.COMException>dziedziczy z <xref:System.Runtime.InteropServices.ExternalException>. W poniższej tabeli pokazano, jak ten konstruktor ustawia właściwości <xref:System.Exception> obiektu.  
  
|Właściwość|Wartość|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cOMException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konwertuje zawartość wyjątku na ciąg.</summary>
        <returns>Ciąg zawierający <see cref="P:System.Exception.HResult" />właściwości, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" />i <see cref="P:System.Exception.StackTrace" /> wyjątku.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.HResult" />
        <altmember cref="P:System.Exception.Message" />
        <altmember cref="P:System.Exception.InnerException" />
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
  </Members>
</Type>
