<Type Name="StructLayoutAttribute" FullName="System.Runtime.InteropServices.StructLayoutAttribute">
  <TypeSignature Language="C#" Value="public sealed class StructLayoutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StructLayoutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.StructLayoutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StructLayoutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructLayoutAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1499-101">Umożliwia sterowanie fizyczny układ pól danych klasy lub struktury w pamięci.</span><span class="sxs-lookup"><span data-stu-id="e1499-101">Lets you control the physical layout of the data fields of a class or structure in memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-102">Ten atrybut można stosować do klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-102">You can apply this attribute to classes or structures.</span></span>  
  
 <span data-ttu-id="e1499-103">Środowisko uruchomieniowe języka wspólnego określa fizyczny układ pól danych klasy lub struktury w pamięci zarządzanej.</span><span class="sxs-lookup"><span data-stu-id="e1499-103">The common language runtime controls the physical layout of the data fields of a class or structure in managed memory.</span></span> <span data-ttu-id="e1499-104">Jednak jeśli chcesz przekazać typ do kodu niezarządzanego, można użyć <xref:System.Runtime.InteropServices.StructLayoutAttribute> atrybut do sterowania układem niezarządzanego typu.</span><span class="sxs-lookup"><span data-stu-id="e1499-104">However, if you want to pass the type to unmanaged code, you can use the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to control the unmanaged layout of the type.</span></span> <span data-ttu-id="e1499-105">Użyj atrybutu z <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> wymusić członkowie mają być określone sekwencyjnie w kolejności ich występowania.</span><span class="sxs-lookup"><span data-stu-id="e1499-105">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="e1499-106"><xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> Steruje zarówno układu w pamięci zarządzanej i układu w pamięci niezarządzanej.</span><span class="sxs-lookup"><span data-stu-id="e1499-106">For , <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> controls both the layout in managed memory and the layout in unmanaged memory.</span></span> <span data-ttu-id="e1499-107">Dla typów niekopiowalne kontroluje układ klasy lub struktury jest przekazywane do kodu niezarządzanego, ale nie kontroluje układ w pamięci zarządzanej.</span><span class="sxs-lookup"><span data-stu-id="e1499-107">For non-blittable types, it controls the layout when the class or structure is marshaled to unmanaged code, but does not control the layout in managed memory.</span></span> <span data-ttu-id="e1499-108">Użyj atrybutu z <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> do kontrolowania dokładności dla każdego elementu członkowskiego danych.</span><span class="sxs-lookup"><span data-stu-id="e1499-108">Use the attribute with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> to control the precise position of each data member.</span></span> <span data-ttu-id="e1499-109">Ma to wpływ na układ zarządzane i niezarządzane, dla typów zarówno kopiowalne i niekopiowalne.</span><span class="sxs-lookup"><span data-stu-id="e1499-109">This affects both managed and unmanaged layout, for both blittable and non-blittable types.</span></span> <span data-ttu-id="e1499-110">Przy użyciu <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> wymaga użycia <xref:System.Runtime.InteropServices.FieldOffsetAttribute> atrybutu, aby wskazać położenie każdego pola w ramach typu.</span><span class="sxs-lookup"><span data-stu-id="e1499-110">Using <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> requires that you use the <xref:System.Runtime.InteropServices.FieldOffsetAttribute> attribute to indicate the position of each field within the type.</span></span>  
  
 <span data-ttu-id="e1499-111">Kompilatory języka C#, Visual Basic i C++ zastosować <xref:System.Runtime.InteropServices.LayoutKind.Sequential> wartość układu struktur domyślnie.</span><span class="sxs-lookup"><span data-stu-id="e1499-111">C#, Visual Basic, and C++ compilers apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential> layout value to structures by default.</span></span> <span data-ttu-id="e1499-112">Dla klas, należy najpierw zastosować <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> jawnie wartości.</span><span class="sxs-lookup"><span data-stu-id="e1499-112">For classes, you must apply the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value explicitly.</span></span> <span data-ttu-id="e1499-113">[Tlbimp.exe (Importer biblioteki typów)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) ma również zastosowanie <xref:System.Runtime.InteropServices.StructLayoutAttribute> atrybutu; dotyczy zawsze <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> wartości podczas importowania biblioteki typów.</span><span class="sxs-lookup"><span data-stu-id="e1499-113">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute; it always applies the <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> value when it imports a type library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1499-114">W poniższym przykładzie pokazano zarządzanych deklarację `GetSystemTime` funkcji i definiuje `MySystemTime` klasy z <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> układu.</span><span class="sxs-lookup"><span data-stu-id="e1499-114">The following example demonstrates a managed declaration of the `GetSystemTime` function and defines `MySystemTime` class with <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> layout.</span></span> <span data-ttu-id="e1499-115">`GetSystemTime` pobiera czas systemowy i drukowanie do konsoli.</span><span class="sxs-lookup"><span data-stu-id="e1499-115">`GetSystemTime` gets the system time and prints to the console.</span></span>  
  
 [!code-cpp[StructLayoutAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/StructLayoutAttribute/CPP/structlayoutattribute.cpp#1)]
 [!code-csharp[StructLayoutAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/StructLayoutAttribute/CS/structlayoutattribute.cs#1)]
 [!code-vb[StructLayoutAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StructLayoutAttribute/VB/structlayoutattribute.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1499-116">Initalizes nowe wystąpienie elementu <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1499-116">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (short layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (layoutKind As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(short layoutKind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="e1499-117">16-bitową liczbę całkowitą, który reprezentuje jeden z <see cref="T:System.Runtime.InteropServices.LayoutKind" /> wartości tego Określa, jak powinny być rozmieszczane klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-117">A 16-bit integer that represents one of the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> values that specifes how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="e1499-118">Initalizes nowe wystąpienie elementu <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> klasy z określonym <see cref="T:System.Runtime.InteropServices.LayoutKind" /> element członkowski wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e1499-118">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-119">Ten konstruktor ma podstawowej 16-bitową liczbę całkowitą reprezentującą każdego <xref:System.Runtime.InteropServices.LayoutKind> element członkowski wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e1499-119">This constructor takes an underlying 16-bit integer that represents each <xref:System.Runtime.InteropServices.LayoutKind> enumeration member.</span></span> <span data-ttu-id="e1499-120">[Tlbimp.exe (Importer biblioteki typów)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) używa tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e1499-120">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StructLayoutAttribute (System.Runtime.InteropServices.LayoutKind layoutKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.LayoutKind layoutKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StructLayoutAttribute(System::Runtime::InteropServices::LayoutKind layoutKind);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="layoutKind" Type="System.Runtime.InteropServices.LayoutKind" />
      </Parameters>
      <Docs>
        <param name="layoutKind"><span data-ttu-id="e1499-121">Jedną z wyliczenia wartości tego Określa, jak powinny być rozmieszczane klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-121">One of the enumeration values that specifes how the class or structure should be arranged.</span></span></param>
        <summary><span data-ttu-id="e1499-122">Initalizes nowe wystąpienie elementu <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> klasy z określonym <see cref="T:System.Runtime.InteropServices.LayoutKind" /> element członkowski wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="e1499-122">Initalizes a new instance of the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> class with the specified <see cref="T:System.Runtime.InteropServices.LayoutKind" /> enumeration member.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-123">Czytelny kod jest mniej podatne na błędy należy zawsze używać tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e1499-123">For readable code that is less prone to error, always use this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.LayoutKind" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.CharSet CharSet;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Runtime.InteropServices.CharSet CharSet" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public CharSet As CharSet " />
      <MemberSignature Language="C++ CLI" Value="public: System::Runtime::InteropServices::CharSet CharSet;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1499-124">Wskazuje, czy ciąg pola danych w ramach klasy powinny zostać zorganizowany jako <see langword="LPWSTR" /> lub <see langword="LPSTR" /> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="e1499-124">Indicates whether string data fields within the class should be marshaled as <see langword="LPWSTR" /> or <see langword="LPSTR" /> by default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-125">Jeśli `CharSet` pole jest ustawione na <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>, wszystkie argumenty typu string są konwertowane na znaki Unicode (`LPWSTR`) przed są one przekazywane do niezarządzanego implementacji.</span><span class="sxs-lookup"><span data-stu-id="e1499-125">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType>, all string arguments are converted to Unicode characters (`LPWSTR`) before they are passed to the unmanaged implementation.</span></span> <span data-ttu-id="e1499-126">Jeśli pole jest ustawione na <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, ciągi są konwertowane na ciągów ANSI (`LPSTR`).</span><span class="sxs-lookup"><span data-stu-id="e1499-126">If the field is set to <xref:System.Runtime.InteropServices.CharSet.Ansi?displayProperty=nameWithType>, the strings are converted to ANSI strings (`LPSTR`).</span></span> <span data-ttu-id="e1499-127">Jeśli `CharSet` pole jest ustawione na <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType>, konwersja jest zależny od platformy (ANSI Windows 98 i Windows Me i Unicode w nowszych wersjach).</span><span class="sxs-lookup"><span data-stu-id="e1499-127">If the `CharSet` field is set to <xref:System.Runtime.InteropServices.CharSet.Auto?displayProperty=nameWithType>, the conversion is platform-dependent (ANSI on Windows 98 and Windows Me, and Unicode on later versions).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public int Pack;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Pack" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />
      <MemberSignature Language="VB.NET" Value="Public Pack As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Pack;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1499-128">Określa wyrównanie pola danych klasy lub struktury w pamięci.</span><span class="sxs-lookup"><span data-stu-id="e1499-128">Controls the alignment of data fields of a class or structure in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-129"><xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> Pole określa wyrównanie pola typu w pamięci.</span><span class="sxs-lookup"><span data-stu-id="e1499-129">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field controls the alignment of a type's fields in memory.</span></span>  <span data-ttu-id="e1499-130">Ma to wpływ na obu <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> i <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e1499-130">It affects both <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e1499-131">Domyślnie wartość to 0, co oznacza domyślny rozmiar dla bieżącej platformy pakowania.</span><span class="sxs-lookup"><span data-stu-id="e1499-131">By default, the value is 0, indicating the default packing size for the current platform.</span></span> <span data-ttu-id="e1499-132">Wartość <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> musi być 0, 1, 2, 4, 8, 16, 32, 64 lub 128:</span><span class="sxs-lookup"><span data-stu-id="e1499-132">The value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> must be 0, 1, 2, 4, 8, 16, 32, 64, or 128:</span></span>  
  
 <span data-ttu-id="e1499-133">Pola wystąpienia typu są wyrównane za pomocą następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="e1499-133">The fields of a type instance are aligned by using the following rules:</span></span>  
  
-   <span data-ttu-id="e1499-134">Wyrównanie typu jest większy niż jego największy element (1, 2, 4, 8, itd., bajtów) lub pakowania określony rozmiar, w zależności od jest mniejszy.</span><span class="sxs-lookup"><span data-stu-id="e1499-134">The alignment of the type is the size of its largest element (1, 2, 4, 8, etc., bytes) or the specified packing size, whichever is smaller.</span></span>  
  
-   <span data-ttu-id="e1499-135">Każdego pola muszą być wyrównane z polami własny rozmiar (1, 2, 4, 8, itd., bajtów) lub wyrównaniem tekstu, zależności jest mniejsza.</span><span class="sxs-lookup"><span data-stu-id="e1499-135">Each field must align with fields of its own size (1, 2, 4, 8, etc., bytes) or the alignment of the type, whichever is smaller.</span></span>  <span data-ttu-id="e1499-136">Ponieważ domyślne wyrównanie typu jest rozmiarem największy element, który jest większa niż lub równa długości wszystkich innych pól, to zwykle oznacza to, że pola są wyrównane według ich rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="e1499-136">Because the default alignment of the type is the size of its largest element, which is greater than or equal to all other field lengths, this usually means that fields are aligned by their size.</span></span> <span data-ttu-id="e1499-137">Na przykład, nawet jeśli pole największy w typie jest 64-bitowa liczba całkowita (8-bajtowych) lub z dodatkiem Service Pack pola jest równa 8, <xref:System.Byte> pól Dopasuj przy 1-bajtowych granicach <xref:System.Int16> pól Dopasuj przy 2-bajtowych granicach i <xref:System.Int32> pola Dopasuj przy 4-bajtowych granicach.</span><span class="sxs-lookup"><span data-stu-id="e1499-137">For example, even if the largest field in a type is a 64-bit (8-byte) integer or the Pack field is set to 8, <xref:System.Byte> fields align on 1-byte boundaries, <xref:System.Int16> fields align on 2-byte boundaries, and <xref:System.Int32> fields align on 4-byte boundaries.</span></span>  
  
-   <span data-ttu-id="e1499-138">Dopełnienie dodawany jest odstęp pola, aby spełnić wymagania dotyczące wyrównywania.</span><span class="sxs-lookup"><span data-stu-id="e1499-138">Padding is added between fields to satisfy the alignment requirements.</span></span>  
  
 <span data-ttu-id="e1499-139">Na przykład, należy wziąć pod uwagę następujące struktury, która składa się z dwóch <xref:System.Byte> pól i jeden <xref:System.Int32> pola, gdy jest używany z różnych wartości <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> pola.</span><span class="sxs-lookup"><span data-stu-id="e1499-139">For example, consider the following structure, which consists of two <xref:System.Byte> fields and one <xref:System.Int32> field, when it is used with various values for the <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex0.cs#1)]  
  
> [!IMPORTANT]
>  <span data-ttu-id="e1499-140">Aby pomyślnie skompilować przykłady C#, należy określić `/unsafe` przełącznika kompilatora.</span><span class="sxs-lookup"><span data-stu-id="e1499-140">To successfully compile the C# examples, you must specify the `/unsafe` compiler switch.</span></span>  
  
 <span data-ttu-id="e1499-141">Jeśli określisz domyślny rozmiar pakowania, rozmiar struktury jest 8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="e1499-141">If you specify the default packing size, the size of the structure is 8 bytes.</span></span> <span data-ttu-id="e1499-142">Dwa bajty zajmują pierwsze dwa bajty pamięci, ponieważ bajtów muszą być wyrównane na granicach jednobajtowe.</span><span class="sxs-lookup"><span data-stu-id="e1499-142">The two bytes occupy the first two bytes of memory, because bytes must align on one-byte boundaries.</span></span> <span data-ttu-id="e1499-143">Ponieważ domyślne wyrównanie typu wynosi 4 bajty, który jest większy niż największy pól, `i3`, istnieją dwa bajty uzupełnienia, a następnie w polu Liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="e1499-143">Because the default alignment of the type is 4 bytes, which is the size of its largest fields, `i3`, there are two bytes of padding followed by the integer field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex1.cs#2)]  
  
 <span data-ttu-id="e1499-144">Jeśli <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> jest ustawiona na 2, rozmiar struktury jest 6 bajtów.</span><span class="sxs-lookup"><span data-stu-id="e1499-144">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 6 bytes.</span></span> <span data-ttu-id="e1499-145">Jako przed, dwa bajty zajmują pierwsze dwa bajty pamięci.</span><span class="sxs-lookup"><span data-stu-id="e1499-145">As before, the two bytes occupy the first two bytes of memory.</span></span> <span data-ttu-id="e1499-146">Pola teraz były wyrównane na granicach 2-bajtowych, nie istnieje żadne uzupełnienie między drugi bajt i liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="e1499-146">Because fields now align on 2-byte boundaries, there is no padding between the second byte and the integer.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex2.cs#3)]  
  
 <span data-ttu-id="e1499-147">Jeśli <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> ma wartość 4, rozmiar struktury jest taka sama, jak w przypadku domyślnej, gdzie wyrównanie typ został zdefiniowany przez rozmiar jego największy pola, `i3`, która jest 4.</span><span class="sxs-lookup"><span data-stu-id="e1499-147">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 4, the size of the structure is the same as in the default case, where the type's alignment was defined by the size of its largest field, `i3`, which is 4.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex3.cs#4)]  
  
 <span data-ttu-id="e1499-148">Jeśli <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> jest ustawiony na 8, rozmiar struktury jest nadal takie same jak domyślne wielkość liter, ponieważ `i3` Wyrównuje pola w granicach 4-bajtowych, która jest mniejsza niż 8-bajtowe granice określony przez pole pakietu.</span><span class="sxs-lookup"><span data-stu-id="e1499-148">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the still same as in the default case, because the `i3` field aligns on a 4-byte boundary, which is smaller than the 8-byte boundary specified by the Pack field.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex4.cs#5)]  
  
 <span data-ttu-id="e1499-149">Aby w kolejnym przykładzie, należy wziąć pod uwagę następujące struktury, która składa się z pola dwubajtowo, jedną 32-bitowej liczby całkowitej ze znakiem pola, co tablica bajtów pojedynczego elementu i wartości dziesiętnej.</span><span class="sxs-lookup"><span data-stu-id="e1499-149">To take another example, consider the following structure, which consists of two byte fields, one 32-bit signed integer field, one single-element byte array, and a decimal value.</span></span> <span data-ttu-id="e1499-150">Przy użyciu domyślnego rozmiar pakowania rozmiar struktury jest 28 bajtów.</span><span class="sxs-lookup"><span data-stu-id="e1499-150">With the default packing size, the size of the structure is 28 bytes.</span></span> <span data-ttu-id="e1499-151">Dwa bajty zajmują pierwsze dwa bajty pamięci, następuje dwa bajty uzupełnienia, a następnie do liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="e1499-151">The two bytes occupy the first two bytes of memory, followed by two bytes of padding, followed by the integer.</span></span> <span data-ttu-id="e1499-152">Następnie jest tablicy jednobajtowych następują trzy bajty uzupełnienia.</span><span class="sxs-lookup"><span data-stu-id="e1499-152">Next is the one-byte array, followed by three bytes of padding.</span></span> <span data-ttu-id="e1499-153">Na koniec <xref:System.Decimal> pola, d5, wyrównuje w granicach 4-bajtowych, ponieważ wartość dziesiętną składa się z czterech <xref:System.Int32> pola, więc jego wyrównania jest zależnie od rozmiaru największej swoich pól, a nie na rozmiar <xref:System.Decimal> struktury jako całość.</span><span class="sxs-lookup"><span data-stu-id="e1499-153">Finally, the <xref:System.Decimal> field, d5, aligns on a 4-byte boundary because a decimal value consists of four <xref:System.Int32> fields, so its alignment is based on the size of the largest of its fields rather than on the size of the <xref:System.Decimal> structure as a whole.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex5.cs#6)]  
  
 <span data-ttu-id="e1499-154">Jeśli <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> jest ustawiona na 2, rozmiar struktury jest 24 bajty.</span><span class="sxs-lookup"><span data-stu-id="e1499-154">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 2, the size of the structure is 24 bytes.</span></span> <span data-ttu-id="e1499-155">Porównaniu domyślne wyrównanie dwa bajty uzupełnienie między dwa bajty i całkowitej zostały usunięte, ponieważ typ wyrównania jest teraz 4 niż 2.</span><span class="sxs-lookup"><span data-stu-id="e1499-155">In comparison with the default alignment, the two bytes of padding between the two bytes and the integer have been removed because the type's alignment is now 4 rather than 2.</span></span> <span data-ttu-id="e1499-156">Oraz trzy bajtów uzupełnienia po `a4` zostały zastąpione przez jednego bajtu uzupełnienia, ponieważ `d5` teraz wyrównuje 2-bajtowe granice zamiast granicy 4-bajtowych.</span><span class="sxs-lookup"><span data-stu-id="e1499-156">And the three bytes of padding after `a4` have been replaced by one byte of padding, since `d5` now aligns on a 2-byte boundary rather than a 4-byte boundary.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex6.cs#7)]  
  
 <span data-ttu-id="e1499-157">Jeśli <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> jest ustawiony na 8, rozmiar struktury jest takie same jak w przypadku domyślnej, ponieważ wszystkie wymagania wyrównania struktury są mniej niż 8.</span><span class="sxs-lookup"><span data-stu-id="e1499-157">If <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is set to 8, the size of the structure is the same as in the default case, because all the alignment requirements in this structure are less than 8.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.StructLayoutAttribute.Pack#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.structlayoutattribute.pack/cs/packex7.cs#8)]  
  
 <span data-ttu-id="e1499-158"><xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> Pole jest często używane podczas operacji zapisu w sieci i struktury są eksportowane podczas dysku.</span><span class="sxs-lookup"><span data-stu-id="e1499-158">The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> field is frequently used when structures are exported during disk and network write operations.</span></span> <span data-ttu-id="e1499-159">To pole jest również często używane podczas platformy wywołania i działania interop.</span><span class="sxs-lookup"><span data-stu-id="e1499-159">The field is also frequently used during platform invoke and interop operations.</span></span>  
  
 <span data-ttu-id="e1499-160">Czasami pole umożliwia Zmniejsz wymagania dotyczące pamięci, przedstawiając większego rozmiaru pakowania.</span><span class="sxs-lookup"><span data-stu-id="e1499-160">Occasionally, the field is used to reduce memory requirements by producing a tighter packing size.</span></span> <span data-ttu-id="e1499-161">Jednak to użycie wymaga zaplanowania dokładne ograniczeń sprzętem i faktycznie może obniżyć wydajność.</span><span class="sxs-lookup"><span data-stu-id="e1499-161">However, this usage requires careful consideration of actual hardware constraints, and may actually degrade performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Size" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.StructLayoutAttribute.Size" />
      <MemberSignature Language="VB.NET" Value="Public Size As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int Size;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1499-162">Wskazuje rozmiar bezwzględny klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-162">Indicates the absolute size of the class or structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1499-163">To pole musi być większa lub równa całkowity rozmiar w bajtach elementów członkowskich klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-163">This field must be equal or greater than the total size, in bytes, of the members of the class or structure.</span></span> <span data-ttu-id="e1499-164">To pole jest przeznaczone głównie dla autorów kompilatora, którzy chcą rozszerzyć pamięci zajmowane przez strukturę dostępu bezpośredniego, niezarządzany.</span><span class="sxs-lookup"><span data-stu-id="e1499-164">This field is primarily for compiler writers who want to extend the memory occupied by a structure for direct, unmanaged access.</span></span> <span data-ttu-id="e1499-165">Na przykład można użyć tego pola, podczas pracy z Unii, które nie znajdują się w metadanych bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="e1499-165">For example, you can use this field when working with unions that are not represented in metadata directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.LayoutKind Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.LayoutKind Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.StructLayoutAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As LayoutKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::LayoutKind Value { System::Runtime::InteropServices::LayoutKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.LayoutKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1499-166">Pobiera <see cref="T:System.Runtime.InteropServices.LayoutKind" /> wartość, która określa sposób rozmieszczenia klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-166">Gets the <see cref="T:System.Runtime.InteropServices.LayoutKind" /> value that specifies how the class or structure is arranged.</span></span></summary>
        <value><span data-ttu-id="e1499-167">Jedna z wartości wyliczenia, które określa sposób rozmieszczenia klasy lub struktury.</span><span class="sxs-lookup"><span data-stu-id="e1499-167">One of the enumeration values that specifies how the class or structure is arranged.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>