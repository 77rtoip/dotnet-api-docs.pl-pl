<Type Name="ComAwareEventInfo" FullName="System.Runtime.InteropServices.ComAwareEventInfo">
  <TypeSignature Language="C#" Value="public class ComAwareEventInfo : System.Reflection.EventInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComAwareEventInfo extends System.Reflection.EventInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComAwareEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComAwareEventInfo&#xA;Inherits EventInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComAwareEventInfo : System::Reflection::EventInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.EventInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f9ab8-101">Rejestracja późnym wiązaniem zezwala program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-101">Permits late-bound registration of an event handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-102">Zwykle kompilatorów automatycznie osadzić wywołań <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> i <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> metody zamiast regular programu obsługi dodawania i usuwania metod obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-102">Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods instead of using regular add handler and remove handler methods for events.</span></span> <span data-ttu-id="f9ab8-103">Dzieje się tak, jeśli interfejs, że odpowiednie zdarzenie jest zdefiniowana na potrzeby do osadzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-103">This occurs if the interface that the corresponding event is defined on needs to be embedded.</span></span>  
  
 <span data-ttu-id="f9ab8-104">Można to określić osadzanie całego zestawu, który zawiera interfejsu za pomocą **/link** opcji kompilatory lub przez ustawienie **Osadź typy międzyoperacyjne** właściwości `True` w języku Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-104">You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.</span></span>  
  
 <span data-ttu-id="f9ab8-105"><xref:System.Runtime.InteropServices.ComAwareEventInfo> Typ pochodzi z <xref:System.Reflection.EventInfo> klasy i zastąpień <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> i <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-105">The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComAwareEventInfo (Type type, string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComAwareEventInfo(Type ^ type, System::String ^ eventName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f9ab8-106">Typ obiektu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-106">The type of object.</span></span></param>
        <param name="eventName"><span data-ttu-id="f9ab8-107">Nazwa zdarzenia <c>typu</c>.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-107">The name of an event on <c>type</c>.</span></span></param>
        <summary><span data-ttu-id="f9ab8-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> przy użyciu określonego typu i nazwę zdarzenia w typie.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-108">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> class by using the specified type and a name of the event on the type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public override void AddEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f9ab8-109">Obiekt docelowy, który należy powiązać delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-109">The target object that the event delegate should bind to.</span></span></param>
        <param name="handler"><span data-ttu-id="f9ab8-110">Delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-110">The event delegate.</span></span></param>
        <summary><span data-ttu-id="f9ab8-111">Dołącza program obsługi zdarzeń do obiektu COM.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-111">Attaches an event handler to a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-112">Ta metoda jest podobna do <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> metody, ale umożliwia dołączanie do obiektów COM zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-112">This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method except that it allows you to attach events to COM objects.</span></span>  
  
 <span data-ttu-id="f9ab8-113">Jeśli `target` COM jest obiekt, ta metoda dodaje delegata zdarzenia za pomocą <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-113">If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9ab8-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> Obsługa rejestracji ujścia zdarzeń COM, które przekazywania wywołania do odpowiedniego zarządzanego delegatów.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="f9ab8-115">Wymaga ona następujące informacje:</span><span class="sxs-lookup"><span data-stu-id="f9ab8-115">It requires the following information:</span></span>  
  
-   <span data-ttu-id="f9ab8-116">Samego obiektu docelowego (`target`).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-116">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="f9ab8-117">Identyfikator GUID interfejsu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-117">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="f9ab8-118">Identyfikator DispID metoda w interfejsie COM, który odpowiada określonym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-118">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="f9ab8-119">Delegat, które będą wywoływane, gdy obiekt COM wyzwala odpowiednie zdarzenie (`handler`).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-119">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="f9ab8-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> Wyszukuje odpowiedniego interfejsu źródłowego modelu COM (określony jako pierwszy parametr <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="f9ab8-121">Następnie wyszukuje metoda w interfejsie źródła, którego nazwa jest taka sama jak nazwa zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-121">It then looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="f9ab8-122">Wartość `GuidAttribute` w źródle interfejs jest identyfikatorem GUID, który jest przekazywany do <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; wartość `DispIDAttribute` metody jest wartość Identyfikator DispID, która została przekazana do <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-122">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f9ab8-123">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-123">for operating with unmanaged code.</span></span> <span data-ttu-id="f9ab8-124">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.EventAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As EventAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::EventAttributes Attributes { System::Reflection::EventAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9ab8-125">Pobiera atrybuty dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-125">Gets the attributes for this event.</span></span></summary>
        <value><span data-ttu-id="f9ab8-126">Atrybut tylko do odczytu dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-126">The read-only attributes for this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-127">Atrybuty są zwracane w 4-bajtowych liczb całkowitych, na który reprezentuje mapę bitową atrybutów, ustaw dla zdarzenia, które są uwzględniane przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-127">The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9ab8-128">Pobiera klasę, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-128">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="f9ab8-129"><see cref="T:System.Type" /> Obiektu klasy, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-129">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.DeclaringType" />
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetAddMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetAddMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAddMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetAddMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="f9ab8-130"><see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-130"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-131">Pobiera metody użytej do dodania do delegata obsługi zdarzeń do źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-131">Gets the method that was used to add an event handler delegate to the event source.</span></span></summary>
        <returns><span data-ttu-id="f9ab8-132">Źródło zdarzenia delegować metody użytej do Dodaj program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-132">The method that was used to add an event handler delegate to the event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-133">Ta metoda wywołuje <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-133">This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="f9ab8-134"><paramref name="nonPublic" /> jest <see langword="true" /> metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń jest niepubliczne, ale obiekt wywołujący nie ma uprawnień do uwzględnienia w metodach niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-134"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9ab8-135">Po przesłonięciu w klasie pochodnej zwraca wszystkie atrybuty, które są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-135">When overridden in a derived class, returns all attributes that are applied to this member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="f9ab8-136"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-136"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-137">W przypadku przesłonięcia w klasie pochodnej pobiera tablicę, która zawiera wszystkie atrybuty niestandardowe, które są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-137">When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="f9ab8-138">Tablica zawierająca wszystkie atrybuty niestandardowe lub tablicę, która nie ma elementów, jeśli nie zdefiniowano żadnych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-138">An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-139">Ta metoda wywołuje <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metody podstawowych <xref:System.Reflection.EventInfo> obiektu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-139">This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9ab8-140">Ten element członkowski należy do typu, który jest ładowany do kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-140">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="f9ab8-141">Zobacz [porady: ładowanie zestawów do kontekstu Reflection-Only](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-141">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="f9ab8-142">Nie można załadować typu niestandardowego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-142">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="f9ab8-143">Typ atrybutu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-143">The attribute type to search for.</span></span> <span data-ttu-id="f9ab8-144">Tylko atrybuty, które są przypisane do tego typu może być zwracany.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-144">Only attributes that are assignable to this type can be returned.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="f9ab8-145"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-145"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-146">W przypadku przesłonięcia w klasie pochodnej pobiera tablicę, która zawiera wszystkie atrybuty niestandardowe określonego typu, które są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-146">When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="f9ab8-147">Tablica zawierająca wszystkie atrybuty niestandardowe określonego typu lub tablicy nie ma elementów, jeśli nie zdefiniowano żadnych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-147">An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9ab8-148"><paramref name="attributeType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-148"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9ab8-149">Ten element członkowski należy do typu, który jest ładowany do kontekstu reflection-only.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-149">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="f9ab8-150">Zobacz [porady: ładowanie zestawów do kontekstu Reflection-Only](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span><span class="sxs-lookup"><span data-stu-id="f9ab8-150">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="f9ab8-151">Nie można załadować typu niestandardowego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-151">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRaiseMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRaiseMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="f9ab8-152"><see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-152"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-153">W przypadku przesłonięcia w klasie pochodnej zwraca metodę, która została wywołana podczas zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-153">When overridden in a derived class, returns the method that was called when the event was raised.</span></span></summary>
        <returns><span data-ttu-id="f9ab8-154">Obiekt, który został wywołany po zdarzeniu został zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-154">The object that was called when the event was raised.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-155">Ta metoda zwraca `null` dla zdarzeń, które są zadeklarowane w języku C# `event` — słowo kluczowe lub Visual Basic `Event` — słowo kluczowe.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-155">This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword.</span></span> <span data-ttu-id="f9ab8-156">Jest to spowodowane Kompilatory języka C# i Visual Basic nie generują taka metoda.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-156">This is because the C# and Visual Basic compilers do not generate such a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="f9ab8-157"><paramref name="nonPublic" /> jest <see langword="true" /> metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń jest niepubliczne, ale obiekt wywołujący nie ma uprawnień do uwzględnienia w metodach niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-157"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f9ab8-158">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-158">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f9ab8-159">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="f9ab8-159">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRemoveMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRemoveMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="f9ab8-160"><see langword="true" /> Aby przywrócić metody niepublicznej; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-160"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-161">W przypadku przesłonięcia w klasie pochodnej pobiera <see cref="T:System.Reflection.MethodInfo" /> obiektu do usunięcia metody zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-161">When overridden in a derived class, retrieves the <see cref="T:System.Reflection.MethodInfo" /> object for removing a method of the event.</span></span></summary>
        <returns><span data-ttu-id="f9ab8-162">Delegować metody użytej w taki sposób, aby usunąć program obsługi zdarzeń w źródle zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-162">The method that was used to remove an event handler delegate from the event source.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="f9ab8-163"><paramref name="nonPublic" /> jest <see langword="true" /> metodę używaną do dodawania obiektu delegowanego obsługi zdarzeń jest niepubliczne, ale obiekt wywołujący nie ma uprawnień do uwzględnienia w metodach niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-163"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f9ab8-164">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-164">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f9ab8-165">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="f9ab8-165">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="f9ab8-166">Typ atrybutu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-166">The attribute type to search for.</span></span></param>
        <param name="inherit">
          <span data-ttu-id="f9ab8-167"><see langword="true" /> Aby przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-167"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f9ab8-168">Wskazuje, czy co najmniej jedno wystąpienie określonego atrybutu są stosowane do tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-168">Indicates whether one or more instances of the specified attribute are applied to this member.</span></span></summary>
        <returns>
          <span data-ttu-id="f9ab8-169"><see langword="true" /> Jeśli określony atrybut został zastosowany do tego elementu członkowskiego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-169"><see langword="true" /> if the specified attribute has been applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="f9ab8-170">Po wywołaniu późnym wiązaniem za pomocą mechanizmów takich jak <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-170">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="f9ab8-171">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="f9ab8-171">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Delegate" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9ab8-172">Pobiera nazwę bieżącego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-172">Gets the name of the current member.</span></span></summary>
        <value><span data-ttu-id="f9ab8-173">Nazwa tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-173">The name of this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9ab8-174">Pobiera obiekt klasy, który został użyty do zainicjowania tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-174">Gets the class object that was used to initialize this instance.</span></span></summary>
        <value><span data-ttu-id="f9ab8-175"><see cref="T:System.Type" /> Obiekt, który został użyty do zainicjowania bieżącego obiektu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-175">The <see cref="T:System.Type" /> object that was used to initialize the current object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public override void RemoveEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f9ab8-176">Obiekt docelowy delegata zdarzenia jest powiązany.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-176">The target object that the event delegate is bound to.</span></span></param>
        <param name="handler"><span data-ttu-id="f9ab8-177">Delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-177">The event delegate.</span></span></param>
        <summary><span data-ttu-id="f9ab8-178">Odłącza program obsługi zdarzeń z obiektu COM.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-178">Detaches an event handler from a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9ab8-179">Ta metoda jest podobna do <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> metody, z wyjątkiem, że umożliwia odłączyć zdarzenia z obiektami COM.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-179">This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method, except that it allows you to detach events from COM objects.</span></span>  
  
 <span data-ttu-id="f9ab8-180">Jeśli `target` COM jest obiekt, ta metoda zwalnia delegata ze zdarzeniem przy użyciu <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-180">If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9ab8-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> ułatwia wyrejestrowywanie ujścia zdarzeń COM, które przekazywania wywołania do odpowiedniego zarządzanego delegatów.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="f9ab8-182">Wymaga ona następujące informacje:</span><span class="sxs-lookup"><span data-stu-id="f9ab8-182">It requires the following information:</span></span>  
  
-   <span data-ttu-id="f9ab8-183">Samego obiektu docelowego (`target`).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-183">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="f9ab8-184">Identyfikator GUID interfejsu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-184">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="f9ab8-185">Identyfikator DispID metoda w interfejsie COM, który odpowiada określonym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-185">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="f9ab8-186">Delegat, które będą wywoływane, gdy obiekt COM wyzwala odpowiednie zdarzenie (`handler`).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-186">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="f9ab8-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> Wyszukuje odpowiedniego interfejsu źródłowego modelu COM (określony jako pierwszy parametr <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="f9ab8-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="f9ab8-188">Go, a następnie pobiera ona metoda w interfejsie źródła, którego nazwa jest taka sama jak nazwa zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-188">It then it looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="f9ab8-189">Wartość `GuidAttribute` w źródle interfejs jest identyfikatorem GUID, który jest przekazywany do <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; wartość `DispIDAttribute` metody jest wartość Identyfikator DispID, która została przekazana do <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-189">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f9ab8-190">Zdarzenie nie ma publicznego <see langword="remove" /> metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-190">The event does not have a public <see langword="remove" /> accessor.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9ab8-191">Nie można użyć programu obsługi, która została przekazana.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-191">The handler that was passed in cannot be used.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="f9ab8-192">W [.NET dla Sklepu Windows apps](http://go.microsoft.com/fwlink/?LinkID=247912) lub [przenośnej biblioteki klas](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <see cref="T:System.Exception" /> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-192">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="f9ab8-193"><paramref name="target" /> Parametr jest <see langword="null" /> i zdarzenie nie jest statyczne.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-193">The <paramref name="target" /> parameter is <see langword="null" /> and the event is not static.</span></span>  
  
 <span data-ttu-id="f9ab8-194">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9ab8-194">-or-</span></span>  
  
 <span data-ttu-id="f9ab8-195"><see cref="T:System.Reflection.EventInfo" /> Nie jest zadeklarowany w elemencie docelowym.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-195">The <see cref="T:System.Reflection.EventInfo" /> is not declared on the target.</span></span></exception>
        <exception cref="T:System.MethodAccessException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="f9ab8-196">W [.NET dla Sklepu Windows apps](http://go.microsoft.com/fwlink/?LinkID=247912) lub [przenośnej biblioteki klas](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch wyjątku klasy podstawowej <see cref="T:System.MemberAccessException" />, zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-196">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="f9ab8-197">Obiekt wywołujący nie ma uprawnień dostępu do elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-197">The caller does not have access permission to the member.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f9ab8-198">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-198">for operating with unmanaged code.</span></span> <span data-ttu-id="f9ab8-199">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="f9ab8-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>