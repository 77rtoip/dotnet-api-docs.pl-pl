<Type Name="UCOMIBindCtx" FullName="System.Runtime.InteropServices.UCOMIBindCtx">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf53eed5718c44e74e31e6c2e3c4a9847a854f35" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36537259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIBindCtx" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIBindCtx" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIBindCtx" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIBindCtx" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIBindCtx" />
  <TypeSignature Language="F#" Value="type UCOMIBindCtx = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0000000e-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zamiast nich należy używać słów kluczowych <see cref="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx` w podfolderze com w bibliotece MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumObjectParam">
      <MemberSignature Language="C#" Value="public void EnumObjectParam (out System.Runtime.InteropServices.UCOMIEnumString ppenum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumObjectParam([out] class System.Runtime.InteropServices.UCOMIEnumString&amp; ppenum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumObjectParam (ByRef ppenum As UCOMIEnumString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumObjectParam([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumString ^ % ppenum);" />
      <MemberSignature Language="F#" Value="abstract member EnumObjectParam :  -&gt; unit" Usage="uCOMIBindCtx.EnumObjectParam ppenum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenum" Type="System.Runtime.InteropServices.UCOMIEnumString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenum">Przy powrocie pomyślne odwołanie do modułu wyliczającego parametr obiektu.</param>
        <summary>Wyliczanie ciągów, które są kluczami tabeli obsługiwany wewnętrznie parametrów kontekstowych obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::EnumObjectParam` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindOptions">
      <MemberSignature Language="C#" Value="public void GetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBindOptions(valuetype System.Runtime.InteropServices.BIND_OPTS&amp; pbindopts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetBindOptions (ByRef pbindopts As BIND_OPTS)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetBindOptions(System::Runtime::InteropServices::BIND_OPTS % pbindopts);" />
      <MemberSignature Language="F#" Value="abstract member GetBindOptions :  -&gt; unit" Usage="uCOMIBindCtx.GetBindOptions pbindopts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbindopts" Type="System.Runtime.InteropServices.BIND_OPTS&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pbindopts">Wskaźnik do struktury do odbierania opcji powiązania.</param>
        <summary>Zwraca bieżące opcje powiązania przechowywane w tym kontekście wiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::GetBindOptions` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectParam">
      <MemberSignature Language="C#" Value="public void GetObjectParam (string pszKey, out object ppunk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectParam(string pszKey, [out] object&amp; ppunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectParam (pszKey As String, ByRef ppunk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectParam(System::String ^ pszKey, [Runtime::InteropServices::Out] System::Object ^ % ppunk);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectParam : string *  -&gt; unit" Usage="uCOMIBindCtx.GetObjectParam (pszKey, ppunk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
        <Parameter Name="ppunk" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pszKey">Nazwa obiektu do wyszukania.</param>
        <param name="ppunk">Przy powrocie pomyślne wskaźnika interfejsu obiektu.</param>
        <summary>Wyszukiwanie danego klucza w tabeli obsługiwany wewnętrznie parametrów kontekstowych obiektu i przywrócenie odpowiedni obiekt, jeśli taka istnieje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::GetObjectParam` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunningObjectTable">
      <MemberSignature Language="C#" Value="public void GetRunningObjectTable (out System.Runtime.InteropServices.UCOMIRunningObjectTable pprot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRunningObjectTable([out] class System.Runtime.InteropServices.UCOMIRunningObjectTable&amp; pprot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRunningObjectTable (ByRef pprot As UCOMIRunningObjectTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRunningObjectTable([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIRunningObjectTable ^ % pprot);" />
      <MemberSignature Language="F#" Value="abstract member GetRunningObjectTable :  -&gt; unit" Usage="uCOMIBindCtx.GetRunningObjectTable pprot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pprot" Type="System.Runtime.InteropServices.UCOMIRunningObjectTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pprot">Przy powrocie pomyślne odwołanie do zaprojektowana.</param>
        <summary>Zwróć dostępu do tabeli z obiektu (zaprojektowana) dotyczy ten proces wiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::GetRunningObjectTable` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObjectBound">
      <MemberSignature Language="C#" Value="public void RegisterObjectBound (object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObjectBound(object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObjectBound (punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObjectBound(System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObjectBound : obj -&gt; unit" Usage="uCOMIBindCtx.RegisterObjectBound punk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punk">Obiekt do zarejestrowania dla wersji.</param>
        <summary>Zarejestruj przekazany obiekt jako jeden z obiektów, która została powiązana podczas operacji krótkiej nazwy i którego powinny zostać zwolnione, po jego zakończeniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::RegisterObjectBound` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObjectParam">
      <MemberSignature Language="C#" Value="public void RegisterObjectParam (string pszKey, object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObjectParam(string pszKey, object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObjectParam (pszKey As String, punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObjectParam(System::String ^ pszKey, System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObjectParam : string * obj -&gt; unit" Usage="uCOMIBindCtx.RegisterObjectParam (pszKey, punk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszKey">Aby zarejestrować nazwę <c>punk</c> z.</param>
        <param name="punk">Obiekt do rejestracji.</param>
        <summary>Zarejestruj wskaźnika danego obiektu o określonej nazwie w tabeli obsługiwany wewnętrznie wskaźników obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::RegisterObjectParam` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseBoundObjects">
      <MemberSignature Language="C#" Value="public void ReleaseBoundObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseBoundObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseBoundObjects ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseBoundObjects();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseBoundObjects : unit -&gt; unit" Usage="uCOMIBindCtx.ReleaseBoundObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie obiekty, które są obecnie zarejestrowane z kontekstem powiązania przez <see cref="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::ReleaseBoundObjects` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeObjectBound">
      <MemberSignature Language="C#" Value="public void RevokeObjectBound (object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeObjectBound(object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeObjectBound (punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeObjectBound(System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RevokeObjectBound : obj -&gt; unit" Usage="uCOMIBindCtx.RevokeObjectBound punk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punk">Obiekt do wyrejestrowania w wersji.</param>
        <summary>Usuwa obiekt z zestawem zarejestrowanych obiektów, które muszą zostać zwolniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::RevokeObjectBound` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeObjectParam">
      <MemberSignature Language="C#" Value="public void RevokeObjectParam (string pszKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeObjectParam(string pszKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeObjectParam (pszKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeObjectParam(System::String ^ pszKey);" />
      <MemberSignature Language="F#" Value="abstract member RevokeObjectParam : string -&gt; unit" Usage="uCOMIBindCtx.RevokeObjectParam pszKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pszKey">Klucz do wyrejestrowania.</param>
        <summary>Odwołaj rejestracji obiektu, w obecnie odnaleźć tego klucza w tabeli obsługiwany wewnętrznie parametrów kontekstowych obiektu, jeśli taki klucz nie jest obecnie zarejestrowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::RevokeObjectParam` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBindOptions">
      <MemberSignature Language="C#" Value="public void SetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBindOptions([in]valuetype System.Runtime.InteropServices.BIND_OPTS&amp; pbindopts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBindOptions (ByRef pbindopts As BIND_OPTS)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBindOptions(System::Runtime::InteropServices::BIND_OPTS % pbindopts);" />
      <MemberSignature Language="F#" Value="abstract member SetBindOptions :  -&gt; unit" Usage="uCOMIBindCtx.SetBindOptions pbindopts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbindopts" Type="System.Runtime.InteropServices.BIND_OPTS&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pbindopts">Struktury zawierające opcje powiązanie, aby ustawić.</param>
        <summary>Przechowywanie w kontekście powiązania bloku parametrów, które będą stosowane do później <see langword="UCOMIMoniker" /> operacje przy użyciu tego kontekstu powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz istniejąca dokumentacja dotycząca `IBindCtx::SetBindOptions` w bibliotece MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>