<Type Name="_Exception" FullName="System.Runtime.InteropServices._Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0658ee353d87528cbd2339112c1edb82a219a35c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39755001" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Exception" />
  <TypeSignature Language="F#" Value="type _Exception = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("b36b5c63-42ef-38bc-a07e-0b34c98f164a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="17291-101">Udostępnia publiczne elementy członkowskie <see cref="T:System.Exception" /> klasy do kodu niezarządzanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17291-101">Exposes the public members of the <see cref="T:System.Exception" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-102">Ten interfejs jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-103">Ten interfejs zachowuje vtable kolejności <xref:System.Exception?displayProperty=nameWithType> elementy członkowskie, które mogą być udostępniane przez niezarządzane obiekty COM klasy.</span><span class="sxs-lookup"><span data-stu-id="17291-103">This interface preserves the vtable order of the <xref:System.Exception?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Exception.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="17291-104">
            <see cref="T:System.Object" /> Do porównania z bieżącym <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-104">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17291-105">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.Equals(System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-105">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17291-106">
            <see langword="true" /> Jeśli określony <see cref="T:System.Object" /> jest taki sam, jak bieżący <see cref="T:System.Object" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-106">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-107">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-107">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-108"><xref:System.Object.Equals%2A?displayProperty=nameWithType> Metoda określa, czy określony <xref:System.Object> jest taki sam, jak bieżący <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="17291-108">The <xref:System.Object.Equals%2A?displayProperty=nameWithType> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception" Usage="_Exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17291-109">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Exception.GetBaseException" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-109">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetBaseException" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17291-110">Pierwszy wyjątek w łańcuchu wyjątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-110">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="17291-111">Jeśli <see cref="P:System.Exception.InnerException" /> właściwość bieżący wyjątek jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), ta właściwość zwraca bieżący wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-111">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-112">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-112">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-113"><xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType> Metoda zwraca <xref:System.Exception> czyli główną przyczynę jeden lub kilka kolejnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="17291-113">The <xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType> method returns the <xref:System.Exception> that is the root cause of one or more subsequent exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetBaseException" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Exception.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17291-114">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetHashCode" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-114">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17291-115">Wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-115">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-116">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-116">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-117"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="17291-117">The <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="17291-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> nadaje się do użytku w mieszania algorytmów i struktur danych, takich jak Tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="17291-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="17291-119">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt, który przechowuje serializowane dane obiektu dotyczące zgłaszanego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-119">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="17291-120">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> Strukturę, która zawiera informacje kontekstowe o źródle lub miejscu docelowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-120">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17291-121">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> — metoda</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-121">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-122">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-122">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-123"><xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType> Metody ustawia <xref:System.Runtime.Serialization.SerializationInfo> obiektów z informacją o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="17291-123">The <xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType> method sets the <xref:System.Runtime.Serialization.SerializationInfo> object with information about the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="17291-124">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-124">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="17291-125">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-125">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Exception.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17291-126">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Exception.GetType" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-126">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17291-127">Element <see cref="T:System.Type" /> obiektu, który reprezentuje typ dokładnego czasu wykonywania bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-127">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-128">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-128">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-129"><xref:System.Exception.GetType%2A?displayProperty=nameWithType> Metoda pobiera typ środowiska uruchomieniowego bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="17291-129">The <xref:System.Exception.GetType%2A?displayProperty=nameWithType> method gets the runtime type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetType" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-130">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.HelpLink" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-130">Provides COM objects with version-independent access to the <see cref="P:System.Exception.HelpLink" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-131">Jednolite zasobów nazwa URN lub lokalizatora URL (Uniform Resource) do pliku pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-131">The Uniform Resource Name (URN) or Uniform Resource Locator (URL) to a help file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-132">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-132">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-133"><xref:System.Exception.HelpLink%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia łącze, aby plik pomocy skojarzony z tym wyjątkiem.</span><span class="sxs-lookup"><span data-stu-id="17291-133">The <xref:System.Exception.HelpLink%2A?displayProperty=nameWithType> property gets or sets a link to the help file associated with this exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.HelpLink" />
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Runtime.InteropServices._Exception.InnerException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-134">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.InnerException" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-134">Provides COM objects with version-independent access to the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-135">Wystąpienie <see cref="T:System.Exception" /> , który opisuje błąd, który spowodował bieżący wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-135">An instance of <see cref="T:System.Exception" /> that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="17291-136">
            <see cref="P:System.Exception.InnerException" /> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora, lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli nie podano wartości wewnętrznego wyjątku do konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-136">The <see cref="P:System.Exception.InnerException" /> property returns the same value that was passed to the constructor, or a null reference (<see langword="Nothing" /> in Visual Basic) if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="17291-137">Ta właściwość jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-137">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-138">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-139"><xref:System.Exception.InnerException%2A?displayProperty=nameWithType> Pobiera właściwość <xref:System.Exception> wystąpienia, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="17291-139">The <xref:System.Exception.InnerException%2A?displayProperty=nameWithType> property gets the <xref:System.Exception> instance that caused the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Runtime.InteropServices._Exception.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-140">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.Message" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-140">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Message" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-141">Komunikat o błędzie wyjaśniający przyczynę wyjątku lub string("") puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-141">The error message that explains the reason for the exception, or an empty string("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-142">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-142">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-143"><xref:System.Exception.Message%2A?displayProperty=nameWithType> Właściwości pobiera komunikat, który opisuje bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="17291-143">The <xref:System.Exception.Message%2A?displayProperty=nameWithType> property gets a message that describes the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Message" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Runtime.InteropServices._Exception.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-144">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.Source" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-144">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Source" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-145">Nazwa aplikacji lub obiekt, który powoduje błąd.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-145">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-146">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-147"><xref:System.Exception.Source%2A?displayProperty=nameWithType> Właściwości pobiera lub ustawia nazwę aplikacji lub obiekt, który powoduje błąd.</span><span class="sxs-lookup"><span data-stu-id="17291-147">The <xref:System.Exception.Source%2A?displayProperty=nameWithType> property gets or sets the name of the application or the object that causes the error.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Source" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-148">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.StackTrace" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-148">Provides COM objects with version-independent access to the <see cref="P:System.Exception.StackTrace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-149">Ciąg, który opisuje zawartość stosu wywołań przy użyciu najnowszych wywołania metody wymienione jako pierwsze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-149">A string that describes the contents of the call stack, with the most recent method call appearing first.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-150">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-150">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-151"><xref:System.Exception.StackTrace%2A?displayProperty=nameWithType> Właściwości pobiera reprezentację ciągu ramek na stosie wywołań w czasie, bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="17291-151">The <xref:System.Exception.StackTrace%2A?displayProperty=nameWithType> property gets a string representation of the frames on the call stack at the time the current exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17291-152">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Exception.TargetSite" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-152">Provides COM objects with version-independent access to the <see cref="P:System.Exception.TargetSite" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17291-153">
            <see cref="T:System.Reflection.MethodBase" /> Obiektu, który wygenerował wyjątek bieżący.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-153">The <see cref="T:System.Reflection.MethodBase" /> object that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-154">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-154">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-155"><xref:System.Exception.TargetSite%2A?displayProperty=nameWithType> Właściwości pobiera metodę, która bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="17291-155">The <xref:System.Exception.TargetSite%2A?displayProperty=nameWithType> property gets the method that throws the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.TargetSite" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Exception.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17291-156">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Exception.ToString" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-156">Provides COM objects with version-independent access to the <see cref="M:System.Exception.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="17291-157">Ciąg reprezentujący bieżącą <see cref="T:System.Exception" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17291-157">A string that represents the current <see cref="T:System.Exception" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17291-158">Ta metoda jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="17291-158">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="17291-159"><xref:System.Exception.ToString%2A?displayProperty=nameWithType> Metoda tworzy i zwraca reprezentację ciągu bieżącego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="17291-159">The <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method creates and returns a string representation of the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>