<Type Name="TypeLibExporterFlags" FullName="System.Runtime.InteropServices.TypeLibExporterFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94b250d1aad80183d587a331761e29537a3162c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30563968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TypeLibExporterFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeLibExporterFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TypeLibExporterFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TypeLibExporterFlags" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, jak będą tworzone biblioteki typów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używane z <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerResolvedReferences">
      <MemberSignature Language="C#" Value="CallerResolvedReferences" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags CallerResolvedReferences = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberSignature Language="VB.NET" Value="CallerResolvedReferences" />
      <MemberSignature Language="C++ CLI" Value="CallerResolvedReferences" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Umożliwia obiekt wywołujący, aby jawnie rozpoznać odwołania do biblioteki typu bez konsultacji rejestru.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs32Bit">
      <MemberSignature Language="C#" Value="ExportAs32Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs32Bit = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs32Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs32Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>W przypadku kompilowania kodu na komputerze 64-bitowym, określa, że eksporter biblioteki typów (Tlbexp.exe) generuje biblioteki typów 32-bitowych. Wszystkie typy danych są odpowiednio transformacji.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs64Bit">
      <MemberSignature Language="C#" Value="ExportAs64Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs64Bit = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs64Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs64Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>W przypadku kompilowania kodu na komputerze 32-bitowym, określa, że eksporter biblioteki typów (Tlbexp.exe) generuje biblioteki typów 64-bitowych. Wszystkie typy danych są odpowiednio transformacji.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Określa żadnych flag. Domyślnie włączone.</summary>
      </Docs>
    </Member>
    <Member MemberName="OldNames">
      <MemberSignature Language="C#" Value="OldNames" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OldNames = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberSignature Language="VB.NET" Value="OldNames" />
      <MemberSignature Language="C++ CLI" Value="OldNames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Podczas eksportowania biblioteki typów, rozwiązuje .NET Framework i wpisać konfliktów nazw dekoracji typu o nazwie przestrzeni nazw; na przykład <see langword="System.Windows.Forms.HorizontalAlignment" /> jest eksportowane jako <see langword="System_Windows_Forms_HorizontalAlignment" />. Jeśli występuje konflikt z nazwą typu, który nie jest widoczne z modelu COM, .NET Framework eksportuje bez nazwy. Ustaw <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> flaga lub użyj <see langword="/oldnames" /> wymusić programu .NET Framework, aby wyeksportować nazwa opcję Eksporter biblioteki typów (Tlbexp.exe). Należy pamiętać, że eksportowanie nazwa została domyślne zachowanie w wersjach wcześniejszych niż .NET Framework w wersji 2.0.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyReferenceRegistered">
      <MemberSignature Language="C#" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OnlyReferenceRegistered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberSignature Language="VB.NET" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="C++ CLI" Value="OnlyReferenceRegistered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Eksportuje odwołania do typów, które zostały zaimportowane z modelu COM jako <see langword="IUnknown" /> Jeśli typ nie ma zarejestrowanego typu biblioteki. Ustawienia tej flagi, jeśli chcesz, aby wyglądały dla typów zależnych w rejestrze, a nie w tym samym katalogu co zestaw wejściowy Eksporter biblioteki typów.</summary>
      </Docs>
    </Member>
  </Members>
</Type>