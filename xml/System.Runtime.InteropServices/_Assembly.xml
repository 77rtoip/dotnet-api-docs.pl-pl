<Type Name="_Assembly" FullName="System.Runtime.InteropServices._Assembly">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b82bc6c774e1736a313f91af60672817fac08735" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68393963" /></Metadata><TypeSignature Language="C#" Value="public interface _Assembly" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Assembly" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Assembly" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Assembly" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Assembly" />
  <TypeSignature Language="F#" Value="type _Assembly = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2F1A-384A-BC52-FDE93C215C5B")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Assembly))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2f1a-384a-bc52-fde93c215c5b")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20f54-101">Ujawnia publiczne elementy członkowskie <see cref="T:System.Reflection.Assembly" /> klasy do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-101">Exposes the public members of the <see cref="T:System.Reflection.Assembly" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-102">Ten interfejs służy do uzyskiwania dostępu do zarządzanych klas z niezarządzanego kodu i nie powinien być wywoływany z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-103">Ten interfejs zachowuje kolejność <xref:System.Reflection.Assembly?displayProperty=nameWithType> tablic wirtualnych elementów członkowskich klasy, do których można uzyskać dostęp za pomocą niezarządzanych obiektów com.</span><span class="sxs-lookup"><span data-stu-id="20f54-103">This interface preserves the vtable order of the <xref:System.Reflection.Assembly?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.Assembly" />
  </Docs>
  <Members>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-104">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.CodeBase" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.CodeBase" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-105">Lokalizacja zestawu w sposób pierwotny.</span><span class="sxs-lookup"><span data-stu-id="20f54-105">The location of the assembly as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-106">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-106">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-107">Właściwość pobiera lokalizację zestawu zgodnie z oryginalnie, na przykład <xref:System.Reflection.AssemblyName> w obiekcie. <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="20f54-107">The <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property gets the location of the assembly as specified originally, for example, in an <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.CodeBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-108">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-108">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-109">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-109">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-110"><xref:System.Reflection.Assembly.CreateInstance%2A> Metody lokalizują typ z tego zestawu i tworzą wystąpienie go przy użyciu aktywatora systemu.</span><span class="sxs-lookup"><span data-stu-id="20f54-110">The <xref:System.Reflection.Assembly.CreateInstance%2A> methods locate a type from this assembly and create an instance of it using the system activator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.CreateInstance" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj" Usage="_Assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="20f54-111"><see cref="P:System.Type.FullName" /> Typ, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="20f54-111">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <summary><span data-ttu-id="20f54-112">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-112">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-113">Wystąpienie <see cref="T:System.Object" /> reprezentujące typ, z atrybutami Culture, arguments, spinacz i Activation ustawionymi na <see langword="null" />, i <see cref="T:System.Reflection.BindingFlags" /> ustawionymi na wartość Public lub instance <see langword="null" /> , <paramref name="typeName" /> lub jeśli nie zostanie znaleziona.</span><span class="sxs-lookup"><span data-stu-id="20f54-113">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-114">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-114">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-115"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określony typ z tego zestawu i tworzy jego wystąpienie przy użyciu aktywatora systemu przy użyciu funkcji wyszukiwania z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="20f54-115">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="20f54-116"><see cref="P:System.Type.FullName" /> Typ, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="20f54-116">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="20f54-117"><see langword="true" />Aby zignorować wielkość liter nazwy typu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-117"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="20f54-118">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-118">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-119">Wystąpienie <see cref="T:System.Object" /> reprezentujące typ, z atrybutami Culture, arguments, spinacz i Activation ustawionymi na <see langword="null" />, i <see cref="T:System.Reflection.BindingFlags" /> ustawionymi na wartość Public lub instance <see langword="null" /> , <paramref name="typeName" /> lub jeśli nie zostanie znaleziona.</span><span class="sxs-lookup"><span data-stu-id="20f54-119">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-120">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-120">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-121"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określony typ z tego zestawu i tworzy jego wystąpienie przy użyciu aktywatora systemu z opcjonalnym wyszukiwaniem z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="20f54-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="20f54-122"><see cref="P:System.Type.FullName" /> Typ, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="20f54-122">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="20f54-123"><see langword="true" />Aby zignorować wielkość liter nazwy typu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-123"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="20f54-124">Maska bitów wpływająca na sposób przeszukiwania.</span><span class="sxs-lookup"><span data-stu-id="20f54-124">A bitmask that affects how the search is conducted.</span></span> <span data-ttu-id="20f54-125">Wartość jest kombinacją flag bitowych z <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-125">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="20f54-126">Obiekt, który umożliwia powiązanie, przekształcenie typów argumentów, wywoływanie elementów członkowskich oraz pobieranie <see langword="MemberInfo" /> obiektów przez odbicie.</span><span class="sxs-lookup"><span data-stu-id="20f54-126">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="20f54-127">Jeśli <paramref name="binder" /> jest<see langword="null" />, używany jest domyślny spinacz.</span><span class="sxs-lookup"><span data-stu-id="20f54-127">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="20f54-128">Tablica typu <see langword="Object" /> zawierającego argumenty, które mają zostać przekazane do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="20f54-128">An array of type <see langword="Object" /> containing the arguments to be passed to the constructor.</span></span> <span data-ttu-id="20f54-129">Ta tablica argumentów musi być zgodna z liczbą, kolejnością i typem parametrów konstruktora, który ma zostać wywołany.</span><span class="sxs-lookup"><span data-stu-id="20f54-129">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="20f54-130">Jeśli wymagany jest Konstruktor bez parametrów, <paramref name="args" /> musi być pustą tablicą lub. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="20f54-130">If the parameterless constructor is desired, <paramref name="args" /> must be an empty array or <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="20f54-131">Wystąpienie <see langword="CultureInfo" /> używane do zarządzania przymusem typów.</span><span class="sxs-lookup"><span data-stu-id="20f54-131">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="20f54-132">Jeśli tak <see langword="null" /> <see langword="CultureInfo" /> , jest używany dla bieżącego wątku.</span><span class="sxs-lookup"><span data-stu-id="20f54-132">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="20f54-133">(Jest to konieczne do konwersji a <see langword="String" /> , która reprezentuje 1000 <see langword="Double" /> do wartości, na przykład, ponieważ 1000 jest reprezentowana inaczej w różnych kulturach).</span><span class="sxs-lookup"><span data-stu-id="20f54-133">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="20f54-134">Tablica typu <see langword="Object" /> zawierającego jeden lub więcej atrybutów aktywacji, które mogą brać udział w aktywacji.</span><span class="sxs-lookup"><span data-stu-id="20f54-134">An array of type <see langword="Object" /> containing one or more activation attributes that can participate in the activation.</span></span></param>
        <summary><span data-ttu-id="20f54-135">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-135">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-136">Wystąpienie <see langword="Object" /> reprezentujące typ i spełniające określone kryteria lub <see langword="null" /> Jeśli <paramref name="typeName" /> nie można go znaleźć.</span><span class="sxs-lookup"><span data-stu-id="20f54-136">An instance of <see langword="Object" /> representing the type and matching the specified criteria, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-137">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-137">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-138"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określony typ z tego zestawu i tworzy wystąpienie go przy użyciu aktywatora systemu z opcjonalnym wyszukiwaniem z uwzględnieniem wielkości liter i ma określoną kulturę, argumenty oraz atrybuty powiązania i aktywacji.</span><span class="sxs-lookup"><span data-stu-id="20f54-138">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span>  

 <span data-ttu-id="20f54-139">Przykładem atrybutu aktywacji dla `activationAttributes` parametru jest:. `URLAttribute(http://hostname/appname/objectURI)`</span><span class="sxs-lookup"><span data-stu-id="20f54-139">An example of an activation attribute for the `activationAttributes` parameter is: `URLAttribute(http://hostname/appname/objectURI)`.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-140">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.EntryPoint" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-140">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EntryPoint" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-141"><see cref="T:System.Reflection.MethodInfo" /> Obiekt, który reprezentuje punkt wejścia tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-141">A <see cref="T:System.Reflection.MethodInfo" /> object that represents the entry point of this assembly.</span></span> <span data-ttu-id="20f54-142">Jeśli nie zostanie znaleziony punkt wejścia (na przykład zestaw jest biblioteką DLL), <see langword="null" /> jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="20f54-142">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-143">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-143">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-144"><xref:System.Reflection.Assembly.EntryPoint%2A> Właściwość pobiera punkt wejścia tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-144">The <xref:System.Reflection.Assembly.EntryPoint%2A> property gets the entry point of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EntryPoint" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Assembly.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="20f54-145">Do porównania z bieżącym <see cref="T:System.Object" />. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="20f54-145">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="20f54-146">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Object.Equals(System.Object)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-146">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-147"><see langword="true" />Jeśli określony <see cref="T:System.Object" /> element jest równy bieżącemu <see cref="T:System.Object" />; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="20f54-147"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-148">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-148">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-149">Metoda określa, czy określony <xref:System.Object> jest równy bieżącemu <xref:System.Object>. <xref:System.Object.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="20f54-149">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-150">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-150">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-151">Uniform Resource Identifier (URI) z znakami ucieczki.</span><span class="sxs-lookup"><span data-stu-id="20f54-151">A Uniform Resource Identifier (URI) with escape characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-152">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-153"><xref:System.Reflection.Assembly.EscapedCodeBase%2A> Właściwość pobiera identyfikator URI, w tym znaki ucieczki, które reprezentują bazę kodu.</span><span class="sxs-lookup"><span data-stu-id="20f54-153">The <xref:System.Reflection.Assembly.EscapedCodeBase%2A> property gets the URI, including escape characters, that represents the codebase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EscapedCodeBase" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-154">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.Evidence" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-154">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Evidence" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-155"><see cref="T:System.Security.Policy.Evidence" /> Obiekt dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-155">An <see cref="T:System.Security.Policy.Evidence" /> object for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-156">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-156">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-157"><xref:System.Reflection.Assembly.Evidence%2A> Właściwość pobiera dowód dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-157">The <xref:System.Reflection.Assembly.Evidence%2A> property gets the evidence for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Runtime.InteropServices._Assembly.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-158">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.FullName" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-158">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-159">Wyświetlana nazwa zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-159">The display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-160">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-160">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-161"><xref:System.Reflection.Assembly.FullName%2A> Właściwość pobiera nazwę wyświetlaną zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-161">The <xref:System.Reflection.Assembly.FullName%2A> property gets the display name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.FullName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-162">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-162">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-163">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-163">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-164"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metody pobierają atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-164">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> methods get the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetCustomAttributes" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="20f54-165">Ten argument jest ignorowany dla obiektów typu <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-165">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="20f54-166">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-166">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-167">Tablica typu <see langword="Object" /> zawierającego atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-167">An array of type <see langword="Object" /> containing the custom attributes for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-168">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-168">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-169"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metoda pobiera wszystkie atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-169">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="20f54-170"><see cref="T:System.Type" /> Dla którego mają być zwracane atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="20f54-170">The <see cref="T:System.Type" /> for which the custom attributes are to be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="20f54-171">Ten argument jest ignorowany dla obiektów typu <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-171">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="20f54-172">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-172">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-173">Tablica typu <see cref="T:System.Object" /> zawierającego atrybuty niestandardowe dla tego zestawu, określony przez <paramref name="attributeType" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-173">An array of type <see cref="T:System.Object" /> containing the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-174">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-174">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-175"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metoda pobiera wszystkie atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-175">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]" Usage="_Assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-176">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-176">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> property.</span></span></summary>
        <returns><span data-ttu-id="20f54-177">Tablica <see cref="T:System.Type" /> obiektów, która reprezentuje typy zdefiniowane w tym zestawie, które są widoczne poza zestawem.</span><span class="sxs-lookup"><span data-stu-id="20f54-177">An array of <see cref="T:System.Type" /> objects that represent the types defined in this assembly that are visible outside the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-178">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-178">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-179"><xref:System.Reflection.Assembly.GetExportedTypes%2A> Właściwość pobiera eksportowane typy zdefiniowane w tym zestawie, które są widoczne poza zestawem.</span><span class="sxs-lookup"><span data-stu-id="20f54-179">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> property gets the exported types defined in this assembly that are visible outside the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetExportedTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream" Usage="_Assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-180">Nazwa określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="20f54-180">The name of the specified file.</span></span> <span data-ttu-id="20f54-181">Nie dołączaj ścieżki do pliku.</span><span class="sxs-lookup"><span data-stu-id="20f54-181">Do not include the path to the file.</span></span></param>
        <summary><span data-ttu-id="20f54-182">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-183">Dla określonego pliku lub <see langword="null" /> Jeśli plik nie zostanie znaleziony. <see cref="T:System.IO.FileStream" /></span><span class="sxs-lookup"><span data-stu-id="20f54-183">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" /> if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-184">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-184">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-185"><xref:System.Reflection.Assembly.GetFile%2A> Metoda<xref:System.IO.FileStream> pobiera dla określonego pliku w tabeli plików manifestu tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-185">The <xref:System.Reflection.Assembly.GetFile%2A> method gets a <xref:System.IO.FileStream> for the specified file in the file table of the manifest of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFile(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-186">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetFiles" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetFiles" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-187">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-187">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-188"><xref:System.Reflection.Assembly.GetFiles%2A> Metody pobierają pliki z tabeli plików manifestu zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-188">The <xref:System.Reflection.Assembly.GetFiles%2A> methods get the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-189">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetFiles" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-190">Tablica <see cref="T:System.IO.FileStream" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="20f54-190">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-191">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-191">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-192"><xref:System.Reflection.Assembly.GetFiles%2A> Metoda pobiera pliki z tabeli plików manifestu zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-192">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="20f54-193"><see langword="true" />do uwzględnienia modułów zasobów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-193"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="20f54-194">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-195">Tablica <see cref="T:System.IO.FileStream" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="20f54-195">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-196">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-196">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-197"><xref:System.Reflection.Assembly.GetFiles%2A> Metoda pobiera pliki z tabeli plików manifestu zestawu, określając, czy dołączać moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-197">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-198">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Object.GetHashCode" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-198">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-199">Kod skrótu dla bieżącego <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-199">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-200">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-200">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-201"><xref:System.Object.GetHashCode%2A> Metoda służy jako funkcja skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-201">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="20f54-202"><xref:System.Object.GetHashCode%2A>jest odpowiednie do użycia w algorytmach wyznaczania wartości skrótu i struktur danych, takich jak tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="20f54-202"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-203">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-203">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-204">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-204">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-205"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metody pobierają wszystkie załadowane moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-205">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> methods get all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-206">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-206">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-207">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="20f54-207">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-208">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-208">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-209"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metoda pobiera wszystkie załadowane moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-209">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="20f54-210"><see langword="true" />do uwzględnienia modułów zasobów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-210"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="20f54-211">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-211">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-212">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="20f54-212">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-213">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-213">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-214"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metoda pobiera wszystkie załadowane moduły, które są częścią tego zestawu, określając, czy dołączać moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-214">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="_Assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="20f54-215">Nazwa z uwzględnieniem wielkości liter zasobu.</span><span class="sxs-lookup"><span data-stu-id="20f54-215">The case-sensitive name of the resource.</span></span></param>
        <summary><span data-ttu-id="20f54-216">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-216">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-217">Obiekt został wypełniony informacjami o topologii zasobu lub <see langword="null" /> nie można go odnaleźć. <see cref="T:System.Reflection.ManifestResourceInfo" /></span><span class="sxs-lookup"><span data-stu-id="20f54-217">A <see cref="T:System.Reflection.ManifestResourceInfo" /> object populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-218">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-218">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-219"><xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> Metoda zwraca informacje o tym, jak dany zasób został utrwalony.</span><span class="sxs-lookup"><span data-stu-id="20f54-219">The <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method returns information about how the given resource has been persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]" Usage="_Assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-220">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-221">Tablica typu <see langword="String" /> zawierającego nazwy wszystkich zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-221">An array of type <see langword="String" /> containing the names of all the resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-222">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-222">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-223"><xref:System.Reflection.Assembly.GetManifestResourceNames%2A> Metoda zwraca nazwy wszystkich zasobów w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="20f54-223">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method returns the names of all the resources in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-224">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-224">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-225">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-225">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-226"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metody ładują określony zasób manifestu z tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-226">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> methods load the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-227">Nazwa z uwzględnieniem wielkości liter w żądanym zasobie manifestu.</span><span class="sxs-lookup"><span data-stu-id="20f54-227">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="20f54-228">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-228">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-229"><see cref="T:System.IO.Stream" /> Reprezentujący ten zasób manifestu.</span><span class="sxs-lookup"><span data-stu-id="20f54-229">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-230">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-230">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-231"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metoda Ładuje określony zasób manifestu z tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-231">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="20f54-232">Typ, którego przestrzeń nazw jest używana do określania zakresu nazwy zasobu manifestu.</span><span class="sxs-lookup"><span data-stu-id="20f54-232">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="20f54-233">Nazwa z uwzględnieniem wielkości liter w żądanym zasobie manifestu.</span><span class="sxs-lookup"><span data-stu-id="20f54-233">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="20f54-234">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-234">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-235"><see cref="T:System.IO.Stream" /> Reprezentujący ten zasób manifestu.</span><span class="sxs-lookup"><span data-stu-id="20f54-235">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-236">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-236">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-237"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metoda Ładuje określony zasób manifestu w zakresie według przestrzeni nazw określonego typu, z tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-237">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module" Usage="_Assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-238">Nazwa żądanego modułu.</span><span class="sxs-lookup"><span data-stu-id="20f54-238">The name of the module being requested.</span></span></param>
        <summary><span data-ttu-id="20f54-239">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-239">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-240">Żądany moduł lub <see langword="null" /> moduł nie został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="20f54-240">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-241">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-241">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-242"><xref:System.Reflection.Assembly.GetModule%2A> Metoda pobiera określony moduł w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="20f54-242">The <xref:System.Reflection.Assembly.GetModule%2A> method gets the specified module in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModule(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-243">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetModules" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-243">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetModules" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-244">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-245"><xref:System.Reflection.Assembly.GetModules%2A> Metody pobierają wszystkie moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-245">The <xref:System.Reflection.Assembly.GetModules%2A> methods get all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-246">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetModules" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-247">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="20f54-247">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-248">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-248">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-249"><xref:System.Reflection.Assembly.GetModules%2A> Metoda pobiera wszystkie moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-249">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules" />
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="20f54-250"><see langword="true" />do uwzględnienia modułów zasobów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-250"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="20f54-251">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-251">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-252">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="20f54-252">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-253">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-253">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-254"><xref:System.Reflection.Assembly.GetModules%2A> Metoda pobiera wszystkie moduły, które są częścią tego zestawu, określając, czy dołączać moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-254">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-255">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetName" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-255">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetName" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-256">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-256">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-257"><xref:System.Reflection.Assembly.GetName%2A> Metody<xref:System.Reflection.AssemblyName> otrzymują dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-257">The <xref:System.Reflection.Assembly.GetName%2A> methods get an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-258">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetName" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-258">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-259"><see cref="T:System.Reflection.AssemblyName" /> Dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-259">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-260">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-260">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-261"><xref:System.Reflection.Assembly.GetName%2A> Metoda<xref:System.Reflection.AssemblyName> pobiera dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-261">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName"><span data-ttu-id="20f54-262"><see langword="true" />Aby ustawić <see cref="P:System.Reflection.Assembly.CodeBase" /> do lokalizacji zestawu po skopiowaniu do niego w tle; w celu <see cref="P:System.Reflection.Assembly.CodeBase" /> ustawienia oryginalnej lokalizacji. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-262"><see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span></span></param>
        <summary><span data-ttu-id="20f54-263">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-263">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-264"><see cref="T:System.Reflection.AssemblyName" /> Dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-264">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-265">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-265">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-266">Metoda pobiera dla tego zestawu, ustawiając bazę kodu zgodnie z `copiedName` parametrem. <xref:System.Reflection.AssemblyName> <xref:System.Reflection.Assembly.GetName%2A></span><span class="sxs-lookup"><span data-stu-id="20f54-266">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly, setting the codebase as specified by the `copiedName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="20f54-267">Obiekt, który ma zostać wypełniony informacjami serializacji.</span><span class="sxs-lookup"><span data-stu-id="20f54-267">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="20f54-268">Kontekst docelowy serializacji.</span><span class="sxs-lookup"><span data-stu-id="20f54-268">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="20f54-269">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-269">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-270">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-270">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-271"><xref:System.Reflection.Assembly.GetObjectData%2A> Metoda pobiera informacje serializacji ze wszystkimi danymi wymaganymi do ponownego utworzenia wystąpienia tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-271">The <xref:System.Reflection.Assembly.GetObjectData%2A> method gets serialization information with all of the data needed to reinstantiate this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="20f54-272">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="20f54-272">requires full trust for the immediate caller.</span></span> <span data-ttu-id="20f54-273">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="20f54-273">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="_Assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-274">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-274">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-275">Tablica typu <see cref="T:System.Reflection.AssemblyName" /> zawierającego wszystkie zestawy, do których odwołuje się ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="20f54-275">An array of type <see cref="T:System.Reflection.AssemblyName" /> containing all the assemblies referenced by this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-276">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-277"><xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> Metoda<xref:System.Reflection.AssemblyName> Pobiera obiekty dla wszystkich zestawów, do których odwołuje się ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="20f54-277">The <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method gets the <xref:System.Reflection.AssemblyName> objects for all the assemblies referenced by this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-278">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-279">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-280"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metody uzyskują zestaw satelicki.</span><span class="sxs-lookup"><span data-stu-id="20f54-280">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> methods get the satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="20f54-281">Określona kultura.</span><span class="sxs-lookup"><span data-stu-id="20f54-281">The specified culture.</span></span></param>
        <summary><span data-ttu-id="20f54-282">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-282">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-283">Określony zestaw satelity.</span><span class="sxs-lookup"><span data-stu-id="20f54-283">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-284">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-284">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-285"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metoda pobiera zestaw satelicki dla określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="20f54-285">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="20f54-286">Określona kultura.</span><span class="sxs-lookup"><span data-stu-id="20f54-286">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="20f54-287">Wersja zestawu satelickiego.</span><span class="sxs-lookup"><span data-stu-id="20f54-287">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="20f54-288">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-288">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-289">Określony zestaw satelity.</span><span class="sxs-lookup"><span data-stu-id="20f54-289">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-290">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-290">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-291"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metoda pobiera określoną wersję zestawu satelickiego dla określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="20f54-291">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the specified version of the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-292">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.GetType" /> do metod.</span><span class="sxs-lookup"><span data-stu-id="20f54-292">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetType" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-293">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-293">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-294"><xref:System.Reflection.Assembly.GetType%2A> Metody pobierająobiekt,<xref:System.Type> który reprezentuje określony typ.</span><span class="sxs-lookup"><span data-stu-id="20f54-294">The <xref:System.Reflection.Assembly.GetType%2A> methods get the <xref:System.Type> object that represents the specified type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Assembly.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-295">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Object.GetType" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-295">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-296">Element <see cref="T:System.Type" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20f54-296">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-297">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-298"><xref:System.Object.GetType%2A> Metoda pobiera typ bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20f54-298">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetType" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="_Assembly.GetType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-299">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-299">The full name of the type.</span></span></param>
        <summary><span data-ttu-id="20f54-300">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-300">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-301">Obiekt, który reprezentuje określoną klasę lub <see langword="null" /> nie można odnaleźć klasy. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="20f54-301">A <see cref="T:System.Type" /> object that represents the specified class, or <see langword="null" /> if the class is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-302">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-303"><xref:System.Reflection.Assembly.GetType%2A> Metoda<xref:System.Type> pobiera obiekt o określonej nazwie w wystąpieniu zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-303">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-304">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-304">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="20f54-305"><see langword="true" />Aby zgłosić wyjątek, jeśli nie znaleziono typu; <see langword="false" /> do zwrócenia <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-305"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="20f54-306">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-306">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-307"><see cref="T:System.Type" /> Obiekt, który reprezentuje określoną klasę.</span><span class="sxs-lookup"><span data-stu-id="20f54-307">A <see cref="T:System.Type" /> object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-308">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-308">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-309"><xref:System.Reflection.Assembly.GetType%2A> Metoda<xref:System.Type> pobiera obiekt o określonej nazwie w wystąpieniu zestawu i opcjonalnie zgłasza wyjątek, jeśli nie znaleziono typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-309">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="20f54-310">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-310">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="20f54-311"><see langword="true" />Aby zgłosić wyjątek, jeśli nie znaleziono typu; <see langword="false" /> do zwrócenia <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20f54-311"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="20f54-312"><see langword="true" />Aby zignorować wielkość liter nazwy typu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-312"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="20f54-313">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-313">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-314"><see cref="T:System.Type" /> Obiekt, który reprezentuje określoną klasę.</span><span class="sxs-lookup"><span data-stu-id="20f54-314">A <see cref="T:System.Type" /> object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-315">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-316"><xref:System.Reflection.Assembly.GetType%2A> Metoda<xref:System.Type> pobiera obiekt o określonej nazwie w wystąpieniu zestawu, z opcjami ignorowania wielkości liter i zgłasza wyjątek, jeśli nie znaleziono typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-316">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]" Usage="_Assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-317">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.GetTypes" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-317">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetTypes" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-318">Tablica typu <see cref="T:System.Type" /> zawierającego obiekty dla wszystkich typów zdefiniowanych w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="20f54-318">An array of type <see cref="T:System.Type" /> containing objects for all the types defined in this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-319">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-320"><xref:System.Reflection.Assembly.GetTypes%2A> Metoda pobiera typy zdefiniowane w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="20f54-320">The <xref:System.Reflection.Assembly.GetTypes%2A> method gets the types defined in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-321">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-321">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-322"><see langword="true" />Jeśli zestaw został załadowany z globalnej pamięci podręcznej zestawów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="20f54-322"><see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-323">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-323">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-324"><xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> Właściwość pobiera wartość wskazującą, czy zestaw został załadowany z globalnej pamięci podręcznej zestawów.</span><span class="sxs-lookup"><span data-stu-id="20f54-324">The <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> property gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_Assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="20f54-325"><see cref="T:System.Type" /> Atrybut niestandardowy do sprawdzenia dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-325">The <see cref="T:System.Type" /> of the custom attribute to be checked for this assembly.</span></span></param>
        <param name="inherit"><span data-ttu-id="20f54-326">Ten argument jest ignorowany w przypadku obiektów tego typu.</span><span class="sxs-lookup"><span data-stu-id="20f54-326">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="20f54-327">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-327">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-328"><see langword="true" />Jeśli zdefiniowano atrybut niestandardowy identyfikowany przez <see cref="T:System.Type" /> określony element, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="20f54-328"><see langword="true" /> if a custom attribute identified by the specified <see cref="T:System.Type" /> is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-329">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-329">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-330">Metoda wskazuje, czy atrybut niestandardowy identyfikowany przez określony <xref:System.Type> element jest zdefiniowany. <xref:System.Reflection.Assembly.IsDefined%2A></span><span class="sxs-lookup"><span data-stu-id="20f54-330">The <xref:System.Reflection.Assembly.IsDefined%2A> method indicates whether a custom attribute identified by the specified <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20f54-331">Udostępnia obiekty com z dostępem niezależnym od wersji <see cref="Overload:System.Reflection.Assembly.LoadModule" /> do elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="20f54-331">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.LoadModule" /> members.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-332">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-333"><xref:System.Reflection.Assembly.LoadModule%2A> Członkowie ładują moduł wewnętrzny do tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-333">The <xref:System.Reflection.Assembly.LoadModule%2A> members load the module internal to this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.LoadModule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="20f54-334">Nazwa modułu.</span><span class="sxs-lookup"><span data-stu-id="20f54-334">Name of the module.</span></span> <span data-ttu-id="20f54-335">Musi odpowiadać nazwie pliku w manifeście tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-335">Must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="20f54-336">Tablica bajtów, która jest obrazem opartym na formacie COFF zawierającym emitowany moduł lub zasób.</span><span class="sxs-lookup"><span data-stu-id="20f54-336">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <summary><span data-ttu-id="20f54-337">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-337">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-338">Załadowany moduł.</span><span class="sxs-lookup"><span data-stu-id="20f54-338">The loaded Module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-339">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-339">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-340"><xref:System.Reflection.Assembly.LoadModule%2A> Metoda ładuje moduł, wewnętrzny do tego zestawu, ze wspólnym obrazem opartym na formacie obiektu (COFF) zawierającym emitowany moduł lub plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-340">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="20f54-341">Nazwa modułu.</span><span class="sxs-lookup"><span data-stu-id="20f54-341">Name of the module.</span></span> <span data-ttu-id="20f54-342">Musi odpowiadać nazwie pliku w manifeście tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-342">Must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="20f54-343">Tablica bajtów, która jest obrazem opartym na formacie COFF zawierającym emitowany moduł lub zasób.</span><span class="sxs-lookup"><span data-stu-id="20f54-343">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="20f54-344">Tablica bajtowa zawierająca nieprzetworzone bajty reprezentujące symbole dla modułu.</span><span class="sxs-lookup"><span data-stu-id="20f54-344">A byte array containing the raw bytes representing the symbols for the module.</span></span> <span data-ttu-id="20f54-345">Musi mieć <see langword="null" /> wartość, jeśli jest to plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-345">Must be <see langword="null" /> if this is a resource file.</span></span></param>
        <summary><span data-ttu-id="20f54-346">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-346">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-347">Załadowany moduł.</span><span class="sxs-lookup"><span data-stu-id="20f54-347">The loaded module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-348">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-348">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-349"><xref:System.Reflection.Assembly.LoadModule%2A> Metoda ładuje moduł, wewnętrzny do tego zestawu, ze wspólnym obrazem opartym na formacie obiektu (COFF) zawierającym emitowany moduł lub plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="20f54-349">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="20f54-350">Są również ładowane nieprzetworzone bajty reprezentujące symbole dla modułu.</span><span class="sxs-lookup"><span data-stu-id="20f54-350">The raw bytes representing the symbols for the module are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Runtime.InteropServices._Assembly.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-351">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="P:System.Reflection.Assembly.Location" /> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="20f54-351">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Location" /> property.</span></span></summary>
        <value><span data-ttu-id="20f54-352">Lokalizacja załadowanego pliku zawierającego manifest.</span><span class="sxs-lookup"><span data-stu-id="20f54-352">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="20f54-353">Jeśli załadowany plik był kopiowany w tle, lokalizacja to plik po skopiowaniu do kopii w tle.</span><span class="sxs-lookup"><span data-stu-id="20f54-353">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span></span> <span data-ttu-id="20f54-354">Jeśli zestaw jest ładowany z tablicy bajtowej, na przykład przy użyciu <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> przeciążenia metody, zwracana wartość jest pustym ciągiem ("").</span><span class="sxs-lookup"><span data-stu-id="20f54-354">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-355">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-355">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-356"><xref:System.Reflection.Assembly.Location%2A> Właściwość pobiera ścieżkę lub Universal Naming Convention (UNC) załadowanego pliku, który zawiera manifest.</span><span class="sxs-lookup"><span data-stu-id="20f54-356">The <xref:System.Reflection.Assembly.Location%2A> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Location" />
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.InteropServices._Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20f54-357">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="E:System.Reflection.Assembly.ModuleResolve" /> do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="20f54-357">Provides COM objects with version-independent access to the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-358">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-358">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-359"><xref:System.Reflection.Assembly.ModuleResolve> Zdarzenie występuje, gdy moduł ładujący klasy środowiska uruchomieniowego języka wspólnego nie może rozpoznać odwołania do wewnętrznego modułu zestawu za pośrednictwem normalnej metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-359">The <xref:System.Reflection.Assembly.ModuleResolve> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="20f54-360">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="20f54-360">requires full trust for the immediate caller.</span></span> <span data-ttu-id="20f54-361">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="20f54-361">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="E:System.Reflection.Assembly.ModuleResolve" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Assembly.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20f54-362">Zapewnia obiekty com z dostępem niezależnym od wersji <see cref="M:System.Reflection.Assembly.ToString" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="20f54-362">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="20f54-363">Pełna nazwa zestawu lub nazwa klasy, jeśli nie można określić pełnej nazwy zestawu.</span><span class="sxs-lookup"><span data-stu-id="20f54-363">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20f54-364">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="20f54-364">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="20f54-365"><xref:System.Reflection.Assembly.ToString%2A> Metoda zwraca pełną nazwę zestawu, znaną również jako nazwa wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="20f54-365">The <xref:System.Reflection.Assembly.ToString%2A> method returns the full name of the assembly, also known as the display name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
